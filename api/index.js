Index.PACKAGES = {"onnx" : [], "lamp.autograd" : [{"name" : "lamp.autograd.Add", "shortDescription" : "", "members_case class" : [{"label" : "value", "tail" : ": Variable", "member" : "lamp.autograd.Add.value", "link" : "lamp\/autograd\/Add.html#value:lamp.autograd.Variable", "kind" : "val"}, {"label" : "params", "tail" : ": List[(Variable, (STen, STen) => Unit)]", "member" : "lamp.autograd.Add.params", "link" : "lamp\/autograd\/Add.html#params:List[(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)]", "kind" : "val"}, {"member" : "lamp.autograd.Add#<init>", "error" : "unsupported entity"}, {"label" : "b", "tail" : ": Variable", "member" : "lamp.autograd.Add.b", "link" : "lamp\/autograd\/Add.html#b:lamp.autograd.Variable", "kind" : "val"}, {"label" : "a", "tail" : ": Variable", "member" : "lamp.autograd.Add.a", "link" : "lamp\/autograd\/Add.html#a:lamp.autograd.Variable", "kind" : "val"}, {"label" : "scope", "tail" : ": Scope", "member" : "lamp.autograd.Add.scope", "link" : "lamp\/autograd\/Add.html#scope:lamp.Scope", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/autograd\/Add.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/Add.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/Add.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/Add.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/Add.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/Add.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/Add.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/Add.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Add.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Add.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Add.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/Add.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/Add.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/Add.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/Add.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/Add.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/Add.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/autograd\/Add.html", "kind" : "case class"}, {"name" : "lamp.autograd.ArcTan", "shortDescription" : "", "members_case class" : [{"label" : "value", "tail" : ": Variable", "member" : "lamp.autograd.ArcTan.value", "link" : "lamp\/autograd\/ArcTan.html#value:lamp.autograd.Variable", "kind" : "val"}, {"label" : "params", "tail" : ": List[(Variable, (STen, STen) => Unit)]", "member" : "lamp.autograd.ArcTan.params", "link" : "lamp\/autograd\/ArcTan.html#params:List[(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)]", "kind" : "val"}, {"member" : "lamp.autograd.ArcTan#<init>", "error" : "unsupported entity"}, {"label" : "a", "tail" : ": Variable", "member" : "lamp.autograd.ArcTan.a", "link" : "lamp\/autograd\/ArcTan.html#a:lamp.autograd.Variable", "kind" : "val"}, {"label" : "scope", "tail" : ": Scope", "member" : "lamp.autograd.ArcTan.scope", "link" : "lamp\/autograd\/ArcTan.html#scope:lamp.Scope", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/autograd\/ArcTan.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/ArcTan.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/ArcTan.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/ArcTan.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/ArcTan.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/ArcTan.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/ArcTan.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/ArcTan.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/ArcTan.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/ArcTan.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/ArcTan.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/ArcTan.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/ArcTan.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/ArcTan.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/ArcTan.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/ArcTan.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/ArcTan.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/autograd\/ArcTan.html", "kind" : "case class"}, {"name" : "lamp.autograd.ArgMax", "shortDescription" : "", "members_case class" : [{"label" : "value", "tail" : ": Variable", "member" : "lamp.autograd.ArgMax.value", "link" : "lamp\/autograd\/ArgMax.html#value:lamp.autograd.Variable", "kind" : "val"}, {"label" : "params", "tail" : ": List[(Variable, (STen, STen) => Unit)]", "member" : "lamp.autograd.ArgMax.params", "link" : "lamp\/autograd\/ArgMax.html#params:List[(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)]", "kind" : "val"}, {"member" : "lamp.autograd.ArgMax#<init>", "error" : "unsupported entity"}, {"label" : "keepDim", "tail" : ": Boolean", "member" : "lamp.autograd.ArgMax.keepDim", "link" : "lamp\/autograd\/ArgMax.html#keepDim:Boolean", "kind" : "val"}, {"label" : "dim", "tail" : ": Long", "member" : "lamp.autograd.ArgMax.dim", "link" : "lamp\/autograd\/ArgMax.html#dim:Long", "kind" : "val"}, {"label" : "a", "tail" : ": Variable", "member" : "lamp.autograd.ArgMax.a", "link" : "lamp\/autograd\/ArgMax.html#a:lamp.autograd.Variable", "kind" : "val"}, {"label" : "scope", "tail" : ": Scope", "member" : "lamp.autograd.ArgMax.scope", "link" : "lamp\/autograd\/ArgMax.html#scope:lamp.Scope", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/autograd\/ArgMax.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/ArgMax.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/ArgMax.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/ArgMax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/ArgMax.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/ArgMax.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/ArgMax.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/ArgMax.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/ArgMax.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/ArgMax.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/ArgMax.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/ArgMax.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/ArgMax.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/ArgMax.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/ArgMax.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/ArgMax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/ArgMax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/autograd\/ArgMax.html", "kind" : "case class"}, {"name" : "lamp.autograd.Assign", "shortDescription" : "", "members_case class" : [{"label" : "value", "tail" : ": Variable", "member" : "lamp.autograd.Assign.value", "link" : "lamp\/autograd\/Assign.html#value:lamp.autograd.Variable", "kind" : "val"}, {"label" : "params", "tail" : ": List[(Variable, (STen, STen) => Unit)]", "member" : "lamp.autograd.Assign.params", "link" : "lamp\/autograd\/Assign.html#params:List[(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)]", "kind" : "val"}, {"member" : "lamp.autograd.Assign#<init>", "error" : "unsupported entity"}, {"label" : "keep", "tail" : ": Variable", "member" : "lamp.autograd.Assign.keep", "link" : "lamp\/autograd\/Assign.html#keep:lamp.autograd.Variable", "kind" : "val"}, {"label" : "abandon", "tail" : ": Variable", "member" : "lamp.autograd.Assign.abandon", "link" : "lamp\/autograd\/Assign.html#abandon:lamp.autograd.Variable", "kind" : "val"}, {"label" : "scope", "tail" : ": Scope", "member" : "lamp.autograd.Assign.scope", "link" : "lamp\/autograd\/Assign.html#scope:lamp.Scope", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/autograd\/Assign.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/Assign.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/Assign.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/Assign.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/Assign.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/Assign.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/Assign.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/Assign.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Assign.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Assign.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Assign.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/Assign.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/Assign.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/Assign.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/Assign.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/Assign.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/Assign.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/autograd\/Assign.html", "kind" : "case class"}, {"name" : "lamp.autograd.Autograd", "shortDescription" : "", "object" : "lamp\/autograd\/Autograd$.html", "members_object" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/Autograd$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/Autograd$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/Autograd$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/Autograd$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/Autograd$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/Autograd$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/Autograd$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Autograd$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Autograd$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Autograd$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/Autograd$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/Autograd$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/autograd\/Autograd$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/Autograd$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/autograd\/Autograd$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/autograd\/Autograd$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/Autograd$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/Autograd$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/Autograd$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "lamp.autograd.AvgPool2D", "shortDescription" : "2D avg pooling", "members_case class" : [{"label" : "value", "tail" : ": Variable", "member" : "lamp.autograd.AvgPool2D.value", "link" : "lamp\/autograd\/AvgPool2D.html#value:lamp.autograd.Variable", "kind" : "val"}, {"label" : "params", "tail" : ": List[(Variable, (STen, STen) => Unit)]", "member" : "lamp.autograd.AvgPool2D.params", "link" : "lamp\/autograd\/AvgPool2D.html#params:List[(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)]", "kind" : "val"}, {"label" : "imageSize", "tail" : ": Long", "member" : "lamp.autograd.AvgPool2D.imageSize", "link" : "lamp\/autograd\/AvgPool2D.html#imageSize:Long", "kind" : "val"}, {"label" : "inputChannels", "tail" : ": Long", "member" : "lamp.autograd.AvgPool2D.inputChannels", "link" : "lamp\/autograd\/AvgPool2D.html#inputChannels:Long", "kind" : "val"}, {"label" : "batchSize", "tail" : ": Long", "member" : "lamp.autograd.AvgPool2D.batchSize", "link" : "lamp\/autograd\/AvgPool2D.html#batchSize:Long", "kind" : "val"}, {"member" : "lamp.autograd.AvgPool2D#<init>", "error" : "unsupported entity"}, {"label" : "padding", "tail" : ": Long", "member" : "lamp.autograd.AvgPool2D.padding", "link" : "lamp\/autograd\/AvgPool2D.html#padding:Long", "kind" : "val"}, {"label" : "stride", "tail" : ": Long", "member" : "lamp.autograd.AvgPool2D.stride", "link" : "lamp\/autograd\/AvgPool2D.html#stride:Long", "kind" : "val"}, {"label" : "kernelSize", "tail" : ": Long", "member" : "lamp.autograd.AvgPool2D.kernelSize", "link" : "lamp\/autograd\/AvgPool2D.html#kernelSize:Long", "kind" : "val"}, {"label" : "input", "tail" : ": Variable", "member" : "lamp.autograd.AvgPool2D.input", "link" : "lamp\/autograd\/AvgPool2D.html#input:lamp.autograd.Variable", "kind" : "val"}, {"label" : "scope", "tail" : ": Scope", "member" : "lamp.autograd.AvgPool2D.scope", "link" : "lamp\/autograd\/AvgPool2D.html#scope:lamp.Scope", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/autograd\/AvgPool2D.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/AvgPool2D.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/AvgPool2D.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/AvgPool2D.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/AvgPool2D.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/AvgPool2D.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/AvgPool2D.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/AvgPool2D.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/AvgPool2D.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/AvgPool2D.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/AvgPool2D.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/AvgPool2D.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/AvgPool2D.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/AvgPool2D.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/AvgPool2D.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/AvgPool2D.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/AvgPool2D.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/autograd\/AvgPool2D.html", "kind" : "case class"}, {"name" : "lamp.autograd.BatchedMatMul", "shortDescription" : "", "members_case class" : [{"label" : "value", "tail" : ": Variable", "member" : "lamp.autograd.BatchedMatMul.value", "link" : "lamp\/autograd\/BatchedMatMul.html#value:lamp.autograd.Variable", "kind" : "val"}, {"label" : "params", "tail" : ": List[(Variable, (STen, STen) => Unit)]", "member" : "lamp.autograd.BatchedMatMul.params", "link" : "lamp\/autograd\/BatchedMatMul.html#params:List[(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)]", "kind" : "val"}, {"member" : "lamp.autograd.BatchedMatMul#<init>", "error" : "unsupported entity"}, {"label" : "b", "tail" : ": Variable", "member" : "lamp.autograd.BatchedMatMul.b", "link" : "lamp\/autograd\/BatchedMatMul.html#b:lamp.autograd.Variable", "kind" : "val"}, {"label" : "a", "tail" : ": Variable", "member" : "lamp.autograd.BatchedMatMul.a", "link" : "lamp\/autograd\/BatchedMatMul.html#a:lamp.autograd.Variable", "kind" : "val"}, {"label" : "scope", "tail" : ": Scope", "member" : "lamp.autograd.BatchedMatMul.scope", "link" : "lamp\/autograd\/BatchedMatMul.html#scope:lamp.Scope", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/autograd\/BatchedMatMul.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/BatchedMatMul.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/BatchedMatMul.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/BatchedMatMul.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/BatchedMatMul.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/BatchedMatMul.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/BatchedMatMul.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/BatchedMatMul.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/BatchedMatMul.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/BatchedMatMul.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/BatchedMatMul.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/BatchedMatMul.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/BatchedMatMul.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/BatchedMatMul.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/BatchedMatMul.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/BatchedMatMul.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/BatchedMatMul.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/autograd\/BatchedMatMul.html", "kind" : "case class"}, {"name" : "lamp.autograd.BatchNorm", "shortDescription" : "", "members_case class" : [{"label" : "params", "tail" : ": List[(Variable, (STen, STen) => Unit)]", "member" : "lamp.autograd.BatchNorm.params", "link" : "lamp\/autograd\/BatchNorm.html#params:List[(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)]", "kind" : "val"}, {"label" : "value", "tail" : ": Variable", "member" : "lamp.autograd.BatchNorm.value", "link" : "lamp\/autograd\/BatchNorm.html#value:lamp.autograd.Variable", "kind" : "val"}, {"label" : "output_reshaped", "tail" : ": Tensor", "member" : "lamp.autograd.BatchNorm.output_reshaped", "link" : "lamp\/autograd\/BatchNorm.html#output_reshaped:aten.Tensor", "kind" : "val"}, {"label" : "saveInvstd", "tail" : ": Tensor", "member" : "lamp.autograd.BatchNorm.saveInvstd", "link" : "lamp\/autograd\/BatchNorm.html#saveInvstd:aten.Tensor", "kind" : "val"}, {"label" : "saveMean", "tail" : ": Tensor", "member" : "lamp.autograd.BatchNorm.saveMean", "link" : "lamp\/autograd\/BatchNorm.html#saveMean:aten.Tensor", "kind" : "val"}, {"label" : "output", "tail" : ": Tensor", "member" : "lamp.autograd.BatchNorm.output", "link" : "lamp\/autograd\/BatchNorm.html#output:aten.Tensor", "kind" : "val"}, {"label" : "expectedShape", "tail" : ": List[Long]", "member" : "lamp.autograd.BatchNorm.expectedShape", "link" : "lamp\/autograd\/BatchNorm.html#expectedShape:List[Long]", "kind" : "val"}, {"label" : "input_flattened", "tail" : ": Tensor", "member" : "lamp.autograd.BatchNorm.input_flattened", "link" : "lamp\/autograd\/BatchNorm.html#input_flattened:aten.Tensor", "kind" : "val"}, {"member" : "lamp.autograd.BatchNorm#<init>", "error" : "unsupported entity"}, {"label" : "eps", "tail" : ": Double", "member" : "lamp.autograd.BatchNorm.eps", "link" : "lamp\/autograd\/BatchNorm.html#eps:Double", "kind" : "val"}, {"label" : "momentum", "tail" : ": Double", "member" : "lamp.autograd.BatchNorm.momentum", "link" : "lamp\/autograd\/BatchNorm.html#momentum:Double", "kind" : "val"}, {"label" : "training", "tail" : ": Boolean", "member" : "lamp.autograd.BatchNorm.training", "link" : "lamp\/autograd\/BatchNorm.html#training:Boolean", "kind" : "val"}, {"label" : "runningVar", "tail" : ": STen", "member" : "lamp.autograd.BatchNorm.runningVar", "link" : "lamp\/autograd\/BatchNorm.html#runningVar:lamp.STen", "kind" : "val"}, {"label" : "runningMean", "tail" : ": STen", "member" : "lamp.autograd.BatchNorm.runningMean", "link" : "lamp\/autograd\/BatchNorm.html#runningMean:lamp.STen", "kind" : "val"}, {"label" : "bias", "tail" : ": Variable", "member" : "lamp.autograd.BatchNorm.bias", "link" : "lamp\/autograd\/BatchNorm.html#bias:lamp.autograd.Variable", "kind" : "val"}, {"label" : "weight", "tail" : ": Variable", "member" : "lamp.autograd.BatchNorm.weight", "link" : "lamp\/autograd\/BatchNorm.html#weight:lamp.autograd.Variable", "kind" : "val"}, {"label" : "input", "tail" : ": Variable", "member" : "lamp.autograd.BatchNorm.input", "link" : "lamp\/autograd\/BatchNorm.html#input:lamp.autograd.Variable", "kind" : "val"}, {"label" : "scope", "tail" : ": Scope", "member" : "lamp.autograd.BatchNorm.scope", "link" : "lamp\/autograd\/BatchNorm.html#scope:lamp.Scope", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/autograd\/BatchNorm.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/BatchNorm.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/BatchNorm.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/BatchNorm.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/BatchNorm.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/BatchNorm.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/BatchNorm.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/BatchNorm.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/BatchNorm.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/BatchNorm.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/BatchNorm.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/BatchNorm.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/BatchNorm.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/BatchNorm.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/BatchNorm.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/BatchNorm.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/BatchNorm.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/autograd\/BatchNorm.html", "kind" : "case class"}, {"name" : "lamp.autograd.BatchNorm2D", "shortDescription" : "Batch Norm 2D0-th dimension are samples.", "members_case class" : [{"label" : "params", "tail" : ": List[(Variable, (STen, STen) => Unit)]", "member" : "lamp.autograd.BatchNorm2D.params", "link" : "lamp\/autograd\/BatchNorm2D.html#params:List[(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)]", "kind" : "val"}, {"label" : "value", "tail" : ": Variable", "member" : "lamp.autograd.BatchNorm2D.value", "link" : "lamp\/autograd\/BatchNorm2D.html#value:lamp.autograd.Variable", "kind" : "val"}, {"label" : "saveInvstd", "tail" : ": Tensor", "member" : "lamp.autograd.BatchNorm2D.saveInvstd", "link" : "lamp\/autograd\/BatchNorm2D.html#saveInvstd:aten.Tensor", "kind" : "val"}, {"label" : "saveMean", "tail" : ": Tensor", "member" : "lamp.autograd.BatchNorm2D.saveMean", "link" : "lamp\/autograd\/BatchNorm2D.html#saveMean:aten.Tensor", "kind" : "val"}, {"label" : "output", "tail" : ": Tensor", "member" : "lamp.autograd.BatchNorm2D.output", "link" : "lamp\/autograd\/BatchNorm2D.html#output:aten.Tensor", "kind" : "val"}, {"label" : "expectedShape", "tail" : ": List[Long]", "member" : "lamp.autograd.BatchNorm2D.expectedShape", "link" : "lamp\/autograd\/BatchNorm2D.html#expectedShape:List[Long]", "kind" : "val"}, {"label" : "inputShape", "tail" : ": List[Long]", "member" : "lamp.autograd.BatchNorm2D.inputShape", "link" : "lamp\/autograd\/BatchNorm2D.html#inputShape:List[Long]", "kind" : "val"}, {"member" : "lamp.autograd.BatchNorm2D#<init>", "error" : "unsupported entity"}, {"label" : "eps", "tail" : ": Double", "member" : "lamp.autograd.BatchNorm2D.eps", "link" : "lamp\/autograd\/BatchNorm2D.html#eps:Double", "kind" : "val"}, {"label" : "momentum", "tail" : ": Double", "member" : "lamp.autograd.BatchNorm2D.momentum", "link" : "lamp\/autograd\/BatchNorm2D.html#momentum:Double", "kind" : "val"}, {"label" : "training", "tail" : ": Boolean", "member" : "lamp.autograd.BatchNorm2D.training", "link" : "lamp\/autograd\/BatchNorm2D.html#training:Boolean", "kind" : "val"}, {"label" : "runningVar", "tail" : ": STen", "member" : "lamp.autograd.BatchNorm2D.runningVar", "link" : "lamp\/autograd\/BatchNorm2D.html#runningVar:lamp.STen", "kind" : "val"}, {"label" : "runningMean", "tail" : ": STen", "member" : "lamp.autograd.BatchNorm2D.runningMean", "link" : "lamp\/autograd\/BatchNorm2D.html#runningMean:lamp.STen", "kind" : "val"}, {"label" : "bias", "tail" : ": Variable", "member" : "lamp.autograd.BatchNorm2D.bias", "link" : "lamp\/autograd\/BatchNorm2D.html#bias:lamp.autograd.Variable", "kind" : "val"}, {"label" : "weight", "tail" : ": Variable", "member" : "lamp.autograd.BatchNorm2D.weight", "link" : "lamp\/autograd\/BatchNorm2D.html#weight:lamp.autograd.Variable", "kind" : "val"}, {"label" : "input", "tail" : ": Variable", "member" : "lamp.autograd.BatchNorm2D.input", "link" : "lamp\/autograd\/BatchNorm2D.html#input:lamp.autograd.Variable", "kind" : "val"}, {"label" : "scope", "tail" : ": Scope", "member" : "lamp.autograd.BatchNorm2D.scope", "link" : "lamp\/autograd\/BatchNorm2D.html#scope:lamp.Scope", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/autograd\/BatchNorm2D.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/BatchNorm2D.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/BatchNorm2D.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/BatchNorm2D.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/BatchNorm2D.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/BatchNorm2D.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/BatchNorm2D.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/BatchNorm2D.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/BatchNorm2D.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/BatchNorm2D.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/BatchNorm2D.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/BatchNorm2D.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/BatchNorm2D.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/BatchNorm2D.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/BatchNorm2D.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/BatchNorm2D.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/BatchNorm2D.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/autograd\/BatchNorm2D.html", "kind" : "case class"}, {"name" : "lamp.autograd.BinaryCrossEntropyWithLogitsLoss", "shortDescription" : "input: (N,T) where T>=1 are multiple independent taskstarget: same shape as input, float with in [0,1]posWeight: is (T)", "members_case class" : [{"label" : "value", "tail" : ": Variable", "member" : "lamp.autograd.BinaryCrossEntropyWithLogitsLoss.value", "link" : "lamp\/autograd\/BinaryCrossEntropyWithLogitsLoss.html#value:lamp.autograd.Variable", "kind" : "val"}, {"label" : "value1", "tail" : ": Tensor", "member" : "lamp.autograd.BinaryCrossEntropyWithLogitsLoss.value1", "link" : "lamp\/autograd\/BinaryCrossEntropyWithLogitsLoss.html#value1:aten.Tensor", "kind" : "val"}, {"label" : "params", "tail" : ": List[(Variable, (STen, STen) => Unit)]", "member" : "lamp.autograd.BinaryCrossEntropyWithLogitsLoss.params", "link" : "lamp\/autograd\/BinaryCrossEntropyWithLogitsLoss.html#params:List[(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)]", "kind" : "val"}, {"member" : "lamp.autograd.BinaryCrossEntropyWithLogitsLoss#<init>", "error" : "unsupported entity"}, {"label" : "reduction", "tail" : ": Reduction", "member" : "lamp.autograd.BinaryCrossEntropyWithLogitsLoss.reduction", "link" : "lamp\/autograd\/BinaryCrossEntropyWithLogitsLoss.html#reduction:lamp.autograd.Reduction", "kind" : "val"}, {"label" : "posWeights", "tail" : ": Option[STen]", "member" : "lamp.autograd.BinaryCrossEntropyWithLogitsLoss.posWeights", "link" : "lamp\/autograd\/BinaryCrossEntropyWithLogitsLoss.html#posWeights:Option[lamp.STen]", "kind" : "val"}, {"label" : "target", "tail" : ": STen", "member" : "lamp.autograd.BinaryCrossEntropyWithLogitsLoss.target", "link" : "lamp\/autograd\/BinaryCrossEntropyWithLogitsLoss.html#target:lamp.STen", "kind" : "val"}, {"label" : "input", "tail" : ": Variable", "member" : "lamp.autograd.BinaryCrossEntropyWithLogitsLoss.input", "link" : "lamp\/autograd\/BinaryCrossEntropyWithLogitsLoss.html#input:lamp.autograd.Variable", "kind" : "val"}, {"label" : "scope", "tail" : ": Scope", "member" : "lamp.autograd.BinaryCrossEntropyWithLogitsLoss.scope", "link" : "lamp\/autograd\/BinaryCrossEntropyWithLogitsLoss.html#scope:lamp.Scope", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/autograd\/BinaryCrossEntropyWithLogitsLoss.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/BinaryCrossEntropyWithLogitsLoss.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/BinaryCrossEntropyWithLogitsLoss.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/BinaryCrossEntropyWithLogitsLoss.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/BinaryCrossEntropyWithLogitsLoss.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/BinaryCrossEntropyWithLogitsLoss.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/BinaryCrossEntropyWithLogitsLoss.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/BinaryCrossEntropyWithLogitsLoss.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/BinaryCrossEntropyWithLogitsLoss.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/BinaryCrossEntropyWithLogitsLoss.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/BinaryCrossEntropyWithLogitsLoss.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/BinaryCrossEntropyWithLogitsLoss.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/BinaryCrossEntropyWithLogitsLoss.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/BinaryCrossEntropyWithLogitsLoss.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/BinaryCrossEntropyWithLogitsLoss.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/BinaryCrossEntropyWithLogitsLoss.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/BinaryCrossEntropyWithLogitsLoss.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/autograd\/BinaryCrossEntropyWithLogitsLoss.html", "kind" : "case class"}, {"name" : "lamp.autograd.CappedShiftedNegativeExponential", "shortDescription" : "", "members_case class" : [{"label" : "value", "tail" : ": Variable", "member" : "lamp.autograd.CappedShiftedNegativeExponential.value", "link" : "lamp\/autograd\/CappedShiftedNegativeExponential.html#value:lamp.autograd.Variable", "kind" : "val"}, {"label" : "result", "tail" : ": Tensor", "member" : "lamp.autograd.CappedShiftedNegativeExponential.result", "link" : "lamp\/autograd\/CappedShiftedNegativeExponential.html#result:aten.Tensor", "kind" : "val"}, {"label" : "above", "tail" : ": Tensor", "member" : "lamp.autograd.CappedShiftedNegativeExponential.above", "link" : "lamp\/autograd\/CappedShiftedNegativeExponential.html#above:aten.Tensor", "kind" : "val"}, {"label" : "scalar", "tail" : ": Tensor", "member" : "lamp.autograd.CappedShiftedNegativeExponential.scalar", "link" : "lamp\/autograd\/CappedShiftedNegativeExponential.html#scalar:aten.Tensor", "kind" : "val"}, {"label" : "ones", "tail" : ": Tensor", "member" : "lamp.autograd.CappedShiftedNegativeExponential.ones", "link" : "lamp\/autograd\/CappedShiftedNegativeExponential.html#ones:aten.Tensor", "kind" : "val"}, {"label" : "pred", "tail" : ": Tensor", "member" : "lamp.autograd.CappedShiftedNegativeExponential.pred", "link" : "lamp\/autograd\/CappedShiftedNegativeExponential.html#pred:aten.Tensor", "kind" : "val"}, {"label" : "aOpt", "tail" : ": STenOptions", "member" : "lamp.autograd.CappedShiftedNegativeExponential.aOpt", "link" : "lamp\/autograd\/CappedShiftedNegativeExponential.html#aOpt:lamp.STenOptions", "kind" : "val"}, {"label" : "params", "tail" : ": List[(Variable, (STen, STen) => Unit)]", "member" : "lamp.autograd.CappedShiftedNegativeExponential.params", "link" : "lamp\/autograd\/CappedShiftedNegativeExponential.html#params:List[(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)]", "kind" : "val"}, {"member" : "lamp.autograd.CappedShiftedNegativeExponential#<init>", "error" : "unsupported entity"}, {"label" : "shift", "tail" : ": Double", "member" : "lamp.autograd.CappedShiftedNegativeExponential.shift", "link" : "lamp\/autograd\/CappedShiftedNegativeExponential.html#shift:Double", "kind" : "val"}, {"label" : "a", "tail" : ": Variable", "member" : "lamp.autograd.CappedShiftedNegativeExponential.a", "link" : "lamp\/autograd\/CappedShiftedNegativeExponential.html#a:lamp.autograd.Variable", "kind" : "val"}, {"label" : "scope", "tail" : ": Scope", "member" : "lamp.autograd.CappedShiftedNegativeExponential.scope", "link" : "lamp\/autograd\/CappedShiftedNegativeExponential.html#scope:lamp.Scope", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/autograd\/CappedShiftedNegativeExponential.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/CappedShiftedNegativeExponential.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/CappedShiftedNegativeExponential.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/CappedShiftedNegativeExponential.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/CappedShiftedNegativeExponential.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/CappedShiftedNegativeExponential.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/CappedShiftedNegativeExponential.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/CappedShiftedNegativeExponential.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/CappedShiftedNegativeExponential.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/CappedShiftedNegativeExponential.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/CappedShiftedNegativeExponential.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/CappedShiftedNegativeExponential.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/CappedShiftedNegativeExponential.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/CappedShiftedNegativeExponential.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/CappedShiftedNegativeExponential.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/CappedShiftedNegativeExponential.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/CappedShiftedNegativeExponential.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/autograd\/CappedShiftedNegativeExponential.html", "kind" : "case class"}, {"name" : "lamp.autograd.CastToPrecision", "shortDescription" : "", "members_case class" : [{"label" : "value", "tail" : ": Variable", "member" : "lamp.autograd.CastToPrecision.value", "link" : "lamp\/autograd\/CastToPrecision.html#value:lamp.autograd.Variable", "kind" : "val"}, {"label" : "params", "tail" : ": List[(Variable, (STen, STen) => Unit)]", "member" : "lamp.autograd.CastToPrecision.params", "link" : "lamp\/autograd\/CastToPrecision.html#params:List[(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)]", "kind" : "val"}, {"member" : "lamp.autograd.CastToPrecision#<init>", "error" : "unsupported entity"}, {"label" : "precision", "tail" : ": FloatingPointPrecision", "member" : "lamp.autograd.CastToPrecision.precision", "link" : "lamp\/autograd\/CastToPrecision.html#precision:lamp.FloatingPointPrecision", "kind" : "val"}, {"label" : "a", "tail" : ": Variable", "member" : "lamp.autograd.CastToPrecision.a", "link" : "lamp\/autograd\/CastToPrecision.html#a:lamp.autograd.Variable", "kind" : "val"}, {"label" : "scope", "tail" : ": Scope", "member" : "lamp.autograd.CastToPrecision.scope", "link" : "lamp\/autograd\/CastToPrecision.html#scope:lamp.Scope", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/autograd\/CastToPrecision.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/CastToPrecision.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/CastToPrecision.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/CastToPrecision.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/CastToPrecision.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/CastToPrecision.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/CastToPrecision.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/CastToPrecision.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/CastToPrecision.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/CastToPrecision.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/CastToPrecision.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/CastToPrecision.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/CastToPrecision.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/CastToPrecision.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/CastToPrecision.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/CastToPrecision.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/CastToPrecision.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/autograd\/CastToPrecision.html", "kind" : "case class"}, {"name" : "lamp.autograd.Cholesky", "shortDescription" : "", "members_case class" : [{"label" : "value", "tail" : ": Variable", "member" : "lamp.autograd.Cholesky.value", "link" : "lamp\/autograd\/Cholesky.html#value:lamp.autograd.Variable", "kind" : "val"}, {"label" : "params", "tail" : ": List[(Variable, (STen, STen) => Unit)]", "member" : "lamp.autograd.Cholesky.params", "link" : "lamp\/autograd\/Cholesky.html#params:List[(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)]", "kind" : "val"}, {"member" : "lamp.autograd.Cholesky#<init>", "error" : "unsupported entity"}, {"label" : "upper", "tail" : ": Boolean", "member" : "lamp.autograd.Cholesky.upper", "link" : "lamp\/autograd\/Cholesky.html#upper:Boolean", "kind" : "val"}, {"label" : "input", "tail" : ": Variable", "member" : "lamp.autograd.Cholesky.input", "link" : "lamp\/autograd\/Cholesky.html#input:lamp.autograd.Variable", "kind" : "val"}, {"label" : "scope", "tail" : ": Scope", "member" : "lamp.autograd.Cholesky.scope", "link" : "lamp\/autograd\/Cholesky.html#scope:lamp.Scope", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/autograd\/Cholesky.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/Cholesky.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/Cholesky.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/Cholesky.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/Cholesky.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/Cholesky.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/Cholesky.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/Cholesky.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Cholesky.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Cholesky.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Cholesky.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/Cholesky.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/Cholesky.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/Cholesky.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/Cholesky.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/Cholesky.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/Cholesky.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/autograd\/Cholesky.html", "kind" : "case class"}, {"name" : "lamp.autograd.CholeskySolve", "shortDescription" : "", "members_case class" : [{"label" : "value", "tail" : ": Variable", "member" : "lamp.autograd.CholeskySolve.value", "link" : "lamp\/autograd\/CholeskySolve.html#value:lamp.autograd.Variable", "kind" : "val"}, {"label" : "params", "tail" : ": List[(Variable, (STen, STen) => Unit)]", "member" : "lamp.autograd.CholeskySolve.params", "link" : "lamp\/autograd\/CholeskySolve.html#params:List[(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)]", "kind" : "val"}, {"member" : "lamp.autograd.CholeskySolve#<init>", "error" : "unsupported entity"}, {"label" : "upper", "tail" : ": Boolean", "member" : "lamp.autograd.CholeskySolve.upper", "link" : "lamp\/autograd\/CholeskySolve.html#upper:Boolean", "kind" : "val"}, {"label" : "factor", "tail" : ": Variable", "member" : "lamp.autograd.CholeskySolve.factor", "link" : "lamp\/autograd\/CholeskySolve.html#factor:lamp.autograd.Variable", "kind" : "val"}, {"label" : "b", "tail" : ": Variable", "member" : "lamp.autograd.CholeskySolve.b", "link" : "lamp\/autograd\/CholeskySolve.html#b:lamp.autograd.Variable", "kind" : "val"}, {"label" : "scope", "tail" : ": Scope", "member" : "lamp.autograd.CholeskySolve.scope", "link" : "lamp\/autograd\/CholeskySolve.html#scope:lamp.Scope", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/autograd\/CholeskySolve.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/CholeskySolve.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/CholeskySolve.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/CholeskySolve.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/CholeskySolve.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/CholeskySolve.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/CholeskySolve.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/CholeskySolve.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/CholeskySolve.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/CholeskySolve.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/CholeskySolve.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/CholeskySolve.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/CholeskySolve.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/CholeskySolve.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/CholeskySolve.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/CholeskySolve.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/CholeskySolve.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/autograd\/CholeskySolve.html", "kind" : "case class"}, {"name" : "lamp.autograd.Concatenate", "shortDescription" : "", "members_case class" : [{"label" : "value", "tail" : ": Variable", "member" : "lamp.autograd.Concatenate.value", "link" : "lamp\/autograd\/Concatenate.html#value:lamp.autograd.Variable", "kind" : "val"}, {"label" : "params", "tail" : ": List[(Variable, (STen, STen) => Unit)]", "member" : "lamp.autograd.Concatenate.params", "link" : "lamp\/autograd\/Concatenate.html#params:List[(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)]", "kind" : "val"}, {"label" : "boundaries", "tail" : ": List[(Long, Long)]", "member" : "lamp.autograd.Concatenate.boundaries", "link" : "lamp\/autograd\/Concatenate.html#boundaries:List[(Long,Long)]", "kind" : "val"}, {"label" : "ashapes", "tail" : ": Seq[Long]", "member" : "lamp.autograd.Concatenate.ashapes", "link" : "lamp\/autograd\/Concatenate.html#ashapes:Seq[Long]", "kind" : "val"}, {"member" : "lamp.autograd.Concatenate#<init>", "error" : "unsupported entity"}, {"label" : "dim", "tail" : ": Long", "member" : "lamp.autograd.Concatenate.dim", "link" : "lamp\/autograd\/Concatenate.html#dim:Long", "kind" : "val"}, {"label" : "a", "tail" : ": Seq[Variable]", "member" : "lamp.autograd.Concatenate.a", "link" : "lamp\/autograd\/Concatenate.html#a:Seq[lamp.autograd.Variable]", "kind" : "val"}, {"label" : "scope", "tail" : ": Scope", "member" : "lamp.autograd.Concatenate.scope", "link" : "lamp\/autograd\/Concatenate.html#scope:lamp.Scope", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/autograd\/Concatenate.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/Concatenate.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/Concatenate.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/Concatenate.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/Concatenate.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/Concatenate.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/Concatenate.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/Concatenate.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Concatenate.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Concatenate.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Concatenate.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/Concatenate.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/Concatenate.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/Concatenate.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/Concatenate.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/Concatenate.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/Concatenate.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/autograd\/Concatenate.html", "kind" : "case class"}, {"name" : "lamp.autograd.ConstAdd", "shortDescription" : "", "members_case class" : [{"label" : "value", "tail" : ": Variable", "member" : "lamp.autograd.ConstAdd.value", "link" : "lamp\/autograd\/ConstAdd.html#value:lamp.autograd.Variable", "kind" : "val"}, {"label" : "params", "tail" : ": List[(Variable, (STen, STen) => Unit)]", "member" : "lamp.autograd.ConstAdd.params", "link" : "lamp\/autograd\/ConstAdd.html#params:List[(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)]", "kind" : "val"}, {"member" : "lamp.autograd.ConstAdd#<init>", "error" : "unsupported entity"}, {"label" : "b", "tail" : ": Double", "member" : "lamp.autograd.ConstAdd.b", "link" : "lamp\/autograd\/ConstAdd.html#b:Double", "kind" : "val"}, {"label" : "a", "tail" : ": Variable", "member" : "lamp.autograd.ConstAdd.a", "link" : "lamp\/autograd\/ConstAdd.html#a:lamp.autograd.Variable", "kind" : "val"}, {"label" : "scope", "tail" : ": Scope", "member" : "lamp.autograd.ConstAdd.scope", "link" : "lamp\/autograd\/ConstAdd.html#scope:lamp.Scope", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/autograd\/ConstAdd.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/ConstAdd.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/ConstAdd.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/ConstAdd.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/ConstAdd.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/ConstAdd.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/ConstAdd.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/ConstAdd.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/ConstAdd.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/ConstAdd.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/ConstAdd.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/ConstAdd.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/ConstAdd.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/ConstAdd.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/ConstAdd.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/ConstAdd.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/ConstAdd.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/autograd\/ConstAdd.html", "kind" : "case class"}, {"name" : "lamp.autograd.Constant", "object" : "lamp\/autograd\/Constant$.html", "members_object" : [{"label" : "movable", "tail" : ": Movable[Constant]", "member" : "lamp.autograd.Constant.movable", "link" : "lamp\/autograd\/Constant$.html#movable:lamp.Movable[lamp.autograd.Constant]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/Constant$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/Constant$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/Constant$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/Constant$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/Constant$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/Constant$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/Constant$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Constant$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Constant$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Constant$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/Constant$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/Constant$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/autograd\/Constant$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/Constant$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/autograd\/Constant$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/autograd\/Constant$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/Constant$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/Constant$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/Constant$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "lamp\/autograd\/Constant.html", "kind" : "trait", "members_trait" : [{"label" : "op", "tail" : "(): None", "member" : "lamp.autograd.Constant.op", "link" : "lamp\/autograd\/Constant.html#op:None.type", "kind" : "final def"}, {"label" : "toLongMat", "tail" : "(): Mat[Long]", "member" : "lamp.autograd.Variable.toLongMat", "link" : "lamp\/autograd\/Constant.html#toLongMat:org.saddle.Mat[Long]", "kind" : "def"}, {"label" : "toMat", "tail" : "(): Mat[Double]", "member" : "lamp.autograd.Variable.toMat", "link" : "lamp\/autograd\/Constant.html#toMat:org.saddle.Mat[Double]", "kind" : "def"}, {"label" : "choleskySolve", "tail" : "(factor: Variable, upper: Boolean)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.choleskySolve", "link" : "lamp\/autograd\/Constant.html#choleskySolve[S](factor:lamp.autograd.Variable,upper:Boolean)(implicitevidence$76:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "cholesky", "tail" : "(upper: Boolean)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.cholesky", "link" : "lamp\/autograd\/Constant.html#cholesky[S](upper:Boolean)(implicitevidence$75:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "pinv", "tail" : "(rcond: Double)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.pinv", "link" : "lamp\/autograd\/Constant.html#pinv[S](rcond:Double)(implicitevidence$74:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "inv", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.inv", "link" : "lamp\/autograd\/Constant.html#inv[S](implicitevidence$73:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "diag", "tail" : "(diagonal: Long)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.diag", "link" : "lamp\/autograd\/Constant.html#diag[S](diagonal:Long)(implicitevidence$72:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "toDense", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.toDense", "link" : "lamp\/autograd\/Constant.html#toDense[S](implicitevidence$71:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "repeatInterleave", "tail" : "(repeats: Variable, dim: Int)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.repeatInterleave", "link" : "lamp\/autograd\/Constant.html#repeatInterleave[S](repeats:lamp.autograd.Variable,dim:Int)(implicitevidence$70:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "flattenLastDimensions", "tail" : "(dims: Int)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.flattenLastDimensions", "link" : "lamp\/autograd\/Constant.html#flattenLastDimensions[S](dims:Int)(implicitevidence$69:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "flatten", "tail" : "(startDim: Int, endDim: Int)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.flatten", "link" : "lamp\/autograd\/Constant.html#flatten[S](startDim:Int,endDim:Int)(implicitevidence$68:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "flatten", "tail" : "(startDim: Int)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.flatten", "link" : "lamp\/autograd\/Constant.html#flatten[S](startDim:Int)(implicitevidence$67:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "flatten", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.flatten", "link" : "lamp\/autograd\/Constant.html#flatten[S](implicitevidence$66:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "reshape", "tail" : "(shape: List[Long])(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.reshape", "link" : "lamp\/autograd\/Constant.html#reshape[S](shape:List[Long])(implicitevidence$65:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "view", "tail" : "(shape: List[Long])(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.view", "link" : "lamp\/autograd\/Constant.html#view[S](shape:List[Long])(implicitevidence$64:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "normalize", "tail" : "(dim: List[Int], eps: Double)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.normalize", "link" : "lamp\/autograd\/Constant.html#normalize[S](dim:List[Int],eps:Double)(implicitevidence$63:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "variance", "tail" : "(dim: List[Int])(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.variance", "link" : "lamp\/autograd\/Constant.html#variance[S](dim:List[Int])(implicitevidence$62:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "mean", "tail" : "(dim: List[Int], keepDim: Boolean)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.mean", "link" : "lamp\/autograd\/Constant.html#mean[S](dim:List[Int],keepDim:Boolean)(implicitevidence$61:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "mean", "tail" : "(dim: List[Int])(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.mean", "link" : "lamp\/autograd\/Constant.html#mean[S](dim:List[Int])(implicitevidence$60:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "squaredFrobenius", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.squaredFrobenius", "link" : "lamp\/autograd\/Constant.html#squaredFrobenius[S](implicitevidence$59:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "l1Loss", "tail" : "(target: STen, reduction: Reduction)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.l1Loss", "link" : "lamp\/autograd\/Constant.html#l1Loss[S](target:lamp.STen,reduction:lamp.autograd.Reduction)(implicitevidence$58:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "mseLoss", "tail" : "(target: STen, reduction: Reduction)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.mseLoss", "link" : "lamp\/autograd\/Constant.html#mseLoss[S](target:lamp.STen,reduction:lamp.autograd.Reduction)(implicitevidence$57:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "binaryCrossEntropyWithLogitsLoss", "tail" : "(target: STen, posWeights: Option[STen], reduction: Reduction)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.binaryCrossEntropyWithLogitsLoss", "link" : "lamp\/autograd\/Constant.html#binaryCrossEntropyWithLogitsLoss[S](target:lamp.STen,posWeights:Option[lamp.STen],reduction:lamp.autograd.Reduction)(implicitevidence$56:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "nllLoss", "tail" : "(target: STen, weights: STen, reduction: Reduction, ignore: Long)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.nllLoss", "link" : "lamp\/autograd\/Constant.html#nllLoss[S](target:lamp.STen,weights:lamp.STen,reduction:lamp.autograd.Reduction,ignore:Long)(implicitevidence$55:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "crossEntropy", "tail" : "(other: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.crossEntropy", "link" : "lamp\/autograd\/Constant.html#crossEntropy[S](other:lamp.autograd.Variable)(implicitevidence$54:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "logSoftMax", "tail" : "(dim: Int)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.logSoftMax", "link" : "lamp\/autograd\/Constant.html#logSoftMax[S](dim:Int)(implicitevidence$53:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "euclideanDistance", "tail" : "(b: Variable, dim: Int)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.euclideanDistance", "link" : "lamp\/autograd\/Constant.html#euclideanDistance[S](b:lamp.autograd.Variable,dim:Int)(implicitevidence$52:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "pow", "tail" : "(exponent: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.pow", "link" : "lamp\/autograd\/Constant.html#pow[S](exponent:lamp.autograd.Variable)(implicitevidence$51:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "pow", "tail" : "(const: Double)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.pow", "link" : "lamp\/autograd\/Constant.html#pow[S](const:Double)(implicitevidence$50:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "atan", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.atan", "link" : "lamp\/autograd\/Constant.html#atan[S](implicitevidence$49:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "tanh", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.tanh", "link" : "lamp\/autograd\/Constant.html#tanh[S](implicitevidence$48:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "tan", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.tan", "link" : "lamp\/autograd\/Constant.html#tan[S](implicitevidence$47:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "cos", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.cos", "link" : "lamp\/autograd\/Constant.html#cos[S](implicitevidence$46:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "sin", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.sin", "link" : "lamp\/autograd\/Constant.html#sin[S](implicitevidence$45:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "softplus", "tail" : "(beta: Double, threshold: Double)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.softplus", "link" : "lamp\/autograd\/Constant.html#softplus[S](beta:Double,threshold:Double)(implicitevidence$44:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "log1p", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.log1p", "link" : "lamp\/autograd\/Constant.html#log1p[S](implicitevidence$43:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "log", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.log", "link" : "lamp\/autograd\/Constant.html#log[S](implicitevidence$42:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "logdet", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.logdet", "link" : "lamp\/autograd\/Constant.html#logdet[S](implicitevidence$41:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "exp", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.exp", "link" : "lamp\/autograd\/Constant.html#exp[S](implicitevidence$40:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "colSum", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.colSum", "link" : "lamp\/autograd\/Constant.html#colSum[S](implicitevidence$39:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "rowSum", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.rowSum", "link" : "lamp\/autograd\/Constant.html#rowSum[S](implicitevidence$38:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "expand", "tail" : "(shape: List[Long])(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.expand", "link" : "lamp\/autograd\/Constant.html#expand[S](shape:List[Long])(implicitevidence$37:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "expandAs", "tail" : "(other: STen)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.expandAs", "link" : "lamp\/autograd\/Constant.html#expandAs[S](other:lamp.STen)(implicitevidence$36:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "sum", "tail" : "(dim: List[Int], keepDim: Boolean)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.sum", "link" : "lamp\/autograd\/Constant.html#sum[S](dim:List[Int],keepDim:Boolean)(implicitevidence$35:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "sum", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.sum", "link" : "lamp\/autograd\/Constant.html#sum[S](implicitevidence$34:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "indexFill", "tail" : "(index: Variable, dim: Int, fillValue: Double)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.indexFill", "link" : "lamp\/autograd\/Constant.html#indexFill[S](index:lamp.autograd.Variable,dim:Int,fillValue:Double)(implicitevidence$33:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "indexAddFromSource", "tail" : "(index: Variable, dim: Int, source: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.indexAddFromSource", "link" : "lamp\/autograd\/Constant.html#indexAddFromSource[S](index:lamp.autograd.Variable,dim:Int,source:lamp.autograd.Variable)(implicitevidence$32:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "indexAdd", "tail" : "(index: Variable, dim: Int, maxIndex: Long)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.indexAdd", "link" : "lamp\/autograd\/Constant.html#indexAdd[S](index:lamp.autograd.Variable,dim:Int,maxIndex:Long)(implicitevidence$31:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "scatterAdd", "tail" : "(index: Variable, dim: Int, maxIndex: Long)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.scatterAdd", "link" : "lamp\/autograd\/Constant.html#scatterAdd[S](index:lamp.autograd.Variable,dim:Int,maxIndex:Long)(implicitevidence$30:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "dropout", "tail" : "(prob: Double, train: Boolean)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.dropout", "link" : "lamp\/autograd\/Constant.html#dropout[S](prob:Double,train:Boolean)(implicitevidence$29:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "sigmoid", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.sigmoid", "link" : "lamp\/autograd\/Constant.html#sigmoid[S](implicitevidence$28:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "gelu", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.gelu", "link" : "lamp\/autograd\/Constant.html#gelu[S](implicitevidence$27:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "swish1", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.swish1", "link" : "lamp\/autograd\/Constant.html#swish1[S](implicitevidence$26:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "leakyRelu", "tail" : "(negativeSlope: Double)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.leakyRelu", "link" : "lamp\/autograd\/Constant.html#leakyRelu[S](negativeSlope:Double)(implicitevidence$25:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "relu", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.relu", "link" : "lamp\/autograd\/Constant.html#relu[S](implicitevidence$24:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "bmm", "tail" : "(other: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.bmm", "link" : "lamp\/autograd\/Constant.html#bmm[S](other:lamp.autograd.Variable)(implicitevidence$23:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "mm", "tail" : "(other: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.mm", "link" : "lamp\/autograd\/Constant.html#mm[S](other:lamp.autograd.Variable)(implicitevidence$22:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "cross", "tail" : "(other: Variable, dim: Int)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.cross", "link" : "lamp\/autograd\/Constant.html#cross[S](other:lamp.autograd.Variable,dim:Int)(implicitevidence$21:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "\/", "tail" : "(other: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.\/", "link" : "lamp\/autograd\/Constant.html#\/[S](other:lamp.autograd.Variable)(implicitevidence$20:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "*", "tail" : "(other: Double)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.*", "link" : "lamp\/autograd\/Constant.html#*[S](other:Double)(implicitevidence$19:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "*", "tail" : "(other: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.*", "link" : "lamp\/autograd\/Constant.html#*[S](other:lamp.autograd.Variable)(implicitevidence$18:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "-", "tail" : "(other: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.-", "link" : "lamp\/autograd\/Constant.html#-[S](other:lamp.autograd.Variable)(implicitevidence$17:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "+", "tail" : "(other: Double)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.+", "link" : "lamp\/autograd\/Constant.html#+[S](other:Double)(implicitevidence$16:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "+", "tail" : "(other: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.+", "link" : "lamp\/autograd\/Constant.html#+[S](other:lamp.autograd.Variable)(implicitevidence$15:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "cat", "tail" : "(other: Variable, dim: Long)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.cat", "link" : "lamp\/autograd\/Constant.html#cat[S](other:lamp.autograd.Variable,dim:Long)(implicitevidence$14:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "cast", "tail" : "(precision: FloatingPointPrecision)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.cast", "link" : "lamp\/autograd\/Constant.html#cast[S](precision:lamp.FloatingPointPrecision)(implicitevidence$13:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "makeBooleanMask", "tail" : "(q: Long)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.makeBooleanMask", "link" : "lamp\/autograd\/Constant.html#makeBooleanMask[S](q:Long)(implicitevidence$12:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "maskSelect", "tail" : "(mask: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.maskSelect", "link" : "lamp\/autograd\/Constant.html#maskSelect[S](mask:lamp.autograd.Variable)(implicitevidence$11:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "maskFill", "tail" : "(mask: Variable, fill: Double)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.maskFill", "link" : "lamp\/autograd\/Constant.html#maskFill[S](mask:lamp.autograd.Variable,fill:Double)(implicitevidence$10:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "assign", "tail" : "(other: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.assign", "link" : "lamp\/autograd\/Constant.html#assign[S](other:lamp.autograd.Variable)(implicitevidence$9:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "oneHot", "tail" : "(numClasses: Int)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.oneHot", "link" : "lamp\/autograd\/Constant.html#oneHot[S](numClasses:Int)(implicitevidence$8:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "argmax", "tail" : "(dim: Long, keepDim: Boolean)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.argmax", "link" : "lamp\/autograd\/Constant.html#argmax[S](dim:Long,keepDim:Boolean)(implicitevidence$7:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "indexSelect", "tail" : "(dim: Long, index: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.indexSelect", "link" : "lamp\/autograd\/Constant.html#indexSelect[S](dim:Long,index:lamp.autograd.Variable)(implicitevidence$6:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "select", "tail" : "(dim: Long, index: Long)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.select", "link" : "lamp\/autograd\/Constant.html#select[S](dim:Long,index:Long)(implicitevidence$5:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "t", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.t", "link" : "lamp\/autograd\/Constant.html#t[S](implicitevidence$4:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "transpose", "tail" : "(dim1: Int, dim2: Int)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.transpose", "link" : "lamp\/autograd\/Constant.html#transpose[S](dim1:Int,dim2:Int)(implicitevidence$3:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "zipBackward", "tail" : "(fn: (STen, STen) => Unit): (Variable, (STen, STen) => Unit)", "member" : "lamp.autograd.Variable.zipBackward", "link" : "lamp\/autograd\/Constant.html#zipBackward(fn:(lamp.STen,lamp.STen)=>Unit):(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)", "kind" : "def"}, {"label" : "backprop", "tail" : "(): Unit", "member" : "lamp.autograd.Variable.backprop", "link" : "lamp\/autograd\/Constant.html#backprop():Unit", "kind" : "def"}, {"label" : "graphMemoryAllocationReport", "tail" : "(): GraphMemoryAllocationReport", "member" : "lamp.autograd.Variable.graphMemoryAllocationReport", "link" : "lamp\/autograd\/Constant.html#graphMemoryAllocationReport:lamp.autograd.GraphMemoryAllocationReport", "kind" : "def"}, {"label" : "wengert", "tail" : ": Seq[Variable]", "member" : "lamp.autograd.Variable.wengert", "link" : "lamp\/autograd\/Constant.html#wengert:Seq[lamp.autograd.Variable]", "kind" : "lazy val"}, {"label" : "zeroGrad", "tail" : "(): Unit", "member" : "lamp.autograd.Variable.zeroGrad", "link" : "lamp\/autograd\/Constant.html#zeroGrad():Unit", "kind" : "def"}, {"label" : "withGrad", "tail" : "(arg0: Sc[S]): ConstantWithGrad", "member" : "lamp.autograd.Variable.withGrad", "link" : "lamp\/autograd\/Constant.html#withGrad[S](implicitevidence$2:lamp.Sc[S]):lamp.autograd.ConstantWithGrad", "kind" : "def"}, {"label" : "detached", "tail" : "(): Constant", "member" : "lamp.autograd.Variable.detached", "link" : "lamp\/autograd\/Constant.html#detached:lamp.autograd.Constant", "kind" : "def"}, {"label" : "id", "tail" : ": UUID", "member" : "lamp.autograd.Variable.id", "link" : "lamp\/autograd\/Constant.html#id:java.util.UUID", "kind" : "val"}, {"label" : "shape", "tail" : "(): List[Long]", "member" : "lamp.autograd.Variable.shape", "link" : "lamp\/autograd\/Constant.html#shape:List[Long]", "kind" : "def"}, {"label" : "sizes", "tail" : ": List[Long]", "member" : "lamp.autograd.Variable.sizes", "link" : "lamp\/autograd\/Constant.html#sizes:List[Long]", "kind" : "val"}, {"label" : "options", "tail" : "(arg0: Sc[S]): STenOptions", "member" : "lamp.autograd.Variable.options", "link" : "lamp\/autograd\/Constant.html#options[S](implicitevidence$1:lamp.Sc[S]):lamp.STenOptions", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "lamp.autograd.Variable.toString", "link" : "lamp\/autograd\/Constant.html#toString():String", "kind" : "def"}, {"label" : "needsGrad", "tail" : "(): Boolean", "member" : "lamp.autograd.Variable.needsGrad", "link" : "lamp\/autograd\/Constant.html#needsGrad:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/Constant.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/Constant.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/Constant.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/Constant.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/Constant.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/Constant.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/Constant.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Constant.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Constant.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Constant.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/Constant.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/Constant.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/Constant.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/autograd\/Constant.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/autograd\/Constant.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/Constant.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/Constant.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/Constant.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "partialDerivative", "tail" : "(): Option[STen]", "member" : "lamp.autograd.Variable.partialDerivative", "link" : "lamp\/autograd\/Constant.html#partialDerivative:Option[lamp.STen]", "kind" : "abstract def"}, {"label" : "value", "tail" : "(): STen", "member" : "lamp.autograd.Variable.value", "link" : "lamp\/autograd\/Constant.html#value:lamp.STen", "kind" : "abstract def"}], "shortDescription" : "A variable whose parent is empty"}, {"name" : "lamp.autograd.ConstantWithGrad", "shortDescription" : "A variable whose parent is empty but whose partial derivative is defined", "members_case class" : [{"label" : "partialDerivative", "tail" : ": Some[STen]", "member" : "lamp.autograd.ConstantWithGrad.partialDerivative", "link" : "lamp\/autograd\/ConstantWithGrad.html#partialDerivative:Some[lamp.STen]", "kind" : "val"}, {"member" : "lamp.autograd.ConstantWithGrad#<init>", "error" : "unsupported entity"}, {"label" : "pd", "tail" : ": STen", "member" : "lamp.autograd.ConstantWithGrad.pd", "link" : "lamp\/autograd\/ConstantWithGrad.html#pd:lamp.STen", "kind" : "val"}, {"label" : "value", "tail" : ": STen", "member" : "lamp.autograd.ConstantWithGrad.value", "link" : "lamp\/autograd\/ConstantWithGrad.html#value:lamp.STen", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/autograd\/ConstantWithGrad.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "op", "tail" : "(): None", "member" : "lamp.autograd.Constant.op", "link" : "lamp\/autograd\/ConstantWithGrad.html#op:None.type", "kind" : "final def"}, {"label" : "toLongMat", "tail" : "(): Mat[Long]", "member" : "lamp.autograd.Variable.toLongMat", "link" : "lamp\/autograd\/ConstantWithGrad.html#toLongMat:org.saddle.Mat[Long]", "kind" : "def"}, {"label" : "toMat", "tail" : "(): Mat[Double]", "member" : "lamp.autograd.Variable.toMat", "link" : "lamp\/autograd\/ConstantWithGrad.html#toMat:org.saddle.Mat[Double]", "kind" : "def"}, {"label" : "choleskySolve", "tail" : "(factor: Variable, upper: Boolean)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.choleskySolve", "link" : "lamp\/autograd\/ConstantWithGrad.html#choleskySolve[S](factor:lamp.autograd.Variable,upper:Boolean)(implicitevidence$76:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "cholesky", "tail" : "(upper: Boolean)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.cholesky", "link" : "lamp\/autograd\/ConstantWithGrad.html#cholesky[S](upper:Boolean)(implicitevidence$75:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "pinv", "tail" : "(rcond: Double)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.pinv", "link" : "lamp\/autograd\/ConstantWithGrad.html#pinv[S](rcond:Double)(implicitevidence$74:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "inv", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.inv", "link" : "lamp\/autograd\/ConstantWithGrad.html#inv[S](implicitevidence$73:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "diag", "tail" : "(diagonal: Long)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.diag", "link" : "lamp\/autograd\/ConstantWithGrad.html#diag[S](diagonal:Long)(implicitevidence$72:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "toDense", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.toDense", "link" : "lamp\/autograd\/ConstantWithGrad.html#toDense[S](implicitevidence$71:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "repeatInterleave", "tail" : "(repeats: Variable, dim: Int)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.repeatInterleave", "link" : "lamp\/autograd\/ConstantWithGrad.html#repeatInterleave[S](repeats:lamp.autograd.Variable,dim:Int)(implicitevidence$70:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "flattenLastDimensions", "tail" : "(dims: Int)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.flattenLastDimensions", "link" : "lamp\/autograd\/ConstantWithGrad.html#flattenLastDimensions[S](dims:Int)(implicitevidence$69:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "flatten", "tail" : "(startDim: Int, endDim: Int)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.flatten", "link" : "lamp\/autograd\/ConstantWithGrad.html#flatten[S](startDim:Int,endDim:Int)(implicitevidence$68:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "flatten", "tail" : "(startDim: Int)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.flatten", "link" : "lamp\/autograd\/ConstantWithGrad.html#flatten[S](startDim:Int)(implicitevidence$67:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "flatten", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.flatten", "link" : "lamp\/autograd\/ConstantWithGrad.html#flatten[S](implicitevidence$66:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "reshape", "tail" : "(shape: List[Long])(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.reshape", "link" : "lamp\/autograd\/ConstantWithGrad.html#reshape[S](shape:List[Long])(implicitevidence$65:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "view", "tail" : "(shape: List[Long])(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.view", "link" : "lamp\/autograd\/ConstantWithGrad.html#view[S](shape:List[Long])(implicitevidence$64:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "normalize", "tail" : "(dim: List[Int], eps: Double)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.normalize", "link" : "lamp\/autograd\/ConstantWithGrad.html#normalize[S](dim:List[Int],eps:Double)(implicitevidence$63:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "variance", "tail" : "(dim: List[Int])(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.variance", "link" : "lamp\/autograd\/ConstantWithGrad.html#variance[S](dim:List[Int])(implicitevidence$62:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "mean", "tail" : "(dim: List[Int], keepDim: Boolean)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.mean", "link" : "lamp\/autograd\/ConstantWithGrad.html#mean[S](dim:List[Int],keepDim:Boolean)(implicitevidence$61:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "mean", "tail" : "(dim: List[Int])(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.mean", "link" : "lamp\/autograd\/ConstantWithGrad.html#mean[S](dim:List[Int])(implicitevidence$60:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "squaredFrobenius", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.squaredFrobenius", "link" : "lamp\/autograd\/ConstantWithGrad.html#squaredFrobenius[S](implicitevidence$59:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "l1Loss", "tail" : "(target: STen, reduction: Reduction)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.l1Loss", "link" : "lamp\/autograd\/ConstantWithGrad.html#l1Loss[S](target:lamp.STen,reduction:lamp.autograd.Reduction)(implicitevidence$58:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "mseLoss", "tail" : "(target: STen, reduction: Reduction)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.mseLoss", "link" : "lamp\/autograd\/ConstantWithGrad.html#mseLoss[S](target:lamp.STen,reduction:lamp.autograd.Reduction)(implicitevidence$57:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "binaryCrossEntropyWithLogitsLoss", "tail" : "(target: STen, posWeights: Option[STen], reduction: Reduction)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.binaryCrossEntropyWithLogitsLoss", "link" : "lamp\/autograd\/ConstantWithGrad.html#binaryCrossEntropyWithLogitsLoss[S](target:lamp.STen,posWeights:Option[lamp.STen],reduction:lamp.autograd.Reduction)(implicitevidence$56:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "nllLoss", "tail" : "(target: STen, weights: STen, reduction: Reduction, ignore: Long)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.nllLoss", "link" : "lamp\/autograd\/ConstantWithGrad.html#nllLoss[S](target:lamp.STen,weights:lamp.STen,reduction:lamp.autograd.Reduction,ignore:Long)(implicitevidence$55:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "crossEntropy", "tail" : "(other: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.crossEntropy", "link" : "lamp\/autograd\/ConstantWithGrad.html#crossEntropy[S](other:lamp.autograd.Variable)(implicitevidence$54:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "logSoftMax", "tail" : "(dim: Int)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.logSoftMax", "link" : "lamp\/autograd\/ConstantWithGrad.html#logSoftMax[S](dim:Int)(implicitevidence$53:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "euclideanDistance", "tail" : "(b: Variable, dim: Int)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.euclideanDistance", "link" : "lamp\/autograd\/ConstantWithGrad.html#euclideanDistance[S](b:lamp.autograd.Variable,dim:Int)(implicitevidence$52:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "pow", "tail" : "(exponent: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.pow", "link" : "lamp\/autograd\/ConstantWithGrad.html#pow[S](exponent:lamp.autograd.Variable)(implicitevidence$51:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "pow", "tail" : "(const: Double)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.pow", "link" : "lamp\/autograd\/ConstantWithGrad.html#pow[S](const:Double)(implicitevidence$50:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "atan", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.atan", "link" : "lamp\/autograd\/ConstantWithGrad.html#atan[S](implicitevidence$49:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "tanh", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.tanh", "link" : "lamp\/autograd\/ConstantWithGrad.html#tanh[S](implicitevidence$48:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "tan", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.tan", "link" : "lamp\/autograd\/ConstantWithGrad.html#tan[S](implicitevidence$47:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "cos", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.cos", "link" : "lamp\/autograd\/ConstantWithGrad.html#cos[S](implicitevidence$46:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "sin", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.sin", "link" : "lamp\/autograd\/ConstantWithGrad.html#sin[S](implicitevidence$45:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "softplus", "tail" : "(beta: Double, threshold: Double)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.softplus", "link" : "lamp\/autograd\/ConstantWithGrad.html#softplus[S](beta:Double,threshold:Double)(implicitevidence$44:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "log1p", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.log1p", "link" : "lamp\/autograd\/ConstantWithGrad.html#log1p[S](implicitevidence$43:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "log", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.log", "link" : "lamp\/autograd\/ConstantWithGrad.html#log[S](implicitevidence$42:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "logdet", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.logdet", "link" : "lamp\/autograd\/ConstantWithGrad.html#logdet[S](implicitevidence$41:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "exp", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.exp", "link" : "lamp\/autograd\/ConstantWithGrad.html#exp[S](implicitevidence$40:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "colSum", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.colSum", "link" : "lamp\/autograd\/ConstantWithGrad.html#colSum[S](implicitevidence$39:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "rowSum", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.rowSum", "link" : "lamp\/autograd\/ConstantWithGrad.html#rowSum[S](implicitevidence$38:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "expand", "tail" : "(shape: List[Long])(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.expand", "link" : "lamp\/autograd\/ConstantWithGrad.html#expand[S](shape:List[Long])(implicitevidence$37:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "expandAs", "tail" : "(other: STen)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.expandAs", "link" : "lamp\/autograd\/ConstantWithGrad.html#expandAs[S](other:lamp.STen)(implicitevidence$36:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "sum", "tail" : "(dim: List[Int], keepDim: Boolean)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.sum", "link" : "lamp\/autograd\/ConstantWithGrad.html#sum[S](dim:List[Int],keepDim:Boolean)(implicitevidence$35:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "sum", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.sum", "link" : "lamp\/autograd\/ConstantWithGrad.html#sum[S](implicitevidence$34:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "indexFill", "tail" : "(index: Variable, dim: Int, fillValue: Double)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.indexFill", "link" : "lamp\/autograd\/ConstantWithGrad.html#indexFill[S](index:lamp.autograd.Variable,dim:Int,fillValue:Double)(implicitevidence$33:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "indexAddFromSource", "tail" : "(index: Variable, dim: Int, source: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.indexAddFromSource", "link" : "lamp\/autograd\/ConstantWithGrad.html#indexAddFromSource[S](index:lamp.autograd.Variable,dim:Int,source:lamp.autograd.Variable)(implicitevidence$32:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "indexAdd", "tail" : "(index: Variable, dim: Int, maxIndex: Long)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.indexAdd", "link" : "lamp\/autograd\/ConstantWithGrad.html#indexAdd[S](index:lamp.autograd.Variable,dim:Int,maxIndex:Long)(implicitevidence$31:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "scatterAdd", "tail" : "(index: Variable, dim: Int, maxIndex: Long)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.scatterAdd", "link" : "lamp\/autograd\/ConstantWithGrad.html#scatterAdd[S](index:lamp.autograd.Variable,dim:Int,maxIndex:Long)(implicitevidence$30:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "dropout", "tail" : "(prob: Double, train: Boolean)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.dropout", "link" : "lamp\/autograd\/ConstantWithGrad.html#dropout[S](prob:Double,train:Boolean)(implicitevidence$29:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "sigmoid", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.sigmoid", "link" : "lamp\/autograd\/ConstantWithGrad.html#sigmoid[S](implicitevidence$28:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "gelu", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.gelu", "link" : "lamp\/autograd\/ConstantWithGrad.html#gelu[S](implicitevidence$27:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "swish1", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.swish1", "link" : "lamp\/autograd\/ConstantWithGrad.html#swish1[S](implicitevidence$26:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "leakyRelu", "tail" : "(negativeSlope: Double)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.leakyRelu", "link" : "lamp\/autograd\/ConstantWithGrad.html#leakyRelu[S](negativeSlope:Double)(implicitevidence$25:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "relu", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.relu", "link" : "lamp\/autograd\/ConstantWithGrad.html#relu[S](implicitevidence$24:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "bmm", "tail" : "(other: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.bmm", "link" : "lamp\/autograd\/ConstantWithGrad.html#bmm[S](other:lamp.autograd.Variable)(implicitevidence$23:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "mm", "tail" : "(other: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.mm", "link" : "lamp\/autograd\/ConstantWithGrad.html#mm[S](other:lamp.autograd.Variable)(implicitevidence$22:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "cross", "tail" : "(other: Variable, dim: Int)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.cross", "link" : "lamp\/autograd\/ConstantWithGrad.html#cross[S](other:lamp.autograd.Variable,dim:Int)(implicitevidence$21:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "\/", "tail" : "(other: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.\/", "link" : "lamp\/autograd\/ConstantWithGrad.html#\/[S](other:lamp.autograd.Variable)(implicitevidence$20:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "*", "tail" : "(other: Double)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.*", "link" : "lamp\/autograd\/ConstantWithGrad.html#*[S](other:Double)(implicitevidence$19:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "*", "tail" : "(other: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.*", "link" : "lamp\/autograd\/ConstantWithGrad.html#*[S](other:lamp.autograd.Variable)(implicitevidence$18:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "-", "tail" : "(other: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.-", "link" : "lamp\/autograd\/ConstantWithGrad.html#-[S](other:lamp.autograd.Variable)(implicitevidence$17:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "+", "tail" : "(other: Double)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.+", "link" : "lamp\/autograd\/ConstantWithGrad.html#+[S](other:Double)(implicitevidence$16:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "+", "tail" : "(other: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.+", "link" : "lamp\/autograd\/ConstantWithGrad.html#+[S](other:lamp.autograd.Variable)(implicitevidence$15:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "cat", "tail" : "(other: Variable, dim: Long)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.cat", "link" : "lamp\/autograd\/ConstantWithGrad.html#cat[S](other:lamp.autograd.Variable,dim:Long)(implicitevidence$14:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "cast", "tail" : "(precision: FloatingPointPrecision)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.cast", "link" : "lamp\/autograd\/ConstantWithGrad.html#cast[S](precision:lamp.FloatingPointPrecision)(implicitevidence$13:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "makeBooleanMask", "tail" : "(q: Long)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.makeBooleanMask", "link" : "lamp\/autograd\/ConstantWithGrad.html#makeBooleanMask[S](q:Long)(implicitevidence$12:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "maskSelect", "tail" : "(mask: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.maskSelect", "link" : "lamp\/autograd\/ConstantWithGrad.html#maskSelect[S](mask:lamp.autograd.Variable)(implicitevidence$11:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "maskFill", "tail" : "(mask: Variable, fill: Double)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.maskFill", "link" : "lamp\/autograd\/ConstantWithGrad.html#maskFill[S](mask:lamp.autograd.Variable,fill:Double)(implicitevidence$10:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "assign", "tail" : "(other: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.assign", "link" : "lamp\/autograd\/ConstantWithGrad.html#assign[S](other:lamp.autograd.Variable)(implicitevidence$9:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "oneHot", "tail" : "(numClasses: Int)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.oneHot", "link" : "lamp\/autograd\/ConstantWithGrad.html#oneHot[S](numClasses:Int)(implicitevidence$8:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "argmax", "tail" : "(dim: Long, keepDim: Boolean)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.argmax", "link" : "lamp\/autograd\/ConstantWithGrad.html#argmax[S](dim:Long,keepDim:Boolean)(implicitevidence$7:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "indexSelect", "tail" : "(dim: Long, index: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.indexSelect", "link" : "lamp\/autograd\/ConstantWithGrad.html#indexSelect[S](dim:Long,index:lamp.autograd.Variable)(implicitevidence$6:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "select", "tail" : "(dim: Long, index: Long)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.select", "link" : "lamp\/autograd\/ConstantWithGrad.html#select[S](dim:Long,index:Long)(implicitevidence$5:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "t", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.t", "link" : "lamp\/autograd\/ConstantWithGrad.html#t[S](implicitevidence$4:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "transpose", "tail" : "(dim1: Int, dim2: Int)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.transpose", "link" : "lamp\/autograd\/ConstantWithGrad.html#transpose[S](dim1:Int,dim2:Int)(implicitevidence$3:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "zipBackward", "tail" : "(fn: (STen, STen) => Unit): (Variable, (STen, STen) => Unit)", "member" : "lamp.autograd.Variable.zipBackward", "link" : "lamp\/autograd\/ConstantWithGrad.html#zipBackward(fn:(lamp.STen,lamp.STen)=>Unit):(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)", "kind" : "def"}, {"label" : "backprop", "tail" : "(): Unit", "member" : "lamp.autograd.Variable.backprop", "link" : "lamp\/autograd\/ConstantWithGrad.html#backprop():Unit", "kind" : "def"}, {"label" : "graphMemoryAllocationReport", "tail" : "(): GraphMemoryAllocationReport", "member" : "lamp.autograd.Variable.graphMemoryAllocationReport", "link" : "lamp\/autograd\/ConstantWithGrad.html#graphMemoryAllocationReport:lamp.autograd.GraphMemoryAllocationReport", "kind" : "def"}, {"label" : "wengert", "tail" : ": Seq[Variable]", "member" : "lamp.autograd.Variable.wengert", "link" : "lamp\/autograd\/ConstantWithGrad.html#wengert:Seq[lamp.autograd.Variable]", "kind" : "lazy val"}, {"label" : "zeroGrad", "tail" : "(): Unit", "member" : "lamp.autograd.Variable.zeroGrad", "link" : "lamp\/autograd\/ConstantWithGrad.html#zeroGrad():Unit", "kind" : "def"}, {"label" : "withGrad", "tail" : "(arg0: Sc[S]): ConstantWithGrad", "member" : "lamp.autograd.Variable.withGrad", "link" : "lamp\/autograd\/ConstantWithGrad.html#withGrad[S](implicitevidence$2:lamp.Sc[S]):lamp.autograd.ConstantWithGrad", "kind" : "def"}, {"label" : "detached", "tail" : "(): Constant", "member" : "lamp.autograd.Variable.detached", "link" : "lamp\/autograd\/ConstantWithGrad.html#detached:lamp.autograd.Constant", "kind" : "def"}, {"label" : "id", "tail" : ": UUID", "member" : "lamp.autograd.Variable.id", "link" : "lamp\/autograd\/ConstantWithGrad.html#id:java.util.UUID", "kind" : "val"}, {"label" : "shape", "tail" : "(): List[Long]", "member" : "lamp.autograd.Variable.shape", "link" : "lamp\/autograd\/ConstantWithGrad.html#shape:List[Long]", "kind" : "def"}, {"label" : "sizes", "tail" : ": List[Long]", "member" : "lamp.autograd.Variable.sizes", "link" : "lamp\/autograd\/ConstantWithGrad.html#sizes:List[Long]", "kind" : "val"}, {"label" : "options", "tail" : "(arg0: Sc[S]): STenOptions", "member" : "lamp.autograd.Variable.options", "link" : "lamp\/autograd\/ConstantWithGrad.html#options[S](implicitevidence$1:lamp.Sc[S]):lamp.STenOptions", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "lamp.autograd.Variable.toString", "link" : "lamp\/autograd\/ConstantWithGrad.html#toString():String", "kind" : "def"}, {"label" : "needsGrad", "tail" : "(): Boolean", "member" : "lamp.autograd.Variable.needsGrad", "link" : "lamp\/autograd\/ConstantWithGrad.html#needsGrad:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/ConstantWithGrad.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/ConstantWithGrad.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/ConstantWithGrad.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/ConstantWithGrad.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/ConstantWithGrad.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/ConstantWithGrad.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/ConstantWithGrad.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/ConstantWithGrad.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/ConstantWithGrad.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/ConstantWithGrad.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/ConstantWithGrad.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/ConstantWithGrad.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/ConstantWithGrad.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/ConstantWithGrad.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/ConstantWithGrad.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/ConstantWithGrad.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/autograd\/ConstantWithGrad.html", "kind" : "case class"}, {"name" : "lamp.autograd.ConstantWithoutGrad", "shortDescription" : "A variable whose parent and partial derivatives are empty", "members_case class" : [{"label" : "partialDerivative", "tail" : ": None.type", "member" : "lamp.autograd.ConstantWithoutGrad.partialDerivative", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#partialDerivative:None.type", "kind" : "val"}, {"member" : "lamp.autograd.ConstantWithoutGrad#<init>", "error" : "unsupported entity"}, {"label" : "value", "tail" : ": STen", "member" : "lamp.autograd.ConstantWithoutGrad.value", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#value:lamp.STen", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "op", "tail" : "(): None", "member" : "lamp.autograd.Constant.op", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#op:None.type", "kind" : "final def"}, {"label" : "toLongMat", "tail" : "(): Mat[Long]", "member" : "lamp.autograd.Variable.toLongMat", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#toLongMat:org.saddle.Mat[Long]", "kind" : "def"}, {"label" : "toMat", "tail" : "(): Mat[Double]", "member" : "lamp.autograd.Variable.toMat", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#toMat:org.saddle.Mat[Double]", "kind" : "def"}, {"label" : "choleskySolve", "tail" : "(factor: Variable, upper: Boolean)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.choleskySolve", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#choleskySolve[S](factor:lamp.autograd.Variable,upper:Boolean)(implicitevidence$76:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "cholesky", "tail" : "(upper: Boolean)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.cholesky", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#cholesky[S](upper:Boolean)(implicitevidence$75:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "pinv", "tail" : "(rcond: Double)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.pinv", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#pinv[S](rcond:Double)(implicitevidence$74:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "inv", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.inv", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#inv[S](implicitevidence$73:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "diag", "tail" : "(diagonal: Long)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.diag", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#diag[S](diagonal:Long)(implicitevidence$72:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "toDense", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.toDense", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#toDense[S](implicitevidence$71:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "repeatInterleave", "tail" : "(repeats: Variable, dim: Int)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.repeatInterleave", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#repeatInterleave[S](repeats:lamp.autograd.Variable,dim:Int)(implicitevidence$70:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "flattenLastDimensions", "tail" : "(dims: Int)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.flattenLastDimensions", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#flattenLastDimensions[S](dims:Int)(implicitevidence$69:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "flatten", "tail" : "(startDim: Int, endDim: Int)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.flatten", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#flatten[S](startDim:Int,endDim:Int)(implicitevidence$68:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "flatten", "tail" : "(startDim: Int)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.flatten", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#flatten[S](startDim:Int)(implicitevidence$67:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "flatten", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.flatten", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#flatten[S](implicitevidence$66:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "reshape", "tail" : "(shape: List[Long])(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.reshape", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#reshape[S](shape:List[Long])(implicitevidence$65:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "view", "tail" : "(shape: List[Long])(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.view", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#view[S](shape:List[Long])(implicitevidence$64:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "normalize", "tail" : "(dim: List[Int], eps: Double)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.normalize", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#normalize[S](dim:List[Int],eps:Double)(implicitevidence$63:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "variance", "tail" : "(dim: List[Int])(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.variance", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#variance[S](dim:List[Int])(implicitevidence$62:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "mean", "tail" : "(dim: List[Int], keepDim: Boolean)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.mean", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#mean[S](dim:List[Int],keepDim:Boolean)(implicitevidence$61:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "mean", "tail" : "(dim: List[Int])(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.mean", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#mean[S](dim:List[Int])(implicitevidence$60:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "squaredFrobenius", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.squaredFrobenius", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#squaredFrobenius[S](implicitevidence$59:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "l1Loss", "tail" : "(target: STen, reduction: Reduction)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.l1Loss", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#l1Loss[S](target:lamp.STen,reduction:lamp.autograd.Reduction)(implicitevidence$58:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "mseLoss", "tail" : "(target: STen, reduction: Reduction)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.mseLoss", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#mseLoss[S](target:lamp.STen,reduction:lamp.autograd.Reduction)(implicitevidence$57:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "binaryCrossEntropyWithLogitsLoss", "tail" : "(target: STen, posWeights: Option[STen], reduction: Reduction)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.binaryCrossEntropyWithLogitsLoss", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#binaryCrossEntropyWithLogitsLoss[S](target:lamp.STen,posWeights:Option[lamp.STen],reduction:lamp.autograd.Reduction)(implicitevidence$56:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "nllLoss", "tail" : "(target: STen, weights: STen, reduction: Reduction, ignore: Long)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.nllLoss", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#nllLoss[S](target:lamp.STen,weights:lamp.STen,reduction:lamp.autograd.Reduction,ignore:Long)(implicitevidence$55:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "crossEntropy", "tail" : "(other: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.crossEntropy", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#crossEntropy[S](other:lamp.autograd.Variable)(implicitevidence$54:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "logSoftMax", "tail" : "(dim: Int)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.logSoftMax", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#logSoftMax[S](dim:Int)(implicitevidence$53:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "euclideanDistance", "tail" : "(b: Variable, dim: Int)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.euclideanDistance", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#euclideanDistance[S](b:lamp.autograd.Variable,dim:Int)(implicitevidence$52:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "pow", "tail" : "(exponent: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.pow", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#pow[S](exponent:lamp.autograd.Variable)(implicitevidence$51:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "pow", "tail" : "(const: Double)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.pow", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#pow[S](const:Double)(implicitevidence$50:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "atan", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.atan", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#atan[S](implicitevidence$49:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "tanh", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.tanh", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#tanh[S](implicitevidence$48:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "tan", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.tan", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#tan[S](implicitevidence$47:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "cos", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.cos", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#cos[S](implicitevidence$46:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "sin", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.sin", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#sin[S](implicitevidence$45:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "softplus", "tail" : "(beta: Double, threshold: Double)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.softplus", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#softplus[S](beta:Double,threshold:Double)(implicitevidence$44:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "log1p", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.log1p", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#log1p[S](implicitevidence$43:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "log", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.log", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#log[S](implicitevidence$42:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "logdet", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.logdet", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#logdet[S](implicitevidence$41:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "exp", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.exp", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#exp[S](implicitevidence$40:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "colSum", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.colSum", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#colSum[S](implicitevidence$39:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "rowSum", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.rowSum", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#rowSum[S](implicitevidence$38:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "expand", "tail" : "(shape: List[Long])(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.expand", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#expand[S](shape:List[Long])(implicitevidence$37:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "expandAs", "tail" : "(other: STen)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.expandAs", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#expandAs[S](other:lamp.STen)(implicitevidence$36:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "sum", "tail" : "(dim: List[Int], keepDim: Boolean)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.sum", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#sum[S](dim:List[Int],keepDim:Boolean)(implicitevidence$35:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "sum", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.sum", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#sum[S](implicitevidence$34:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "indexFill", "tail" : "(index: Variable, dim: Int, fillValue: Double)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.indexFill", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#indexFill[S](index:lamp.autograd.Variable,dim:Int,fillValue:Double)(implicitevidence$33:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "indexAddFromSource", "tail" : "(index: Variable, dim: Int, source: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.indexAddFromSource", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#indexAddFromSource[S](index:lamp.autograd.Variable,dim:Int,source:lamp.autograd.Variable)(implicitevidence$32:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "indexAdd", "tail" : "(index: Variable, dim: Int, maxIndex: Long)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.indexAdd", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#indexAdd[S](index:lamp.autograd.Variable,dim:Int,maxIndex:Long)(implicitevidence$31:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "scatterAdd", "tail" : "(index: Variable, dim: Int, maxIndex: Long)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.scatterAdd", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#scatterAdd[S](index:lamp.autograd.Variable,dim:Int,maxIndex:Long)(implicitevidence$30:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "dropout", "tail" : "(prob: Double, train: Boolean)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.dropout", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#dropout[S](prob:Double,train:Boolean)(implicitevidence$29:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "sigmoid", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.sigmoid", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#sigmoid[S](implicitevidence$28:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "gelu", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.gelu", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#gelu[S](implicitevidence$27:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "swish1", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.swish1", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#swish1[S](implicitevidence$26:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "leakyRelu", "tail" : "(negativeSlope: Double)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.leakyRelu", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#leakyRelu[S](negativeSlope:Double)(implicitevidence$25:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "relu", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.relu", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#relu[S](implicitevidence$24:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "bmm", "tail" : "(other: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.bmm", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#bmm[S](other:lamp.autograd.Variable)(implicitevidence$23:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "mm", "tail" : "(other: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.mm", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#mm[S](other:lamp.autograd.Variable)(implicitevidence$22:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "cross", "tail" : "(other: Variable, dim: Int)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.cross", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#cross[S](other:lamp.autograd.Variable,dim:Int)(implicitevidence$21:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "\/", "tail" : "(other: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.\/", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#\/[S](other:lamp.autograd.Variable)(implicitevidence$20:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "*", "tail" : "(other: Double)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.*", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#*[S](other:Double)(implicitevidence$19:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "*", "tail" : "(other: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.*", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#*[S](other:lamp.autograd.Variable)(implicitevidence$18:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "-", "tail" : "(other: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.-", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#-[S](other:lamp.autograd.Variable)(implicitevidence$17:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "+", "tail" : "(other: Double)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.+", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#+[S](other:Double)(implicitevidence$16:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "+", "tail" : "(other: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.+", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#+[S](other:lamp.autograd.Variable)(implicitevidence$15:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "cat", "tail" : "(other: Variable, dim: Long)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.cat", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#cat[S](other:lamp.autograd.Variable,dim:Long)(implicitevidence$14:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "cast", "tail" : "(precision: FloatingPointPrecision)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.cast", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#cast[S](precision:lamp.FloatingPointPrecision)(implicitevidence$13:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "makeBooleanMask", "tail" : "(q: Long)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.makeBooleanMask", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#makeBooleanMask[S](q:Long)(implicitevidence$12:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "maskSelect", "tail" : "(mask: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.maskSelect", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#maskSelect[S](mask:lamp.autograd.Variable)(implicitevidence$11:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "maskFill", "tail" : "(mask: Variable, fill: Double)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.maskFill", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#maskFill[S](mask:lamp.autograd.Variable,fill:Double)(implicitevidence$10:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "assign", "tail" : "(other: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.assign", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#assign[S](other:lamp.autograd.Variable)(implicitevidence$9:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "oneHot", "tail" : "(numClasses: Int)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.oneHot", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#oneHot[S](numClasses:Int)(implicitevidence$8:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "argmax", "tail" : "(dim: Long, keepDim: Boolean)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.argmax", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#argmax[S](dim:Long,keepDim:Boolean)(implicitevidence$7:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "indexSelect", "tail" : "(dim: Long, index: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.indexSelect", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#indexSelect[S](dim:Long,index:lamp.autograd.Variable)(implicitevidence$6:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "select", "tail" : "(dim: Long, index: Long)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.select", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#select[S](dim:Long,index:Long)(implicitevidence$5:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "t", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.t", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#t[S](implicitevidence$4:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "transpose", "tail" : "(dim1: Int, dim2: Int)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.transpose", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#transpose[S](dim1:Int,dim2:Int)(implicitevidence$3:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "zipBackward", "tail" : "(fn: (STen, STen) => Unit): (Variable, (STen, STen) => Unit)", "member" : "lamp.autograd.Variable.zipBackward", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#zipBackward(fn:(lamp.STen,lamp.STen)=>Unit):(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)", "kind" : "def"}, {"label" : "backprop", "tail" : "(): Unit", "member" : "lamp.autograd.Variable.backprop", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#backprop():Unit", "kind" : "def"}, {"label" : "graphMemoryAllocationReport", "tail" : "(): GraphMemoryAllocationReport", "member" : "lamp.autograd.Variable.graphMemoryAllocationReport", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#graphMemoryAllocationReport:lamp.autograd.GraphMemoryAllocationReport", "kind" : "def"}, {"label" : "wengert", "tail" : ": Seq[Variable]", "member" : "lamp.autograd.Variable.wengert", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#wengert:Seq[lamp.autograd.Variable]", "kind" : "lazy val"}, {"label" : "zeroGrad", "tail" : "(): Unit", "member" : "lamp.autograd.Variable.zeroGrad", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#zeroGrad():Unit", "kind" : "def"}, {"label" : "withGrad", "tail" : "(arg0: Sc[S]): ConstantWithGrad", "member" : "lamp.autograd.Variable.withGrad", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#withGrad[S](implicitevidence$2:lamp.Sc[S]):lamp.autograd.ConstantWithGrad", "kind" : "def"}, {"label" : "detached", "tail" : "(): Constant", "member" : "lamp.autograd.Variable.detached", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#detached:lamp.autograd.Constant", "kind" : "def"}, {"label" : "id", "tail" : ": UUID", "member" : "lamp.autograd.Variable.id", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#id:java.util.UUID", "kind" : "val"}, {"label" : "shape", "tail" : "(): List[Long]", "member" : "lamp.autograd.Variable.shape", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#shape:List[Long]", "kind" : "def"}, {"label" : "sizes", "tail" : ": List[Long]", "member" : "lamp.autograd.Variable.sizes", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#sizes:List[Long]", "kind" : "val"}, {"label" : "options", "tail" : "(arg0: Sc[S]): STenOptions", "member" : "lamp.autograd.Variable.options", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#options[S](implicitevidence$1:lamp.Sc[S]):lamp.STenOptions", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "lamp.autograd.Variable.toString", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#toString():String", "kind" : "def"}, {"label" : "needsGrad", "tail" : "(): Boolean", "member" : "lamp.autograd.Variable.needsGrad", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#needsGrad:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/ConstantWithoutGrad.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/autograd\/ConstantWithoutGrad.html", "kind" : "case class"}, {"name" : "lamp.autograd.ConstMult", "shortDescription" : "", "members_case class" : [{"label" : "value", "tail" : ": Variable", "member" : "lamp.autograd.ConstMult.value", "link" : "lamp\/autograd\/ConstMult.html#value:lamp.autograd.Variable", "kind" : "val"}, {"label" : "params", "tail" : ": List[(Variable, (STen, STen) => Unit)]", "member" : "lamp.autograd.ConstMult.params", "link" : "lamp\/autograd\/ConstMult.html#params:List[(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)]", "kind" : "val"}, {"member" : "lamp.autograd.ConstMult#<init>", "error" : "unsupported entity"}, {"label" : "b", "tail" : ": Double", "member" : "lamp.autograd.ConstMult.b", "link" : "lamp\/autograd\/ConstMult.html#b:Double", "kind" : "val"}, {"label" : "a", "tail" : ": Variable", "member" : "lamp.autograd.ConstMult.a", "link" : "lamp\/autograd\/ConstMult.html#a:lamp.autograd.Variable", "kind" : "val"}, {"label" : "scope", "tail" : ": Scope", "member" : "lamp.autograd.ConstMult.scope", "link" : "lamp\/autograd\/ConstMult.html#scope:lamp.Scope", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/autograd\/ConstMult.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/ConstMult.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/ConstMult.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/ConstMult.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/ConstMult.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/ConstMult.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/ConstMult.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/ConstMult.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/ConstMult.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/ConstMult.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/ConstMult.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/ConstMult.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/ConstMult.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/ConstMult.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/ConstMult.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/ConstMult.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/ConstMult.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/autograd\/ConstMult.html", "kind" : "case class"}, {"name" : "lamp.autograd.Conv1D", "shortDescription" : "1D convolution", "members_case class" : [{"label" : "value", "tail" : ": Variable", "member" : "lamp.autograd.Conv1D.value", "link" : "lamp\/autograd\/Conv1D.html#value:lamp.autograd.Variable", "kind" : "val"}, {"label" : "params", "tail" : ": List[(Variable, (STen, STen) => Unit)]", "member" : "lamp.autograd.Conv1D.params", "link" : "lamp\/autograd\/Conv1D.html#params:List[(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)]", "kind" : "val"}, {"label" : "outChannels", "tail" : ": Long", "member" : "lamp.autograd.Conv1D.outChannels", "link" : "lamp\/autograd\/Conv1D.html#outChannels:Long", "kind" : "val"}, {"label" : "kernelSize", "tail" : ": Long", "member" : "lamp.autograd.Conv1D.kernelSize", "link" : "lamp\/autograd\/Conv1D.html#kernelSize:Long", "kind" : "val"}, {"label" : "imageSize", "tail" : ": Long", "member" : "lamp.autograd.Conv1D.imageSize", "link" : "lamp\/autograd\/Conv1D.html#imageSize:Long", "kind" : "val"}, {"label" : "inputChannels", "tail" : ": Long", "member" : "lamp.autograd.Conv1D.inputChannels", "link" : "lamp\/autograd\/Conv1D.html#inputChannels:Long", "kind" : "val"}, {"label" : "batchSize", "tail" : ": Long", "member" : "lamp.autograd.Conv1D.batchSize", "link" : "lamp\/autograd\/Conv1D.html#batchSize:Long", "kind" : "val"}, {"member" : "lamp.autograd.Conv1D#<init>", "error" : "unsupported entity"}, {"label" : "groups", "tail" : ": Long", "member" : "lamp.autograd.Conv1D.groups", "link" : "lamp\/autograd\/Conv1D.html#groups:Long", "kind" : "val"}, {"label" : "dilation", "tail" : ": Long", "member" : "lamp.autograd.Conv1D.dilation", "link" : "lamp\/autograd\/Conv1D.html#dilation:Long", "kind" : "val"}, {"label" : "padding", "tail" : ": Long", "member" : "lamp.autograd.Conv1D.padding", "link" : "lamp\/autograd\/Conv1D.html#padding:Long", "kind" : "val"}, {"label" : "stride", "tail" : ": Long", "member" : "lamp.autograd.Conv1D.stride", "link" : "lamp\/autograd\/Conv1D.html#stride:Long", "kind" : "val"}, {"label" : "bias", "tail" : ": Variable", "member" : "lamp.autograd.Conv1D.bias", "link" : "lamp\/autograd\/Conv1D.html#bias:lamp.autograd.Variable", "kind" : "val"}, {"label" : "weight", "tail" : ": Variable", "member" : "lamp.autograd.Conv1D.weight", "link" : "lamp\/autograd\/Conv1D.html#weight:lamp.autograd.Variable", "kind" : "val"}, {"label" : "input", "tail" : ": Variable", "member" : "lamp.autograd.Conv1D.input", "link" : "lamp\/autograd\/Conv1D.html#input:lamp.autograd.Variable", "kind" : "val"}, {"label" : "scope", "tail" : ": Scope", "member" : "lamp.autograd.Conv1D.scope", "link" : "lamp\/autograd\/Conv1D.html#scope:lamp.Scope", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/autograd\/Conv1D.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/Conv1D.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/Conv1D.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/Conv1D.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/Conv1D.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/Conv1D.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/Conv1D.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/Conv1D.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Conv1D.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Conv1D.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Conv1D.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/Conv1D.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/Conv1D.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/Conv1D.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/Conv1D.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/Conv1D.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/Conv1D.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/autograd\/Conv1D.html", "kind" : "case class"}, {"name" : "lamp.autograd.Conv2D", "shortDescription" : "2D convolution", "members_case class" : [{"label" : "value", "tail" : ": Variable", "member" : "lamp.autograd.Conv2D.value", "link" : "lamp\/autograd\/Conv2D.html#value:lamp.autograd.Variable", "kind" : "val"}, {"label" : "params", "tail" : ": List[(Variable, (STen, STen) => Unit)]", "member" : "lamp.autograd.Conv2D.params", "link" : "lamp\/autograd\/Conv2D.html#params:List[(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)]", "kind" : "val"}, {"label" : "outChannels", "tail" : ": Long", "member" : "lamp.autograd.Conv2D.outChannels", "link" : "lamp\/autograd\/Conv2D.html#outChannels:Long", "kind" : "val"}, {"label" : "kernelSize", "tail" : ": Long", "member" : "lamp.autograd.Conv2D.kernelSize", "link" : "lamp\/autograd\/Conv2D.html#kernelSize:Long", "kind" : "val"}, {"label" : "imageWidth", "tail" : ": Long", "member" : "lamp.autograd.Conv2D.imageWidth", "link" : "lamp\/autograd\/Conv2D.html#imageWidth:Long", "kind" : "val"}, {"label" : "imageHeight", "tail" : ": Long", "member" : "lamp.autograd.Conv2D.imageHeight", "link" : "lamp\/autograd\/Conv2D.html#imageHeight:Long", "kind" : "val"}, {"label" : "inputChannels", "tail" : ": Long", "member" : "lamp.autograd.Conv2D.inputChannels", "link" : "lamp\/autograd\/Conv2D.html#inputChannels:Long", "kind" : "val"}, {"label" : "batchSize", "tail" : ": Long", "member" : "lamp.autograd.Conv2D.batchSize", "link" : "lamp\/autograd\/Conv2D.html#batchSize:Long", "kind" : "val"}, {"member" : "lamp.autograd.Conv2D#<init>", "error" : "unsupported entity"}, {"label" : "groups", "tail" : ": Long", "member" : "lamp.autograd.Conv2D.groups", "link" : "lamp\/autograd\/Conv2D.html#groups:Long", "kind" : "val"}, {"label" : "dilation", "tail" : ": Long", "member" : "lamp.autograd.Conv2D.dilation", "link" : "lamp\/autograd\/Conv2D.html#dilation:Long", "kind" : "val"}, {"label" : "padding", "tail" : ": Long", "member" : "lamp.autograd.Conv2D.padding", "link" : "lamp\/autograd\/Conv2D.html#padding:Long", "kind" : "val"}, {"label" : "stride", "tail" : ": Long", "member" : "lamp.autograd.Conv2D.stride", "link" : "lamp\/autograd\/Conv2D.html#stride:Long", "kind" : "val"}, {"label" : "bias", "tail" : ": Variable", "member" : "lamp.autograd.Conv2D.bias", "link" : "lamp\/autograd\/Conv2D.html#bias:lamp.autograd.Variable", "kind" : "val"}, {"label" : "weight", "tail" : ": Variable", "member" : "lamp.autograd.Conv2D.weight", "link" : "lamp\/autograd\/Conv2D.html#weight:lamp.autograd.Variable", "kind" : "val"}, {"label" : "input", "tail" : ": Variable", "member" : "lamp.autograd.Conv2D.input", "link" : "lamp\/autograd\/Conv2D.html#input:lamp.autograd.Variable", "kind" : "val"}, {"label" : "scope", "tail" : ": Scope", "member" : "lamp.autograd.Conv2D.scope", "link" : "lamp\/autograd\/Conv2D.html#scope:lamp.Scope", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/autograd\/Conv2D.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/Conv2D.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/Conv2D.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/Conv2D.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/Conv2D.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/Conv2D.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/Conv2D.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/Conv2D.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Conv2D.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Conv2D.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Conv2D.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/Conv2D.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/Conv2D.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/Conv2D.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/Conv2D.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/Conv2D.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/Conv2D.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/autograd\/Conv2D.html", "kind" : "case class"}, {"name" : "lamp.autograd.Conv2DTransposed", "shortDescription" : "", "members_case class" : [{"label" : "value", "tail" : ": Variable", "member" : "lamp.autograd.Conv2DTransposed.value", "link" : "lamp\/autograd\/Conv2DTransposed.html#value:lamp.autograd.Variable", "kind" : "val"}, {"label" : "params", "tail" : ": List[(Variable, (STen, STen) => Unit)]", "member" : "lamp.autograd.Conv2DTransposed.params", "link" : "lamp\/autograd\/Conv2DTransposed.html#params:List[(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)]", "kind" : "val"}, {"label" : "outChannels", "tail" : ": Long", "member" : "lamp.autograd.Conv2DTransposed.outChannels", "link" : "lamp\/autograd\/Conv2DTransposed.html#outChannels:Long", "kind" : "val"}, {"label" : "kernelSize", "tail" : ": Long", "member" : "lamp.autograd.Conv2DTransposed.kernelSize", "link" : "lamp\/autograd\/Conv2DTransposed.html#kernelSize:Long", "kind" : "val"}, {"label" : "imageWidth", "tail" : ": Long", "member" : "lamp.autograd.Conv2DTransposed.imageWidth", "link" : "lamp\/autograd\/Conv2DTransposed.html#imageWidth:Long", "kind" : "val"}, {"label" : "imageHeight", "tail" : ": Long", "member" : "lamp.autograd.Conv2DTransposed.imageHeight", "link" : "lamp\/autograd\/Conv2DTransposed.html#imageHeight:Long", "kind" : "val"}, {"label" : "inputChannels", "tail" : ": Long", "member" : "lamp.autograd.Conv2DTransposed.inputChannels", "link" : "lamp\/autograd\/Conv2DTransposed.html#inputChannels:Long", "kind" : "val"}, {"label" : "batchSize", "tail" : ": Long", "member" : "lamp.autograd.Conv2DTransposed.batchSize", "link" : "lamp\/autograd\/Conv2DTransposed.html#batchSize:Long", "kind" : "val"}, {"member" : "lamp.autograd.Conv2DTransposed#<init>", "error" : "unsupported entity"}, {"label" : "dilation", "tail" : ": Long", "member" : "lamp.autograd.Conv2DTransposed.dilation", "link" : "lamp\/autograd\/Conv2DTransposed.html#dilation:Long", "kind" : "val"}, {"label" : "padding", "tail" : ": Long", "member" : "lamp.autograd.Conv2DTransposed.padding", "link" : "lamp\/autograd\/Conv2DTransposed.html#padding:Long", "kind" : "val"}, {"label" : "stride", "tail" : ": Long", "member" : "lamp.autograd.Conv2DTransposed.stride", "link" : "lamp\/autograd\/Conv2DTransposed.html#stride:Long", "kind" : "val"}, {"label" : "bias", "tail" : ": Variable", "member" : "lamp.autograd.Conv2DTransposed.bias", "link" : "lamp\/autograd\/Conv2DTransposed.html#bias:lamp.autograd.Variable", "kind" : "val"}, {"label" : "weight", "tail" : ": Variable", "member" : "lamp.autograd.Conv2DTransposed.weight", "link" : "lamp\/autograd\/Conv2DTransposed.html#weight:lamp.autograd.Variable", "kind" : "val"}, {"label" : "input", "tail" : ": Variable", "member" : "lamp.autograd.Conv2DTransposed.input", "link" : "lamp\/autograd\/Conv2DTransposed.html#input:lamp.autograd.Variable", "kind" : "val"}, {"label" : "scope", "tail" : ": Scope", "member" : "lamp.autograd.Conv2DTransposed.scope", "link" : "lamp\/autograd\/Conv2DTransposed.html#scope:lamp.Scope", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/autograd\/Conv2DTransposed.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/Conv2DTransposed.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/Conv2DTransposed.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/Conv2DTransposed.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/Conv2DTransposed.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/Conv2DTransposed.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/Conv2DTransposed.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/Conv2DTransposed.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Conv2DTransposed.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Conv2DTransposed.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Conv2DTransposed.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/Conv2DTransposed.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/Conv2DTransposed.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/Conv2DTransposed.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/Conv2DTransposed.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/Conv2DTransposed.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/Conv2DTransposed.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/autograd\/Conv2DTransposed.html", "kind" : "case class"}, {"name" : "lamp.autograd.Cos", "shortDescription" : "", "members_case class" : [{"label" : "value", "tail" : ": Variable", "member" : "lamp.autograd.Cos.value", "link" : "lamp\/autograd\/Cos.html#value:lamp.autograd.Variable", "kind" : "val"}, {"label" : "params", "tail" : ": List[(Variable, (STen, STen) => Unit)]", "member" : "lamp.autograd.Cos.params", "link" : "lamp\/autograd\/Cos.html#params:List[(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)]", "kind" : "val"}, {"member" : "lamp.autograd.Cos#<init>", "error" : "unsupported entity"}, {"label" : "a", "tail" : ": Variable", "member" : "lamp.autograd.Cos.a", "link" : "lamp\/autograd\/Cos.html#a:lamp.autograd.Variable", "kind" : "val"}, {"label" : "scope", "tail" : ": Scope", "member" : "lamp.autograd.Cos.scope", "link" : "lamp\/autograd\/Cos.html#scope:lamp.Scope", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/autograd\/Cos.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/Cos.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/Cos.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/Cos.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/Cos.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/Cos.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/Cos.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/Cos.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Cos.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Cos.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Cos.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/Cos.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/Cos.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/Cos.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/Cos.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/Cos.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/Cos.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/autograd\/Cos.html", "kind" : "case class"}, {"name" : "lamp.autograd.Cross", "shortDescription" : "", "members_case class" : [{"label" : "value", "tail" : ": Variable", "member" : "lamp.autograd.Cross.value", "link" : "lamp\/autograd\/Cross.html#value:lamp.autograd.Variable", "kind" : "val"}, {"label" : "params", "tail" : ": List[(Variable, (STen, STen) => Unit)]", "member" : "lamp.autograd.Cross.params", "link" : "lamp\/autograd\/Cross.html#params:List[(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)]", "kind" : "val"}, {"member" : "lamp.autograd.Cross#<init>", "error" : "unsupported entity"}, {"label" : "dim", "tail" : ": Int", "member" : "lamp.autograd.Cross.dim", "link" : "lamp\/autograd\/Cross.html#dim:Int", "kind" : "val"}, {"label" : "b", "tail" : ": Variable", "member" : "lamp.autograd.Cross.b", "link" : "lamp\/autograd\/Cross.html#b:lamp.autograd.Variable", "kind" : "val"}, {"label" : "a", "tail" : ": Variable", "member" : "lamp.autograd.Cross.a", "link" : "lamp\/autograd\/Cross.html#a:lamp.autograd.Variable", "kind" : "val"}, {"label" : "scope", "tail" : ": Scope", "member" : "lamp.autograd.Cross.scope", "link" : "lamp\/autograd\/Cross.html#scope:lamp.Scope", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/autograd\/Cross.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/Cross.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/Cross.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/Cross.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/Cross.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/Cross.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/Cross.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/Cross.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Cross.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Cross.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Cross.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/Cross.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/Cross.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/Cross.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/Cross.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/Cross.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/Cross.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/autograd\/Cross.html", "kind" : "case class"}, {"name" : "lamp.autograd.Diag", "shortDescription" : "", "members_case class" : [{"label" : "value", "tail" : ": Variable", "member" : "lamp.autograd.Diag.value", "link" : "lamp\/autograd\/Diag.html#value:lamp.autograd.Variable", "kind" : "val"}, {"label" : "params", "tail" : ": List[(Variable, (STen, STen) => Unit)]", "member" : "lamp.autograd.Diag.params", "link" : "lamp\/autograd\/Diag.html#params:List[(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)]", "kind" : "val"}, {"member" : "lamp.autograd.Diag#<init>", "error" : "unsupported entity"}, {"label" : "diagonal", "tail" : ": Long", "member" : "lamp.autograd.Diag.diagonal", "link" : "lamp\/autograd\/Diag.html#diagonal:Long", "kind" : "val"}, {"label" : "a", "tail" : ": Variable", "member" : "lamp.autograd.Diag.a", "link" : "lamp\/autograd\/Diag.html#a:lamp.autograd.Variable", "kind" : "val"}, {"label" : "scope", "tail" : ": Scope", "member" : "lamp.autograd.Diag.scope", "link" : "lamp\/autograd\/Diag.html#scope:lamp.Scope", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/autograd\/Diag.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/Diag.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/Diag.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/Diag.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/Diag.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/Diag.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/Diag.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/Diag.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Diag.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Diag.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Diag.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/Diag.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/Diag.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/Diag.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/Diag.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/Diag.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/Diag.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/autograd\/Diag.html", "kind" : "case class"}, {"name" : "lamp.autograd.Div", "shortDescription" : "", "members_case class" : [{"label" : "value", "tail" : ": Variable", "member" : "lamp.autograd.Div.value", "link" : "lamp\/autograd\/Div.html#value:lamp.autograd.Variable", "kind" : "val"}, {"label" : "params", "tail" : ": List[(Variable, (STen, STen) => Unit)]", "member" : "lamp.autograd.Div.params", "link" : "lamp\/autograd\/Div.html#params:List[(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)]", "kind" : "val"}, {"member" : "lamp.autograd.Div#<init>", "error" : "unsupported entity"}, {"label" : "b", "tail" : ": Variable", "member" : "lamp.autograd.Div.b", "link" : "lamp\/autograd\/Div.html#b:lamp.autograd.Variable", "kind" : "val"}, {"label" : "a", "tail" : ": Variable", "member" : "lamp.autograd.Div.a", "link" : "lamp\/autograd\/Div.html#a:lamp.autograd.Variable", "kind" : "val"}, {"label" : "scope", "tail" : ": Scope", "member" : "lamp.autograd.Div.scope", "link" : "lamp\/autograd\/Div.html#scope:lamp.Scope", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/autograd\/Div.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/Div.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/Div.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/Div.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/Div.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/Div.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/Div.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/Div.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Div.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Div.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Div.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/Div.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/Div.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/Div.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/Div.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/Div.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/Div.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/autograd\/Div.html", "kind" : "case class"}, {"name" : "lamp.autograd.Dropout", "shortDescription" : "", "members_case class" : [{"label" : "value", "tail" : ": Variable", "member" : "lamp.autograd.Dropout.value", "link" : "lamp\/autograd\/Dropout.html#value:lamp.autograd.Variable", "kind" : "val"}, {"label" : "mask", "tail" : ": STen", "member" : "lamp.autograd.Dropout.mask", "link" : "lamp\/autograd\/Dropout.html#mask:lamp.STen", "kind" : "val"}, {"label" : "params", "tail" : ": List[(Variable, (STen, STen) => Unit)]", "member" : "lamp.autograd.Dropout.params", "link" : "lamp\/autograd\/Dropout.html#params:List[(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)]", "kind" : "val"}, {"member" : "lamp.autograd.Dropout#<init>", "error" : "unsupported entity"}, {"label" : "train", "tail" : ": Boolean", "member" : "lamp.autograd.Dropout.train", "link" : "lamp\/autograd\/Dropout.html#train:Boolean", "kind" : "val"}, {"label" : "prob", "tail" : ": Double", "member" : "lamp.autograd.Dropout.prob", "link" : "lamp\/autograd\/Dropout.html#prob:Double", "kind" : "val"}, {"label" : "a", "tail" : ": Variable", "member" : "lamp.autograd.Dropout.a", "link" : "lamp\/autograd\/Dropout.html#a:lamp.autograd.Variable", "kind" : "val"}, {"label" : "scope", "tail" : ": Scope", "member" : "lamp.autograd.Dropout.scope", "link" : "lamp\/autograd\/Dropout.html#scope:lamp.Scope", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/autograd\/Dropout.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/Dropout.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/Dropout.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/Dropout.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/Dropout.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/Dropout.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/Dropout.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/Dropout.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Dropout.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Dropout.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Dropout.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/Dropout.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/Dropout.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/Dropout.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/Dropout.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/Dropout.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/Dropout.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/autograd\/Dropout.html", "kind" : "case class"}, {"name" : "lamp.autograd.Embedding", "shortDescription" : "", "members_case class" : [{"label" : "value", "tail" : ": Variable", "member" : "lamp.autograd.Embedding.value", "link" : "lamp\/autograd\/Embedding.html#value:lamp.autograd.Variable", "kind" : "val"}, {"label" : "params", "tail" : ": List[(Variable, (STen, STen) => Unit)]", "member" : "lamp.autograd.Embedding.params", "link" : "lamp\/autograd\/Embedding.html#params:List[(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)]", "kind" : "val"}, {"member" : "lamp.autograd.Embedding#<init>", "error" : "unsupported entity"}, {"label" : "weight", "tail" : ": Variable", "member" : "lamp.autograd.Embedding.weight", "link" : "lamp\/autograd\/Embedding.html#weight:lamp.autograd.Variable", "kind" : "val"}, {"label" : "input", "tail" : ": Variable", "member" : "lamp.autograd.Embedding.input", "link" : "lamp\/autograd\/Embedding.html#input:lamp.autograd.Variable", "kind" : "val"}, {"label" : "scope", "tail" : ": Scope", "member" : "lamp.autograd.Embedding.scope", "link" : "lamp\/autograd\/Embedding.html#scope:lamp.Scope", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/autograd\/Embedding.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/Embedding.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/Embedding.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/Embedding.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/Embedding.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/Embedding.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/Embedding.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/Embedding.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Embedding.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Embedding.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Embedding.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/Embedding.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/Embedding.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/Embedding.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/Embedding.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/Embedding.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/Embedding.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/autograd\/Embedding.html", "kind" : "case class"}, {"name" : "lamp.autograd.EqWhere", "shortDescription" : "", "members_case class" : [{"label" : "value", "tail" : ": Variable", "member" : "lamp.autograd.EqWhere.value", "link" : "lamp\/autograd\/EqWhere.html#value:lamp.autograd.Variable", "kind" : "val"}, {"label" : "params", "tail" : ": List[Nothing]", "member" : "lamp.autograd.EqWhere.params", "link" : "lamp\/autograd\/EqWhere.html#params:List[Nothing]", "kind" : "val"}, {"member" : "lamp.autograd.EqWhere#<init>", "error" : "unsupported entity"}, {"label" : "b", "tail" : ": Long", "member" : "lamp.autograd.EqWhere.b", "link" : "lamp\/autograd\/EqWhere.html#b:Long", "kind" : "val"}, {"label" : "a", "tail" : ": Variable", "member" : "lamp.autograd.EqWhere.a", "link" : "lamp\/autograd\/EqWhere.html#a:lamp.autograd.Variable", "kind" : "val"}, {"label" : "scope", "tail" : ": Scope", "member" : "lamp.autograd.EqWhere.scope", "link" : "lamp\/autograd\/EqWhere.html#scope:lamp.Scope", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/autograd\/EqWhere.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/EqWhere.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/EqWhere.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/EqWhere.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/EqWhere.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/EqWhere.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/EqWhere.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/EqWhere.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/EqWhere.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/EqWhere.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/EqWhere.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/EqWhere.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/EqWhere.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/EqWhere.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/EqWhere.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/EqWhere.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/EqWhere.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/autograd\/EqWhere.html", "kind" : "case class"}, {"name" : "lamp.autograd.EuclideanDistance", "shortDescription" : "", "members_case class" : [{"label" : "value", "tail" : ": Variable", "member" : "lamp.autograd.EuclideanDistance.value", "link" : "lamp\/autograd\/EuclideanDistance.html#value:lamp.autograd.Variable", "kind" : "val"}, {"label" : "norm", "tail" : ": STen", "member" : "lamp.autograd.EuclideanDistance.norm", "link" : "lamp\/autograd\/EuclideanDistance.html#norm:lamp.STen", "kind" : "val"}, {"label" : "diff", "tail" : ": STen", "member" : "lamp.autograd.EuclideanDistance.diff", "link" : "lamp\/autograd\/EuclideanDistance.html#diff:lamp.STen", "kind" : "val"}, {"label" : "params", "tail" : ": List[(Variable, (STen, STen) => Unit)]", "member" : "lamp.autograd.EuclideanDistance.params", "link" : "lamp\/autograd\/EuclideanDistance.html#params:List[(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)]", "kind" : "val"}, {"member" : "lamp.autograd.EuclideanDistance#<init>", "error" : "unsupported entity"}, {"label" : "dim", "tail" : ": Int", "member" : "lamp.autograd.EuclideanDistance.dim", "link" : "lamp\/autograd\/EuclideanDistance.html#dim:Int", "kind" : "val"}, {"label" : "b", "tail" : ": Variable", "member" : "lamp.autograd.EuclideanDistance.b", "link" : "lamp\/autograd\/EuclideanDistance.html#b:lamp.autograd.Variable", "kind" : "val"}, {"label" : "a", "tail" : ": Variable", "member" : "lamp.autograd.EuclideanDistance.a", "link" : "lamp\/autograd\/EuclideanDistance.html#a:lamp.autograd.Variable", "kind" : "val"}, {"label" : "scope", "tail" : ": Scope", "member" : "lamp.autograd.EuclideanDistance.scope", "link" : "lamp\/autograd\/EuclideanDistance.html#scope:lamp.Scope", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/autograd\/EuclideanDistance.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/EuclideanDistance.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/EuclideanDistance.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/EuclideanDistance.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/EuclideanDistance.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/EuclideanDistance.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/EuclideanDistance.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/EuclideanDistance.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/EuclideanDistance.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/EuclideanDistance.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/EuclideanDistance.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/EuclideanDistance.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/EuclideanDistance.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/EuclideanDistance.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/EuclideanDistance.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/EuclideanDistance.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/EuclideanDistance.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/autograd\/EuclideanDistance.html", "kind" : "case class"}, {"name" : "lamp.autograd.Exp", "shortDescription" : "", "members_case class" : [{"label" : "value", "tail" : ": Variable", "member" : "lamp.autograd.Exp.value", "link" : "lamp\/autograd\/Exp.html#value:lamp.autograd.Variable", "kind" : "val"}, {"label" : "params", "tail" : ": List[(Variable, (STen, STen) => Unit)]", "member" : "lamp.autograd.Exp.params", "link" : "lamp\/autograd\/Exp.html#params:List[(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)]", "kind" : "val"}, {"member" : "lamp.autograd.Exp#<init>", "error" : "unsupported entity"}, {"label" : "a", "tail" : ": Variable", "member" : "lamp.autograd.Exp.a", "link" : "lamp\/autograd\/Exp.html#a:lamp.autograd.Variable", "kind" : "val"}, {"label" : "scope", "tail" : ": Scope", "member" : "lamp.autograd.Exp.scope", "link" : "lamp\/autograd\/Exp.html#scope:lamp.Scope", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/autograd\/Exp.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/Exp.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/Exp.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/Exp.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/Exp.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/Exp.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/Exp.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/Exp.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Exp.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Exp.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Exp.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/Exp.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/Exp.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/Exp.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/Exp.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/Exp.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/Exp.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/autograd\/Exp.html", "kind" : "case class"}, {"name" : "lamp.autograd.Expand", "shortDescription" : "", "members_case class" : [{"label" : "value", "tail" : ": Variable", "member" : "lamp.autograd.Expand.value", "link" : "lamp\/autograd\/Expand.html#value:lamp.autograd.Variable", "kind" : "val"}, {"label" : "params", "tail" : ": List[(Variable, (STen, STen) => Unit)]", "member" : "lamp.autograd.Expand.params", "link" : "lamp\/autograd\/Expand.html#params:List[(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)]", "kind" : "val"}, {"member" : "lamp.autograd.Expand#<init>", "error" : "unsupported entity"}, {"label" : "shape", "tail" : ": List[Long]", "member" : "lamp.autograd.Expand.shape", "link" : "lamp\/autograd\/Expand.html#shape:List[Long]", "kind" : "val"}, {"label" : "a", "tail" : ": Variable", "member" : "lamp.autograd.Expand.a", "link" : "lamp\/autograd\/Expand.html#a:lamp.autograd.Variable", "kind" : "val"}, {"label" : "scope", "tail" : ": Scope", "member" : "lamp.autograd.Expand.scope", "link" : "lamp\/autograd\/Expand.html#scope:lamp.Scope", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/autograd\/Expand.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/Expand.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/Expand.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/Expand.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/Expand.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/Expand.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/Expand.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/Expand.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Expand.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Expand.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Expand.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/Expand.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/Expand.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/Expand.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/Expand.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/Expand.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/Expand.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/autograd\/Expand.html", "kind" : "case class"}, {"name" : "lamp.autograd.ExpandAs", "shortDescription" : "", "members_case class" : [{"label" : "value", "tail" : ": Variable", "member" : "lamp.autograd.ExpandAs.value", "link" : "lamp\/autograd\/ExpandAs.html#value:lamp.autograd.Variable", "kind" : "val"}, {"label" : "params", "tail" : ": List[(Variable, (STen, STen) => Unit)]", "member" : "lamp.autograd.ExpandAs.params", "link" : "lamp\/autograd\/ExpandAs.html#params:List[(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)]", "kind" : "val"}, {"member" : "lamp.autograd.ExpandAs#<init>", "error" : "unsupported entity"}, {"label" : "as", "tail" : ": STen", "member" : "lamp.autograd.ExpandAs.as", "link" : "lamp\/autograd\/ExpandAs.html#as:lamp.STen", "kind" : "val"}, {"label" : "a", "tail" : ": Variable", "member" : "lamp.autograd.ExpandAs.a", "link" : "lamp\/autograd\/ExpandAs.html#a:lamp.autograd.Variable", "kind" : "val"}, {"label" : "scope", "tail" : ": Scope", "member" : "lamp.autograd.ExpandAs.scope", "link" : "lamp\/autograd\/ExpandAs.html#scope:lamp.Scope", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/autograd\/ExpandAs.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/ExpandAs.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/ExpandAs.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/ExpandAs.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/ExpandAs.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/ExpandAs.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/ExpandAs.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/ExpandAs.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/ExpandAs.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/ExpandAs.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/ExpandAs.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/ExpandAs.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/ExpandAs.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/ExpandAs.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/ExpandAs.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/ExpandAs.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/ExpandAs.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/autograd\/ExpandAs.html", "kind" : "case class"}, {"name" : "lamp.autograd.Flatten", "shortDescription" : "", "members_case class" : [{"label" : "value", "tail" : ": Variable", "member" : "lamp.autograd.Flatten.value", "link" : "lamp\/autograd\/Flatten.html#value:lamp.autograd.Variable", "kind" : "val"}, {"label" : "params", "tail" : ": List[(Variable, (STen, STen) => Unit)]", "member" : "lamp.autograd.Flatten.params", "link" : "lamp\/autograd\/Flatten.html#params:List[(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)]", "kind" : "val"}, {"member" : "lamp.autograd.Flatten#<init>", "error" : "unsupported entity"}, {"label" : "endDim", "tail" : ": Int", "member" : "lamp.autograd.Flatten.endDim", "link" : "lamp\/autograd\/Flatten.html#endDim:Int", "kind" : "val"}, {"label" : "startDim", "tail" : ": Int", "member" : "lamp.autograd.Flatten.startDim", "link" : "lamp\/autograd\/Flatten.html#startDim:Int", "kind" : "val"}, {"label" : "input", "tail" : ": Variable", "member" : "lamp.autograd.Flatten.input", "link" : "lamp\/autograd\/Flatten.html#input:lamp.autograd.Variable", "kind" : "val"}, {"label" : "scope", "tail" : ": Scope", "member" : "lamp.autograd.Flatten.scope", "link" : "lamp\/autograd\/Flatten.html#scope:lamp.Scope", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/autograd\/Flatten.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/Flatten.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/Flatten.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/Flatten.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/Flatten.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/Flatten.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/Flatten.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/Flatten.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Flatten.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Flatten.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Flatten.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/Flatten.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/Flatten.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/Flatten.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/Flatten.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/Flatten.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/Flatten.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/autograd\/Flatten.html", "kind" : "case class"}, {"name" : "lamp.autograd.Gelu", "shortDescription" : "", "members_case class" : [{"label" : "value", "tail" : ": Variable", "member" : "lamp.autograd.Gelu.value", "link" : "lamp\/autograd\/Gelu.html#value:lamp.autograd.Variable", "kind" : "val"}, {"label" : "params", "tail" : ": List[(Variable, (STen, STen) => Unit)]", "member" : "lamp.autograd.Gelu.params", "link" : "lamp\/autograd\/Gelu.html#params:List[(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)]", "kind" : "val"}, {"member" : "lamp.autograd.Gelu#<init>", "error" : "unsupported entity"}, {"label" : "a", "tail" : ": Variable", "member" : "lamp.autograd.Gelu.a", "link" : "lamp\/autograd\/Gelu.html#a:lamp.autograd.Variable", "kind" : "val"}, {"label" : "scope", "tail" : ": Scope", "member" : "lamp.autograd.Gelu.scope", "link" : "lamp\/autograd\/Gelu.html#scope:lamp.Scope", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/autograd\/Gelu.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/Gelu.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/Gelu.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/Gelu.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/Gelu.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/Gelu.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/Gelu.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/Gelu.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Gelu.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Gelu.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Gelu.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/Gelu.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/Gelu.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/Gelu.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/Gelu.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/Gelu.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/Gelu.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/autograd\/Gelu.html", "kind" : "case class"}, {"name" : "lamp.autograd.GraphMemoryAllocationReport", "shortDescription" : "", "members_case class" : [{"label" : "toString", "tail" : "(): String", "member" : "lamp.autograd.GraphMemoryAllocationReport.toString", "link" : "lamp\/autograd\/GraphMemoryAllocationReport.html#toString():String", "kind" : "def"}, {"member" : "lamp.autograd.GraphMemoryAllocationReport#<init>", "error" : "unsupported entity"}, {"label" : "intermediateTensorStorage", "tail" : ": Long", "member" : "lamp.autograd.GraphMemoryAllocationReport.intermediateTensorStorage", "link" : "lamp\/autograd\/GraphMemoryAllocationReport.html#intermediateTensorStorage:Long", "kind" : "val"}, {"label" : "intermediateTensorCount", "tail" : ": Long", "member" : "lamp.autograd.GraphMemoryAllocationReport.intermediateTensorCount", "link" : "lamp\/autograd\/GraphMemoryAllocationReport.html#intermediateTensorCount:Long", "kind" : "val"}, {"label" : "constantTensorStorage", "tail" : ": Long", "member" : "lamp.autograd.GraphMemoryAllocationReport.constantTensorStorage", "link" : "lamp\/autograd\/GraphMemoryAllocationReport.html#constantTensorStorage:Long", "kind" : "val"}, {"label" : "constantTensorCount", "tail" : ": Long", "member" : "lamp.autograd.GraphMemoryAllocationReport.constantTensorCount", "link" : "lamp\/autograd\/GraphMemoryAllocationReport.html#constantTensorCount:Long", "kind" : "val"}, {"label" : "parameterTensorStorage", "tail" : ": Long", "member" : "lamp.autograd.GraphMemoryAllocationReport.parameterTensorStorage", "link" : "lamp\/autograd\/GraphMemoryAllocationReport.html#parameterTensorStorage:Long", "kind" : "val"}, {"label" : "parameterTensorCount", "tail" : ": Long", "member" : "lamp.autograd.GraphMemoryAllocationReport.parameterTensorCount", "link" : "lamp\/autograd\/GraphMemoryAllocationReport.html#parameterTensorCount:Long", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/autograd\/GraphMemoryAllocationReport.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/GraphMemoryAllocationReport.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/GraphMemoryAllocationReport.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/GraphMemoryAllocationReport.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/GraphMemoryAllocationReport.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/GraphMemoryAllocationReport.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/GraphMemoryAllocationReport.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/GraphMemoryAllocationReport.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/GraphMemoryAllocationReport.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/GraphMemoryAllocationReport.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/GraphMemoryAllocationReport.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/GraphMemoryAllocationReport.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/GraphMemoryAllocationReport.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/GraphMemoryAllocationReport.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/GraphMemoryAllocationReport.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/GraphMemoryAllocationReport.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/GraphMemoryAllocationReport.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/autograd\/GraphMemoryAllocationReport.html", "kind" : "case class"}, {"name" : "lamp.autograd.IndexAdd", "shortDescription" : "", "members_case class" : [{"label" : "value", "tail" : ": Variable", "member" : "lamp.autograd.IndexAdd.value", "link" : "lamp\/autograd\/IndexAdd.html#value:lamp.autograd.Variable", "kind" : "val"}, {"label" : "params", "tail" : ": List[(Variable, (STen, STen) => Unit)]", "member" : "lamp.autograd.IndexAdd.params", "link" : "lamp\/autograd\/IndexAdd.html#params:List[(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)]", "kind" : "val"}, {"member" : "lamp.autograd.IndexAdd#<init>", "error" : "unsupported entity"}, {"label" : "maxIndex", "tail" : ": Long", "member" : "lamp.autograd.IndexAdd.maxIndex", "link" : "lamp\/autograd\/IndexAdd.html#maxIndex:Long", "kind" : "val"}, {"label" : "dim", "tail" : ": Int", "member" : "lamp.autograd.IndexAdd.dim", "link" : "lamp\/autograd\/IndexAdd.html#dim:Int", "kind" : "val"}, {"label" : "index", "tail" : ": Variable", "member" : "lamp.autograd.IndexAdd.index", "link" : "lamp\/autograd\/IndexAdd.html#index:lamp.autograd.Variable", "kind" : "val"}, {"label" : "src", "tail" : ": Variable", "member" : "lamp.autograd.IndexAdd.src", "link" : "lamp\/autograd\/IndexAdd.html#src:lamp.autograd.Variable", "kind" : "val"}, {"label" : "scope", "tail" : ": Scope", "member" : "lamp.autograd.IndexAdd.scope", "link" : "lamp\/autograd\/IndexAdd.html#scope:lamp.Scope", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/autograd\/IndexAdd.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/IndexAdd.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/IndexAdd.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/IndexAdd.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/IndexAdd.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/IndexAdd.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/IndexAdd.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/IndexAdd.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/IndexAdd.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/IndexAdd.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/IndexAdd.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/IndexAdd.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/IndexAdd.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/IndexAdd.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/IndexAdd.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/IndexAdd.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/IndexAdd.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/autograd\/IndexAdd.html", "kind" : "case class"}, {"name" : "lamp.autograd.IndexAddToTarget", "shortDescription" : "", "members_case class" : [{"label" : "value", "tail" : ": Variable", "member" : "lamp.autograd.IndexAddToTarget.value", "link" : "lamp\/autograd\/IndexAddToTarget.html#value:lamp.autograd.Variable", "kind" : "val"}, {"label" : "params", "tail" : ": List[(Variable, (STen, STen) => Unit)]", "member" : "lamp.autograd.IndexAddToTarget.params", "link" : "lamp\/autograd\/IndexAddToTarget.html#params:List[(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)]", "kind" : "val"}, {"member" : "lamp.autograd.IndexAddToTarget#<init>", "error" : "unsupported entity"}, {"label" : "dim", "tail" : ": Int", "member" : "lamp.autograd.IndexAddToTarget.dim", "link" : "lamp\/autograd\/IndexAddToTarget.html#dim:Int", "kind" : "val"}, {"label" : "index", "tail" : ": Variable", "member" : "lamp.autograd.IndexAddToTarget.index", "link" : "lamp\/autograd\/IndexAddToTarget.html#index:lamp.autograd.Variable", "kind" : "val"}, {"label" : "src", "tail" : ": Variable", "member" : "lamp.autograd.IndexAddToTarget.src", "link" : "lamp\/autograd\/IndexAddToTarget.html#src:lamp.autograd.Variable", "kind" : "val"}, {"label" : "target", "tail" : ": Variable", "member" : "lamp.autograd.IndexAddToTarget.target", "link" : "lamp\/autograd\/IndexAddToTarget.html#target:lamp.autograd.Variable", "kind" : "val"}, {"label" : "scope", "tail" : ": Scope", "member" : "lamp.autograd.IndexAddToTarget.scope", "link" : "lamp\/autograd\/IndexAddToTarget.html#scope:lamp.Scope", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/autograd\/IndexAddToTarget.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/IndexAddToTarget.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/IndexAddToTarget.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/IndexAddToTarget.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/IndexAddToTarget.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/IndexAddToTarget.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/IndexAddToTarget.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/IndexAddToTarget.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/IndexAddToTarget.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/IndexAddToTarget.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/IndexAddToTarget.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/IndexAddToTarget.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/IndexAddToTarget.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/IndexAddToTarget.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/IndexAddToTarget.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/IndexAddToTarget.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/IndexAddToTarget.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/autograd\/IndexAddToTarget.html", "kind" : "case class"}, {"name" : "lamp.autograd.IndexFill", "shortDescription" : "", "members_case class" : [{"label" : "value", "tail" : ": Variable", "member" : "lamp.autograd.IndexFill.value", "link" : "lamp\/autograd\/IndexFill.html#value:lamp.autograd.Variable", "kind" : "val"}, {"label" : "params", "tail" : ": List[(Variable, (STen, STen) => Unit)]", "member" : "lamp.autograd.IndexFill.params", "link" : "lamp\/autograd\/IndexFill.html#params:List[(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)]", "kind" : "val"}, {"member" : "lamp.autograd.IndexFill#<init>", "error" : "unsupported entity"}, {"label" : "fill", "tail" : ": Double", "member" : "lamp.autograd.IndexFill.fill", "link" : "lamp\/autograd\/IndexFill.html#fill:Double", "kind" : "val"}, {"label" : "index", "tail" : ": Variable", "member" : "lamp.autograd.IndexFill.index", "link" : "lamp\/autograd\/IndexFill.html#index:lamp.autograd.Variable", "kind" : "val"}, {"label" : "dim", "tail" : ": Long", "member" : "lamp.autograd.IndexFill.dim", "link" : "lamp\/autograd\/IndexFill.html#dim:Long", "kind" : "val"}, {"label" : "input", "tail" : ": Variable", "member" : "lamp.autograd.IndexFill.input", "link" : "lamp\/autograd\/IndexFill.html#input:lamp.autograd.Variable", "kind" : "val"}, {"label" : "scope", "tail" : ": Scope", "member" : "lamp.autograd.IndexFill.scope", "link" : "lamp\/autograd\/IndexFill.html#scope:lamp.Scope", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/autograd\/IndexFill.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/IndexFill.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/IndexFill.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/IndexFill.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/IndexFill.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/IndexFill.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/IndexFill.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/IndexFill.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/IndexFill.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/IndexFill.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/IndexFill.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/IndexFill.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/IndexFill.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/IndexFill.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/IndexFill.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/IndexFill.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/IndexFill.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/autograd\/IndexFill.html", "kind" : "case class"}, {"name" : "lamp.autograd.IndexSelect", "shortDescription" : "", "members_case class" : [{"label" : "value", "tail" : ": Variable", "member" : "lamp.autograd.IndexSelect.value", "link" : "lamp\/autograd\/IndexSelect.html#value:lamp.autograd.Variable", "kind" : "val"}, {"label" : "params", "tail" : ": List[(Variable, (STen, STen) => Unit)]", "member" : "lamp.autograd.IndexSelect.params", "link" : "lamp\/autograd\/IndexSelect.html#params:List[(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)]", "kind" : "val"}, {"member" : "lamp.autograd.IndexSelect#<init>", "error" : "unsupported entity"}, {"label" : "index", "tail" : ": Variable", "member" : "lamp.autograd.IndexSelect.index", "link" : "lamp\/autograd\/IndexSelect.html#index:lamp.autograd.Variable", "kind" : "val"}, {"label" : "dim", "tail" : ": Long", "member" : "lamp.autograd.IndexSelect.dim", "link" : "lamp\/autograd\/IndexSelect.html#dim:Long", "kind" : "val"}, {"label" : "input", "tail" : ": Variable", "member" : "lamp.autograd.IndexSelect.input", "link" : "lamp\/autograd\/IndexSelect.html#input:lamp.autograd.Variable", "kind" : "val"}, {"label" : "scope", "tail" : ": Scope", "member" : "lamp.autograd.IndexSelect.scope", "link" : "lamp\/autograd\/IndexSelect.html#scope:lamp.Scope", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/autograd\/IndexSelect.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/IndexSelect.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/IndexSelect.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/IndexSelect.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/IndexSelect.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/IndexSelect.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/IndexSelect.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/IndexSelect.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/IndexSelect.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/IndexSelect.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/IndexSelect.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/IndexSelect.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/IndexSelect.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/IndexSelect.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/IndexSelect.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/IndexSelect.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/IndexSelect.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/autograd\/IndexSelect.html", "kind" : "case class"}, {"name" : "lamp.autograd.Inv", "shortDescription" : "", "members_case class" : [{"label" : "value", "tail" : ": Variable", "member" : "lamp.autograd.Inv.value", "link" : "lamp\/autograd\/Inv.html#value:lamp.autograd.Variable", "kind" : "val"}, {"label" : "params", "tail" : ": List[(Variable, (STen, STen) => Unit)]", "member" : "lamp.autograd.Inv.params", "link" : "lamp\/autograd\/Inv.html#params:List[(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)]", "kind" : "val"}, {"member" : "lamp.autograd.Inv#<init>", "error" : "unsupported entity"}, {"label" : "a", "tail" : ": Variable", "member" : "lamp.autograd.Inv.a", "link" : "lamp\/autograd\/Inv.html#a:lamp.autograd.Variable", "kind" : "val"}, {"label" : "scope", "tail" : ": Scope", "member" : "lamp.autograd.Inv.scope", "link" : "lamp\/autograd\/Inv.html#scope:lamp.Scope", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/autograd\/Inv.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/Inv.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/Inv.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/Inv.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/Inv.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/Inv.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/Inv.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/Inv.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Inv.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Inv.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Inv.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/Inv.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/Inv.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/Inv.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/Inv.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/Inv.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/Inv.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/autograd\/Inv.html", "kind" : "case class"}, {"name" : "lamp.autograd.L1Loss", "shortDescription" : "", "members_case class" : [{"label" : "value", "tail" : ": Variable", "member" : "lamp.autograd.L1Loss.value", "link" : "lamp\/autograd\/L1Loss.html#value:lamp.autograd.Variable", "kind" : "val"}, {"label" : "targetViewed", "tail" : ": STen", "member" : "lamp.autograd.L1Loss.targetViewed", "link" : "lamp\/autograd\/L1Loss.html#targetViewed:lamp.STen", "kind" : "val"}, {"label" : "params", "tail" : ": List[(Variable, (STen, STen) => Unit)]", "member" : "lamp.autograd.L1Loss.params", "link" : "lamp\/autograd\/L1Loss.html#params:List[(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)]", "kind" : "val"}, {"member" : "lamp.autograd.L1Loss#<init>", "error" : "unsupported entity"}, {"label" : "reduction", "tail" : ": Reduction", "member" : "lamp.autograd.L1Loss.reduction", "link" : "lamp\/autograd\/L1Loss.html#reduction:lamp.autograd.Reduction", "kind" : "val"}, {"label" : "target", "tail" : ": STen", "member" : "lamp.autograd.L1Loss.target", "link" : "lamp\/autograd\/L1Loss.html#target:lamp.STen", "kind" : "val"}, {"label" : "input", "tail" : ": Variable", "member" : "lamp.autograd.L1Loss.input", "link" : "lamp\/autograd\/L1Loss.html#input:lamp.autograd.Variable", "kind" : "val"}, {"label" : "scope", "tail" : ": Scope", "member" : "lamp.autograd.L1Loss.scope", "link" : "lamp\/autograd\/L1Loss.html#scope:lamp.Scope", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/autograd\/L1Loss.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/L1Loss.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/L1Loss.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/L1Loss.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/L1Loss.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/L1Loss.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/L1Loss.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/L1Loss.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/L1Loss.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/L1Loss.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/L1Loss.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/L1Loss.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/L1Loss.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/L1Loss.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/L1Loss.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/L1Loss.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/L1Loss.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/autograd\/L1Loss.html", "kind" : "case class"}, {"name" : "lamp.autograd.LayerNormOp", "shortDescription" : "", "members_case class" : [{"label" : "params", "tail" : ": List[(Variable, (STen, STen) => Unit)]", "member" : "lamp.autograd.LayerNormOp.params", "link" : "lamp\/autograd\/LayerNormOp.html#params:List[(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)]", "kind" : "val"}, {"label" : "value", "tail" : ": Variable", "member" : "lamp.autograd.LayerNormOp.value", "link" : "lamp\/autograd\/LayerNormOp.html#value:lamp.autograd.Variable", "kind" : "val"}, {"label" : "rstd", "tail" : ": Tensor", "member" : "lamp.autograd.LayerNormOp.rstd", "link" : "lamp\/autograd\/LayerNormOp.html#rstd:aten.Tensor", "kind" : "val"}, {"label" : "mean", "tail" : ": Tensor", "member" : "lamp.autograd.LayerNormOp.mean", "link" : "lamp\/autograd\/LayerNormOp.html#mean:aten.Tensor", "kind" : "val"}, {"label" : "output", "tail" : ": Tensor", "member" : "lamp.autograd.LayerNormOp.output", "link" : "lamp\/autograd\/LayerNormOp.html#output:aten.Tensor", "kind" : "val"}, {"member" : "lamp.autograd.LayerNormOp#<init>", "error" : "unsupported entity"}, {"label" : "eps", "tail" : ": Double", "member" : "lamp.autograd.LayerNormOp.eps", "link" : "lamp\/autograd\/LayerNormOp.html#eps:Double", "kind" : "val"}, {"label" : "normalizedShape", "tail" : ": List[Long]", "member" : "lamp.autograd.LayerNormOp.normalizedShape", "link" : "lamp\/autograd\/LayerNormOp.html#normalizedShape:List[Long]", "kind" : "val"}, {"label" : "bias", "tail" : ": Variable", "member" : "lamp.autograd.LayerNormOp.bias", "link" : "lamp\/autograd\/LayerNormOp.html#bias:lamp.autograd.Variable", "kind" : "val"}, {"label" : "weight", "tail" : ": Variable", "member" : "lamp.autograd.LayerNormOp.weight", "link" : "lamp\/autograd\/LayerNormOp.html#weight:lamp.autograd.Variable", "kind" : "val"}, {"label" : "input", "tail" : ": Variable", "member" : "lamp.autograd.LayerNormOp.input", "link" : "lamp\/autograd\/LayerNormOp.html#input:lamp.autograd.Variable", "kind" : "val"}, {"label" : "scope", "tail" : ": Scope", "member" : "lamp.autograd.LayerNormOp.scope", "link" : "lamp\/autograd\/LayerNormOp.html#scope:lamp.Scope", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/autograd\/LayerNormOp.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/LayerNormOp.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/LayerNormOp.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/LayerNormOp.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/LayerNormOp.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/LayerNormOp.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/LayerNormOp.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/LayerNormOp.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/LayerNormOp.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/LayerNormOp.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/LayerNormOp.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/LayerNormOp.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/LayerNormOp.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/LayerNormOp.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/LayerNormOp.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/LayerNormOp.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/LayerNormOp.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/autograd\/LayerNormOp.html", "kind" : "case class"}, {"name" : "lamp.autograd.LeakyRelu", "shortDescription" : "", "members_case class" : [{"label" : "value", "tail" : ": Variable", "member" : "lamp.autograd.LeakyRelu.value", "link" : "lamp\/autograd\/LeakyRelu.html#value:lamp.autograd.Variable", "kind" : "val"}, {"label" : "aOpt", "tail" : ": STenOptions", "member" : "lamp.autograd.LeakyRelu.aOpt", "link" : "lamp\/autograd\/LeakyRelu.html#aOpt:lamp.STenOptions", "kind" : "val"}, {"label" : "params", "tail" : ": List[(Variable, (STen, STen) => Unit)]", "member" : "lamp.autograd.LeakyRelu.params", "link" : "lamp\/autograd\/LeakyRelu.html#params:List[(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)]", "kind" : "val"}, {"member" : "lamp.autograd.LeakyRelu#<init>", "error" : "unsupported entity"}, {"label" : "slope", "tail" : ": Double", "member" : "lamp.autograd.LeakyRelu.slope", "link" : "lamp\/autograd\/LeakyRelu.html#slope:Double", "kind" : "val"}, {"label" : "a", "tail" : ": Variable", "member" : "lamp.autograd.LeakyRelu.a", "link" : "lamp\/autograd\/LeakyRelu.html#a:lamp.autograd.Variable", "kind" : "val"}, {"label" : "scope", "tail" : ": Scope", "member" : "lamp.autograd.LeakyRelu.scope", "link" : "lamp\/autograd\/LeakyRelu.html#scope:lamp.Scope", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/autograd\/LeakyRelu.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/LeakyRelu.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/LeakyRelu.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/LeakyRelu.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/LeakyRelu.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/LeakyRelu.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/LeakyRelu.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/LeakyRelu.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/LeakyRelu.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/LeakyRelu.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/LeakyRelu.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/LeakyRelu.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/LeakyRelu.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/LeakyRelu.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/LeakyRelu.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/LeakyRelu.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/LeakyRelu.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/autograd\/LeakyRelu.html", "kind" : "case class"}, {"name" : "lamp.autograd.Log", "shortDescription" : "", "members_case class" : [{"label" : "value", "tail" : ": Variable", "member" : "lamp.autograd.Log.value", "link" : "lamp\/autograd\/Log.html#value:lamp.autograd.Variable", "kind" : "val"}, {"label" : "params", "tail" : ": List[(Variable, (STen, STen) => Unit)]", "member" : "lamp.autograd.Log.params", "link" : "lamp\/autograd\/Log.html#params:List[(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)]", "kind" : "val"}, {"member" : "lamp.autograd.Log#<init>", "error" : "unsupported entity"}, {"label" : "a", "tail" : ": Variable", "member" : "lamp.autograd.Log.a", "link" : "lamp\/autograd\/Log.html#a:lamp.autograd.Variable", "kind" : "val"}, {"label" : "scope", "tail" : ": Scope", "member" : "lamp.autograd.Log.scope", "link" : "lamp\/autograd\/Log.html#scope:lamp.Scope", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/autograd\/Log.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/Log.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/Log.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/Log.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/Log.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/Log.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/Log.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/Log.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Log.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Log.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Log.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/Log.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/Log.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/Log.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/Log.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/Log.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/Log.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/autograd\/Log.html", "kind" : "case class"}, {"name" : "lamp.autograd.Log1p", "shortDescription" : "", "members_case class" : [{"label" : "value", "tail" : ": Variable", "member" : "lamp.autograd.Log1p.value", "link" : "lamp\/autograd\/Log1p.html#value:lamp.autograd.Variable", "kind" : "val"}, {"label" : "params", "tail" : ": List[(Variable, (STen, STen) => Unit)]", "member" : "lamp.autograd.Log1p.params", "link" : "lamp\/autograd\/Log1p.html#params:List[(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)]", "kind" : "val"}, {"member" : "lamp.autograd.Log1p#<init>", "error" : "unsupported entity"}, {"label" : "a", "tail" : ": Variable", "member" : "lamp.autograd.Log1p.a", "link" : "lamp\/autograd\/Log1p.html#a:lamp.autograd.Variable", "kind" : "val"}, {"label" : "scope", "tail" : ": Scope", "member" : "lamp.autograd.Log1p.scope", "link" : "lamp\/autograd\/Log1p.html#scope:lamp.Scope", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/autograd\/Log1p.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/Log1p.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/Log1p.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/Log1p.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/Log1p.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/Log1p.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/Log1p.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/Log1p.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Log1p.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Log1p.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Log1p.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/Log1p.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/Log1p.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/Log1p.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/Log1p.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/Log1p.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/Log1p.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/autograd\/Log1p.html", "kind" : "case class"}, {"name" : "lamp.autograd.LogDet", "shortDescription" : "", "members_case class" : [{"label" : "value", "tail" : ": Variable", "member" : "lamp.autograd.LogDet.value", "link" : "lamp\/autograd\/LogDet.html#value:lamp.autograd.Variable", "kind" : "val"}, {"label" : "params", "tail" : ": List[(Variable, (STen, STen) => Unit)]", "member" : "lamp.autograd.LogDet.params", "link" : "lamp\/autograd\/LogDet.html#params:List[(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)]", "kind" : "val"}, {"member" : "lamp.autograd.LogDet#<init>", "error" : "unsupported entity"}, {"label" : "a", "tail" : ": Variable", "member" : "lamp.autograd.LogDet.a", "link" : "lamp\/autograd\/LogDet.html#a:lamp.autograd.Variable", "kind" : "val"}, {"label" : "scope", "tail" : ": Scope", "member" : "lamp.autograd.LogDet.scope", "link" : "lamp\/autograd\/LogDet.html#scope:lamp.Scope", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/autograd\/LogDet.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/LogDet.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/LogDet.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/LogDet.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/LogDet.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/LogDet.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/LogDet.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/LogDet.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/LogDet.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/LogDet.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/LogDet.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/LogDet.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/LogDet.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/LogDet.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/LogDet.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/LogDet.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/LogDet.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/autograd\/LogDet.html", "kind" : "case class"}, {"name" : "lamp.autograd.LogSoftMax", "shortDescription" : "", "members_case class" : [{"label" : "value", "tail" : ": Variable", "member" : "lamp.autograd.LogSoftMax.value", "link" : "lamp\/autograd\/LogSoftMax.html#value:lamp.autograd.Variable", "kind" : "val"}, {"label" : "params", "tail" : ": List[(Variable, (STen, STen) => Unit)]", "member" : "lamp.autograd.LogSoftMax.params", "link" : "lamp\/autograd\/LogSoftMax.html#params:List[(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)]", "kind" : "val"}, {"member" : "lamp.autograd.LogSoftMax#<init>", "error" : "unsupported entity"}, {"label" : "dim", "tail" : ": Int", "member" : "lamp.autograd.LogSoftMax.dim", "link" : "lamp\/autograd\/LogSoftMax.html#dim:Int", "kind" : "val"}, {"label" : "a", "tail" : ": Variable", "member" : "lamp.autograd.LogSoftMax.a", "link" : "lamp\/autograd\/LogSoftMax.html#a:lamp.autograd.Variable", "kind" : "val"}, {"label" : "scope", "tail" : ": Scope", "member" : "lamp.autograd.LogSoftMax.scope", "link" : "lamp\/autograd\/LogSoftMax.html#scope:lamp.Scope", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/autograd\/LogSoftMax.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/LogSoftMax.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/LogSoftMax.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/LogSoftMax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/LogSoftMax.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/LogSoftMax.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/LogSoftMax.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/LogSoftMax.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/LogSoftMax.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/LogSoftMax.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/LogSoftMax.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/LogSoftMax.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/LogSoftMax.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/LogSoftMax.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/LogSoftMax.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/LogSoftMax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/LogSoftMax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/autograd\/LogSoftMax.html", "kind" : "case class"}, {"name" : "lamp.autograd.MaskFill", "shortDescription" : "", "members_case class" : [{"label" : "value", "tail" : ": Variable", "member" : "lamp.autograd.MaskFill.value", "link" : "lamp\/autograd\/MaskFill.html#value:lamp.autograd.Variable", "kind" : "val"}, {"label" : "params", "tail" : ": List[(Variable, (STen, STen) => Unit)]", "member" : "lamp.autograd.MaskFill.params", "link" : "lamp\/autograd\/MaskFill.html#params:List[(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)]", "kind" : "val"}, {"member" : "lamp.autograd.MaskFill#<init>", "error" : "unsupported entity"}, {"label" : "fill", "tail" : ": Double", "member" : "lamp.autograd.MaskFill.fill", "link" : "lamp\/autograd\/MaskFill.html#fill:Double", "kind" : "val"}, {"label" : "mask", "tail" : ": Variable", "member" : "lamp.autograd.MaskFill.mask", "link" : "lamp\/autograd\/MaskFill.html#mask:lamp.autograd.Variable", "kind" : "val"}, {"label" : "input", "tail" : ": Variable", "member" : "lamp.autograd.MaskFill.input", "link" : "lamp\/autograd\/MaskFill.html#input:lamp.autograd.Variable", "kind" : "val"}, {"label" : "scope", "tail" : ": Scope", "member" : "lamp.autograd.MaskFill.scope", "link" : "lamp\/autograd\/MaskFill.html#scope:lamp.Scope", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/autograd\/MaskFill.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/MaskFill.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/MaskFill.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/MaskFill.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/MaskFill.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/MaskFill.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/MaskFill.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/MaskFill.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/MaskFill.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/MaskFill.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/MaskFill.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/MaskFill.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/MaskFill.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/MaskFill.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/MaskFill.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/MaskFill.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/MaskFill.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/autograd\/MaskFill.html", "kind" : "case class"}, {"name" : "lamp.autograd.MaskSelect", "shortDescription" : "", "members_case class" : [{"label" : "value", "tail" : ": Variable", "member" : "lamp.autograd.MaskSelect.value", "link" : "lamp\/autograd\/MaskSelect.html#value:lamp.autograd.Variable", "kind" : "val"}, {"label" : "params", "tail" : ": List[(Variable, (STen, STen) => Unit)]", "member" : "lamp.autograd.MaskSelect.params", "link" : "lamp\/autograd\/MaskSelect.html#params:List[(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)]", "kind" : "val"}, {"member" : "lamp.autograd.MaskSelect#<init>", "error" : "unsupported entity"}, {"label" : "mask", "tail" : ": Variable", "member" : "lamp.autograd.MaskSelect.mask", "link" : "lamp\/autograd\/MaskSelect.html#mask:lamp.autograd.Variable", "kind" : "val"}, {"label" : "input", "tail" : ": Variable", "member" : "lamp.autograd.MaskSelect.input", "link" : "lamp\/autograd\/MaskSelect.html#input:lamp.autograd.Variable", "kind" : "val"}, {"label" : "scope", "tail" : ": Scope", "member" : "lamp.autograd.MaskSelect.scope", "link" : "lamp\/autograd\/MaskSelect.html#scope:lamp.Scope", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/autograd\/MaskSelect.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/MaskSelect.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/MaskSelect.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/MaskSelect.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/MaskSelect.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/MaskSelect.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/MaskSelect.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/MaskSelect.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/MaskSelect.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/MaskSelect.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/MaskSelect.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/MaskSelect.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/MaskSelect.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/MaskSelect.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/MaskSelect.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/MaskSelect.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/MaskSelect.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/autograd\/MaskSelect.html", "kind" : "case class"}, {"name" : "lamp.autograd.MatMul", "shortDescription" : "", "members_case class" : [{"label" : "value", "tail" : ": Variable", "member" : "lamp.autograd.MatMul.value", "link" : "lamp\/autograd\/MatMul.html#value:lamp.autograd.Variable", "kind" : "val"}, {"label" : "params", "tail" : ": List[(Variable, (STen, STen) => Unit)]", "member" : "lamp.autograd.MatMul.params", "link" : "lamp\/autograd\/MatMul.html#params:List[(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)]", "kind" : "val"}, {"member" : "lamp.autograd.MatMul#<init>", "error" : "unsupported entity"}, {"label" : "b", "tail" : ": Variable", "member" : "lamp.autograd.MatMul.b", "link" : "lamp\/autograd\/MatMul.html#b:lamp.autograd.Variable", "kind" : "val"}, {"label" : "a", "tail" : ": Variable", "member" : "lamp.autograd.MatMul.a", "link" : "lamp\/autograd\/MatMul.html#a:lamp.autograd.Variable", "kind" : "val"}, {"label" : "scope", "tail" : ": Scope", "member" : "lamp.autograd.MatMul.scope", "link" : "lamp\/autograd\/MatMul.html#scope:lamp.Scope", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/autograd\/MatMul.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/MatMul.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/MatMul.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/MatMul.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/MatMul.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/MatMul.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/MatMul.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/MatMul.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/MatMul.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/MatMul.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/MatMul.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/MatMul.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/MatMul.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/MatMul.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/MatMul.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/MatMul.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/MatMul.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/autograd\/MatMul.html", "kind" : "case class"}, {"name" : "lamp.autograd.MaxPool1D", "shortDescription" : "1D max pooling", "members_case class" : [{"label" : "value", "tail" : ": Variable", "member" : "lamp.autograd.MaxPool1D.value", "link" : "lamp\/autograd\/MaxPool1D.html#value:lamp.autograd.Variable", "kind" : "val"}, {"label" : "mask", "tail" : ": Tensor", "member" : "lamp.autograd.MaxPool1D.mask", "link" : "lamp\/autograd\/MaxPool1D.html#mask:aten.Tensor", "kind" : "val"}, {"label" : "output", "tail" : ": Tensor", "member" : "lamp.autograd.MaxPool1D.output", "link" : "lamp\/autograd\/MaxPool1D.html#output:aten.Tensor", "kind" : "val"}, {"label" : "params", "tail" : ": List[(Variable, (STen, STen) => Unit)]", "member" : "lamp.autograd.MaxPool1D.params", "link" : "lamp\/autograd\/MaxPool1D.html#params:List[(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)]", "kind" : "val"}, {"label" : "imageSize", "tail" : ": Long", "member" : "lamp.autograd.MaxPool1D.imageSize", "link" : "lamp\/autograd\/MaxPool1D.html#imageSize:Long", "kind" : "val"}, {"label" : "inputChannels", "tail" : ": Long", "member" : "lamp.autograd.MaxPool1D.inputChannels", "link" : "lamp\/autograd\/MaxPool1D.html#inputChannels:Long", "kind" : "val"}, {"label" : "batchSize", "tail" : ": Long", "member" : "lamp.autograd.MaxPool1D.batchSize", "link" : "lamp\/autograd\/MaxPool1D.html#batchSize:Long", "kind" : "val"}, {"member" : "lamp.autograd.MaxPool1D#<init>", "error" : "unsupported entity"}, {"label" : "dilation", "tail" : ": Long", "member" : "lamp.autograd.MaxPool1D.dilation", "link" : "lamp\/autograd\/MaxPool1D.html#dilation:Long", "kind" : "val"}, {"label" : "padding", "tail" : ": Long", "member" : "lamp.autograd.MaxPool1D.padding", "link" : "lamp\/autograd\/MaxPool1D.html#padding:Long", "kind" : "val"}, {"label" : "stride", "tail" : ": Long", "member" : "lamp.autograd.MaxPool1D.stride", "link" : "lamp\/autograd\/MaxPool1D.html#stride:Long", "kind" : "val"}, {"label" : "kernelSize", "tail" : ": Long", "member" : "lamp.autograd.MaxPool1D.kernelSize", "link" : "lamp\/autograd\/MaxPool1D.html#kernelSize:Long", "kind" : "val"}, {"label" : "input", "tail" : ": Variable", "member" : "lamp.autograd.MaxPool1D.input", "link" : "lamp\/autograd\/MaxPool1D.html#input:lamp.autograd.Variable", "kind" : "val"}, {"label" : "scope", "tail" : ": Scope", "member" : "lamp.autograd.MaxPool1D.scope", "link" : "lamp\/autograd\/MaxPool1D.html#scope:lamp.Scope", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/autograd\/MaxPool1D.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/MaxPool1D.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/MaxPool1D.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/MaxPool1D.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/MaxPool1D.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/MaxPool1D.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/MaxPool1D.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/MaxPool1D.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/MaxPool1D.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/MaxPool1D.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/MaxPool1D.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/MaxPool1D.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/MaxPool1D.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/MaxPool1D.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/MaxPool1D.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/MaxPool1D.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/MaxPool1D.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/autograd\/MaxPool1D.html", "kind" : "case class"}, {"name" : "lamp.autograd.MaxPool2D", "shortDescription" : "2D max pooling", "members_case class" : [{"label" : "value", "tail" : ": Variable", "member" : "lamp.autograd.MaxPool2D.value", "link" : "lamp\/autograd\/MaxPool2D.html#value:lamp.autograd.Variable", "kind" : "val"}, {"label" : "mask", "tail" : ": Tensor", "member" : "lamp.autograd.MaxPool2D.mask", "link" : "lamp\/autograd\/MaxPool2D.html#mask:aten.Tensor", "kind" : "val"}, {"label" : "output", "tail" : ": Tensor", "member" : "lamp.autograd.MaxPool2D.output", "link" : "lamp\/autograd\/MaxPool2D.html#output:aten.Tensor", "kind" : "val"}, {"label" : "params", "tail" : ": List[(Variable, (STen, STen) => Unit)]", "member" : "lamp.autograd.MaxPool2D.params", "link" : "lamp\/autograd\/MaxPool2D.html#params:List[(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)]", "kind" : "val"}, {"label" : "imageSize", "tail" : ": Long", "member" : "lamp.autograd.MaxPool2D.imageSize", "link" : "lamp\/autograd\/MaxPool2D.html#imageSize:Long", "kind" : "val"}, {"label" : "inputChannels", "tail" : ": Long", "member" : "lamp.autograd.MaxPool2D.inputChannels", "link" : "lamp\/autograd\/MaxPool2D.html#inputChannels:Long", "kind" : "val"}, {"label" : "batchSize", "tail" : ": Long", "member" : "lamp.autograd.MaxPool2D.batchSize", "link" : "lamp\/autograd\/MaxPool2D.html#batchSize:Long", "kind" : "val"}, {"member" : "lamp.autograd.MaxPool2D#<init>", "error" : "unsupported entity"}, {"label" : "dilation", "tail" : ": Long", "member" : "lamp.autograd.MaxPool2D.dilation", "link" : "lamp\/autograd\/MaxPool2D.html#dilation:Long", "kind" : "val"}, {"label" : "padding", "tail" : ": Long", "member" : "lamp.autograd.MaxPool2D.padding", "link" : "lamp\/autograd\/MaxPool2D.html#padding:Long", "kind" : "val"}, {"label" : "stride", "tail" : ": Long", "member" : "lamp.autograd.MaxPool2D.stride", "link" : "lamp\/autograd\/MaxPool2D.html#stride:Long", "kind" : "val"}, {"label" : "kernelSize", "tail" : ": Long", "member" : "lamp.autograd.MaxPool2D.kernelSize", "link" : "lamp\/autograd\/MaxPool2D.html#kernelSize:Long", "kind" : "val"}, {"label" : "input", "tail" : ": Variable", "member" : "lamp.autograd.MaxPool2D.input", "link" : "lamp\/autograd\/MaxPool2D.html#input:lamp.autograd.Variable", "kind" : "val"}, {"label" : "scope", "tail" : ": Scope", "member" : "lamp.autograd.MaxPool2D.scope", "link" : "lamp\/autograd\/MaxPool2D.html#scope:lamp.Scope", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/autograd\/MaxPool2D.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/MaxPool2D.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/MaxPool2D.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/MaxPool2D.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/MaxPool2D.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/MaxPool2D.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/MaxPool2D.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/MaxPool2D.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/MaxPool2D.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/MaxPool2D.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/MaxPool2D.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/MaxPool2D.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/MaxPool2D.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/MaxPool2D.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/MaxPool2D.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/MaxPool2D.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/MaxPool2D.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/autograd\/MaxPool2D.html", "kind" : "case class"}, {"name" : "lamp.autograd.Mean", "case object" : "lamp\/autograd\/Mean$.html", "shortDescription" : "", "members_case object" : [{"label" : "asLong", "tail" : "(): Long", "member" : "lamp.autograd.Mean.asLong", "link" : "lamp\/autograd\/Mean$.html#asLong:Long", "kind" : "def"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/autograd\/Mean$.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "productElementName", "tail" : "(n: Int): String", "member" : "scala.Product.productElementName", "link" : "lamp\/autograd\/Mean$.html#productElementName(n:Int):String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/Mean$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/Mean$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/Mean$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/Mean$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/Mean$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/Mean$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/Mean$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Mean$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Mean$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Mean$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/Mean$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/Mean$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/Mean$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/autograd\/Mean$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/Mean$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/Mean$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/Mean$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "value", "tail" : ": Variable", "member" : "lamp.autograd.Mean.value", "link" : "lamp\/autograd\/Mean.html#value:lamp.autograd.Variable", "kind" : "val"}, {"label" : "params", "tail" : ": List[(Variable, (STen, STen) => Unit)]", "member" : "lamp.autograd.Mean.params", "link" : "lamp\/autograd\/Mean.html#params:List[(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)]", "kind" : "val"}, {"member" : "lamp.autograd.Mean#<init>", "error" : "unsupported entity"}, {"label" : "keepDim", "tail" : ": Boolean", "member" : "lamp.autograd.Mean.keepDim", "link" : "lamp\/autograd\/Mean.html#keepDim:Boolean", "kind" : "val"}, {"label" : "dim", "tail" : ": List[Int]", "member" : "lamp.autograd.Mean.dim", "link" : "lamp\/autograd\/Mean.html#dim:List[Int]", "kind" : "val"}, {"label" : "a", "tail" : ": Variable", "member" : "lamp.autograd.Mean.a", "link" : "lamp\/autograd\/Mean.html#a:lamp.autograd.Variable", "kind" : "val"}, {"label" : "scope", "tail" : ": Scope", "member" : "lamp.autograd.Mean.scope", "link" : "lamp\/autograd\/Mean.html#scope:lamp.Scope", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/autograd\/Mean.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/Mean.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/Mean.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/Mean.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/Mean.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/Mean.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/Mean.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/Mean.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Mean.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Mean.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Mean.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/Mean.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/Mean.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/Mean.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/Mean.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/Mean.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/Mean.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/autograd\/Mean.html", "kind" : "case class"}, {"name" : "lamp.autograd.Minus", "shortDescription" : "", "members_case class" : [{"label" : "value", "tail" : ": Variable", "member" : "lamp.autograd.Minus.value", "link" : "lamp\/autograd\/Minus.html#value:lamp.autograd.Variable", "kind" : "val"}, {"label" : "params", "tail" : ": List[(Variable, (STen, STen) => Unit)]", "member" : "lamp.autograd.Minus.params", "link" : "lamp\/autograd\/Minus.html#params:List[(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)]", "kind" : "val"}, {"member" : "lamp.autograd.Minus#<init>", "error" : "unsupported entity"}, {"label" : "b", "tail" : ": Variable", "member" : "lamp.autograd.Minus.b", "link" : "lamp\/autograd\/Minus.html#b:lamp.autograd.Variable", "kind" : "val"}, {"label" : "a", "tail" : ": Variable", "member" : "lamp.autograd.Minus.a", "link" : "lamp\/autograd\/Minus.html#a:lamp.autograd.Variable", "kind" : "val"}, {"label" : "scope", "tail" : ": Scope", "member" : "lamp.autograd.Minus.scope", "link" : "lamp\/autograd\/Minus.html#scope:lamp.Scope", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/autograd\/Minus.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/Minus.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/Minus.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/Minus.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/Minus.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/Minus.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/Minus.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/Minus.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Minus.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Minus.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Minus.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/Minus.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/Minus.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/Minus.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/Minus.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/Minus.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/Minus.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/autograd\/Minus.html", "kind" : "case class"}, {"name" : "lamp.autograd.MseLoss", "shortDescription" : "", "members_case class" : [{"label" : "value", "tail" : ": Variable", "member" : "lamp.autograd.MseLoss.value", "link" : "lamp\/autograd\/MseLoss.html#value:lamp.autograd.Variable", "kind" : "val"}, {"label" : "targetViewed", "tail" : ": STen", "member" : "lamp.autograd.MseLoss.targetViewed", "link" : "lamp\/autograd\/MseLoss.html#targetViewed:lamp.STen", "kind" : "val"}, {"label" : "params", "tail" : ": List[(Variable, (STen, STen) => Unit)]", "member" : "lamp.autograd.MseLoss.params", "link" : "lamp\/autograd\/MseLoss.html#params:List[(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)]", "kind" : "val"}, {"member" : "lamp.autograd.MseLoss#<init>", "error" : "unsupported entity"}, {"label" : "reduction", "tail" : ": Reduction", "member" : "lamp.autograd.MseLoss.reduction", "link" : "lamp\/autograd\/MseLoss.html#reduction:lamp.autograd.Reduction", "kind" : "val"}, {"label" : "target", "tail" : ": STen", "member" : "lamp.autograd.MseLoss.target", "link" : "lamp\/autograd\/MseLoss.html#target:lamp.STen", "kind" : "val"}, {"label" : "input", "tail" : ": Variable", "member" : "lamp.autograd.MseLoss.input", "link" : "lamp\/autograd\/MseLoss.html#input:lamp.autograd.Variable", "kind" : "val"}, {"label" : "scope", "tail" : ": Scope", "member" : "lamp.autograd.MseLoss.scope", "link" : "lamp\/autograd\/MseLoss.html#scope:lamp.Scope", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/autograd\/MseLoss.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/MseLoss.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/MseLoss.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/MseLoss.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/MseLoss.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/MseLoss.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/MseLoss.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/MseLoss.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/MseLoss.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/MseLoss.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/MseLoss.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/MseLoss.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/MseLoss.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/MseLoss.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/MseLoss.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/MseLoss.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/MseLoss.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/autograd\/MseLoss.html", "kind" : "case class"}, {"name" : "lamp.autograd.Mult", "shortDescription" : "", "members_case class" : [{"label" : "value", "tail" : ": Variable", "member" : "lamp.autograd.Mult.value", "link" : "lamp\/autograd\/Mult.html#value:lamp.autograd.Variable", "kind" : "val"}, {"label" : "params", "tail" : ": List[(Variable, (STen, STen) => Unit)]", "member" : "lamp.autograd.Mult.params", "link" : "lamp\/autograd\/Mult.html#params:List[(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)]", "kind" : "val"}, {"member" : "lamp.autograd.Mult#<init>", "error" : "unsupported entity"}, {"label" : "b", "tail" : ": Variable", "member" : "lamp.autograd.Mult.b", "link" : "lamp\/autograd\/Mult.html#b:lamp.autograd.Variable", "kind" : "val"}, {"label" : "a", "tail" : ": Variable", "member" : "lamp.autograd.Mult.a", "link" : "lamp\/autograd\/Mult.html#a:lamp.autograd.Variable", "kind" : "val"}, {"label" : "scope", "tail" : ": Scope", "member" : "lamp.autograd.Mult.scope", "link" : "lamp\/autograd\/Mult.html#scope:lamp.Scope", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/autograd\/Mult.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/Mult.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/Mult.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/Mult.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/Mult.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/Mult.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/Mult.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/Mult.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Mult.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Mult.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Mult.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/Mult.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/Mult.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/Mult.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/Mult.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/Mult.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/Mult.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/autograd\/Mult.html", "kind" : "case class"}, {"name" : "lamp.autograd.NllLoss", "shortDescription" : "", "members_case class" : [{"label" : "value", "tail" : ": Variable", "member" : "lamp.autograd.NllLoss.value", "link" : "lamp\/autograd\/NllLoss.html#value:lamp.autograd.Variable", "kind" : "val"}, {"label" : "total_weight", "tail" : ": Tensor", "member" : "lamp.autograd.NllLoss.total_weight", "link" : "lamp\/autograd\/NllLoss.html#total_weight:aten.Tensor", "kind" : "val"}, {"label" : "value1", "tail" : ": Tensor", "member" : "lamp.autograd.NllLoss.value1", "link" : "lamp\/autograd\/NllLoss.html#value1:aten.Tensor", "kind" : "val"}, {"label" : "params", "tail" : ": List[(Variable, (STen, STen) => Unit)]", "member" : "lamp.autograd.NllLoss.params", "link" : "lamp\/autograd\/NllLoss.html#params:List[(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)]", "kind" : "val"}, {"member" : "lamp.autograd.NllLoss#<init>", "error" : "unsupported entity"}, {"label" : "ignore", "tail" : ": Long", "member" : "lamp.autograd.NllLoss.ignore", "link" : "lamp\/autograd\/NllLoss.html#ignore:Long", "kind" : "val"}, {"label" : "reduction", "tail" : ": Reduction", "member" : "lamp.autograd.NllLoss.reduction", "link" : "lamp\/autograd\/NllLoss.html#reduction:lamp.autograd.Reduction", "kind" : "val"}, {"label" : "weights", "tail" : ": STen", "member" : "lamp.autograd.NllLoss.weights", "link" : "lamp\/autograd\/NllLoss.html#weights:lamp.STen", "kind" : "val"}, {"label" : "target", "tail" : ": STen", "member" : "lamp.autograd.NllLoss.target", "link" : "lamp\/autograd\/NllLoss.html#target:lamp.STen", "kind" : "val"}, {"label" : "input", "tail" : ": Variable", "member" : "lamp.autograd.NllLoss.input", "link" : "lamp\/autograd\/NllLoss.html#input:lamp.autograd.Variable", "kind" : "val"}, {"label" : "scope", "tail" : ": Scope", "member" : "lamp.autograd.NllLoss.scope", "link" : "lamp\/autograd\/NllLoss.html#scope:lamp.Scope", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/autograd\/NllLoss.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/NllLoss.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/NllLoss.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/NllLoss.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/NllLoss.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/NllLoss.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/NllLoss.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/NllLoss.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/NllLoss.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/NllLoss.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/NllLoss.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/NllLoss.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/NllLoss.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/NllLoss.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/NllLoss.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/NllLoss.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/NllLoss.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/autograd\/NllLoss.html", "kind" : "case class"}, {"name" : "lamp.autograd.NoReduction", "case object" : "lamp\/autograd\/NoReduction$.html", "shortDescription" : "", "members_case object" : [{"label" : "asLong", "tail" : "(): Long", "member" : "lamp.autograd.NoReduction.asLong", "link" : "lamp\/autograd\/NoReduction$.html#asLong:Long", "kind" : "def"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/autograd\/NoReduction$.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "productElementName", "tail" : "(n: Int): String", "member" : "scala.Product.productElementName", "link" : "lamp\/autograd\/NoReduction$.html#productElementName(n:Int):String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/NoReduction$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/NoReduction$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/NoReduction$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/NoReduction$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/NoReduction$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/NoReduction$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/NoReduction$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/NoReduction$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/NoReduction$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/NoReduction$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/NoReduction$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/NoReduction$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/NoReduction$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/autograd\/NoReduction$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/NoReduction$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/NoReduction$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/NoReduction$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "case object"}, {"name" : "lamp.autograd.OneHot", "shortDescription" : "", "members_case class" : [{"label" : "value", "tail" : ": Variable", "member" : "lamp.autograd.OneHot.value", "link" : "lamp\/autograd\/OneHot.html#value:lamp.autograd.Variable", "kind" : "val"}, {"label" : "params", "tail" : ": List[(Variable, (STen, STen) => Unit)]", "member" : "lamp.autograd.OneHot.params", "link" : "lamp\/autograd\/OneHot.html#params:List[(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)]", "kind" : "val"}, {"member" : "lamp.autograd.OneHot#<init>", "error" : "unsupported entity"}, {"label" : "numClasses", "tail" : ": Int", "member" : "lamp.autograd.OneHot.numClasses", "link" : "lamp\/autograd\/OneHot.html#numClasses:Int", "kind" : "val"}, {"label" : "a", "tail" : ": Variable", "member" : "lamp.autograd.OneHot.a", "link" : "lamp\/autograd\/OneHot.html#a:lamp.autograd.Variable", "kind" : "val"}, {"label" : "scope", "tail" : ": Scope", "member" : "lamp.autograd.OneHot.scope", "link" : "lamp\/autograd\/OneHot.html#scope:lamp.Scope", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/autograd\/OneHot.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/OneHot.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/OneHot.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/OneHot.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/OneHot.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/OneHot.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/OneHot.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/OneHot.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/OneHot.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/OneHot.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/OneHot.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/OneHot.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/OneHot.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/OneHot.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/OneHot.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/OneHot.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/OneHot.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/autograd\/OneHot.html", "kind" : "case class"}, {"name" : "lamp.autograd.Op", "trait" : "lamp\/autograd\/Op.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/Op.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/Op.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/Op.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/Op.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/Op.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/Op.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/Op.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Op.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Op.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Op.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/Op.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/Op.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/autograd\/Op.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/Op.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/autograd\/Op.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/autograd\/Op.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/Op.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/Op.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/Op.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "params", "tail" : ": List[(Variable, (STen, STen) => Unit)]", "member" : "lamp.autograd.Op.params", "link" : "lamp\/autograd\/Op.html#params:List[(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)]", "kind" : "abstract val"}, {"label" : "value", "tail" : ": Variable", "member" : "lamp.autograd.Op.value", "link" : "lamp\/autograd\/Op.html#value:lamp.autograd.Variable", "kind" : "abstract val"}], "shortDescription" : "Represents an operation in the computational graph"}, {"name" : "lamp.autograd.PInv", "shortDescription" : "", "members_case class" : [{"label" : "value", "tail" : ": Variable", "member" : "lamp.autograd.PInv.value", "link" : "lamp\/autograd\/PInv.html#value:lamp.autograd.Variable", "kind" : "val"}, {"label" : "params", "tail" : ": List[(Variable, (STen, STen) => Unit)]", "member" : "lamp.autograd.PInv.params", "link" : "lamp\/autograd\/PInv.html#params:List[(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)]", "kind" : "val"}, {"member" : "lamp.autograd.PInv#<init>", "error" : "unsupported entity"}, {"label" : "rcond", "tail" : ": Double", "member" : "lamp.autograd.PInv.rcond", "link" : "lamp\/autograd\/PInv.html#rcond:Double", "kind" : "val"}, {"label" : "a", "tail" : ": Variable", "member" : "lamp.autograd.PInv.a", "link" : "lamp\/autograd\/PInv.html#a:lamp.autograd.Variable", "kind" : "val"}, {"label" : "scope", "tail" : ": Scope", "member" : "lamp.autograd.PInv.scope", "link" : "lamp\/autograd\/PInv.html#scope:lamp.Scope", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/autograd\/PInv.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/PInv.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/PInv.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/PInv.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/PInv.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/PInv.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/PInv.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/PInv.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/PInv.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/PInv.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/PInv.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/PInv.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/PInv.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/PInv.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/PInv.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/PInv.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/PInv.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/autograd\/PInv.html", "kind" : "case class"}, {"name" : "lamp.autograd.Pow", "shortDescription" : "", "members_case class" : [{"label" : "value", "tail" : ": Variable", "member" : "lamp.autograd.Pow.value", "link" : "lamp\/autograd\/Pow.html#value:lamp.autograd.Variable", "kind" : "val"}, {"label" : "params", "tail" : ": List[(Variable, (STen, STen) => Unit)]", "member" : "lamp.autograd.Pow.params", "link" : "lamp\/autograd\/Pow.html#params:List[(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)]", "kind" : "val"}, {"member" : "lamp.autograd.Pow#<init>", "error" : "unsupported entity"}, {"label" : "exponent", "tail" : ": Variable", "member" : "lamp.autograd.Pow.exponent", "link" : "lamp\/autograd\/Pow.html#exponent:lamp.autograd.Variable", "kind" : "val"}, {"label" : "a", "tail" : ": Variable", "member" : "lamp.autograd.Pow.a", "link" : "lamp\/autograd\/Pow.html#a:lamp.autograd.Variable", "kind" : "val"}, {"label" : "scope", "tail" : ": Scope", "member" : "lamp.autograd.Pow.scope", "link" : "lamp\/autograd\/Pow.html#scope:lamp.Scope", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/autograd\/Pow.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/Pow.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/Pow.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/Pow.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/Pow.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/Pow.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/Pow.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/Pow.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Pow.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Pow.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Pow.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/Pow.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/Pow.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/Pow.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/Pow.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/Pow.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/Pow.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/autograd\/Pow.html", "kind" : "case class"}, {"name" : "lamp.autograd.PowConst", "shortDescription" : "", "members_case class" : [{"label" : "value", "tail" : ": Variable", "member" : "lamp.autograd.PowConst.value", "link" : "lamp\/autograd\/PowConst.html#value:lamp.autograd.Variable", "kind" : "val"}, {"label" : "params", "tail" : ": List[(Variable, (STen, STen) => Unit)]", "member" : "lamp.autograd.PowConst.params", "link" : "lamp\/autograd\/PowConst.html#params:List[(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)]", "kind" : "val"}, {"member" : "lamp.autograd.PowConst#<init>", "error" : "unsupported entity"}, {"label" : "exponent", "tail" : ": Double", "member" : "lamp.autograd.PowConst.exponent", "link" : "lamp\/autograd\/PowConst.html#exponent:Double", "kind" : "val"}, {"label" : "a", "tail" : ": Variable", "member" : "lamp.autograd.PowConst.a", "link" : "lamp\/autograd\/PowConst.html#a:lamp.autograd.Variable", "kind" : "val"}, {"label" : "scope", "tail" : ": Scope", "member" : "lamp.autograd.PowConst.scope", "link" : "lamp\/autograd\/PowConst.html#scope:lamp.Scope", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/autograd\/PowConst.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/PowConst.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/PowConst.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/PowConst.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/PowConst.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/PowConst.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/PowConst.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/PowConst.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/PowConst.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/PowConst.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/PowConst.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/PowConst.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/PowConst.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/PowConst.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/PowConst.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/PowConst.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/PowConst.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/autograd\/PowConst.html", "kind" : "case class"}, {"name" : "lamp.autograd.Reduction", "trait" : "lamp\/autograd\/Reduction.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/Reduction.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/Reduction.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/Reduction.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/Reduction.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/Reduction.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/Reduction.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/Reduction.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Reduction.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Reduction.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Reduction.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/Reduction.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/Reduction.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/autograd\/Reduction.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/Reduction.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/autograd\/Reduction.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/autograd\/Reduction.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/Reduction.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/Reduction.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/Reduction.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "asLong", "tail" : "(): Long", "member" : "lamp.autograd.Reduction.asLong", "link" : "lamp\/autograd\/Reduction.html#asLong:Long", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "lamp.autograd.Relu", "shortDescription" : "", "members_case class" : [{"label" : "value", "tail" : ": Variable", "member" : "lamp.autograd.Relu.value", "link" : "lamp\/autograd\/Relu.html#value:lamp.autograd.Variable", "kind" : "val"}, {"label" : "aOpt", "tail" : ": STenOptions", "member" : "lamp.autograd.Relu.aOpt", "link" : "lamp\/autograd\/Relu.html#aOpt:lamp.STenOptions", "kind" : "val"}, {"label" : "params", "tail" : ": List[(Variable, (STen, STen) => Unit)]", "member" : "lamp.autograd.Relu.params", "link" : "lamp\/autograd\/Relu.html#params:List[(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)]", "kind" : "val"}, {"member" : "lamp.autograd.Relu#<init>", "error" : "unsupported entity"}, {"label" : "a", "tail" : ": Variable", "member" : "lamp.autograd.Relu.a", "link" : "lamp\/autograd\/Relu.html#a:lamp.autograd.Variable", "kind" : "val"}, {"label" : "scope", "tail" : ": Scope", "member" : "lamp.autograd.Relu.scope", "link" : "lamp\/autograd\/Relu.html#scope:lamp.Scope", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/autograd\/Relu.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/Relu.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/Relu.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/Relu.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/Relu.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/Relu.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/Relu.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/Relu.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Relu.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Relu.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Relu.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/Relu.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/Relu.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/Relu.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/Relu.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/Relu.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/Relu.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/autograd\/Relu.html", "kind" : "case class"}, {"name" : "lamp.autograd.RepeatInterleave", "shortDescription" : "", "members_case class" : [{"label" : "value", "tail" : ": Variable", "member" : "lamp.autograd.RepeatInterleave.value", "link" : "lamp\/autograd\/RepeatInterleave.html#value:lamp.autograd.Variable", "kind" : "val"}, {"label" : "params", "tail" : ": List[(Variable, (STen, STen) => Unit)]", "member" : "lamp.autograd.RepeatInterleave.params", "link" : "lamp\/autograd\/RepeatInterleave.html#params:List[(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)]", "kind" : "val"}, {"member" : "lamp.autograd.RepeatInterleave#<init>", "error" : "unsupported entity"}, {"label" : "dim", "tail" : ": Int", "member" : "lamp.autograd.RepeatInterleave.dim", "link" : "lamp\/autograd\/RepeatInterleave.html#dim:Int", "kind" : "val"}, {"label" : "repeats", "tail" : ": Variable", "member" : "lamp.autograd.RepeatInterleave.repeats", "link" : "lamp\/autograd\/RepeatInterleave.html#repeats:lamp.autograd.Variable", "kind" : "val"}, {"label" : "self", "tail" : ": Variable", "member" : "lamp.autograd.RepeatInterleave.self", "link" : "lamp\/autograd\/RepeatInterleave.html#self:lamp.autograd.Variable", "kind" : "val"}, {"label" : "scope", "tail" : ": Scope", "member" : "lamp.autograd.RepeatInterleave.scope", "link" : "lamp\/autograd\/RepeatInterleave.html#scope:lamp.Scope", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/autograd\/RepeatInterleave.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/RepeatInterleave.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/RepeatInterleave.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/RepeatInterleave.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/RepeatInterleave.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/RepeatInterleave.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/RepeatInterleave.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/RepeatInterleave.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/RepeatInterleave.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/RepeatInterleave.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/RepeatInterleave.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/RepeatInterleave.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/RepeatInterleave.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/RepeatInterleave.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/RepeatInterleave.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/RepeatInterleave.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/RepeatInterleave.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/autograd\/RepeatInterleave.html", "kind" : "case class"}, {"name" : "lamp.autograd.Reshape", "shortDescription" : "", "members_case class" : [{"label" : "value", "tail" : ": Variable", "member" : "lamp.autograd.Reshape.value", "link" : "lamp\/autograd\/Reshape.html#value:lamp.autograd.Variable", "kind" : "val"}, {"label" : "params", "tail" : ": List[(Variable, (STen, STen) => Unit)]", "member" : "lamp.autograd.Reshape.params", "link" : "lamp\/autograd\/Reshape.html#params:List[(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)]", "kind" : "val"}, {"member" : "lamp.autograd.Reshape#<init>", "error" : "unsupported entity"}, {"label" : "shape", "tail" : ": Array[Long]", "member" : "lamp.autograd.Reshape.shape", "link" : "lamp\/autograd\/Reshape.html#shape:Array[Long]", "kind" : "val"}, {"label" : "a", "tail" : ": Variable", "member" : "lamp.autograd.Reshape.a", "link" : "lamp\/autograd\/Reshape.html#a:lamp.autograd.Variable", "kind" : "val"}, {"label" : "scope", "tail" : ": Scope", "member" : "lamp.autograd.Reshape.scope", "link" : "lamp\/autograd\/Reshape.html#scope:lamp.Scope", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/autograd\/Reshape.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/Reshape.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/Reshape.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/Reshape.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/Reshape.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/Reshape.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/Reshape.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/Reshape.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Reshape.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Reshape.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Reshape.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/Reshape.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/Reshape.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/Reshape.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/Reshape.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/Reshape.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/Reshape.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/autograd\/Reshape.html", "kind" : "case class"}, {"name" : "lamp.autograd.ScatterAdd", "shortDescription" : "", "members_case class" : [{"label" : "value", "tail" : ": Variable", "member" : "lamp.autograd.ScatterAdd.value", "link" : "lamp\/autograd\/ScatterAdd.html#value:lamp.autograd.Variable", "kind" : "val"}, {"label" : "params", "tail" : ": List[(Variable, (STen, STen) => Unit)]", "member" : "lamp.autograd.ScatterAdd.params", "link" : "lamp\/autograd\/ScatterAdd.html#params:List[(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)]", "kind" : "val"}, {"member" : "lamp.autograd.ScatterAdd#<init>", "error" : "unsupported entity"}, {"label" : "maxIndex", "tail" : ": Long", "member" : "lamp.autograd.ScatterAdd.maxIndex", "link" : "lamp\/autograd\/ScatterAdd.html#maxIndex:Long", "kind" : "val"}, {"label" : "dim", "tail" : ": Int", "member" : "lamp.autograd.ScatterAdd.dim", "link" : "lamp\/autograd\/ScatterAdd.html#dim:Int", "kind" : "val"}, {"label" : "index", "tail" : ": Variable", "member" : "lamp.autograd.ScatterAdd.index", "link" : "lamp\/autograd\/ScatterAdd.html#index:lamp.autograd.Variable", "kind" : "val"}, {"label" : "src", "tail" : ": Variable", "member" : "lamp.autograd.ScatterAdd.src", "link" : "lamp\/autograd\/ScatterAdd.html#src:lamp.autograd.Variable", "kind" : "val"}, {"label" : "scope", "tail" : ": Scope", "member" : "lamp.autograd.ScatterAdd.scope", "link" : "lamp\/autograd\/ScatterAdd.html#scope:lamp.Scope", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/autograd\/ScatterAdd.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/ScatterAdd.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/ScatterAdd.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/ScatterAdd.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/ScatterAdd.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/ScatterAdd.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/ScatterAdd.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/ScatterAdd.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/ScatterAdd.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/ScatterAdd.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/ScatterAdd.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/ScatterAdd.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/ScatterAdd.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/ScatterAdd.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/ScatterAdd.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/ScatterAdd.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/ScatterAdd.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/autograd\/ScatterAdd.html", "kind" : "case class"}, {"name" : "lamp.autograd.Select", "shortDescription" : "", "members_case class" : [{"label" : "value", "tail" : ": Variable", "member" : "lamp.autograd.Select.value", "link" : "lamp\/autograd\/Select.html#value:lamp.autograd.Variable", "kind" : "val"}, {"label" : "params", "tail" : ": List[(Variable, (STen, STen) => Unit)]", "member" : "lamp.autograd.Select.params", "link" : "lamp\/autograd\/Select.html#params:List[(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)]", "kind" : "val"}, {"member" : "lamp.autograd.Select#<init>", "error" : "unsupported entity"}, {"label" : "index", "tail" : ": Long", "member" : "lamp.autograd.Select.index", "link" : "lamp\/autograd\/Select.html#index:Long", "kind" : "val"}, {"label" : "dim", "tail" : ": Long", "member" : "lamp.autograd.Select.dim", "link" : "lamp\/autograd\/Select.html#dim:Long", "kind" : "val"}, {"label" : "a", "tail" : ": Variable", "member" : "lamp.autograd.Select.a", "link" : "lamp\/autograd\/Select.html#a:lamp.autograd.Variable", "kind" : "val"}, {"label" : "scope", "tail" : ": Scope", "member" : "lamp.autograd.Select.scope", "link" : "lamp\/autograd\/Select.html#scope:lamp.Scope", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/autograd\/Select.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/Select.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/Select.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/Select.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/Select.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/Select.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/Select.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/Select.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Select.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Select.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Select.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/Select.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/Select.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/Select.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/Select.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/Select.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/Select.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/autograd\/Select.html", "kind" : "case class"}, {"name" : "lamp.autograd.Sigmoid", "shortDescription" : "", "members_case class" : [{"label" : "value", "tail" : ": Variable", "member" : "lamp.autograd.Sigmoid.value", "link" : "lamp\/autograd\/Sigmoid.html#value:lamp.autograd.Variable", "kind" : "val"}, {"label" : "params", "tail" : ": List[(Variable, (STen, STen) => Unit)]", "member" : "lamp.autograd.Sigmoid.params", "link" : "lamp\/autograd\/Sigmoid.html#params:List[(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)]", "kind" : "val"}, {"member" : "lamp.autograd.Sigmoid#<init>", "error" : "unsupported entity"}, {"label" : "a", "tail" : ": Variable", "member" : "lamp.autograd.Sigmoid.a", "link" : "lamp\/autograd\/Sigmoid.html#a:lamp.autograd.Variable", "kind" : "val"}, {"label" : "scope", "tail" : ": Scope", "member" : "lamp.autograd.Sigmoid.scope", "link" : "lamp\/autograd\/Sigmoid.html#scope:lamp.Scope", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/autograd\/Sigmoid.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/Sigmoid.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/Sigmoid.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/Sigmoid.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/Sigmoid.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/Sigmoid.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/Sigmoid.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/Sigmoid.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Sigmoid.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Sigmoid.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Sigmoid.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/Sigmoid.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/Sigmoid.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/Sigmoid.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/Sigmoid.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/Sigmoid.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/Sigmoid.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/autograd\/Sigmoid.html", "kind" : "case class"}, {"name" : "lamp.autograd.Sin", "shortDescription" : "", "members_case class" : [{"label" : "value", "tail" : ": Variable", "member" : "lamp.autograd.Sin.value", "link" : "lamp\/autograd\/Sin.html#value:lamp.autograd.Variable", "kind" : "val"}, {"label" : "params", "tail" : ": List[(Variable, (STen, STen) => Unit)]", "member" : "lamp.autograd.Sin.params", "link" : "lamp\/autograd\/Sin.html#params:List[(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)]", "kind" : "val"}, {"member" : "lamp.autograd.Sin#<init>", "error" : "unsupported entity"}, {"label" : "a", "tail" : ": Variable", "member" : "lamp.autograd.Sin.a", "link" : "lamp\/autograd\/Sin.html#a:lamp.autograd.Variable", "kind" : "val"}, {"label" : "scope", "tail" : ": Scope", "member" : "lamp.autograd.Sin.scope", "link" : "lamp\/autograd\/Sin.html#scope:lamp.Scope", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/autograd\/Sin.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/Sin.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/Sin.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/Sin.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/Sin.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/Sin.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/Sin.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/Sin.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Sin.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Sin.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Sin.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/Sin.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/Sin.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/Sin.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/Sin.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/Sin.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/Sin.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/autograd\/Sin.html", "kind" : "case class"}, {"name" : "lamp.autograd.Softplus", "shortDescription" : "", "members_case class" : [{"label" : "value", "tail" : ": Variable", "member" : "lamp.autograd.Softplus.value", "link" : "lamp\/autograd\/Softplus.html#value:lamp.autograd.Variable", "kind" : "val"}, {"label" : "params", "tail" : ": List[(Variable, (STen, STen) => Unit)]", "member" : "lamp.autograd.Softplus.params", "link" : "lamp\/autograd\/Softplus.html#params:List[(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)]", "kind" : "val"}, {"member" : "lamp.autograd.Softplus#<init>", "error" : "unsupported entity"}, {"label" : "threshold", "tail" : ": Double", "member" : "lamp.autograd.Softplus.threshold", "link" : "lamp\/autograd\/Softplus.html#threshold:Double", "kind" : "val"}, {"label" : "beta", "tail" : ": Double", "member" : "lamp.autograd.Softplus.beta", "link" : "lamp\/autograd\/Softplus.html#beta:Double", "kind" : "val"}, {"label" : "a", "tail" : ": Variable", "member" : "lamp.autograd.Softplus.a", "link" : "lamp\/autograd\/Softplus.html#a:lamp.autograd.Variable", "kind" : "val"}, {"label" : "scope", "tail" : ": Scope", "member" : "lamp.autograd.Softplus.scope", "link" : "lamp\/autograd\/Softplus.html#scope:lamp.Scope", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/autograd\/Softplus.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/Softplus.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/Softplus.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/Softplus.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/Softplus.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/Softplus.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/Softplus.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/Softplus.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Softplus.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Softplus.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Softplus.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/Softplus.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/Softplus.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/Softplus.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/Softplus.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/Softplus.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/Softplus.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/autograd\/Softplus.html", "kind" : "case class"}, {"name" : "lamp.autograd.SparseFromValueAndIndex", "shortDescription" : "", "members_case class" : [{"label" : "value", "tail" : ": Variable", "member" : "lamp.autograd.SparseFromValueAndIndex.value", "link" : "lamp\/autograd\/SparseFromValueAndIndex.html#value:lamp.autograd.Variable", "kind" : "val"}, {"label" : "params", "tail" : ": List[(Variable, (STen, STen) => Unit)]", "member" : "lamp.autograd.SparseFromValueAndIndex.params", "link" : "lamp\/autograd\/SparseFromValueAndIndex.html#params:List[(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)]", "kind" : "val"}, {"member" : "lamp.autograd.SparseFromValueAndIndex#<init>", "error" : "unsupported entity"}, {"label" : "dim", "tail" : ": Seq[Long]", "member" : "lamp.autograd.SparseFromValueAndIndex.dim", "link" : "lamp\/autograd\/SparseFromValueAndIndex.html#dim:Seq[Long]", "kind" : "val"}, {"label" : "indices", "tail" : ": STen", "member" : "lamp.autograd.SparseFromValueAndIndex.indices", "link" : "lamp\/autograd\/SparseFromValueAndIndex.html#indices:lamp.STen", "kind" : "val"}, {"label" : "values", "tail" : ": Variable", "member" : "lamp.autograd.SparseFromValueAndIndex.values", "link" : "lamp\/autograd\/SparseFromValueAndIndex.html#values:lamp.autograd.Variable", "kind" : "val"}, {"label" : "scope", "tail" : ": Scope", "member" : "lamp.autograd.SparseFromValueAndIndex.scope", "link" : "lamp\/autograd\/SparseFromValueAndIndex.html#scope:lamp.Scope", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/autograd\/SparseFromValueAndIndex.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/SparseFromValueAndIndex.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/SparseFromValueAndIndex.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/SparseFromValueAndIndex.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/SparseFromValueAndIndex.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/SparseFromValueAndIndex.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/SparseFromValueAndIndex.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/SparseFromValueAndIndex.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/SparseFromValueAndIndex.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/SparseFromValueAndIndex.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/SparseFromValueAndIndex.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/SparseFromValueAndIndex.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/SparseFromValueAndIndex.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/SparseFromValueAndIndex.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/SparseFromValueAndIndex.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/SparseFromValueAndIndex.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/SparseFromValueAndIndex.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/autograd\/SparseFromValueAndIndex.html", "kind" : "case class"}, {"name" : "lamp.autograd.SquaredFrobeniusMatrixNorm", "shortDescription" : "", "members_case class" : [{"label" : "value", "tail" : ": Variable", "member" : "lamp.autograd.SquaredFrobeniusMatrixNorm.value", "link" : "lamp\/autograd\/SquaredFrobeniusMatrixNorm.html#value:lamp.autograd.Variable", "kind" : "val"}, {"label" : "params", "tail" : ": List[(Variable, (STen, STen) => Unit)]", "member" : "lamp.autograd.SquaredFrobeniusMatrixNorm.params", "link" : "lamp\/autograd\/SquaredFrobeniusMatrixNorm.html#params:List[(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)]", "kind" : "val"}, {"member" : "lamp.autograd.SquaredFrobeniusMatrixNorm#<init>", "error" : "unsupported entity"}, {"label" : "a", "tail" : ": Variable", "member" : "lamp.autograd.SquaredFrobeniusMatrixNorm.a", "link" : "lamp\/autograd\/SquaredFrobeniusMatrixNorm.html#a:lamp.autograd.Variable", "kind" : "val"}, {"label" : "scope", "tail" : ": Scope", "member" : "lamp.autograd.SquaredFrobeniusMatrixNorm.scope", "link" : "lamp\/autograd\/SquaredFrobeniusMatrixNorm.html#scope:lamp.Scope", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/autograd\/SquaredFrobeniusMatrixNorm.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/SquaredFrobeniusMatrixNorm.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/SquaredFrobeniusMatrixNorm.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/SquaredFrobeniusMatrixNorm.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/SquaredFrobeniusMatrixNorm.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/SquaredFrobeniusMatrixNorm.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/SquaredFrobeniusMatrixNorm.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/SquaredFrobeniusMatrixNorm.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/SquaredFrobeniusMatrixNorm.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/SquaredFrobeniusMatrixNorm.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/SquaredFrobeniusMatrixNorm.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/SquaredFrobeniusMatrixNorm.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/SquaredFrobeniusMatrixNorm.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/SquaredFrobeniusMatrixNorm.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/SquaredFrobeniusMatrixNorm.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/SquaredFrobeniusMatrixNorm.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/SquaredFrobeniusMatrixNorm.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/autograd\/SquaredFrobeniusMatrixNorm.html", "kind" : "case class"}, {"name" : "lamp.autograd.Stack", "shortDescription" : "", "members_case class" : [{"label" : "value", "tail" : ": Variable", "member" : "lamp.autograd.Stack.value", "link" : "lamp\/autograd\/Stack.html#value:lamp.autograd.Variable", "kind" : "val"}, {"label" : "params", "tail" : ": List[(Variable, (STen, STen) => Unit)]", "member" : "lamp.autograd.Stack.params", "link" : "lamp\/autograd\/Stack.html#params:List[(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)]", "kind" : "val"}, {"member" : "lamp.autograd.Stack#<init>", "error" : "unsupported entity"}, {"label" : "dim", "tail" : ": Long", "member" : "lamp.autograd.Stack.dim", "link" : "lamp\/autograd\/Stack.html#dim:Long", "kind" : "val"}, {"label" : "a", "tail" : ": Seq[Variable]", "member" : "lamp.autograd.Stack.a", "link" : "lamp\/autograd\/Stack.html#a:Seq[lamp.autograd.Variable]", "kind" : "val"}, {"label" : "scope", "tail" : ": Scope", "member" : "lamp.autograd.Stack.scope", "link" : "lamp\/autograd\/Stack.html#scope:lamp.Scope", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/autograd\/Stack.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/Stack.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/Stack.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/Stack.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/Stack.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/Stack.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/Stack.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/Stack.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Stack.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Stack.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Stack.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/Stack.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/Stack.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/Stack.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/Stack.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/Stack.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/Stack.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/autograd\/Stack.html", "kind" : "case class"}, {"name" : "lamp.autograd.Sum", "case object" : "lamp\/autograd\/Sum$.html", "shortDescription" : "", "members_case object" : [{"label" : "asLong", "tail" : "(): Long", "member" : "lamp.autograd.Sum.asLong", "link" : "lamp\/autograd\/Sum$.html#asLong:Long", "kind" : "def"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/autograd\/Sum$.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "productElementName", "tail" : "(n: Int): String", "member" : "scala.Product.productElementName", "link" : "lamp\/autograd\/Sum$.html#productElementName(n:Int):String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/Sum$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/Sum$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/Sum$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/Sum$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/Sum$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/Sum$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/Sum$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Sum$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Sum$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Sum$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/Sum$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/Sum$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/Sum$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/autograd\/Sum$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/Sum$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/Sum$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/Sum$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "value", "tail" : ": Variable", "member" : "lamp.autograd.Sum.value", "link" : "lamp\/autograd\/Sum.html#value:lamp.autograd.Variable", "kind" : "val"}, {"label" : "params", "tail" : ": List[(Variable, (STen, STen) => Unit)]", "member" : "lamp.autograd.Sum.params", "link" : "lamp\/autograd\/Sum.html#params:List[(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)]", "kind" : "val"}, {"member" : "lamp.autograd.Sum#<init>", "error" : "unsupported entity"}, {"label" : "keepDim", "tail" : ": Boolean", "member" : "lamp.autograd.Sum.keepDim", "link" : "lamp\/autograd\/Sum.html#keepDim:Boolean", "kind" : "val"}, {"label" : "dim", "tail" : ": List[Int]", "member" : "lamp.autograd.Sum.dim", "link" : "lamp\/autograd\/Sum.html#dim:List[Int]", "kind" : "val"}, {"label" : "a", "tail" : ": Variable", "member" : "lamp.autograd.Sum.a", "link" : "lamp\/autograd\/Sum.html#a:lamp.autograd.Variable", "kind" : "val"}, {"label" : "scope", "tail" : ": Scope", "member" : "lamp.autograd.Sum.scope", "link" : "lamp\/autograd\/Sum.html#scope:lamp.Scope", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/autograd\/Sum.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/Sum.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/Sum.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/Sum.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/Sum.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/Sum.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/Sum.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/Sum.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Sum.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Sum.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Sum.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/Sum.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/Sum.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/Sum.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/Sum.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/Sum.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/Sum.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/autograd\/Sum.html", "kind" : "case class"}, {"name" : "lamp.autograd.Tan", "shortDescription" : "", "members_case class" : [{"label" : "value", "tail" : ": Variable", "member" : "lamp.autograd.Tan.value", "link" : "lamp\/autograd\/Tan.html#value:lamp.autograd.Variable", "kind" : "val"}, {"label" : "params", "tail" : ": List[(Variable, (STen, STen) => Unit)]", "member" : "lamp.autograd.Tan.params", "link" : "lamp\/autograd\/Tan.html#params:List[(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)]", "kind" : "val"}, {"member" : "lamp.autograd.Tan#<init>", "error" : "unsupported entity"}, {"label" : "a", "tail" : ": Variable", "member" : "lamp.autograd.Tan.a", "link" : "lamp\/autograd\/Tan.html#a:lamp.autograd.Variable", "kind" : "val"}, {"label" : "scope", "tail" : ": Scope", "member" : "lamp.autograd.Tan.scope", "link" : "lamp\/autograd\/Tan.html#scope:lamp.Scope", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/autograd\/Tan.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/Tan.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/Tan.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/Tan.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/Tan.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/Tan.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/Tan.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/Tan.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Tan.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Tan.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Tan.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/Tan.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/Tan.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/Tan.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/Tan.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/Tan.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/Tan.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/autograd\/Tan.html", "kind" : "case class"}, {"name" : "lamp.autograd.Tanh", "shortDescription" : "", "members_case class" : [{"label" : "value", "tail" : ": Variable", "member" : "lamp.autograd.Tanh.value", "link" : "lamp\/autograd\/Tanh.html#value:lamp.autograd.Variable", "kind" : "val"}, {"label" : "params", "tail" : ": List[(Variable, (STen, STen) => Unit)]", "member" : "lamp.autograd.Tanh.params", "link" : "lamp\/autograd\/Tanh.html#params:List[(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)]", "kind" : "val"}, {"member" : "lamp.autograd.Tanh#<init>", "error" : "unsupported entity"}, {"label" : "a", "tail" : ": Variable", "member" : "lamp.autograd.Tanh.a", "link" : "lamp\/autograd\/Tanh.html#a:lamp.autograd.Variable", "kind" : "val"}, {"label" : "scope", "tail" : ": Scope", "member" : "lamp.autograd.Tanh.scope", "link" : "lamp\/autograd\/Tanh.html#scope:lamp.Scope", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/autograd\/Tanh.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/Tanh.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/Tanh.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/Tanh.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/Tanh.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/Tanh.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/Tanh.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/Tanh.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Tanh.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Tanh.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Tanh.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/Tanh.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/Tanh.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/Tanh.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/Tanh.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/Tanh.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/Tanh.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/autograd\/Tanh.html", "kind" : "case class"}, {"name" : "lamp.autograd.ToDense", "shortDescription" : "", "members_case class" : [{"label" : "value", "tail" : ": Variable", "member" : "lamp.autograd.ToDense.value", "link" : "lamp\/autograd\/ToDense.html#value:lamp.autograd.Variable", "kind" : "val"}, {"label" : "params", "tail" : ": List[(Variable, (STen, STen) => Unit)]", "member" : "lamp.autograd.ToDense.params", "link" : "lamp\/autograd\/ToDense.html#params:List[(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)]", "kind" : "val"}, {"member" : "lamp.autograd.ToDense#<init>", "error" : "unsupported entity"}, {"label" : "sparse", "tail" : ": Variable", "member" : "lamp.autograd.ToDense.sparse", "link" : "lamp\/autograd\/ToDense.html#sparse:lamp.autograd.Variable", "kind" : "val"}, {"label" : "scope", "tail" : ": Scope", "member" : "lamp.autograd.ToDense.scope", "link" : "lamp\/autograd\/ToDense.html#scope:lamp.Scope", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/autograd\/ToDense.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/ToDense.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/ToDense.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/ToDense.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/ToDense.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/ToDense.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/ToDense.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/ToDense.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/ToDense.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/ToDense.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/ToDense.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/ToDense.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/ToDense.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/ToDense.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/ToDense.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/ToDense.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/ToDense.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/autograd\/ToDense.html", "kind" : "case class"}, {"name" : "lamp.autograd.Transpose", "shortDescription" : "", "members_case class" : [{"label" : "value", "tail" : ": Variable", "member" : "lamp.autograd.Transpose.value", "link" : "lamp\/autograd\/Transpose.html#value:lamp.autograd.Variable", "kind" : "val"}, {"label" : "params", "tail" : ": List[(Variable, (STen, STen) => Unit)]", "member" : "lamp.autograd.Transpose.params", "link" : "lamp\/autograd\/Transpose.html#params:List[(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)]", "kind" : "val"}, {"member" : "lamp.autograd.Transpose#<init>", "error" : "unsupported entity"}, {"label" : "dim2", "tail" : ": Int", "member" : "lamp.autograd.Transpose.dim2", "link" : "lamp\/autograd\/Transpose.html#dim2:Int", "kind" : "val"}, {"label" : "dim1", "tail" : ": Int", "member" : "lamp.autograd.Transpose.dim1", "link" : "lamp\/autograd\/Transpose.html#dim1:Int", "kind" : "val"}, {"label" : "a", "tail" : ": Variable", "member" : "lamp.autograd.Transpose.a", "link" : "lamp\/autograd\/Transpose.html#a:lamp.autograd.Variable", "kind" : "val"}, {"label" : "scope", "tail" : ": Scope", "member" : "lamp.autograd.Transpose.scope", "link" : "lamp\/autograd\/Transpose.html#scope:lamp.Scope", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/autograd\/Transpose.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/Transpose.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/Transpose.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/Transpose.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/Transpose.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/Transpose.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/Transpose.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/Transpose.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Transpose.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Transpose.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Transpose.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/Transpose.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/Transpose.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/Transpose.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/Transpose.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/Transpose.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/Transpose.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/autograd\/Transpose.html", "kind" : "case class"}, {"name" : "lamp.autograd.Variable", "object" : "lamp\/autograd\/Variable$.html", "members_object" : [{"label" : "sparseFromValueAndIndex", "tail" : "(values: Variable, indices: STen, dim: Seq[Long])(scope: Scope): Variable", "member" : "lamp.autograd.Variable.sparseFromValueAndIndex", "link" : "lamp\/autograd\/Variable$.html#sparseFromValueAndIndex(values:lamp.autograd.Variable,indices:lamp.STen,dim:Seq[Long])(implicitscope:lamp.Scope):lamp.autograd.Variable", "kind" : "def"}, {"label" : "where", "tail" : "(condition: STen, trueBranch: Variable, falseBranch: Variable)(scope: Scope): Variable", "member" : "lamp.autograd.Variable.where", "link" : "lamp\/autograd\/Variable$.html#where(condition:lamp.STen,trueBranch:lamp.autograd.Variable,falseBranch:lamp.autograd.Variable)(implicitscope:lamp.Scope):lamp.autograd.Variable", "kind" : "def"}, {"label" : "cat", "tail" : "(inputs: Seq[Variable], dim: Long)(scope: Scope): Variable", "member" : "lamp.autograd.Variable.cat", "link" : "lamp\/autograd\/Variable$.html#cat(inputs:Seq[lamp.autograd.Variable],dim:Long)(implicitscope:lamp.Scope):lamp.autograd.Variable", "kind" : "def"}, {"label" : "stack", "tail" : "(inputs: Seq[Variable], dim: Int)(scope: Scope): Variable", "member" : "lamp.autograd.Variable.stack", "link" : "lamp\/autograd\/Variable$.html#stack(inputs:Seq[lamp.autograd.Variable],dim:Int)(implicitscope:lamp.Scope):lamp.autograd.Variable", "kind" : "def"}, {"label" : "concatenateAddNewDim", "tail" : "(inputs: Seq[Variable])(scope: Scope): Variable", "member" : "lamp.autograd.Variable.concatenateAddNewDim", "link" : "lamp\/autograd\/Variable$.html#concatenateAddNewDim(inputs:Seq[lamp.autograd.Variable])(implicitscope:lamp.Scope):lamp.autograd.Variable", "kind" : "def"}, {"label" : "apply", "tail" : "(op: Op, value: STen)(scope: Scope): Variable", "member" : "lamp.autograd.Variable.apply", "link" : "lamp\/autograd\/Variable$.html#apply(op:lamp.autograd.Op,value:lamp.STen)(implicitscope:lamp.Scope):lamp.autograd.Variable", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/Variable$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/Variable$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/Variable$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/Variable$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/Variable$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/Variable$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/Variable$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Variable$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Variable$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Variable$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/Variable$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/Variable$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/autograd\/Variable$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/Variable$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/autograd\/Variable$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/autograd\/Variable$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/Variable$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/Variable$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/Variable$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "lamp\/autograd\/Variable.html", "kind" : "trait", "members_trait" : [{"label" : "toLongMat", "tail" : "(): Mat[Long]", "member" : "lamp.autograd.Variable.toLongMat", "link" : "lamp\/autograd\/Variable.html#toLongMat:org.saddle.Mat[Long]", "kind" : "def"}, {"label" : "toMat", "tail" : "(): Mat[Double]", "member" : "lamp.autograd.Variable.toMat", "link" : "lamp\/autograd\/Variable.html#toMat:org.saddle.Mat[Double]", "kind" : "def"}, {"label" : "choleskySolve", "tail" : "(factor: Variable, upper: Boolean)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.choleskySolve", "link" : "lamp\/autograd\/Variable.html#choleskySolve[S](factor:lamp.autograd.Variable,upper:Boolean)(implicitevidence$76:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "cholesky", "tail" : "(upper: Boolean)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.cholesky", "link" : "lamp\/autograd\/Variable.html#cholesky[S](upper:Boolean)(implicitevidence$75:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "pinv", "tail" : "(rcond: Double)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.pinv", "link" : "lamp\/autograd\/Variable.html#pinv[S](rcond:Double)(implicitevidence$74:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "inv", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.inv", "link" : "lamp\/autograd\/Variable.html#inv[S](implicitevidence$73:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "diag", "tail" : "(diagonal: Long)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.diag", "link" : "lamp\/autograd\/Variable.html#diag[S](diagonal:Long)(implicitevidence$72:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "toDense", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.toDense", "link" : "lamp\/autograd\/Variable.html#toDense[S](implicitevidence$71:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "repeatInterleave", "tail" : "(repeats: Variable, dim: Int)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.repeatInterleave", "link" : "lamp\/autograd\/Variable.html#repeatInterleave[S](repeats:lamp.autograd.Variable,dim:Int)(implicitevidence$70:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "flattenLastDimensions", "tail" : "(dims: Int)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.flattenLastDimensions", "link" : "lamp\/autograd\/Variable.html#flattenLastDimensions[S](dims:Int)(implicitevidence$69:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "flatten", "tail" : "(startDim: Int, endDim: Int)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.flatten", "link" : "lamp\/autograd\/Variable.html#flatten[S](startDim:Int,endDim:Int)(implicitevidence$68:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "flatten", "tail" : "(startDim: Int)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.flatten", "link" : "lamp\/autograd\/Variable.html#flatten[S](startDim:Int)(implicitevidence$67:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "flatten", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.flatten", "link" : "lamp\/autograd\/Variable.html#flatten[S](implicitevidence$66:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "reshape", "tail" : "(shape: List[Long])(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.reshape", "link" : "lamp\/autograd\/Variable.html#reshape[S](shape:List[Long])(implicitevidence$65:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "view", "tail" : "(shape: List[Long])(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.view", "link" : "lamp\/autograd\/Variable.html#view[S](shape:List[Long])(implicitevidence$64:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "normalize", "tail" : "(dim: List[Int], eps: Double)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.normalize", "link" : "lamp\/autograd\/Variable.html#normalize[S](dim:List[Int],eps:Double)(implicitevidence$63:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "variance", "tail" : "(dim: List[Int])(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.variance", "link" : "lamp\/autograd\/Variable.html#variance[S](dim:List[Int])(implicitevidence$62:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "mean", "tail" : "(dim: List[Int], keepDim: Boolean)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.mean", "link" : "lamp\/autograd\/Variable.html#mean[S](dim:List[Int],keepDim:Boolean)(implicitevidence$61:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "mean", "tail" : "(dim: List[Int])(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.mean", "link" : "lamp\/autograd\/Variable.html#mean[S](dim:List[Int])(implicitevidence$60:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "squaredFrobenius", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.squaredFrobenius", "link" : "lamp\/autograd\/Variable.html#squaredFrobenius[S](implicitevidence$59:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "l1Loss", "tail" : "(target: STen, reduction: Reduction)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.l1Loss", "link" : "lamp\/autograd\/Variable.html#l1Loss[S](target:lamp.STen,reduction:lamp.autograd.Reduction)(implicitevidence$58:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "mseLoss", "tail" : "(target: STen, reduction: Reduction)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.mseLoss", "link" : "lamp\/autograd\/Variable.html#mseLoss[S](target:lamp.STen,reduction:lamp.autograd.Reduction)(implicitevidence$57:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "binaryCrossEntropyWithLogitsLoss", "tail" : "(target: STen, posWeights: Option[STen], reduction: Reduction)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.binaryCrossEntropyWithLogitsLoss", "link" : "lamp\/autograd\/Variable.html#binaryCrossEntropyWithLogitsLoss[S](target:lamp.STen,posWeights:Option[lamp.STen],reduction:lamp.autograd.Reduction)(implicitevidence$56:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "nllLoss", "tail" : "(target: STen, weights: STen, reduction: Reduction, ignore: Long)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.nllLoss", "link" : "lamp\/autograd\/Variable.html#nllLoss[S](target:lamp.STen,weights:lamp.STen,reduction:lamp.autograd.Reduction,ignore:Long)(implicitevidence$55:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "crossEntropy", "tail" : "(other: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.crossEntropy", "link" : "lamp\/autograd\/Variable.html#crossEntropy[S](other:lamp.autograd.Variable)(implicitevidence$54:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "logSoftMax", "tail" : "(dim: Int)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.logSoftMax", "link" : "lamp\/autograd\/Variable.html#logSoftMax[S](dim:Int)(implicitevidence$53:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "euclideanDistance", "tail" : "(b: Variable, dim: Int)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.euclideanDistance", "link" : "lamp\/autograd\/Variable.html#euclideanDistance[S](b:lamp.autograd.Variable,dim:Int)(implicitevidence$52:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "pow", "tail" : "(exponent: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.pow", "link" : "lamp\/autograd\/Variable.html#pow[S](exponent:lamp.autograd.Variable)(implicitevidence$51:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "pow", "tail" : "(const: Double)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.pow", "link" : "lamp\/autograd\/Variable.html#pow[S](const:Double)(implicitevidence$50:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "atan", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.atan", "link" : "lamp\/autograd\/Variable.html#atan[S](implicitevidence$49:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "tanh", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.tanh", "link" : "lamp\/autograd\/Variable.html#tanh[S](implicitevidence$48:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "tan", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.tan", "link" : "lamp\/autograd\/Variable.html#tan[S](implicitevidence$47:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "cos", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.cos", "link" : "lamp\/autograd\/Variable.html#cos[S](implicitevidence$46:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "sin", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.sin", "link" : "lamp\/autograd\/Variable.html#sin[S](implicitevidence$45:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "softplus", "tail" : "(beta: Double, threshold: Double)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.softplus", "link" : "lamp\/autograd\/Variable.html#softplus[S](beta:Double,threshold:Double)(implicitevidence$44:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "log1p", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.log1p", "link" : "lamp\/autograd\/Variable.html#log1p[S](implicitevidence$43:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "log", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.log", "link" : "lamp\/autograd\/Variable.html#log[S](implicitevidence$42:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "logdet", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.logdet", "link" : "lamp\/autograd\/Variable.html#logdet[S](implicitevidence$41:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "exp", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.exp", "link" : "lamp\/autograd\/Variable.html#exp[S](implicitevidence$40:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "colSum", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.colSum", "link" : "lamp\/autograd\/Variable.html#colSum[S](implicitevidence$39:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "rowSum", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.rowSum", "link" : "lamp\/autograd\/Variable.html#rowSum[S](implicitevidence$38:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "expand", "tail" : "(shape: List[Long])(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.expand", "link" : "lamp\/autograd\/Variable.html#expand[S](shape:List[Long])(implicitevidence$37:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "expandAs", "tail" : "(other: STen)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.expandAs", "link" : "lamp\/autograd\/Variable.html#expandAs[S](other:lamp.STen)(implicitevidence$36:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "sum", "tail" : "(dim: List[Int], keepDim: Boolean)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.sum", "link" : "lamp\/autograd\/Variable.html#sum[S](dim:List[Int],keepDim:Boolean)(implicitevidence$35:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "sum", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.sum", "link" : "lamp\/autograd\/Variable.html#sum[S](implicitevidence$34:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "indexFill", "tail" : "(index: Variable, dim: Int, fillValue: Double)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.indexFill", "link" : "lamp\/autograd\/Variable.html#indexFill[S](index:lamp.autograd.Variable,dim:Int,fillValue:Double)(implicitevidence$33:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "indexAddFromSource", "tail" : "(index: Variable, dim: Int, source: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.indexAddFromSource", "link" : "lamp\/autograd\/Variable.html#indexAddFromSource[S](index:lamp.autograd.Variable,dim:Int,source:lamp.autograd.Variable)(implicitevidence$32:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "indexAdd", "tail" : "(index: Variable, dim: Int, maxIndex: Long)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.indexAdd", "link" : "lamp\/autograd\/Variable.html#indexAdd[S](index:lamp.autograd.Variable,dim:Int,maxIndex:Long)(implicitevidence$31:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "scatterAdd", "tail" : "(index: Variable, dim: Int, maxIndex: Long)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.scatterAdd", "link" : "lamp\/autograd\/Variable.html#scatterAdd[S](index:lamp.autograd.Variable,dim:Int,maxIndex:Long)(implicitevidence$30:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "dropout", "tail" : "(prob: Double, train: Boolean)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.dropout", "link" : "lamp\/autograd\/Variable.html#dropout[S](prob:Double,train:Boolean)(implicitevidence$29:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "sigmoid", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.sigmoid", "link" : "lamp\/autograd\/Variable.html#sigmoid[S](implicitevidence$28:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "gelu", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.gelu", "link" : "lamp\/autograd\/Variable.html#gelu[S](implicitevidence$27:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "swish1", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.swish1", "link" : "lamp\/autograd\/Variable.html#swish1[S](implicitevidence$26:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "leakyRelu", "tail" : "(negativeSlope: Double)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.leakyRelu", "link" : "lamp\/autograd\/Variable.html#leakyRelu[S](negativeSlope:Double)(implicitevidence$25:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "relu", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.relu", "link" : "lamp\/autograd\/Variable.html#relu[S](implicitevidence$24:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "bmm", "tail" : "(other: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.bmm", "link" : "lamp\/autograd\/Variable.html#bmm[S](other:lamp.autograd.Variable)(implicitevidence$23:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "mm", "tail" : "(other: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.mm", "link" : "lamp\/autograd\/Variable.html#mm[S](other:lamp.autograd.Variable)(implicitevidence$22:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "cross", "tail" : "(other: Variable, dim: Int)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.cross", "link" : "lamp\/autograd\/Variable.html#cross[S](other:lamp.autograd.Variable,dim:Int)(implicitevidence$21:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "\/", "tail" : "(other: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.\/", "link" : "lamp\/autograd\/Variable.html#\/[S](other:lamp.autograd.Variable)(implicitevidence$20:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "*", "tail" : "(other: Double)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.*", "link" : "lamp\/autograd\/Variable.html#*[S](other:Double)(implicitevidence$19:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "*", "tail" : "(other: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.*", "link" : "lamp\/autograd\/Variable.html#*[S](other:lamp.autograd.Variable)(implicitevidence$18:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "-", "tail" : "(other: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.-", "link" : "lamp\/autograd\/Variable.html#-[S](other:lamp.autograd.Variable)(implicitevidence$17:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "+", "tail" : "(other: Double)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.+", "link" : "lamp\/autograd\/Variable.html#+[S](other:Double)(implicitevidence$16:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "+", "tail" : "(other: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.+", "link" : "lamp\/autograd\/Variable.html#+[S](other:lamp.autograd.Variable)(implicitevidence$15:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "cat", "tail" : "(other: Variable, dim: Long)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.cat", "link" : "lamp\/autograd\/Variable.html#cat[S](other:lamp.autograd.Variable,dim:Long)(implicitevidence$14:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "cast", "tail" : "(precision: FloatingPointPrecision)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.cast", "link" : "lamp\/autograd\/Variable.html#cast[S](precision:lamp.FloatingPointPrecision)(implicitevidence$13:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "makeBooleanMask", "tail" : "(q: Long)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.makeBooleanMask", "link" : "lamp\/autograd\/Variable.html#makeBooleanMask[S](q:Long)(implicitevidence$12:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "maskSelect", "tail" : "(mask: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.maskSelect", "link" : "lamp\/autograd\/Variable.html#maskSelect[S](mask:lamp.autograd.Variable)(implicitevidence$11:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "maskFill", "tail" : "(mask: Variable, fill: Double)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.maskFill", "link" : "lamp\/autograd\/Variable.html#maskFill[S](mask:lamp.autograd.Variable,fill:Double)(implicitevidence$10:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "assign", "tail" : "(other: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.assign", "link" : "lamp\/autograd\/Variable.html#assign[S](other:lamp.autograd.Variable)(implicitevidence$9:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "oneHot", "tail" : "(numClasses: Int)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.oneHot", "link" : "lamp\/autograd\/Variable.html#oneHot[S](numClasses:Int)(implicitevidence$8:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "argmax", "tail" : "(dim: Long, keepDim: Boolean)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.argmax", "link" : "lamp\/autograd\/Variable.html#argmax[S](dim:Long,keepDim:Boolean)(implicitevidence$7:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "indexSelect", "tail" : "(dim: Long, index: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.indexSelect", "link" : "lamp\/autograd\/Variable.html#indexSelect[S](dim:Long,index:lamp.autograd.Variable)(implicitevidence$6:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "select", "tail" : "(dim: Long, index: Long)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.select", "link" : "lamp\/autograd\/Variable.html#select[S](dim:Long,index:Long)(implicitevidence$5:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "t", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.t", "link" : "lamp\/autograd\/Variable.html#t[S](implicitevidence$4:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "transpose", "tail" : "(dim1: Int, dim2: Int)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.transpose", "link" : "lamp\/autograd\/Variable.html#transpose[S](dim1:Int,dim2:Int)(implicitevidence$3:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "zipBackward", "tail" : "(fn: (STen, STen) => Unit): (Variable, (STen, STen) => Unit)", "member" : "lamp.autograd.Variable.zipBackward", "link" : "lamp\/autograd\/Variable.html#zipBackward(fn:(lamp.STen,lamp.STen)=>Unit):(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)", "kind" : "def"}, {"label" : "backprop", "tail" : "(): Unit", "member" : "lamp.autograd.Variable.backprop", "link" : "lamp\/autograd\/Variable.html#backprop():Unit", "kind" : "def"}, {"label" : "graphMemoryAllocationReport", "tail" : "(): GraphMemoryAllocationReport", "member" : "lamp.autograd.Variable.graphMemoryAllocationReport", "link" : "lamp\/autograd\/Variable.html#graphMemoryAllocationReport:lamp.autograd.GraphMemoryAllocationReport", "kind" : "def"}, {"label" : "wengert", "tail" : ": Seq[Variable]", "member" : "lamp.autograd.Variable.wengert", "link" : "lamp\/autograd\/Variable.html#wengert:Seq[lamp.autograd.Variable]", "kind" : "lazy val"}, {"label" : "zeroGrad", "tail" : "(): Unit", "member" : "lamp.autograd.Variable.zeroGrad", "link" : "lamp\/autograd\/Variable.html#zeroGrad():Unit", "kind" : "def"}, {"label" : "withGrad", "tail" : "(arg0: Sc[S]): ConstantWithGrad", "member" : "lamp.autograd.Variable.withGrad", "link" : "lamp\/autograd\/Variable.html#withGrad[S](implicitevidence$2:lamp.Sc[S]):lamp.autograd.ConstantWithGrad", "kind" : "def"}, {"label" : "detached", "tail" : "(): Constant", "member" : "lamp.autograd.Variable.detached", "link" : "lamp\/autograd\/Variable.html#detached:lamp.autograd.Constant", "kind" : "def"}, {"label" : "id", "tail" : ": UUID", "member" : "lamp.autograd.Variable.id", "link" : "lamp\/autograd\/Variable.html#id:java.util.UUID", "kind" : "val"}, {"label" : "shape", "tail" : "(): List[Long]", "member" : "lamp.autograd.Variable.shape", "link" : "lamp\/autograd\/Variable.html#shape:List[Long]", "kind" : "def"}, {"label" : "sizes", "tail" : ": List[Long]", "member" : "lamp.autograd.Variable.sizes", "link" : "lamp\/autograd\/Variable.html#sizes:List[Long]", "kind" : "val"}, {"label" : "options", "tail" : "(arg0: Sc[S]): STenOptions", "member" : "lamp.autograd.Variable.options", "link" : "lamp\/autograd\/Variable.html#options[S](implicitevidence$1:lamp.Sc[S]):lamp.STenOptions", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "lamp.autograd.Variable.toString", "link" : "lamp\/autograd\/Variable.html#toString():String", "kind" : "def"}, {"label" : "needsGrad", "tail" : "(): Boolean", "member" : "lamp.autograd.Variable.needsGrad", "link" : "lamp\/autograd\/Variable.html#needsGrad:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/Variable.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/Variable.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/Variable.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/Variable.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/Variable.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/Variable.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/Variable.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Variable.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Variable.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Variable.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/Variable.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/Variable.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/Variable.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/autograd\/Variable.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/autograd\/Variable.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/Variable.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/Variable.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/Variable.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "partialDerivative", "tail" : "(): Option[STen]", "member" : "lamp.autograd.Variable.partialDerivative", "link" : "lamp\/autograd\/Variable.html#partialDerivative:Option[lamp.STen]", "kind" : "abstract def"}, {"label" : "value", "tail" : "(): STen", "member" : "lamp.autograd.Variable.value", "link" : "lamp\/autograd\/Variable.html#value:lamp.STen", "kind" : "abstract def"}, {"label" : "op", "tail" : "(): Option[Op]", "member" : "lamp.autograd.Variable.op", "link" : "lamp\/autograd\/Variable.html#op:Option[lamp.autograd.Op]", "kind" : "abstract def"}], "shortDescription" : "A value of a tensor valued function, a vertex in the computational graph."}, {"name" : "lamp.autograd.VariableNonConstant", "shortDescription" : "A variable whose parent is not empty, neither its partial derivative", "object" : "lamp\/autograd\/VariableNonConstant$.html", "members_object" : [{"label" : "movable", "tail" : ": Movable[VariableNonConstant]", "member" : "lamp.autograd.VariableNonConstant.movable", "link" : "lamp\/autograd\/VariableNonConstant$.html#movable:lamp.Movable[lamp.autograd.VariableNonConstant]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/VariableNonConstant$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/VariableNonConstant$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/VariableNonConstant$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/VariableNonConstant$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/VariableNonConstant$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/VariableNonConstant$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/VariableNonConstant$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/VariableNonConstant$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/VariableNonConstant$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/VariableNonConstant$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/VariableNonConstant$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/VariableNonConstant$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/autograd\/VariableNonConstant$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/VariableNonConstant$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/autograd\/VariableNonConstant$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/autograd\/VariableNonConstant$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/VariableNonConstant$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/VariableNonConstant$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/VariableNonConstant$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "partialDerivative", "tail" : ": Option[STen]", "member" : "lamp.autograd.VariableNonConstant.partialDerivative", "link" : "lamp\/autograd\/VariableNonConstant.html#partialDerivative:Option[lamp.STen]", "kind" : "val"}, {"label" : "op", "tail" : ": Some[Op]", "member" : "lamp.autograd.VariableNonConstant.op", "link" : "lamp\/autograd\/VariableNonConstant.html#op:Some[lamp.autograd.Op]", "kind" : "val"}, {"member" : "lamp.autograd.VariableNonConstant#<init>", "error" : "unsupported entity"}, {"label" : "pd", "tail" : ": STen", "member" : "lamp.autograd.VariableNonConstant.pd", "link" : "lamp\/autograd\/VariableNonConstant.html#pd:lamp.STen", "kind" : "val"}, {"label" : "value", "tail" : ": STen", "member" : "lamp.autograd.VariableNonConstant.value", "link" : "lamp\/autograd\/VariableNonConstant.html#value:lamp.STen", "kind" : "val"}, {"label" : "op1", "tail" : ": Op", "member" : "lamp.autograd.VariableNonConstant.op1", "link" : "lamp\/autograd\/VariableNonConstant.html#op1:lamp.autograd.Op", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/autograd\/VariableNonConstant.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "toLongMat", "tail" : "(): Mat[Long]", "member" : "lamp.autograd.Variable.toLongMat", "link" : "lamp\/autograd\/VariableNonConstant.html#toLongMat:org.saddle.Mat[Long]", "kind" : "def"}, {"label" : "toMat", "tail" : "(): Mat[Double]", "member" : "lamp.autograd.Variable.toMat", "link" : "lamp\/autograd\/VariableNonConstant.html#toMat:org.saddle.Mat[Double]", "kind" : "def"}, {"label" : "choleskySolve", "tail" : "(factor: Variable, upper: Boolean)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.choleskySolve", "link" : "lamp\/autograd\/VariableNonConstant.html#choleskySolve[S](factor:lamp.autograd.Variable,upper:Boolean)(implicitevidence$76:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "cholesky", "tail" : "(upper: Boolean)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.cholesky", "link" : "lamp\/autograd\/VariableNonConstant.html#cholesky[S](upper:Boolean)(implicitevidence$75:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "pinv", "tail" : "(rcond: Double)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.pinv", "link" : "lamp\/autograd\/VariableNonConstant.html#pinv[S](rcond:Double)(implicitevidence$74:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "inv", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.inv", "link" : "lamp\/autograd\/VariableNonConstant.html#inv[S](implicitevidence$73:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "diag", "tail" : "(diagonal: Long)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.diag", "link" : "lamp\/autograd\/VariableNonConstant.html#diag[S](diagonal:Long)(implicitevidence$72:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "toDense", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.toDense", "link" : "lamp\/autograd\/VariableNonConstant.html#toDense[S](implicitevidence$71:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "repeatInterleave", "tail" : "(repeats: Variable, dim: Int)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.repeatInterleave", "link" : "lamp\/autograd\/VariableNonConstant.html#repeatInterleave[S](repeats:lamp.autograd.Variable,dim:Int)(implicitevidence$70:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "flattenLastDimensions", "tail" : "(dims: Int)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.flattenLastDimensions", "link" : "lamp\/autograd\/VariableNonConstant.html#flattenLastDimensions[S](dims:Int)(implicitevidence$69:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "flatten", "tail" : "(startDim: Int, endDim: Int)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.flatten", "link" : "lamp\/autograd\/VariableNonConstant.html#flatten[S](startDim:Int,endDim:Int)(implicitevidence$68:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "flatten", "tail" : "(startDim: Int)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.flatten", "link" : "lamp\/autograd\/VariableNonConstant.html#flatten[S](startDim:Int)(implicitevidence$67:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "flatten", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.flatten", "link" : "lamp\/autograd\/VariableNonConstant.html#flatten[S](implicitevidence$66:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "reshape", "tail" : "(shape: List[Long])(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.reshape", "link" : "lamp\/autograd\/VariableNonConstant.html#reshape[S](shape:List[Long])(implicitevidence$65:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "view", "tail" : "(shape: List[Long])(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.view", "link" : "lamp\/autograd\/VariableNonConstant.html#view[S](shape:List[Long])(implicitevidence$64:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "normalize", "tail" : "(dim: List[Int], eps: Double)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.normalize", "link" : "lamp\/autograd\/VariableNonConstant.html#normalize[S](dim:List[Int],eps:Double)(implicitevidence$63:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "variance", "tail" : "(dim: List[Int])(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.variance", "link" : "lamp\/autograd\/VariableNonConstant.html#variance[S](dim:List[Int])(implicitevidence$62:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "mean", "tail" : "(dim: List[Int], keepDim: Boolean)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.mean", "link" : "lamp\/autograd\/VariableNonConstant.html#mean[S](dim:List[Int],keepDim:Boolean)(implicitevidence$61:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "mean", "tail" : "(dim: List[Int])(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.mean", "link" : "lamp\/autograd\/VariableNonConstant.html#mean[S](dim:List[Int])(implicitevidence$60:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "squaredFrobenius", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.squaredFrobenius", "link" : "lamp\/autograd\/VariableNonConstant.html#squaredFrobenius[S](implicitevidence$59:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "l1Loss", "tail" : "(target: STen, reduction: Reduction)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.l1Loss", "link" : "lamp\/autograd\/VariableNonConstant.html#l1Loss[S](target:lamp.STen,reduction:lamp.autograd.Reduction)(implicitevidence$58:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "mseLoss", "tail" : "(target: STen, reduction: Reduction)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.mseLoss", "link" : "lamp\/autograd\/VariableNonConstant.html#mseLoss[S](target:lamp.STen,reduction:lamp.autograd.Reduction)(implicitevidence$57:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "binaryCrossEntropyWithLogitsLoss", "tail" : "(target: STen, posWeights: Option[STen], reduction: Reduction)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.binaryCrossEntropyWithLogitsLoss", "link" : "lamp\/autograd\/VariableNonConstant.html#binaryCrossEntropyWithLogitsLoss[S](target:lamp.STen,posWeights:Option[lamp.STen],reduction:lamp.autograd.Reduction)(implicitevidence$56:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "nllLoss", "tail" : "(target: STen, weights: STen, reduction: Reduction, ignore: Long)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.nllLoss", "link" : "lamp\/autograd\/VariableNonConstant.html#nllLoss[S](target:lamp.STen,weights:lamp.STen,reduction:lamp.autograd.Reduction,ignore:Long)(implicitevidence$55:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "crossEntropy", "tail" : "(other: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.crossEntropy", "link" : "lamp\/autograd\/VariableNonConstant.html#crossEntropy[S](other:lamp.autograd.Variable)(implicitevidence$54:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "logSoftMax", "tail" : "(dim: Int)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.logSoftMax", "link" : "lamp\/autograd\/VariableNonConstant.html#logSoftMax[S](dim:Int)(implicitevidence$53:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "euclideanDistance", "tail" : "(b: Variable, dim: Int)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.euclideanDistance", "link" : "lamp\/autograd\/VariableNonConstant.html#euclideanDistance[S](b:lamp.autograd.Variable,dim:Int)(implicitevidence$52:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "pow", "tail" : "(exponent: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.pow", "link" : "lamp\/autograd\/VariableNonConstant.html#pow[S](exponent:lamp.autograd.Variable)(implicitevidence$51:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "pow", "tail" : "(const: Double)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.pow", "link" : "lamp\/autograd\/VariableNonConstant.html#pow[S](const:Double)(implicitevidence$50:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "atan", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.atan", "link" : "lamp\/autograd\/VariableNonConstant.html#atan[S](implicitevidence$49:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "tanh", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.tanh", "link" : "lamp\/autograd\/VariableNonConstant.html#tanh[S](implicitevidence$48:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "tan", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.tan", "link" : "lamp\/autograd\/VariableNonConstant.html#tan[S](implicitevidence$47:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "cos", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.cos", "link" : "lamp\/autograd\/VariableNonConstant.html#cos[S](implicitevidence$46:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "sin", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.sin", "link" : "lamp\/autograd\/VariableNonConstant.html#sin[S](implicitevidence$45:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "softplus", "tail" : "(beta: Double, threshold: Double)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.softplus", "link" : "lamp\/autograd\/VariableNonConstant.html#softplus[S](beta:Double,threshold:Double)(implicitevidence$44:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "log1p", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.log1p", "link" : "lamp\/autograd\/VariableNonConstant.html#log1p[S](implicitevidence$43:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "log", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.log", "link" : "lamp\/autograd\/VariableNonConstant.html#log[S](implicitevidence$42:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "logdet", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.logdet", "link" : "lamp\/autograd\/VariableNonConstant.html#logdet[S](implicitevidence$41:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "exp", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.exp", "link" : "lamp\/autograd\/VariableNonConstant.html#exp[S](implicitevidence$40:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "colSum", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.colSum", "link" : "lamp\/autograd\/VariableNonConstant.html#colSum[S](implicitevidence$39:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "rowSum", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.rowSum", "link" : "lamp\/autograd\/VariableNonConstant.html#rowSum[S](implicitevidence$38:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "expand", "tail" : "(shape: List[Long])(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.expand", "link" : "lamp\/autograd\/VariableNonConstant.html#expand[S](shape:List[Long])(implicitevidence$37:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "expandAs", "tail" : "(other: STen)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.expandAs", "link" : "lamp\/autograd\/VariableNonConstant.html#expandAs[S](other:lamp.STen)(implicitevidence$36:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "sum", "tail" : "(dim: List[Int], keepDim: Boolean)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.sum", "link" : "lamp\/autograd\/VariableNonConstant.html#sum[S](dim:List[Int],keepDim:Boolean)(implicitevidence$35:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "sum", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.sum", "link" : "lamp\/autograd\/VariableNonConstant.html#sum[S](implicitevidence$34:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "indexFill", "tail" : "(index: Variable, dim: Int, fillValue: Double)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.indexFill", "link" : "lamp\/autograd\/VariableNonConstant.html#indexFill[S](index:lamp.autograd.Variable,dim:Int,fillValue:Double)(implicitevidence$33:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "indexAddFromSource", "tail" : "(index: Variable, dim: Int, source: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.indexAddFromSource", "link" : "lamp\/autograd\/VariableNonConstant.html#indexAddFromSource[S](index:lamp.autograd.Variable,dim:Int,source:lamp.autograd.Variable)(implicitevidence$32:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "indexAdd", "tail" : "(index: Variable, dim: Int, maxIndex: Long)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.indexAdd", "link" : "lamp\/autograd\/VariableNonConstant.html#indexAdd[S](index:lamp.autograd.Variable,dim:Int,maxIndex:Long)(implicitevidence$31:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "scatterAdd", "tail" : "(index: Variable, dim: Int, maxIndex: Long)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.scatterAdd", "link" : "lamp\/autograd\/VariableNonConstant.html#scatterAdd[S](index:lamp.autograd.Variable,dim:Int,maxIndex:Long)(implicitevidence$30:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "dropout", "tail" : "(prob: Double, train: Boolean)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.dropout", "link" : "lamp\/autograd\/VariableNonConstant.html#dropout[S](prob:Double,train:Boolean)(implicitevidence$29:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "sigmoid", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.sigmoid", "link" : "lamp\/autograd\/VariableNonConstant.html#sigmoid[S](implicitevidence$28:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "gelu", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.gelu", "link" : "lamp\/autograd\/VariableNonConstant.html#gelu[S](implicitevidence$27:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "swish1", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.swish1", "link" : "lamp\/autograd\/VariableNonConstant.html#swish1[S](implicitevidence$26:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "leakyRelu", "tail" : "(negativeSlope: Double)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.leakyRelu", "link" : "lamp\/autograd\/VariableNonConstant.html#leakyRelu[S](negativeSlope:Double)(implicitevidence$25:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "relu", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.relu", "link" : "lamp\/autograd\/VariableNonConstant.html#relu[S](implicitevidence$24:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "bmm", "tail" : "(other: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.bmm", "link" : "lamp\/autograd\/VariableNonConstant.html#bmm[S](other:lamp.autograd.Variable)(implicitevidence$23:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "mm", "tail" : "(other: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.mm", "link" : "lamp\/autograd\/VariableNonConstant.html#mm[S](other:lamp.autograd.Variable)(implicitevidence$22:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "cross", "tail" : "(other: Variable, dim: Int)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.cross", "link" : "lamp\/autograd\/VariableNonConstant.html#cross[S](other:lamp.autograd.Variable,dim:Int)(implicitevidence$21:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "\/", "tail" : "(other: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.\/", "link" : "lamp\/autograd\/VariableNonConstant.html#\/[S](other:lamp.autograd.Variable)(implicitevidence$20:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "*", "tail" : "(other: Double)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.*", "link" : "lamp\/autograd\/VariableNonConstant.html#*[S](other:Double)(implicitevidence$19:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "*", "tail" : "(other: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.*", "link" : "lamp\/autograd\/VariableNonConstant.html#*[S](other:lamp.autograd.Variable)(implicitevidence$18:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "-", "tail" : "(other: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.-", "link" : "lamp\/autograd\/VariableNonConstant.html#-[S](other:lamp.autograd.Variable)(implicitevidence$17:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "+", "tail" : "(other: Double)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.+", "link" : "lamp\/autograd\/VariableNonConstant.html#+[S](other:Double)(implicitevidence$16:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "+", "tail" : "(other: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.+", "link" : "lamp\/autograd\/VariableNonConstant.html#+[S](other:lamp.autograd.Variable)(implicitevidence$15:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "cat", "tail" : "(other: Variable, dim: Long)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.cat", "link" : "lamp\/autograd\/VariableNonConstant.html#cat[S](other:lamp.autograd.Variable,dim:Long)(implicitevidence$14:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "cast", "tail" : "(precision: FloatingPointPrecision)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.cast", "link" : "lamp\/autograd\/VariableNonConstant.html#cast[S](precision:lamp.FloatingPointPrecision)(implicitevidence$13:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "makeBooleanMask", "tail" : "(q: Long)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.makeBooleanMask", "link" : "lamp\/autograd\/VariableNonConstant.html#makeBooleanMask[S](q:Long)(implicitevidence$12:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "maskSelect", "tail" : "(mask: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.maskSelect", "link" : "lamp\/autograd\/VariableNonConstant.html#maskSelect[S](mask:lamp.autograd.Variable)(implicitevidence$11:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "maskFill", "tail" : "(mask: Variable, fill: Double)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.maskFill", "link" : "lamp\/autograd\/VariableNonConstant.html#maskFill[S](mask:lamp.autograd.Variable,fill:Double)(implicitevidence$10:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "assign", "tail" : "(other: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.assign", "link" : "lamp\/autograd\/VariableNonConstant.html#assign[S](other:lamp.autograd.Variable)(implicitevidence$9:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "oneHot", "tail" : "(numClasses: Int)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.oneHot", "link" : "lamp\/autograd\/VariableNonConstant.html#oneHot[S](numClasses:Int)(implicitevidence$8:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "argmax", "tail" : "(dim: Long, keepDim: Boolean)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.argmax", "link" : "lamp\/autograd\/VariableNonConstant.html#argmax[S](dim:Long,keepDim:Boolean)(implicitevidence$7:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "indexSelect", "tail" : "(dim: Long, index: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.indexSelect", "link" : "lamp\/autograd\/VariableNonConstant.html#indexSelect[S](dim:Long,index:lamp.autograd.Variable)(implicitevidence$6:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "select", "tail" : "(dim: Long, index: Long)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.select", "link" : "lamp\/autograd\/VariableNonConstant.html#select[S](dim:Long,index:Long)(implicitevidence$5:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "t", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.t", "link" : "lamp\/autograd\/VariableNonConstant.html#t[S](implicitevidence$4:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "transpose", "tail" : "(dim1: Int, dim2: Int)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.transpose", "link" : "lamp\/autograd\/VariableNonConstant.html#transpose[S](dim1:Int,dim2:Int)(implicitevidence$3:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "zipBackward", "tail" : "(fn: (STen, STen) => Unit): (Variable, (STen, STen) => Unit)", "member" : "lamp.autograd.Variable.zipBackward", "link" : "lamp\/autograd\/VariableNonConstant.html#zipBackward(fn:(lamp.STen,lamp.STen)=>Unit):(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)", "kind" : "def"}, {"label" : "backprop", "tail" : "(): Unit", "member" : "lamp.autograd.Variable.backprop", "link" : "lamp\/autograd\/VariableNonConstant.html#backprop():Unit", "kind" : "def"}, {"label" : "graphMemoryAllocationReport", "tail" : "(): GraphMemoryAllocationReport", "member" : "lamp.autograd.Variable.graphMemoryAllocationReport", "link" : "lamp\/autograd\/VariableNonConstant.html#graphMemoryAllocationReport:lamp.autograd.GraphMemoryAllocationReport", "kind" : "def"}, {"label" : "wengert", "tail" : ": Seq[Variable]", "member" : "lamp.autograd.Variable.wengert", "link" : "lamp\/autograd\/VariableNonConstant.html#wengert:Seq[lamp.autograd.Variable]", "kind" : "lazy val"}, {"label" : "zeroGrad", "tail" : "(): Unit", "member" : "lamp.autograd.Variable.zeroGrad", "link" : "lamp\/autograd\/VariableNonConstant.html#zeroGrad():Unit", "kind" : "def"}, {"label" : "withGrad", "tail" : "(arg0: Sc[S]): ConstantWithGrad", "member" : "lamp.autograd.Variable.withGrad", "link" : "lamp\/autograd\/VariableNonConstant.html#withGrad[S](implicitevidence$2:lamp.Sc[S]):lamp.autograd.ConstantWithGrad", "kind" : "def"}, {"label" : "detached", "tail" : "(): Constant", "member" : "lamp.autograd.Variable.detached", "link" : "lamp\/autograd\/VariableNonConstant.html#detached:lamp.autograd.Constant", "kind" : "def"}, {"label" : "id", "tail" : ": UUID", "member" : "lamp.autograd.Variable.id", "link" : "lamp\/autograd\/VariableNonConstant.html#id:java.util.UUID", "kind" : "val"}, {"label" : "shape", "tail" : "(): List[Long]", "member" : "lamp.autograd.Variable.shape", "link" : "lamp\/autograd\/VariableNonConstant.html#shape:List[Long]", "kind" : "def"}, {"label" : "sizes", "tail" : ": List[Long]", "member" : "lamp.autograd.Variable.sizes", "link" : "lamp\/autograd\/VariableNonConstant.html#sizes:List[Long]", "kind" : "val"}, {"label" : "options", "tail" : "(arg0: Sc[S]): STenOptions", "member" : "lamp.autograd.Variable.options", "link" : "lamp\/autograd\/VariableNonConstant.html#options[S](implicitevidence$1:lamp.Sc[S]):lamp.STenOptions", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "lamp.autograd.Variable.toString", "link" : "lamp\/autograd\/VariableNonConstant.html#toString():String", "kind" : "def"}, {"label" : "needsGrad", "tail" : "(): Boolean", "member" : "lamp.autograd.Variable.needsGrad", "link" : "lamp\/autograd\/VariableNonConstant.html#needsGrad:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/VariableNonConstant.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/VariableNonConstant.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/VariableNonConstant.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/VariableNonConstant.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/VariableNonConstant.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/VariableNonConstant.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/VariableNonConstant.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/VariableNonConstant.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/VariableNonConstant.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/VariableNonConstant.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/VariableNonConstant.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/VariableNonConstant.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/VariableNonConstant.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/VariableNonConstant.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/VariableNonConstant.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/VariableNonConstant.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/autograd\/VariableNonConstant.html", "kind" : "case class"}, {"name" : "lamp.autograd.Variance", "shortDescription" : "", "members_case class" : [{"label" : "value", "tail" : ": Variable", "member" : "lamp.autograd.Variance.value", "link" : "lamp\/autograd\/Variance.html#value:lamp.autograd.Variable", "kind" : "val"}, {"label" : "m", "tail" : ": STen", "member" : "lamp.autograd.Variance.m", "link" : "lamp\/autograd\/Variance.html#m:lamp.STen", "kind" : "val"}, {"label" : "v", "tail" : ": STen", "member" : "lamp.autograd.Variance.v", "link" : "lamp\/autograd\/Variance.html#v:lamp.STen", "kind" : "val"}, {"label" : "params", "tail" : ": List[(Variable, (STen, STen) => Unit)]", "member" : "lamp.autograd.Variance.params", "link" : "lamp\/autograd\/Variance.html#params:List[(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)]", "kind" : "val"}, {"member" : "lamp.autograd.Variance#<init>", "error" : "unsupported entity"}, {"label" : "dim", "tail" : ": List[Int]", "member" : "lamp.autograd.Variance.dim", "link" : "lamp\/autograd\/Variance.html#dim:List[Int]", "kind" : "val"}, {"label" : "a", "tail" : ": Variable", "member" : "lamp.autograd.Variance.a", "link" : "lamp\/autograd\/Variance.html#a:lamp.autograd.Variable", "kind" : "val"}, {"label" : "scope", "tail" : ": Scope", "member" : "lamp.autograd.Variance.scope", "link" : "lamp\/autograd\/Variance.html#scope:lamp.Scope", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/autograd\/Variance.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/Variance.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/Variance.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/Variance.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/Variance.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/Variance.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/Variance.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/Variance.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Variance.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Variance.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Variance.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/Variance.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/Variance.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/Variance.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/Variance.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/Variance.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/Variance.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/autograd\/Variance.html", "kind" : "case class"}, {"name" : "lamp.autograd.View", "shortDescription" : "", "members_case class" : [{"label" : "value", "tail" : ": Variable", "member" : "lamp.autograd.View.value", "link" : "lamp\/autograd\/View.html#value:lamp.autograd.Variable", "kind" : "val"}, {"label" : "params", "tail" : ": List[(Variable, (STen, STen) => Unit)]", "member" : "lamp.autograd.View.params", "link" : "lamp\/autograd\/View.html#params:List[(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)]", "kind" : "val"}, {"member" : "lamp.autograd.View#<init>", "error" : "unsupported entity"}, {"label" : "shape", "tail" : ": Array[Long]", "member" : "lamp.autograd.View.shape", "link" : "lamp\/autograd\/View.html#shape:Array[Long]", "kind" : "val"}, {"label" : "a", "tail" : ": Variable", "member" : "lamp.autograd.View.a", "link" : "lamp\/autograd\/View.html#a:lamp.autograd.Variable", "kind" : "val"}, {"label" : "scope", "tail" : ": Scope", "member" : "lamp.autograd.View.scope", "link" : "lamp\/autograd\/View.html#scope:lamp.Scope", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/autograd\/View.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/View.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/View.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/View.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/View.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/View.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/View.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/View.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/View.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/View.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/View.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/View.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/View.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/View.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/View.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/View.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/View.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/autograd\/View.html", "kind" : "case class"}, {"name" : "lamp.autograd.WeightNorm", "shortDescription" : "", "members_case class" : [{"label" : "value", "tail" : ": Variable", "member" : "lamp.autograd.WeightNorm.value", "link" : "lamp\/autograd\/WeightNorm.html#value:lamp.autograd.Variable", "kind" : "val"}, {"label" : "w", "tail" : ": Tensor", "member" : "lamp.autograd.WeightNorm.w", "link" : "lamp\/autograd\/WeightNorm.html#w:aten.Tensor", "kind" : "val"}, {"label" : "norm", "tail" : ": Tensor", "member" : "lamp.autograd.WeightNorm.norm", "link" : "lamp\/autograd\/WeightNorm.html#norm:aten.Tensor", "kind" : "val"}, {"label" : "params", "tail" : ": List[(Variable, (STen, STen) => Unit)]", "member" : "lamp.autograd.WeightNorm.params", "link" : "lamp\/autograd\/WeightNorm.html#params:List[(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)]", "kind" : "val"}, {"label" : "gradg", "tail" : "(p: Tensor): Tensor", "member" : "lamp.autograd.WeightNorm.gradg", "link" : "lamp\/autograd\/WeightNorm.html#gradg(p:aten.Tensor):aten.Tensor", "kind" : "def"}, {"member" : "lamp.autograd.WeightNorm#<init>", "error" : "unsupported entity"}, {"label" : "dim", "tail" : ": Long", "member" : "lamp.autograd.WeightNorm.dim", "link" : "lamp\/autograd\/WeightNorm.html#dim:Long", "kind" : "val"}, {"label" : "g", "tail" : ": Variable", "member" : "lamp.autograd.WeightNorm.g", "link" : "lamp\/autograd\/WeightNorm.html#g:lamp.autograd.Variable", "kind" : "val"}, {"label" : "v", "tail" : ": Variable", "member" : "lamp.autograd.WeightNorm.v", "link" : "lamp\/autograd\/WeightNorm.html#v:lamp.autograd.Variable", "kind" : "val"}, {"label" : "scope", "tail" : ": Scope", "member" : "lamp.autograd.WeightNorm.scope", "link" : "lamp\/autograd\/WeightNorm.html#scope:lamp.Scope", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/autograd\/WeightNorm.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/WeightNorm.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/WeightNorm.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/WeightNorm.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/WeightNorm.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/WeightNorm.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/WeightNorm.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/WeightNorm.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/WeightNorm.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/WeightNorm.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/WeightNorm.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/WeightNorm.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/WeightNorm.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/WeightNorm.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/WeightNorm.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/WeightNorm.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/WeightNorm.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/autograd\/WeightNorm.html", "kind" : "case class"}, {"name" : "lamp.autograd.Where", "shortDescription" : "", "members_case class" : [{"label" : "value", "tail" : ": Variable", "member" : "lamp.autograd.Where.value", "link" : "lamp\/autograd\/Where.html#value:lamp.autograd.Variable", "kind" : "val"}, {"label" : "params", "tail" : ": List[(Variable, (STen, STen) => Unit)]", "member" : "lamp.autograd.Where.params", "link" : "lamp\/autograd\/Where.html#params:List[(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)]", "kind" : "val"}, {"member" : "lamp.autograd.Where#<init>", "error" : "unsupported entity"}, {"label" : "falseBranch", "tail" : ": Variable", "member" : "lamp.autograd.Where.falseBranch", "link" : "lamp\/autograd\/Where.html#falseBranch:lamp.autograd.Variable", "kind" : "val"}, {"label" : "trueBranch", "tail" : ": Variable", "member" : "lamp.autograd.Where.trueBranch", "link" : "lamp\/autograd\/Where.html#trueBranch:lamp.autograd.Variable", "kind" : "val"}, {"label" : "condition", "tail" : ": STen", "member" : "lamp.autograd.Where.condition", "link" : "lamp\/autograd\/Where.html#condition:lamp.STen", "kind" : "val"}, {"label" : "scope", "tail" : ": Scope", "member" : "lamp.autograd.Where.scope", "link" : "lamp\/autograd\/Where.html#scope:lamp.Scope", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/autograd\/Where.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/Where.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/Where.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/Where.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/Where.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/Where.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/Where.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/Where.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Where.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Where.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Where.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/Where.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/Where.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/Where.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/Where.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/Where.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/Where.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/autograd\/Where.html", "kind" : "case class"}], "lamp.knn" : [{"name" : "lamp.knn.DistanceFunction", "trait" : "lamp\/knn\/package$$DistanceFunction.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/knn\/package$$DistanceFunction.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/knn\/package$$DistanceFunction.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/knn\/package$$DistanceFunction.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/knn\/package$$DistanceFunction.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/knn\/package$$DistanceFunction.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/knn\/package$$DistanceFunction.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/knn\/package$$DistanceFunction.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/knn\/package$$DistanceFunction.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/knn\/package$$DistanceFunction.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/knn\/package$$DistanceFunction.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/knn\/package$$DistanceFunction.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/knn\/package$$DistanceFunction.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/knn\/package$$DistanceFunction.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/knn\/package$$DistanceFunction.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/knn\/package$$DistanceFunction.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/knn\/package$$DistanceFunction.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/knn\/package$$DistanceFunction.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/knn\/package$$DistanceFunction.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/knn\/package$$DistanceFunction.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "apply", "tail" : "(a: STen, b: STen)(scope: Scope): STen", "member" : "lamp.knn.DistanceFunction.apply", "link" : "lamp\/knn\/package$$DistanceFunction.html#apply(a:lamp.STen,b:lamp.STen)(implicitscope:lamp.Scope):lamp.STen", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "lamp.knn.JaccardDistance", "shortDescription" : "", "object" : "lamp\/knn\/package$$JaccardDistance$.html", "members_object" : [{"label" : "apply", "tail" : "(a: STen, b: STen)(scope: Scope): STen", "member" : "lamp.knn.JaccardDistance.apply", "link" : "lamp\/knn\/package$$JaccardDistance$.html#apply(a:lamp.STen,b:lamp.STen)(implicitscope:lamp.Scope):lamp.STen", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/knn\/package$$JaccardDistance$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/knn\/package$$JaccardDistance$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/knn\/package$$JaccardDistance$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/knn\/package$$JaccardDistance$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/knn\/package$$JaccardDistance$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/knn\/package$$JaccardDistance$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/knn\/package$$JaccardDistance$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/knn\/package$$JaccardDistance$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/knn\/package$$JaccardDistance$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/knn\/package$$JaccardDistance$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/knn\/package$$JaccardDistance$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/knn\/package$$JaccardDistance$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/knn\/package$$JaccardDistance$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/knn\/package$$JaccardDistance$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/knn\/package$$JaccardDistance$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/knn\/package$$JaccardDistance$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/knn\/package$$JaccardDistance$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/knn\/package$$JaccardDistance$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/knn\/package$$JaccardDistance$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "lamp.knn.SquaredEuclideanDistance", "shortDescription" : "", "object" : "lamp\/knn\/package$$SquaredEuclideanDistance$.html", "members_object" : [{"label" : "apply", "tail" : "(a: STen, b: STen)(scope: Scope): STen", "member" : "lamp.knn.SquaredEuclideanDistance.apply", "link" : "lamp\/knn\/package$$SquaredEuclideanDistance$.html#apply(a:lamp.STen,b:lamp.STen)(implicitscope:lamp.Scope):lamp.STen", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/knn\/package$$SquaredEuclideanDistance$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/knn\/package$$SquaredEuclideanDistance$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/knn\/package$$SquaredEuclideanDistance$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/knn\/package$$SquaredEuclideanDistance$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/knn\/package$$SquaredEuclideanDistance$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/knn\/package$$SquaredEuclideanDistance$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/knn\/package$$SquaredEuclideanDistance$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/knn\/package$$SquaredEuclideanDistance$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/knn\/package$$SquaredEuclideanDistance$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/knn\/package$$SquaredEuclideanDistance$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/knn\/package$$SquaredEuclideanDistance$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/knn\/package$$SquaredEuclideanDistance$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/knn\/package$$SquaredEuclideanDistance$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/knn\/package$$SquaredEuclideanDistance$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/knn\/package$$SquaredEuclideanDistance$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/knn\/package$$SquaredEuclideanDistance$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/knn\/package$$SquaredEuclideanDistance$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/knn\/package$$SquaredEuclideanDistance$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/knn\/package$$SquaredEuclideanDistance$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "lamp.example.cifar" : [{"name" : "lamp.example.cifar.AWTWindow", "shortDescription" : "", "object" : "lamp\/example\/cifar\/AWTWindow$.html", "members_object" : [{"label" : "showImage", "tail" : "(t: STen): JFrame", "member" : "lamp.example.cifar.AWTWindow.showImage", "link" : "lamp\/example\/cifar\/AWTWindow$.html#showImage(t:lamp.STen):javax.swing.JFrame", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/example\/cifar\/AWTWindow$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/example\/cifar\/AWTWindow$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/example\/cifar\/AWTWindow$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/example\/cifar\/AWTWindow$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/example\/cifar\/AWTWindow$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/example\/cifar\/AWTWindow$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/example\/cifar\/AWTWindow$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/example\/cifar\/AWTWindow$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/example\/cifar\/AWTWindow$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/example\/cifar\/AWTWindow$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/example\/cifar\/AWTWindow$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/example\/cifar\/AWTWindow$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/example\/cifar\/AWTWindow$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/example\/cifar\/AWTWindow$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/example\/cifar\/AWTWindow$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/example\/cifar\/AWTWindow$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/example\/cifar\/AWTWindow$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/example\/cifar\/AWTWindow$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/example\/cifar\/AWTWindow$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "lamp.example.cifar.Cifar", "shortDescription" : "", "object" : "lamp\/example\/cifar\/Cifar$.html", "members_object" : [{"label" : "loadImageFile", "tail" : "(file: File, numImages: Int, precision: FloatingPointPrecision, pin: Boolean)(scope: Scope): (STen, STen)", "member" : "lamp.example.cifar.Cifar.loadImageFile", "link" : "lamp\/example\/cifar\/Cifar$.html#loadImageFile(file:java.io.File,numImages:Int,precision:lamp.FloatingPointPrecision,pin:Boolean)(implicitscope:lamp.Scope):(lamp.STen,lamp.STen)", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/example\/cifar\/Cifar$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/example\/cifar\/Cifar$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/example\/cifar\/Cifar$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/example\/cifar\/Cifar$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/example\/cifar\/Cifar$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/example\/cifar\/Cifar$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/example\/cifar\/Cifar$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/example\/cifar\/Cifar$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/example\/cifar\/Cifar$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/example\/cifar\/Cifar$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/example\/cifar\/Cifar$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/example\/cifar\/Cifar$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/example\/cifar\/Cifar$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/example\/cifar\/Cifar$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/example\/cifar\/Cifar$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/example\/cifar\/Cifar$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/example\/cifar\/Cifar$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/example\/cifar\/Cifar$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/example\/cifar\/Cifar$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "lamp.example.cifar.CliConfig", "shortDescription" : "", "members_case class" : [{"member" : "lamp.example.cifar.CliConfig#<init>", "error" : "unsupported entity"}, {"label" : "pinnedAllocator", "tail" : ": Boolean", "member" : "lamp.example.cifar.CliConfig.pinnedAllocator", "link" : "lamp\/example\/cifar\/CliConfig.html#pinnedAllocator:Boolean", "kind" : "val"}, {"label" : "singlePrecision", "tail" : ": Boolean", "member" : "lamp.example.cifar.CliConfig.singlePrecision", "link" : "lamp\/example\/cifar\/CliConfig.html#singlePrecision:Boolean", "kind" : "val"}, {"label" : "checkpointLoad", "tail" : ": Option[String]", "member" : "lamp.example.cifar.CliConfig.checkpointLoad", "link" : "lamp\/example\/cifar\/CliConfig.html#checkpointLoad:Option[String]", "kind" : "val"}, {"label" : "checkpointSave", "tail" : ": Option[String]", "member" : "lamp.example.cifar.CliConfig.checkpointSave", "link" : "lamp\/example\/cifar\/CliConfig.html#checkpointSave:Option[String]", "kind" : "val"}, {"label" : "network", "tail" : ": String", "member" : "lamp.example.cifar.CliConfig.network", "link" : "lamp\/example\/cifar\/CliConfig.html#network:String", "kind" : "val"}, {"label" : "dropout", "tail" : ": Double", "member" : "lamp.example.cifar.CliConfig.dropout", "link" : "lamp\/example\/cifar\/CliConfig.html#dropout:Double", "kind" : "val"}, {"label" : "learningRate", "tail" : ": Double", "member" : "lamp.example.cifar.CliConfig.learningRate", "link" : "lamp\/example\/cifar\/CliConfig.html#learningRate:Double", "kind" : "val"}, {"label" : "epochs", "tail" : ": Int", "member" : "lamp.example.cifar.CliConfig.epochs", "link" : "lamp\/example\/cifar\/CliConfig.html#epochs:Int", "kind" : "val"}, {"label" : "testBatchSize", "tail" : ": Int", "member" : "lamp.example.cifar.CliConfig.testBatchSize", "link" : "lamp\/example\/cifar\/CliConfig.html#testBatchSize:Int", "kind" : "val"}, {"label" : "trainBatchSize", "tail" : ": Int", "member" : "lamp.example.cifar.CliConfig.trainBatchSize", "link" : "lamp\/example\/cifar\/CliConfig.html#trainBatchSize:Int", "kind" : "val"}, {"label" : "gpus", "tail" : ": List[Int]", "member" : "lamp.example.cifar.CliConfig.gpus", "link" : "lamp\/example\/cifar\/CliConfig.html#gpus:List[Int]", "kind" : "val"}, {"label" : "labels", "tail" : ": String", "member" : "lamp.example.cifar.CliConfig.labels", "link" : "lamp\/example\/cifar\/CliConfig.html#labels:String", "kind" : "val"}, {"label" : "testData", "tail" : ": String", "member" : "lamp.example.cifar.CliConfig.testData", "link" : "lamp\/example\/cifar\/CliConfig.html#testData:String", "kind" : "val"}, {"label" : "trainData", "tail" : ": String", "member" : "lamp.example.cifar.CliConfig.trainData", "link" : "lamp\/example\/cifar\/CliConfig.html#trainData:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/example\/cifar\/CliConfig.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/example\/cifar\/CliConfig.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/example\/cifar\/CliConfig.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/example\/cifar\/CliConfig.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/example\/cifar\/CliConfig.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/example\/cifar\/CliConfig.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/example\/cifar\/CliConfig.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/example\/cifar\/CliConfig.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/example\/cifar\/CliConfig.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/example\/cifar\/CliConfig.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/example\/cifar\/CliConfig.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/example\/cifar\/CliConfig.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/example\/cifar\/CliConfig.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/example\/cifar\/CliConfig.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/example\/cifar\/CliConfig.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/example\/cifar\/CliConfig.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/example\/cifar\/CliConfig.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/example\/cifar\/CliConfig.html", "kind" : "case class"}, {"name" : "lamp.example.cifar.Cnn", "shortDescription" : "", "object" : "lamp\/example\/cifar\/Cnn$.html", "members_object" : [{"label" : "lenet", "tail" : "(numClasses: Int, dropOut: Double, tOpt: STenOptions)(pool: Scope): Sequential[Variable, Product with GenericModule[Variable, Variable] with Serializable { def state: List[(lamp.autograd.Constant, lamp.nn.LeafTag with Product with java.io.Serializable)] }]", "member" : "lamp.example.cifar.Cnn.lenet", "link" : "lamp\/example\/cifar\/Cnn$.html#lenet(numClasses:Int,dropOut:Double,tOpt:lamp.STenOptions)(implicitpool:lamp.Scope):lamp.nn.Sequential[lamp.autograd.Variable,Productwithlamp.nn.GenericModule[lamp.autograd.Variable,lamp.autograd.Variable]withjava.io.Serializable{defstate:List[(lamp.autograd.Constant,lamp.nn.LeafTagwithProductwithjava.io.Serializable)]}]", "kind" : "def"}, {"label" : "resnet", "tail" : "(numClasses: Int, dropout: Double, tOpt: STenOptions)(pool: Scope): Seq5[Variable, Variable, Variable, Variable, Variable, Variable, Conv2D with GenericModule[Variable, Variable], Seq4[Variable, Variable, Variable, Variable, Variable, Seq3[Variable, Variable, Variable, Variable, Residual[Seq6[Variable, Variable, Variable, Variable, Variable, Variable, Variable, Conv2D, BatchNorm2D, Fun, Dropout, Conv2D, BatchNorm2D], Seq2[Variable, Variable, Variable, Conv2D, BatchNorm2D]] with GenericModule[Variable, Variable], Fun with GenericModule[Variable, Variable], Dropout with GenericModule[Variable, Variable]] with GenericModule[Variable, Variable], Seq3[Variable, Variable, Variable, Variable, Residual[Seq6[Variable, Variable, Variable, Variable, Variable, Variable, Variable, Conv2D, BatchNorm2D, Fun, Dropout, Conv2D, BatchNorm2D], Seq2[Variable, Variable, Variable, Conv2D, BatchNorm2D]] with GenericModule[Variable, Variable], Fun with GenericModule[Variable, Variable], Dropout with GenericModule[Variable, Variable]] with GenericModule[Variable, Variable], Seq3[Variable, Variable, Variable, Variable, Residual[Seq6[Variable, Variable, Variable, Variable, Variable, Variable, Variable, Conv2D, BatchNorm2D, Fun, Dropout, Conv2D, BatchNorm2D], Seq2[Variable, Variable, Variable, Conv2D, BatchNorm2D]] with GenericModule[Variable, Variable], Fun with GenericModule[Variable, Variable], Dropout with GenericModule[Variable, Variable]] with GenericModule[Variable, Variable], Seq3[Variable, Variable, Variable, Variable, Residual[Seq6[Variable, Variable, Variable, Variable, Variable, Variable, Variable, Conv2D, BatchNorm2D, Fun, Dropout, Conv2D, BatchNorm2D], Seq2[Variable, Variable, Variable, Conv2D, BatchNorm2D]] with GenericModule[Variable, Variable], Fun with GenericModule[Variable, Variable], Dropout with GenericModule[Variable, Variable]] with GenericModule[Variable, Variable]] with GenericModule[Variable, Variable], Fun with GenericModule[Variable, Variable], Fun with GenericModule[Variable, Variable], Fun with GenericModule[Variable, Variable]]", "member" : "lamp.example.cifar.Cnn.resnet", "link" : "lamp\/example\/cifar\/Cnn$.html#resnet(numClasses:Int,dropout:Double,tOpt:lamp.STenOptions)(implicitpool:lamp.Scope):lamp.nn.Seq5[lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.nn.Conv2Dwithlamp.nn.GenericModule[lamp.autograd.Variable,lamp.autograd.Variable],lamp.nn.Seq4[lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.nn.Seq3[lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.example.cifar.Residual[lamp.nn.Seq6[lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.nn.Conv2D,lamp.nn.BatchNorm2D,lamp.nn.Fun,lamp.nn.Dropout,lamp.nn.Conv2D,lamp.nn.BatchNorm2D],lamp.nn.Seq2[lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.nn.Conv2D,lamp.nn.BatchNorm2D]]withlamp.nn.GenericModule[lamp.autograd.Variable,lamp.autograd.Variable],lamp.nn.Funwithlamp.nn.GenericModule[lamp.autograd.Variable,lamp.autograd.Variable],lamp.nn.Dropoutwithlamp.nn.GenericModule[lamp.autograd.Variable,lamp.autograd.Variable]]withlamp.nn.GenericModule[lamp.autograd.Variable,lamp.autograd.Variable],lamp.nn.Seq3[lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.example.cifar.Residual[lamp.nn.Seq6[lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.nn.Conv2D,lamp.nn.BatchNorm2D,lamp.nn.Fun,lamp.nn.Dropout,lamp.nn.Conv2D,lamp.nn.BatchNorm2D],lamp.nn.Seq2[lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.nn.Conv2D,lamp.nn.BatchNorm2D]]withlamp.nn.GenericModule[lamp.autograd.Variable,lamp.autograd.Variable],lamp.nn.Funwithlamp.nn.GenericModule[lamp.autograd.Variable,lamp.autograd.Variable],lamp.nn.Dropoutwithlamp.nn.GenericModule[lamp.autograd.Variable,lamp.autograd.Variable]]withlamp.nn.GenericModule[lamp.autograd.Variable,lamp.autograd.Variable],lamp.nn.Seq3[lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.example.cifar.Residual[lamp.nn.Seq6[lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.nn.Conv2D,lamp.nn.BatchNorm2D,lamp.nn.Fun,lamp.nn.Dropout,lamp.nn.Conv2D,lamp.nn.BatchNorm2D],lamp.nn.Seq2[lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.nn.Conv2D,lamp.nn.BatchNorm2D]]withlamp.nn.GenericModule[lamp.autograd.Variable,lamp.autograd.Variable],lamp.nn.Funwithlamp.nn.GenericModule[lamp.autograd.Variable,lamp.autograd.Variable],lamp.nn.Dropoutwithlamp.nn.GenericModule[lamp.autograd.Variable,lamp.autograd.Variable]]withlamp.nn.GenericModule[lamp.autograd.Variable,lamp.autograd.Variable],lamp.nn.Seq3[lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.example.cifar.Residual[lamp.nn.Seq6[lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.nn.Conv2D,lamp.nn.BatchNorm2D,lamp.nn.Fun,lamp.nn.Dropout,lamp.nn.Conv2D,lamp.nn.BatchNorm2D],lamp.nn.Seq2[lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.nn.Conv2D,lamp.nn.BatchNorm2D]]withlamp.nn.GenericModule[lamp.autograd.Variable,lamp.autograd.Variable],lamp.nn.Funwithlamp.nn.GenericModule[lamp.autograd.Variable,lamp.autograd.Variable],lamp.nn.Dropoutwithlamp.nn.GenericModule[lamp.autograd.Variable,lamp.autograd.Variable]]withlamp.nn.GenericModule[lamp.autograd.Variable,lamp.autograd.Variable]]withlamp.nn.GenericModule[lamp.autograd.Variable,lamp.autograd.Variable],lamp.nn.Funwithlamp.nn.GenericModule[lamp.autograd.Variable,lamp.autograd.Variable],lamp.nn.Funwithlamp.nn.GenericModule[lamp.autograd.Variable,lamp.autograd.Variable],lamp.nn.Funwithlamp.nn.GenericModule[lamp.autograd.Variable,lamp.autograd.Variable]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/example\/cifar\/Cnn$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/example\/cifar\/Cnn$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/example\/cifar\/Cnn$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/example\/cifar\/Cnn$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/example\/cifar\/Cnn$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/example\/cifar\/Cnn$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/example\/cifar\/Cnn$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/example\/cifar\/Cnn$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/example\/cifar\/Cnn$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/example\/cifar\/Cnn$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/example\/cifar\/Cnn$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/example\/cifar\/Cnn$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/example\/cifar\/Cnn$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/example\/cifar\/Cnn$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/example\/cifar\/Cnn$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/example\/cifar\/Cnn$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/example\/cifar\/Cnn$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/example\/cifar\/Cnn$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/example\/cifar\/Cnn$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "lamp.example.cifar.Residual", "shortDescription" : "", "object" : "lamp\/example\/cifar\/Residual$.html", "members_object" : [{"label" : "make", "tail" : "(inChannels: Int, outChannels: Int, tOpt: STenOptions, dropout: Double, stride: Int)(pool: Scope): Seq3[Variable, Variable, Variable, Variable, Residual[Seq6[Variable, Variable, Variable, Variable, Variable, Variable, Variable, Conv2D, BatchNorm2D, Fun, Dropout, Conv2D, BatchNorm2D], Seq2[Variable, Variable, Variable, Conv2D, BatchNorm2D]] with GenericModule[Variable, Variable], Fun with GenericModule[Variable, Variable], Dropout with GenericModule[Variable, Variable]]", "member" : "lamp.example.cifar.Residual.make", "link" : "lamp\/example\/cifar\/Residual$.html#make(inChannels:Int,outChannels:Int,tOpt:lamp.STenOptions,dropout:Double,stride:Int)(implicitpool:lamp.Scope):lamp.nn.Seq3[lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.example.cifar.Residual[lamp.nn.Seq6[lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.nn.Conv2D,lamp.nn.BatchNorm2D,lamp.nn.Fun,lamp.nn.Dropout,lamp.nn.Conv2D,lamp.nn.BatchNorm2D],lamp.nn.Seq2[lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.nn.Conv2D,lamp.nn.BatchNorm2D]]withlamp.nn.GenericModule[lamp.autograd.Variable,lamp.autograd.Variable],lamp.nn.Funwithlamp.nn.GenericModule[lamp.autograd.Variable,lamp.autograd.Variable],lamp.nn.Dropoutwithlamp.nn.GenericModule[lamp.autograd.Variable,lamp.autograd.Variable]]", "kind" : "def"}, {"label" : "load", "tail" : "(arg0: Load[M1], arg1: Load[M2]): Load[Residual[M1, M2]]", "member" : "lamp.example.cifar.Residual.load", "link" : "lamp\/example\/cifar\/Residual$.html#load[M1<:lamp.nn.Module,M2<:lamp.nn.Module](implicitevidence$2:lamp.nn.Load[M1],implicitevidence$3:lamp.nn.Load[M2]):lamp.nn.Load[lamp.example.cifar.Residual[M1,M2]]", "kind" : "implicit def"}, {"label" : "trainingMode", "tail" : "(): TrainingMode[Residual[M1, M2]]", "member" : "lamp.example.cifar.Residual.trainingMode", "link" : "lamp\/example\/cifar\/Residual$.html#trainingMode[M1<:lamp.nn.Module,M2<:lamp.nn.Module]:lamp.nn.TrainingMode[lamp.example.cifar.Residual[M1,M2]]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/example\/cifar\/Residual$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/example\/cifar\/Residual$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/example\/cifar\/Residual$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/example\/cifar\/Residual$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/example\/cifar\/Residual$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/example\/cifar\/Residual$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/example\/cifar\/Residual$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/example\/cifar\/Residual$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/example\/cifar\/Residual$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/example\/cifar\/Residual$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/example\/cifar\/Residual$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/example\/cifar\/Residual$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/example\/cifar\/Residual$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/example\/cifar\/Residual$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/example\/cifar\/Residual$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/example\/cifar\/Residual$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/example\/cifar\/Residual$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/example\/cifar\/Residual$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/example\/cifar\/Residual$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "forward", "tail" : "(x: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.example.cifar.Residual.forward", "link" : "lamp\/example\/cifar\/Residual.html#forward[S](x:lamp.autograd.Variable)(implicitevidence$1:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "state", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.example.cifar.Residual.state", "link" : "lamp\/example\/cifar\/Residual.html#state:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "def"}, {"member" : "lamp.example.cifar.Residual#<init>", "error" : "unsupported entity"}, {"label" : "left", "tail" : ": Option[M2 with Module]", "member" : "lamp.example.cifar.Residual.left", "link" : "lamp\/example\/cifar\/Residual.html#left:Option[M2withlamp.nn.Module]", "kind" : "val"}, {"label" : "right", "tail" : ": M1 with Module", "member" : "lamp.example.cifar.Residual.right", "link" : "lamp\/example\/cifar\/Residual.html#right:M1withlamp.nn.Module", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/example\/cifar\/Residual.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "learnableParameters", "tail" : "(): Long", "member" : "lamp.nn.GenericModule.learnableParameters", "link" : "lamp\/example\/cifar\/Residual.html#learnableParameters:Long", "kind" : "final def"}, {"label" : "gradients", "tail" : "(loss: Variable, zeroGrad: Boolean): Seq[Option[STen]]", "member" : "lamp.nn.GenericModule.gradients", "link" : "lamp\/example\/cifar\/Residual.html#gradients(loss:lamp.autograd.Variable,zeroGrad:Boolean):Seq[Option[lamp.STen]]", "kind" : "final def"}, {"label" : "zeroGrad", "tail" : "(): Unit", "member" : "lamp.nn.GenericModule.zeroGrad", "link" : "lamp\/example\/cifar\/Residual.html#zeroGrad():Unit", "kind" : "final def"}, {"label" : "parameters", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.GenericModule.parameters", "link" : "lamp\/example\/cifar\/Residual.html#parameters:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "final def"}, {"label" : "apply", "tail" : "(a: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.nn.GenericModule.apply", "link" : "lamp\/example\/cifar\/Residual.html#apply[S](a:A)(implicitevidence$17:lamp.Sc[S]):B", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/example\/cifar\/Residual.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/example\/cifar\/Residual.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/example\/cifar\/Residual.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/example\/cifar\/Residual.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/example\/cifar\/Residual.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/example\/cifar\/Residual.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/example\/cifar\/Residual.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/example\/cifar\/Residual.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/example\/cifar\/Residual.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/example\/cifar\/Residual.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/example\/cifar\/Residual.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/example\/cifar\/Residual.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/example\/cifar\/Residual.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/example\/cifar\/Residual.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/example\/cifar\/Residual.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/example\/cifar\/Residual.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/example\/cifar\/Residual.html", "kind" : "case class"}, {"name" : "lamp.example.cifar.Train", "shortDescription" : "", "object" : "lamp\/example\/cifar\/Train$.html", "members_object" : [{"label" : "parser1", "tail" : ": OParser[String, CliConfig]", "member" : "lamp.example.cifar.Train.parser1", "link" : "lamp\/example\/cifar\/Train$.html#parser1:scopt.OParser[String,lamp.example.cifar.CliConfig]", "kind" : "val"}, {"label" : "builder", "tail" : ": OParserBuilder[CliConfig]", "member" : "lamp.example.cifar.Train.builder", "link" : "lamp\/example\/cifar\/Train$.html#builder:scopt.OParserBuilder[lamp.example.cifar.CliConfig]", "kind" : "val"}, {"label" : "main", "tail" : "(args: Array[String]): Unit", "member" : "scala.App.main", "link" : "lamp\/example\/cifar\/Train$.html#main(args:Array[String]):Unit", "kind" : "final def"}, {"label" : "delayedInit", "tail" : "(body: => Unit): Unit", "member" : "scala.App.delayedInit", "link" : "lamp\/example\/cifar\/Train$.html#delayedInit(body:=>Unit):Unit", "kind" : "def"}, {"label" : "args", "tail" : "(): Array[String]", "member" : "scala.App.args", "link" : "lamp\/example\/cifar\/Train$.html#args:Array[String]", "kind" : "final def"}, {"label" : "executionStart", "tail" : ": Long", "member" : "scala.App.executionStart", "link" : "lamp\/example\/cifar\/Train$.html#executionStart:Long", "kind" : "final val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/example\/cifar\/Train$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/example\/cifar\/Train$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/example\/cifar\/Train$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/example\/cifar\/Train$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/example\/cifar\/Train$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/example\/cifar\/Train$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/example\/cifar\/Train$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/example\/cifar\/Train$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/example\/cifar\/Train$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/example\/cifar\/Train$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/example\/cifar\/Train$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/example\/cifar\/Train$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/example\/cifar\/Train$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/example\/cifar\/Train$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/example\/cifar\/Train$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/example\/cifar\/Train$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/example\/cifar\/Train$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/example\/cifar\/Train$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/example\/cifar\/Train$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "lamp.data" : [{"name" : "lamp.data.BatchStream", "object" : "lamp\/data\/BatchStream$.html", "members_object" : [{"label" : "stagedFromIndices", "tail" : "(indices: Array[Array[Int]], bucketSize: Int)(loadInstancesToStaging: (Array[Int]) => Resource[IO, B], makeNonEmptyBatch: (B, Array[Int], Device) => Resource[IO, StreamControl[(A, STen)]]): BatchStream[A, State[A, B]] { val bucketIndices: org.saddle.Vec[lamp.data.BatchStream.StagedLoader.BucketIndices] }", "member" : "lamp.data.BatchStream.stagedFromIndices", "link" : "lamp\/data\/BatchStream$.html#stagedFromIndices[A,B](indices:Array[Array[Int]],bucketSize:Int)(loadInstancesToStaging:Array[Int]=>cats.effect.Resource[cats.effect.IO,B],makeNonEmptyBatch:(B,Array[Int],lamp.Device)=>cats.effect.Resource[cats.effect.IO,lamp.data.StreamControl[(A,lamp.STen)]]):lamp.data.BatchStream[A,lamp.data.BatchStream.StagedLoader.State[A,B]]{valbucketIndices:org.saddle.Vec[lamp.data.BatchStream.StagedLoader.BucketIndices]}", "kind" : "def"}, {"label" : "StagedLoader", "tail" : "", "member" : "lamp.data.BatchStream.StagedLoader", "link" : "lamp\/data\/BatchStream$.html#StagedLoader", "kind" : "object"}, {"label" : "fromFullBatch", "tail" : "(features: STen, targets: STen, device: Device): BatchStream[Variable, Boolean]", "member" : "lamp.data.BatchStream.fromFullBatch", "link" : "lamp\/data\/BatchStream$.html#fromFullBatch(features:lamp.STen,targets:lamp.STen,device:lamp.Device):lamp.data.BatchStream[lamp.autograd.Variable,Boolean]", "kind" : "def"}, {"label" : "minibatchesFromFull", "tail" : "(minibatchSize: Int, dropLast: Boolean, features: STen, target: STen, rng: Generator): BatchStream[Variable, Int]", "member" : "lamp.data.BatchStream.minibatchesFromFull", "link" : "lamp\/data\/BatchStream$.html#minibatchesFromFull(minibatchSize:Int,dropLast:Boolean,features:lamp.STen,target:lamp.STen,rng:org.saddle.spire.random.Generator):lamp.data.BatchStream[lamp.autograd.Variable,Int]", "kind" : "def"}, {"label" : "scopeInResource", "tail" : "(): Resource[IO, Scope]", "member" : "lamp.data.BatchStream.scopeInResource", "link" : "lamp\/data\/BatchStream$.html#scopeInResource:cats.effect.kernel.Resource[cats.effect.IO,lamp.Scope]", "kind" : "def"}, {"label" : "fromIndices", "tail" : "(indices: Array[Array[Int]])(makeNonEmptyBatch: (Array[Int], Device) => Resource[IO, StreamControl[(A, STen)]]): BatchStream[A, Int]", "member" : "lamp.data.BatchStream.fromIndices", "link" : "lamp\/data\/BatchStream$.html#fromIndices[A](indices:Array[Array[Int]])(makeNonEmptyBatch:(Array[Int],lamp.Device)=>cats.effect.Resource[cats.effect.IO,lamp.data.StreamControl[(A,lamp.STen)]]):lamp.data.BatchStream[A,Int]", "kind" : "def"}, {"label" : "single", "tail" : "(resource: Resource[IO, StreamControl[(A, STen)]]): BatchStream[A, Boolean]", "member" : "lamp.data.BatchStream.single", "link" : "lamp\/data\/BatchStream$.html#single[A](resource:cats.effect.Resource[cats.effect.IO,lamp.data.StreamControl[(A,lamp.STen)]]):lamp.data.BatchStream[A,Boolean]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/data\/BatchStream$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/data\/BatchStream$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/data\/BatchStream$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/data\/BatchStream$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/data\/BatchStream$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/data\/BatchStream$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/data\/BatchStream$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/BatchStream$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/BatchStream$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/BatchStream$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/data\/BatchStream$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/data\/BatchStream$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/data\/BatchStream$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/data\/BatchStream$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/data\/BatchStream$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/data\/BatchStream$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/data\/BatchStream$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/data\/BatchStream$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/data\/BatchStream$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "lamp\/data\/BatchStream.html", "kind" : "trait", "members_trait" : [{"label" : "foldLeft", "tail" : "(zero: B, device: Device, stateZero: S)(f: (B, (I, STen)) => IO[B]): IO[B]", "member" : "lamp.data.BatchStream.foldLeft", "link" : "lamp\/data\/BatchStream.html#foldLeft[B](zero:B,device:lamp.Device,stateZero:S)(f:(B,(I,lamp.STen))=>cats.effect.IO[B]):cats.effect.IO[B]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (I, STen) => Resource[IO, StreamControl[(I2, STen)]]): BatchStream[I2, S]", "member" : "lamp.data.BatchStream.map", "link" : "lamp\/data\/BatchStream.html#map[I2](f:(I,lamp.STen)=>cats.effect.Resource[cats.effect.IO,lamp.data.StreamControl[(I2,lamp.STen)]]):lamp.data.BatchStream[I2,S]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/data\/BatchStream.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/data\/BatchStream.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/data\/BatchStream.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/data\/BatchStream.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/data\/BatchStream.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/data\/BatchStream.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/data\/BatchStream.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/BatchStream.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/BatchStream.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/BatchStream.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/data\/BatchStream.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/data\/BatchStream.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/data\/BatchStream.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/data\/BatchStream.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/data\/BatchStream.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/data\/BatchStream.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/data\/BatchStream.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/data\/BatchStream.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/data\/BatchStream.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "nextBatch", "tail" : "(device: Device, state: S): IO[(S, Resource[IO, StreamControl[(I, STen)]])]", "member" : "lamp.data.BatchStream.nextBatch", "link" : "lamp\/data\/BatchStream.html#nextBatch(device:lamp.Device,state:S):cats.effect.IO[(S,cats.effect.Resource[cats.effect.IO,lamp.data.StreamControl[(I,lamp.STen)]])]", "kind" : "abstract def"}, {"label" : "init", "tail" : "(): S", "member" : "lamp.data.BatchStream.init", "link" : "lamp\/data\/BatchStream.html#init:S", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "lamp.data.BufferedImageHelper", "shortDescription" : "", "object" : "lamp\/data\/BufferedImageHelper$.html", "members_object" : [{"label" : "toFloatTensor", "tail" : "(image: BufferedImage): Tensor", "member" : "lamp.data.BufferedImageHelper.toFloatTensor", "link" : "lamp\/data\/BufferedImageHelper$.html#toFloatTensor(image:java.awt.image.BufferedImage):aten.Tensor", "kind" : "def"}, {"label" : "fromDoubleTensor", "tail" : "(t: STen): BufferedImage", "member" : "lamp.data.BufferedImageHelper.fromDoubleTensor", "link" : "lamp\/data\/BufferedImageHelper$.html#fromDoubleTensor(t:lamp.STen):java.awt.image.BufferedImage", "kind" : "def"}, {"label" : "fromFloatTensor", "tail" : "(t: Tensor): BufferedImage", "member" : "lamp.data.BufferedImageHelper.fromFloatTensor", "link" : "lamp\/data\/BufferedImageHelper$.html#fromFloatTensor(t:aten.Tensor):java.awt.image.BufferedImage", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/data\/BufferedImageHelper$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/data\/BufferedImageHelper$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/data\/BufferedImageHelper$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/data\/BufferedImageHelper$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/data\/BufferedImageHelper$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/data\/BufferedImageHelper$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/data\/BufferedImageHelper$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/BufferedImageHelper$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/BufferedImageHelper$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/BufferedImageHelper$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/data\/BufferedImageHelper$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/data\/BufferedImageHelper$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/data\/BufferedImageHelper$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/data\/BufferedImageHelper$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/data\/BufferedImageHelper$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/data\/BufferedImageHelper$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/data\/BufferedImageHelper$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/data\/BufferedImageHelper$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/data\/BufferedImageHelper$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "lamp.data.DataParallel", "shortDescription" : "", "object" : "lamp\/data\/DataParallel$.html", "members_object" : [{"label" : "makeMultipleBatches", "tail" : "(devices: List[Device], makeOne: (Device, S) => IO[(S, Resource[IO, StreamControl[A]])]): (S) => IO[(S, Resource[IO, StreamControl[List[A]]])]", "member" : "lamp.data.DataParallel.makeMultipleBatches", "link" : "lamp\/data\/DataParallel$.html#makeMultipleBatches[A,S](devices:List[lamp.Device],makeOne:(lamp.Device,S)=>cats.effect.IO[(S,cats.effect.Resource[cats.effect.IO,lamp.data.StreamControl[A]])]):S=>cats.effect.IO[(S,cats.effect.Resource[cats.effect.IO,lamp.data.StreamControl[List[A]]])]", "kind" : "def"}, {"label" : "oneEpoch", "tail" : "(epochCount: Long, trainingCallback: TrainingCallback, mainModel: ModelWithOptimizer[I, M], trainBatches: BatchStream[I, S], logger: Option[Logger], learningRateScheduleFactor: Double, models: Seq[SupervisedModel[I, M]], accumulateGradientOverNBatches: Int): IO[Double]", "member" : "lamp.data.DataParallel.oneEpoch", "link" : "lamp\/data\/DataParallel$.html#oneEpoch[I,M<:lamp.nn.GenericModule[I,lamp.autograd.Variable],S](epochCount:Long,trainingCallback:lamp.data.TrainingCallback,mainModel:lamp.nn.ModelWithOptimizer[I,M],trainBatches:lamp.data.BatchStream[I,S],logger:Option[scribe.Logger],learningRateScheduleFactor:Double,models:Seq[lamp.nn.SupervisedModel[I,M]],accumulateGradientOverNBatches:Int):cats.effect.IO[Double]", "kind" : "def"}, {"label" : "validationOneEpoch", "tail" : "(models: Seq[SupervisedModel[I, M]], validationBatches: BatchStream[I, S], validationCallback: ValidationCallback, logger: Option[Logger], epochCount: Long): IO[Double]", "member" : "lamp.data.DataParallel.validationOneEpoch", "link" : "lamp\/data\/DataParallel$.html#validationOneEpoch[I,M<:lamp.nn.GenericModule[I,lamp.autograd.Variable],S](models:Seq[lamp.nn.SupervisedModel[I,M]],validationBatches:lamp.data.BatchStream[I,S],validationCallback:lamp.data.ValidationCallback,logger:Option[scribe.Logger],epochCount:Long):cats.effect.IO[Double]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/data\/DataParallel$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/data\/DataParallel$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/data\/DataParallel$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/data\/DataParallel$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/data\/DataParallel$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/data\/DataParallel$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/data\/DataParallel$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/DataParallel$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/DataParallel$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/DataParallel$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/data\/DataParallel$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/data\/DataParallel$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/data\/DataParallel$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/data\/DataParallel$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/data\/DataParallel$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/data\/DataParallel$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/data\/DataParallel$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/data\/DataParallel$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/data\/DataParallel$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "lamp.data.EmptyBatch", "case object" : "lamp\/data\/EmptyBatch$.html", "shortDescription" : "", "members_case object" : [{"label" : "unsafeGet", "tail" : "(): Nothing", "member" : "lamp.data.EmptyBatch.unsafeGet", "link" : "lamp\/data\/EmptyBatch$.html#unsafeGet:Nothing", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Nothing) => B): StreamControl[B]", "member" : "lamp.data.EmptyBatch.map", "link" : "lamp\/data\/EmptyBatch$.html#map[B](f:Nothing=>B):lamp.data.StreamControl[B]", "kind" : "def"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/data\/EmptyBatch$.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "productElementName", "tail" : "(n: Int): String", "member" : "scala.Product.productElementName", "link" : "lamp\/data\/EmptyBatch$.html#productElementName(n:Int):String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/data\/EmptyBatch$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/data\/EmptyBatch$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/data\/EmptyBatch$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/data\/EmptyBatch$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/data\/EmptyBatch$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/data\/EmptyBatch$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/data\/EmptyBatch$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/EmptyBatch$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/EmptyBatch$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/EmptyBatch$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/data\/EmptyBatch$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/data\/EmptyBatch$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/data\/EmptyBatch$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/data\/EmptyBatch$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/data\/EmptyBatch$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/data\/EmptyBatch$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/data\/EmptyBatch$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "case object"}, {"name" : "lamp.data.EndStream", "case object" : "lamp\/data\/EndStream$.html", "shortDescription" : "", "members_case object" : [{"label" : "unsafeGet", "tail" : "(): Nothing", "member" : "lamp.data.EndStream.unsafeGet", "link" : "lamp\/data\/EndStream$.html#unsafeGet:Nothing", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Nothing) => B): StreamControl[B]", "member" : "lamp.data.EndStream.map", "link" : "lamp\/data\/EndStream$.html#map[B](f:Nothing=>B):lamp.data.StreamControl[B]", "kind" : "def"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/data\/EndStream$.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "productElementName", "tail" : "(n: Int): String", "member" : "scala.Product.productElementName", "link" : "lamp\/data\/EndStream$.html#productElementName(n:Int):String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/data\/EndStream$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/data\/EndStream$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/data\/EndStream$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/data\/EndStream$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/data\/EndStream$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/data\/EndStream$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/data\/EndStream$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/EndStream$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/EndStream$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/EndStream$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/data\/EndStream$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/data\/EndStream$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/data\/EndStream$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/data\/EndStream$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/data\/EndStream$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/data\/EndStream$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/data\/EndStream$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "case object"}, {"name" : "lamp.data.GraphBatchStream", "shortDescription" : "", "object" : "lamp\/data\/GraphBatchStream$.html", "members_object" : [{"label" : "bigGraphModeFullBatch", "tail" : "(nodes: STen, edges: STen, targetPerNode: STen): BatchStream[(Variable, Variable), Boolean]", "member" : "lamp.data.GraphBatchStream.bigGraphModeFullBatch", "link" : "lamp\/data\/GraphBatchStream$.html#bigGraphModeFullBatch(nodes:lamp.STen,edges:lamp.STen,targetPerNode:lamp.STen):lamp.data.BatchStream[(lamp.autograd.Variable,lamp.autograd.Variable),Boolean]", "kind" : "def"}, {"label" : "smallGraphMode", "tail" : "(minibatchSize: Int, graphNodesAndEdges: Vec[(STen, STen)], targetPerGraph: STen, rng: Option[Generator]): BatchStream[(Variable, Variable, Variable), Int]", "member" : "lamp.data.GraphBatchStream.smallGraphMode", "link" : "lamp\/data\/GraphBatchStream$.html#smallGraphMode(minibatchSize:Int,graphNodesAndEdges:org.saddle.Vec[(lamp.STen,lamp.STen)],targetPerGraph:lamp.STen,rng:Option[org.saddle.spire.random.Generator]):lamp.data.BatchStream[(lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable),Int]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/data\/GraphBatchStream$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/data\/GraphBatchStream$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/data\/GraphBatchStream$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/data\/GraphBatchStream$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/data\/GraphBatchStream$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/data\/GraphBatchStream$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/data\/GraphBatchStream$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/GraphBatchStream$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/GraphBatchStream$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/GraphBatchStream$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/data\/GraphBatchStream$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/data\/GraphBatchStream$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/data\/GraphBatchStream$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/data\/GraphBatchStream$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/data\/GraphBatchStream$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/data\/GraphBatchStream$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/data\/GraphBatchStream$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/data\/GraphBatchStream$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/data\/GraphBatchStream$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "lamp.data.IOLoops", "shortDescription" : "Contains a training loops and helpers around it", "object" : "lamp\/data\/IOLoops$.html", "members_object" : [{"label" : "validationOneEpoch", "tail" : "(model: SupervisedModel[I, M], validationBatches: BatchStream[I, S], validationCallback: ValidationCallback, logger: Option[Logger], epochCount: Long): IO[Double]", "member" : "lamp.data.IOLoops.validationOneEpoch", "link" : "lamp\/data\/IOLoops$.html#validationOneEpoch[I,M<:lamp.nn.GenericModule[I,lamp.autograd.Variable],S](model:lamp.nn.SupervisedModel[I,M],validationBatches:lamp.data.BatchStream[I,S],validationCallback:lamp.data.ValidationCallback,logger:Option[scribe.Logger],epochCount:Long):cats.effect.IO[Double]", "kind" : "def"}, {"label" : "oneEpoch", "tail" : "(epochCount: Long, trainingCallback: TrainingCallback, model: ModelWithOptimizer[I, M], trainBatches: BatchStream[I, S], logger: Option[Logger], learningRateScheduleFactor: Double, prefetch: Boolean, accumulateGradientOverNBatches: Int): IO[Double]", "member" : "lamp.data.IOLoops.oneEpoch", "link" : "lamp\/data\/IOLoops$.html#oneEpoch[I,M<:lamp.nn.GenericModule[I,lamp.autograd.Variable],S](epochCount:Long,trainingCallback:lamp.data.TrainingCallback,model:lamp.nn.ModelWithOptimizer[I,M],trainBatches:lamp.data.BatchStream[I,S],logger:Option[scribe.Logger],learningRateScheduleFactor:Double,prefetch:Boolean,accumulateGradientOverNBatches:Int):cats.effect.IO[Double]", "kind" : "def"}, {"label" : "epochs", "tail" : "(model: SupervisedModel[I, M], optimizerFactory: (Seq[(STen, PTag)]) => Optimizer, trainBatchesOverEpoch: () => BatchStream[I, BatchStreamState], validationBatchesOverEpoch: Option[() => BatchStream[I, BatchStreamState]], epochs: Int, trainingCallback: TrainingCallback, validationCallback: ValidationCallback, checkpointState: Option[(SimpleLoopState, LRState) => IO[Unit]], validationFrequency: Int, logger: Option[Logger], returnMinValidationLossModel: Seq[Int], learningRateSchedule: LearningRateSchedule[LRState], prefetch: Boolean, dataParallelModels: Seq[SupervisedModel[I, M]], initState: Option[SimpleLoopState], accumulateGradientOverNBatches: Int, learningRateScheduleInitState: Option[LRState], printOptimizerAllocations: Boolean)(arg0: Load[M]): IO[(Int, SupervisedModel[I, M], List[(Int, Double, Option[Double])], LRState, SimpleLoopState)]", "member" : "lamp.data.IOLoops.epochs", "link" : "lamp\/data\/IOLoops$.html#epochs[I,M<:lamp.nn.GenericModule[I,lamp.autograd.Variable],LRState,BatchStreamState](model:lamp.nn.SupervisedModel[I,M],optimizerFactory:Seq[(lamp.STen,lamp.nn.PTag)]=>lamp.nn.Optimizer,trainBatchesOverEpoch:()=>lamp.data.BatchStream[I,BatchStreamState],validationBatchesOverEpoch:Option[()=>lamp.data.BatchStream[I,BatchStreamState]],epochs:Int,trainingCallback:lamp.data.TrainingCallback,validationCallback:lamp.data.ValidationCallback,checkpointState:Option[(lamp.data.SimpleLoopState,LRState)=>cats.effect.IO[Unit]],validationFrequency:Int,logger:Option[scribe.Logger],returnMinValidationLossModel:Seq[Int],learningRateSchedule:lamp.nn.LearningRateSchedule[LRState],prefetch:Boolean,dataParallelModels:Seq[lamp.nn.SupervisedModel[I,M]],initState:Option[lamp.data.SimpleLoopState],accumulateGradientOverNBatches:Int,learningRateScheduleInitState:Option[LRState],printOptimizerAllocations:Boolean)(implicitevidence$4:lamp.nn.Load[M]):cats.effect.IO[(Int,lamp.nn.SupervisedModel[I,M],List[(Int,Double,Option[Double])],LRState,lamp.data.SimpleLoopState)]", "kind" : "def"}, {"label" : "withSWA", "tail" : "(model: SupervisedModel[I, M], optimizerFactory: (Seq[(STen, PTag)]) => Optimizer, trainBatchesOverEpoch: () => BatchStream[I, BatchStreamState], warmupEpochs: Int, swaEpochs: Int, validationBatchesOverEpoch: Option[() => BatchStream[I, BatchStreamState]], trainingCallback: TrainingCallback, validationCallback: ValidationCallback, checkpointState: Option[(SimpleThenSWALoopState, Either[LRState, LRStateSWA]) => IO[Unit]], logger: Option[Logger], returnMinValidationLossModel: Seq[Int], learningRateSchedule: LearningRateSchedule[LRState], swaLearningRateSchedule: SWALearningRateSchedule[LRStateSWA], prefetch: Boolean, dataParallelModels: Seq[SupervisedModel[I, M]], initState: Option[SimpleThenSWALoopState], accumulateGradientOverNBatches: Int, learningRateScheduleInitState: Option[LRState], swaLearningRateScheduleInitState: Option[LRStateSWA])(arg0: Load[M], arg1: scala.reflect.api.JavaUniverse.TypeTag[LRState], arg2: scala.reflect.api.JavaUniverse.TypeTag[LRStateSWA]): IO[(Int, SupervisedModel[I, M], List[(Int, Double, Option[Double])], SupervisedModel[I, M])]", "member" : "lamp.data.IOLoops.withSWA", "link" : "lamp\/data\/IOLoops$.html#withSWA[I,M<:lamp.nn.GenericModule[I,lamp.autograd.Variable],LRState,LRStateSWA,BatchStreamState](model:lamp.nn.SupervisedModel[I,M],optimizerFactory:Seq[(lamp.STen,lamp.nn.PTag)]=>lamp.nn.Optimizer,trainBatchesOverEpoch:()=>lamp.data.BatchStream[I,BatchStreamState],warmupEpochs:Int,swaEpochs:Int,validationBatchesOverEpoch:Option[()=>lamp.data.BatchStream[I,BatchStreamState]],trainingCallback:lamp.data.TrainingCallback,validationCallback:lamp.data.ValidationCallback,checkpointState:Option[(lamp.data.SimpleThenSWALoopState,Either[LRState,LRStateSWA])=>cats.effect.IO[Unit]],logger:Option[scribe.Logger],returnMinValidationLossModel:Seq[Int],learningRateSchedule:lamp.nn.LearningRateSchedule[LRState],swaLearningRateSchedule:lamp.data.SWA.SWALearningRateSchedule[LRStateSWA],prefetch:Boolean,dataParallelModels:Seq[lamp.nn.SupervisedModel[I,M]],initState:Option[lamp.data.SimpleThenSWALoopState],accumulateGradientOverNBatches:Int,learningRateScheduleInitState:Option[LRState],swaLearningRateScheduleInitState:Option[LRStateSWA])(implicitevidence$1:lamp.nn.Load[M],implicitevidence$2:reflect.runtime.universe.TypeTag[LRState],implicitevidence$3:reflect.runtime.universe.TypeTag[LRStateSWA]):cats.effect.IO[(Int,lamp.nn.SupervisedModel[I,M],List[(Int,Double,Option[Double])],lamp.nn.SupervisedModel[I,M])]", "kind" : "def"}, {"label" : "runBatchStream", "tail" : "(batchStream: BatchStream[I, S], model: M with GenericModule[I, Variable])(scope: Scope): IO[List[STen]]", "member" : "lamp.data.IOLoops.runBatchStream", "link" : "lamp\/data\/IOLoops$.html#runBatchStream[I,M<:lamp.nn.GenericModule[I,lamp.autograd.Variable],S](batchStream:lamp.data.BatchStream[I,S],model:Mwithlamp.nn.GenericModule[I,lamp.autograd.Variable])(implicitscope:lamp.Scope):cats.effect.IO[List[lamp.STen]]", "kind" : "def"}, {"label" : "forwardBatchStream", "tail" : "(batchStream: BatchStream[I, S], model: M with GenericModule[I, Variable]): IO[Unit]", "member" : "lamp.data.IOLoops.forwardBatchStream", "link" : "lamp\/data\/IOLoops$.html#forwardBatchStream[I,M<:lamp.nn.GenericModule[I,lamp.autograd.Variable],S](batchStream:lamp.data.BatchStream[I,S],model:Mwithlamp.nn.GenericModule[I,lamp.autograd.Variable]):cats.effect.IO[Unit]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/data\/IOLoops$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/data\/IOLoops$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/data\/IOLoops$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/data\/IOLoops$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/data\/IOLoops$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/data\/IOLoops$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/data\/IOLoops$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/IOLoops$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/IOLoops$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/IOLoops$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/data\/IOLoops$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/data\/IOLoops$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/data\/IOLoops$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/data\/IOLoops$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/data\/IOLoops$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/data\/IOLoops$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/data\/IOLoops$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/data\/IOLoops$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/data\/IOLoops$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "lamp.data.LoopState", "trait" : "lamp\/data\/LoopState.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/data\/LoopState.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/data\/LoopState.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/data\/LoopState.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/data\/LoopState.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/data\/LoopState.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/data\/LoopState.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/data\/LoopState.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/LoopState.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/LoopState.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/LoopState.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/data\/LoopState.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/data\/LoopState.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/data\/LoopState.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/data\/LoopState.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/data\/LoopState.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/data\/LoopState.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/data\/LoopState.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/data\/LoopState.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/data\/LoopState.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "lamp.data.NonEmptyBatch", "shortDescription" : "", "members_case class" : [{"label" : "unsafeGet", "tail" : "(): I", "member" : "lamp.data.NonEmptyBatch.unsafeGet", "link" : "lamp\/data\/NonEmptyBatch.html#unsafeGet:I", "kind" : "def"}, {"label" : "map", "tail" : "(f: (I) => B): StreamControl[B]", "member" : "lamp.data.NonEmptyBatch.map", "link" : "lamp\/data\/NonEmptyBatch.html#map[B](f:I=>B):lamp.data.StreamControl[B]", "kind" : "def"}, {"member" : "lamp.data.NonEmptyBatch#<init>", "error" : "unsupported entity"}, {"label" : "batch", "tail" : ": I", "member" : "lamp.data.NonEmptyBatch.batch", "link" : "lamp\/data\/NonEmptyBatch.html#batch:I", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/data\/NonEmptyBatch.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/data\/NonEmptyBatch.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/data\/NonEmptyBatch.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/data\/NonEmptyBatch.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/data\/NonEmptyBatch.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/data\/NonEmptyBatch.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/data\/NonEmptyBatch.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/data\/NonEmptyBatch.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/NonEmptyBatch.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/NonEmptyBatch.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/NonEmptyBatch.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/data\/NonEmptyBatch.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/data\/NonEmptyBatch.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/data\/NonEmptyBatch.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/data\/NonEmptyBatch.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/data\/NonEmptyBatch.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/data\/NonEmptyBatch.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/data\/NonEmptyBatch.html", "kind" : "case class"}, {"name" : "lamp.data.Peek", "shortDescription" : "", "members_case class" : [{"label" : "forward", "tail" : "(x: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.data.Peek.forward", "link" : "lamp\/data\/Peek.html#forward[S](x:lamp.autograd.Variable)(implicitevidence$1:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "state", "tail" : "(): Nil", "member" : "lamp.data.Peek.state", "link" : "lamp\/data\/Peek.html#state:scala.collection.immutable.Nil.type", "kind" : "def"}, {"member" : "lamp.data.Peek#<init>", "error" : "unsupported entity"}, {"label" : "label", "tail" : ": String", "member" : "lamp.data.Peek.label", "link" : "lamp\/data\/Peek.html#label:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/data\/Peek.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "learnableParameters", "tail" : "(): Long", "member" : "lamp.nn.GenericModule.learnableParameters", "link" : "lamp\/data\/Peek.html#learnableParameters:Long", "kind" : "final def"}, {"label" : "gradients", "tail" : "(loss: Variable, zeroGrad: Boolean): Seq[Option[STen]]", "member" : "lamp.nn.GenericModule.gradients", "link" : "lamp\/data\/Peek.html#gradients(loss:lamp.autograd.Variable,zeroGrad:Boolean):Seq[Option[lamp.STen]]", "kind" : "final def"}, {"label" : "zeroGrad", "tail" : "(): Unit", "member" : "lamp.nn.GenericModule.zeroGrad", "link" : "lamp\/data\/Peek.html#zeroGrad():Unit", "kind" : "final def"}, {"label" : "parameters", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.GenericModule.parameters", "link" : "lamp\/data\/Peek.html#parameters:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "final def"}, {"label" : "apply", "tail" : "(a: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.nn.GenericModule.apply", "link" : "lamp\/data\/Peek.html#apply[S](a:A)(implicitevidence$17:lamp.Sc[S]):B", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/data\/Peek.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/data\/Peek.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/data\/Peek.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/data\/Peek.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/data\/Peek.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/data\/Peek.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/data\/Peek.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/Peek.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/Peek.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/Peek.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/data\/Peek.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/data\/Peek.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/data\/Peek.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/data\/Peek.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/data\/Peek.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/data\/Peek.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/data\/Peek.html", "kind" : "case class"}, {"name" : "lamp.data.Reader", "shortDescription" : "", "object" : "lamp\/data\/Reader$.html", "members_object" : [{"label" : "readFully", "tail" : "(bb: ByteBuffer, channel: ReadableByteChannel): Int", "member" : "lamp.data.Reader.readFully", "link" : "lamp\/data\/Reader$.html#readFully(bb:java.nio.ByteBuffer,channel:java.nio.channels.ReadableByteChannel):Int", "kind" : "def"}, {"label" : "loadFromFile", "tail" : "(module: M with GenericModule[A, B], file: File, device: Device, pin: Boolean)(arg0: Load[M]): IO[Unit]", "member" : "lamp.data.Reader.loadFromFile", "link" : "lamp\/data\/Reader$.html#loadFromFile[A,B,M<:lamp.nn.GenericModule[A,B]](module:Mwithlamp.nn.GenericModule[A,B],file:java.io.File,device:lamp.Device,pin:Boolean)(implicitevidence$1:lamp.nn.Load[M]):cats.effect.IO[Unit]", "kind" : "def"}, {"label" : "readTensorsFromFile", "tail" : "(file: File, device: Device, pin: Boolean)(scope: Scope): Seq[STen]", "member" : "lamp.data.Reader.readTensorsFromFile", "link" : "lamp\/data\/Reader$.html#readTensorsFromFile(file:java.io.File,device:lamp.Device,pin:Boolean)(implicitscope:lamp.Scope):Seq[lamp.STen]", "kind" : "def"}, {"label" : "readTensorData", "tail" : "(descriptor: TensorList, pathOfDescriptor: File, device: Device, pin: Boolean)(scope: Scope): Seq[STen]", "member" : "lamp.data.Reader.readTensorData", "link" : "lamp\/data\/Reader$.html#readTensorData(descriptor:lamp.data.schemas.TensorList,pathOfDescriptor:java.io.File,device:lamp.Device,pin:Boolean)(implicitscope:lamp.Scope):Seq[lamp.STen]", "kind" : "def"}, {"label" : "readTensorListDescriptorFromFile", "tail" : "(file: File): TensorList", "member" : "lamp.data.Reader.readTensorListDescriptorFromFile", "link" : "lamp\/data\/Reader$.html#readTensorListDescriptorFromFile(file:java.io.File):lamp.data.schemas.TensorList", "kind" : "def"}, {"label" : "readTensorListDescriptorFromChannel", "tail" : "(channel: ReadableByteChannel): TensorList", "member" : "lamp.data.Reader.readTensorListDescriptorFromChannel", "link" : "lamp\/data\/Reader$.html#readTensorListDescriptorFromChannel(channel:java.nio.channels.ReadableByteChannel):lamp.data.schemas.TensorList", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/data\/Reader$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/data\/Reader$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/data\/Reader$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/data\/Reader$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/data\/Reader$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/data\/Reader$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/data\/Reader$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/Reader$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/Reader$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/Reader$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/data\/Reader$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/data\/Reader$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/data\/Reader$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/data\/Reader$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/data\/Reader$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/data\/Reader$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/data\/Reader$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/data\/Reader$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/data\/Reader$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "lamp.data.SimpleLoopState", "shortDescription" : "", "members_case class" : [{"member" : "lamp.data.SimpleLoopState#<init>", "error" : "unsupported entity"}, {"label" : "learningCurve", "tail" : ": List[(Int, Double, Option[Double])]", "member" : "lamp.data.SimpleLoopState.learningCurve", "link" : "lamp\/data\/SimpleLoopState.html#learningCurve:List[(Int,Double,Option[Double])]", "kind" : "val"}, {"label" : "minValidationLossModel", "tail" : ": Option[(Int, Seq[Tensor])]", "member" : "lamp.data.SimpleLoopState.minValidationLossModel", "link" : "lamp\/data\/SimpleLoopState.html#minValidationLossModel:Option[(Int,Seq[aten.Tensor])]", "kind" : "val"}, {"label" : "minValidationLoss", "tail" : ": Option[Double]", "member" : "lamp.data.SimpleLoopState.minValidationLoss", "link" : "lamp\/data\/SimpleLoopState.html#minValidationLoss:Option[Double]", "kind" : "val"}, {"label" : "lastValidationLoss", "tail" : ": Option[Double]", "member" : "lamp.data.SimpleLoopState.lastValidationLoss", "link" : "lamp\/data\/SimpleLoopState.html#lastValidationLoss:Option[Double]", "kind" : "val"}, {"label" : "epoch", "tail" : ": Int", "member" : "lamp.data.SimpleLoopState.epoch", "link" : "lamp\/data\/SimpleLoopState.html#epoch:Int", "kind" : "val"}, {"label" : "optimizer", "tail" : ": Seq[STen]", "member" : "lamp.data.SimpleLoopState.optimizer", "link" : "lamp\/data\/SimpleLoopState.html#optimizer:Seq[lamp.STen]", "kind" : "val"}, {"label" : "model", "tail" : ": Seq[STen]", "member" : "lamp.data.SimpleLoopState.model", "link" : "lamp\/data\/SimpleLoopState.html#model:Seq[lamp.STen]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/data\/SimpleLoopState.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/data\/SimpleLoopState.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/data\/SimpleLoopState.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/data\/SimpleLoopState.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/data\/SimpleLoopState.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/data\/SimpleLoopState.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/data\/SimpleLoopState.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/data\/SimpleLoopState.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/SimpleLoopState.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/SimpleLoopState.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/SimpleLoopState.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/data\/SimpleLoopState.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/data\/SimpleLoopState.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/data\/SimpleLoopState.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/data\/SimpleLoopState.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/data\/SimpleLoopState.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/data\/SimpleLoopState.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/data\/SimpleLoopState.html", "kind" : "case class"}, {"name" : "lamp.data.SimpleThenSWALoopState", "shortDescription" : "", "members_case class" : [{"member" : "lamp.data.SimpleThenSWALoopState#<init>", "error" : "unsupported entity"}, {"label" : "swa", "tail" : ": Option[SWALoopState]", "member" : "lamp.data.SimpleThenSWALoopState.swa", "link" : "lamp\/data\/SimpleThenSWALoopState.html#swa:Option[lamp.data.SWALoopState]", "kind" : "val"}, {"label" : "simple", "tail" : ": SimpleLoopState", "member" : "lamp.data.SimpleThenSWALoopState.simple", "link" : "lamp\/data\/SimpleThenSWALoopState.html#simple:lamp.data.SimpleLoopState", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/data\/SimpleThenSWALoopState.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/data\/SimpleThenSWALoopState.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/data\/SimpleThenSWALoopState.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/data\/SimpleThenSWALoopState.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/data\/SimpleThenSWALoopState.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/data\/SimpleThenSWALoopState.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/data\/SimpleThenSWALoopState.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/data\/SimpleThenSWALoopState.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/SimpleThenSWALoopState.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/SimpleThenSWALoopState.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/SimpleThenSWALoopState.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/data\/SimpleThenSWALoopState.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/data\/SimpleThenSWALoopState.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/data\/SimpleThenSWALoopState.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/data\/SimpleThenSWALoopState.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/data\/SimpleThenSWALoopState.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/data\/SimpleThenSWALoopState.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/data\/SimpleThenSWALoopState.html", "kind" : "case class"}, {"name" : "lamp.data.StateIO", "shortDescription" : "", "object" : "lamp\/data\/StateIO$.html", "members_object" : [{"label" : "stateToFile", "tail" : "(file: File): (LoopState) => IO[Unit]", "member" : "lamp.data.StateIO.stateToFile", "link" : "lamp\/data\/StateIO$.html#stateToFile(file:java.io.File):lamp.data.LoopState=>cats.effect.IO[Unit]", "kind" : "def"}, {"label" : "writeToFile", "tail" : "(file: File, state: LoopState, bufferSize: Int): Unit", "member" : "lamp.data.StateIO.writeToFile", "link" : "lamp\/data\/StateIO$.html#writeToFile(file:java.io.File,state:lamp.data.LoopState,bufferSize:Int):Unit", "kind" : "def"}, {"label" : "readFromFile", "tail" : "(file: File, device: Device)(scope: Scope): LoopState", "member" : "lamp.data.StateIO.readFromFile", "link" : "lamp\/data\/StateIO$.html#readFromFile(file:java.io.File,device:lamp.Device)(implicitscope:lamp.Scope):lamp.data.LoopState", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/data\/StateIO$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/data\/StateIO$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/data\/StateIO$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/data\/StateIO$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/data\/StateIO$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/data\/StateIO$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/data\/StateIO$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/StateIO$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/StateIO$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/StateIO$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/data\/StateIO$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/data\/StateIO$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/data\/StateIO$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/data\/StateIO$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/data\/StateIO$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/data\/StateIO$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/data\/StateIO$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/data\/StateIO$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/data\/StateIO$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "lamp.data.StreamControl", "object" : "lamp\/data\/StreamControl$.html", "members_object" : [{"label" : "StreamControlIsMovable", "tail" : "(arg0: Movable[T]): Movable[StreamControl[T]]", "member" : "lamp.data.StreamControl.StreamControlIsMovable", "link" : "lamp\/data\/StreamControl$.html#StreamControlIsMovable[T](implicitevidence$1:lamp.Movable[T]):lamp.Movable[lamp.data.StreamControl[T]]", "kind" : "implicit def"}, {"label" : "apply", "tail" : "(i: I): StreamControl[I]", "member" : "lamp.data.StreamControl.apply", "link" : "lamp\/data\/StreamControl$.html#apply[I](i:I):lamp.data.StreamControl[I]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/data\/StreamControl$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/data\/StreamControl$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/data\/StreamControl$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/data\/StreamControl$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/data\/StreamControl$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/data\/StreamControl$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/data\/StreamControl$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/StreamControl$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/StreamControl$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/StreamControl$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/data\/StreamControl$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/data\/StreamControl$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/data\/StreamControl$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/data\/StreamControl$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/data\/StreamControl$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/data\/StreamControl$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/data\/StreamControl$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/data\/StreamControl$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/data\/StreamControl$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "lamp\/data\/StreamControl.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/data\/StreamControl.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/data\/StreamControl.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/data\/StreamControl.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/data\/StreamControl.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/data\/StreamControl.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/data\/StreamControl.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/data\/StreamControl.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/StreamControl.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/StreamControl.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/StreamControl.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/data\/StreamControl.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/data\/StreamControl.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/data\/StreamControl.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/data\/StreamControl.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/data\/StreamControl.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/data\/StreamControl.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/data\/StreamControl.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/data\/StreamControl.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/data\/StreamControl.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "unsafeGet", "tail" : "(): I", "member" : "lamp.data.StreamControl.unsafeGet", "link" : "lamp\/data\/StreamControl.html#unsafeGet:I", "kind" : "abstract def"}, {"label" : "map", "tail" : "(f: (I) => B): StreamControl[B]", "member" : "lamp.data.StreamControl.map", "link" : "lamp\/data\/StreamControl.html#map[B](f:I=>B):lamp.data.StreamControl[B]", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "lamp.data.SWA", "shortDescription" : "", "object" : "lamp\/data\/SWA$.html", "members_object" : [{"label" : "epochs", "tail" : "(model: SupervisedModel[I, M], optimizerFactory: (Seq[(STen, PTag)]) => Optimizer, trainBatchesOverEpoch: () => BatchStream[I, BatchStreamState], validationBatchesOverEpoch: Option[() => BatchStream[I, BatchStreamState]], epochs: Int, trainingCallback: TrainingCallback, validationCallback: ValidationCallback, checkpointState: Option[(SWALoopState, LRState) => IO[Unit]], validationFrequency: Int, logger: Option[Logger], learningRateSchedule: SWALearningRateSchedule[LRState], prefetch: Boolean, dataParallelModels: Seq[SupervisedModel[I, M]], initState: Option[SWALoopState], accumulateGradientOverNBatches: Int, learningRateScheduleInitState: Option[LRState])(arg0: Load[M]): IO[(SupervisedModel[I, M], List[(Int, Double, Option[Double])])]", "member" : "lamp.data.SWA.epochs", "link" : "lamp\/data\/SWA$.html#epochs[I,M<:lamp.nn.GenericModule[I,lamp.autograd.Variable],LRState,BatchStreamState](model:lamp.nn.SupervisedModel[I,M],optimizerFactory:Seq[(lamp.STen,lamp.nn.PTag)]=>lamp.nn.Optimizer,trainBatchesOverEpoch:()=>lamp.data.BatchStream[I,BatchStreamState],validationBatchesOverEpoch:Option[()=>lamp.data.BatchStream[I,BatchStreamState]],epochs:Int,trainingCallback:lamp.data.TrainingCallback,validationCallback:lamp.data.ValidationCallback,checkpointState:Option[(lamp.data.SWALoopState,LRState)=>cats.effect.IO[Unit]],validationFrequency:Int,logger:Option[scribe.Logger],learningRateSchedule:lamp.data.SWA.SWALearningRateSchedule[LRState],prefetch:Boolean,dataParallelModels:Seq[lamp.nn.SupervisedModel[I,M]],initState:Option[lamp.data.SWALoopState],accumulateGradientOverNBatches:Int,learningRateScheduleInitState:Option[LRState])(implicitevidence$1:lamp.nn.Load[M]):cats.effect.IO[(lamp.nn.SupervisedModel[I,M],List[(Int,Double,Option[Double])])]", "kind" : "def"}, {"label" : "SWALearningRateSchedule", "tail" : "", "member" : "lamp.data.SWA.SWALearningRateSchedule", "link" : "lamp\/data\/SWA$.html#SWALearningRateSchedule", "kind" : "object"}, {"label" : "SWALearningRateSchedule", "tail" : "", "member" : "lamp.data.SWA.SWALearningRateSchedule", "link" : "lamp\/data\/SWA$.html#SWALearningRateSchedule[State]extendsAnyRef", "kind" : "trait"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/data\/SWA$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/data\/SWA$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/data\/SWA$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/data\/SWA$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/data\/SWA$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/data\/SWA$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/data\/SWA$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/SWA$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/SWA$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/SWA$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/data\/SWA$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/data\/SWA$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/data\/SWA$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/data\/SWA$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/data\/SWA$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/data\/SWA$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/data\/SWA$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/data\/SWA$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/data\/SWA$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "lamp.data.SWALoopState", "shortDescription" : "", "members_case class" : [{"member" : "lamp.data.SWALoopState#<init>", "error" : "unsupported entity"}, {"label" : "learningCurve", "tail" : ": List[(Int, Double, Option[Double])]", "member" : "lamp.data.SWALoopState.learningCurve", "link" : "lamp\/data\/SWALoopState.html#learningCurve:List[(Int,Double,Option[Double])]", "kind" : "val"}, {"label" : "averagedModels", "tail" : ": Option[Seq[Tensor]]", "member" : "lamp.data.SWALoopState.averagedModels", "link" : "lamp\/data\/SWALoopState.html#averagedModels:Option[Seq[aten.Tensor]]", "kind" : "val"}, {"label" : "numberOfAveragedModels", "tail" : ": Int", "member" : "lamp.data.SWALoopState.numberOfAveragedModels", "link" : "lamp\/data\/SWALoopState.html#numberOfAveragedModels:Int", "kind" : "val"}, {"label" : "minValidationLoss", "tail" : ": Option[Double]", "member" : "lamp.data.SWALoopState.minValidationLoss", "link" : "lamp\/data\/SWALoopState.html#minValidationLoss:Option[Double]", "kind" : "val"}, {"label" : "lastValidationLoss", "tail" : ": Option[Double]", "member" : "lamp.data.SWALoopState.lastValidationLoss", "link" : "lamp\/data\/SWALoopState.html#lastValidationLoss:Option[Double]", "kind" : "val"}, {"label" : "epoch", "tail" : ": Int", "member" : "lamp.data.SWALoopState.epoch", "link" : "lamp\/data\/SWALoopState.html#epoch:Int", "kind" : "val"}, {"label" : "optimizer", "tail" : ": Seq[STen]", "member" : "lamp.data.SWALoopState.optimizer", "link" : "lamp\/data\/SWALoopState.html#optimizer:Seq[lamp.STen]", "kind" : "val"}, {"label" : "model", "tail" : ": Seq[STen]", "member" : "lamp.data.SWALoopState.model", "link" : "lamp\/data\/SWALoopState.html#model:Seq[lamp.STen]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/data\/SWALoopState.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/data\/SWALoopState.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/data\/SWALoopState.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/data\/SWALoopState.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/data\/SWALoopState.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/data\/SWALoopState.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/data\/SWALoopState.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/data\/SWALoopState.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/SWALoopState.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/SWALoopState.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/SWALoopState.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/data\/SWALoopState.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/data\/SWALoopState.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/data\/SWALoopState.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/data\/SWALoopState.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/data\/SWALoopState.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/data\/SWALoopState.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/data\/SWALoopState.html", "kind" : "case class"}, {"name" : "lamp.data.TensorLogger", "shortDescription" : "", "object" : "lamp\/data\/TensorLogger$.html", "members_object" : [{"label" : "start", "tail" : "(frequency: FiniteDuration)(logger: (String) => Unit, filter: (TensorTraceData, Double) => Boolean, detailMinMs: Double, detailMaxMs: Double, detailNum: Int): TensorLogger", "member" : "lamp.data.TensorLogger.start", "link" : "lamp\/data\/TensorLogger$.html#start(frequency:scala.concurrent.duration.FiniteDuration)(logger:String=>Unit,filter:(aten.TensorTraceData,Double)=>Boolean,detailMinMs:Double,detailMaxMs:Double,detailNum:Int):lamp.data.TensorLogger", "kind" : "def"}, {"label" : "detailAllTensorOptions", "tail" : "(logger: (String) => Unit): Unit", "member" : "lamp.data.TensorLogger.detailAllTensorOptions", "link" : "lamp\/data\/TensorLogger$.html#detailAllTensorOptions(logger:String=>Unit):Unit", "kind" : "def"}, {"label" : "detailAllTensors", "tail" : "(logger: (String) => Unit): Unit", "member" : "lamp.data.TensorLogger.detailAllTensors", "link" : "lamp\/data\/TensorLogger$.html#detailAllTensors(logger:String=>Unit):Unit", "kind" : "def"}, {"label" : "makeLog", "tail" : "(nanoTime: Long, data: Seq[TensorTraceData], filter: (TensorTraceData, Double) => Boolean, detailMinMs: Double, detailMaxMs: Double, detailNum: Int): String", "member" : "lamp.data.TensorLogger.makeLog", "link" : "lamp\/data\/TensorLogger$.html#makeLog(nanoTime:Long,data:Seq[aten.TensorTraceData],filter:(aten.TensorTraceData,Double)=>Boolean,detailMinMs:Double,detailMaxMs:Double,detailNum:Int):String", "kind" : "def"}, {"label" : "logTensorOptions", "tail" : "(logger: (String) => Unit, filter: (TensorTraceData, Double) => Boolean, detailMinMs: Double, detailMaxMs: Double, detailNum: Int): Unit", "member" : "lamp.data.TensorLogger.logTensorOptions", "link" : "lamp\/data\/TensorLogger$.html#logTensorOptions(logger:String=>Unit,filter:(aten.TensorTraceData,Double)=>Boolean,detailMinMs:Double,detailMaxMs:Double,detailNum:Int):Unit", "kind" : "def"}, {"label" : "logTensors", "tail" : "(logger: (String) => Unit, filter: (TensorTraceData, Double) => Boolean, detailMinMs: Double, detailMaxMs: Double, detailNum: Int): Unit", "member" : "lamp.data.TensorLogger.logTensors", "link" : "lamp\/data\/TensorLogger$.html#logTensors(logger:String=>Unit,filter:(aten.TensorTraceData,Double)=>Boolean,detailMinMs:Double,detailMaxMs:Double,detailNum:Int):Unit", "kind" : "def"}, {"label" : "makeStatistic", "tail" : "(nanoTime: Long, actives: Seq[TensorTraceData])(filter: (TensorTraceData, Double) => Boolean): (List[(Double, Double, Int)], Seq[(TensorTraceData, Double)])", "member" : "lamp.data.TensorLogger.makeStatistic", "link" : "lamp\/data\/TensorLogger$.html#makeStatistic(nanoTime:Long,actives:Seq[aten.TensorTraceData])(filter:(aten.TensorTraceData,Double)=>Boolean):(List[(Double,Double,Int)],Seq[(aten.TensorTraceData,Double)])", "kind" : "def"}, {"label" : "queryActiveTensorOptions", "tail" : "(): Vector[TensorTraceData]", "member" : "lamp.data.TensorLogger.queryActiveTensorOptions", "link" : "lamp\/data\/TensorLogger$.html#queryActiveTensorOptions():scala.collection.immutable.Vector[aten.TensorTraceData]", "kind" : "def"}, {"label" : "queryActiveTensors", "tail" : "(): Vector[TensorTraceData]", "member" : "lamp.data.TensorLogger.queryActiveTensors", "link" : "lamp\/data\/TensorLogger$.html#queryActiveTensors():scala.collection.immutable.Vector[aten.TensorTraceData]", "kind" : "def"}, {"label" : "formatStackTrace", "tail" : "(data: TensorTraceData): String", "member" : "lamp.data.TensorLogger.formatStackTrace", "link" : "lamp\/data\/TensorLogger$.html#formatStackTrace(data:aten.TensorTraceData):String", "kind" : "def"}, {"label" : "formatLine", "tail" : "(data: TensorTraceData): String", "member" : "lamp.data.TensorLogger.formatLine", "link" : "lamp\/data\/TensorLogger$.html#formatLine(data:aten.TensorTraceData):String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/data\/TensorLogger$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/data\/TensorLogger$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/data\/TensorLogger$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/data\/TensorLogger$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/data\/TensorLogger$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/data\/TensorLogger$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/data\/TensorLogger$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/TensorLogger$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/TensorLogger$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/TensorLogger$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/data\/TensorLogger$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/data\/TensorLogger$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/data\/TensorLogger$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/data\/TensorLogger$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/data\/TensorLogger$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/data\/TensorLogger$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/data\/TensorLogger$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/data\/TensorLogger$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/data\/TensorLogger$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "cancel", "tail" : "(): Unit", "member" : "lamp.data.TensorLogger.cancel", "link" : "lamp\/data\/TensorLogger.html#cancel():Unit", "kind" : "def"}, {"member" : "lamp.data.TensorLogger#<init>", "error" : "unsupported entity"}, {"label" : "stop", "tail" : ": () => Unit", "member" : "lamp.data.TensorLogger.stop", "link" : "lamp\/data\/TensorLogger.html#stop:()=>Unit", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/data\/TensorLogger.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/data\/TensorLogger.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/data\/TensorLogger.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/data\/TensorLogger.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/data\/TensorLogger.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/data\/TensorLogger.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/data\/TensorLogger.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/data\/TensorLogger.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/TensorLogger.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/TensorLogger.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/TensorLogger.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/data\/TensorLogger.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/data\/TensorLogger.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/data\/TensorLogger.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/data\/TensorLogger.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/data\/TensorLogger.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/data\/TensorLogger.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/data\/TensorLogger.html", "kind" : "case class"}, {"name" : "lamp.data.Text", "shortDescription" : "", "object" : "lamp\/data\/Text$.html", "members_object" : [{"label" : "sentencesToPaddedMatrix", "tail" : "(sentences: Seq[String], maxLength: Int, pad: Int, vocabulary: Map[Char, Int]): Mat[Int]", "member" : "lamp.data.Text.sentencesToPaddedMatrix", "link" : "lamp\/data\/Text$.html#sentencesToPaddedMatrix(sentences:Seq[String],maxLength:Int,pad:Int,vocabulary:Map[Char,Int]):org.saddle.Mat[Int]", "kind" : "def"}, {"label" : "minibatchesForSeq2Seq", "tail" : "(text: IndexedSeq[(Vector[Long], Vector[Long])], minibatchSize: Int, timeSteps: Int, pad: Long, rng: Generator): BatchStream[(Variable, Variable), Int]", "member" : "lamp.data.Text.minibatchesForSeq2Seq", "link" : "lamp\/data\/Text$.html#minibatchesForSeq2Seq(text:IndexedSeq[(Vector[Long],Vector[Long])],minibatchSize:Int,timeSteps:Int,pad:Long,rng:org.saddle.spire.random.Generator):lamp.data.BatchStream[(lamp.autograd.Variable,lamp.autograd.Variable),Int]", "kind" : "def"}, {"label" : "minibatchesFromText", "tail" : "(text: Vector[Int], minibatchSize: Int, timeSteps: Int, rng: Generator): BatchStream[Constant, Int]", "member" : "lamp.data.Text.minibatchesFromText", "link" : "lamp\/data\/Text$.html#minibatchesFromText(text:Vector[Int],minibatchSize:Int,timeSteps:Int,rng:org.saddle.spire.random.Generator):lamp.data.BatchStream[lamp.autograd.Constant,Int]", "kind" : "def"}, {"label" : "makePredictionBatch", "tail" : "(examples: Seq[Vector[Long]], device: Device)(scope: Scope): Variable", "member" : "lamp.data.Text.makePredictionBatch", "link" : "lamp\/data\/Text$.html#makePredictionBatch(examples:Seq[Vector[Long]],device:lamp.Device)(implicitscope:lamp.Scope):lamp.autograd.Variable", "kind" : "def"}, {"label" : "charsToIntegers", "tail" : "(text: String, chars: Map[Char, Int]): Vector[Int]", "member" : "lamp.data.Text.charsToIntegers", "link" : "lamp\/data\/Text$.html#charsToIntegers(text:String,chars:Map[Char,Int]):scala.collection.immutable.Vector[Int]", "kind" : "def"}, {"label" : "charsToIntegers", "tail" : "(text: String): (Map[Char, Int], Vector[Int])", "member" : "lamp.data.Text.charsToIntegers", "link" : "lamp\/data\/Text$.html#charsToIntegers(text:String):(scala.collection.immutable.Map[Char,Int],scala.collection.immutable.Vector[Int])", "kind" : "def"}, {"label" : "convertIntegersToText", "tail" : "(tensor: STen, vocab: Map[Int, Char]): Seq[String]", "member" : "lamp.data.Text.convertIntegersToText", "link" : "lamp\/data\/Text$.html#convertIntegersToText(tensor:lamp.STen,vocab:Map[Int,Char]):Seq[String]", "kind" : "def"}, {"label" : "convertLogitsToText", "tail" : "(tensor: STen, vocab: Map[Int, Char])(scope: Scope): Seq[String]", "member" : "lamp.data.Text.convertLogitsToText", "link" : "lamp\/data\/Text$.html#convertLogitsToText(tensor:lamp.STen,vocab:Map[Int,Char])(implicitscope:lamp.Scope):Seq[String]", "kind" : "def"}, {"label" : "sequencePredictionBeam", "tail" : "(prefix: Vector[Long], device: Device, module: M with StatefulModule[Variable, Variable, T], steps: Int, startSequence: Int, endOfSequence: Int)(is: InitState[M, T], scope: Scope): Seq[(STen, Double)]", "member" : "lamp.data.Text.sequencePredictionBeam", "link" : "lamp\/data\/Text$.html#sequencePredictionBeam[T,M<:lamp.nn.StatefulModule[lamp.autograd.Variable,lamp.autograd.Variable,T]](prefix:Vector[Long],device:lamp.Device,module:Mwithlamp.nn.StatefulModule[lamp.autograd.Variable,lamp.autograd.Variable,T],steps:Int,startSequence:Int,endOfSequence:Int)(implicitis:lamp.nn.InitState[M,T],implicitscope:lamp.Scope):Seq[(lamp.STen,Double)]", "kind" : "def"}, {"label" : "sequencePrediction", "tail" : "(batch: Seq[Vector[Long]], device: Device, module: M with StatefulModule[Variable, Variable, T], steps: Int)(is: InitState[M, T], scope: Scope): STen", "member" : "lamp.data.Text.sequencePrediction", "link" : "lamp\/data\/Text$.html#sequencePrediction[T,M<:lamp.nn.StatefulModule[lamp.autograd.Variable,lamp.autograd.Variable,T]](batch:Seq[Vector[Long]],device:lamp.Device,module:Mwithlamp.nn.StatefulModule[lamp.autograd.Variable,lamp.autograd.Variable,T],steps:Int)(implicitis:lamp.nn.InitState[M,T],implicitscope:lamp.Scope):lamp.STen", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/data\/Text$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/data\/Text$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/data\/Text$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/data\/Text$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/data\/Text$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/data\/Text$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/data\/Text$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/Text$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/Text$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/Text$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/data\/Text$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/data\/Text$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/data\/Text$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/data\/Text$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/data\/Text$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/data\/Text$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/data\/Text$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/data\/Text$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/data\/Text$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "lamp.data.TrainingCallback", "object" : "lamp\/data\/TrainingCallback$.html", "members_object" : [{"label" : "noop", "tail" : ": TrainingCallback", "member" : "lamp.data.TrainingCallback.noop", "link" : "lamp\/data\/TrainingCallback$.html#noop:lamp.data.TrainingCallback", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/data\/TrainingCallback$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/data\/TrainingCallback$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/data\/TrainingCallback$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/data\/TrainingCallback$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/data\/TrainingCallback$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/data\/TrainingCallback$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/data\/TrainingCallback$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/TrainingCallback$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/TrainingCallback$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/TrainingCallback$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/data\/TrainingCallback$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/data\/TrainingCallback$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/data\/TrainingCallback$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/data\/TrainingCallback$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/data\/TrainingCallback$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/data\/TrainingCallback$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/data\/TrainingCallback$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/data\/TrainingCallback$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/data\/TrainingCallback$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "lamp\/data\/TrainingCallback.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/data\/TrainingCallback.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/data\/TrainingCallback.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/data\/TrainingCallback.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/data\/TrainingCallback.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/data\/TrainingCallback.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/data\/TrainingCallback.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/data\/TrainingCallback.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/TrainingCallback.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/TrainingCallback.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/TrainingCallback.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/data\/TrainingCallback.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/data\/TrainingCallback.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/data\/TrainingCallback.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/data\/TrainingCallback.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/data\/TrainingCallback.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/data\/TrainingCallback.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/data\/TrainingCallback.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/data\/TrainingCallback.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/data\/TrainingCallback.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "apply", "tail" : "(epochCount: Long, trainingLoss: Double): Unit", "member" : "lamp.data.TrainingCallback.apply", "link" : "lamp\/data\/TrainingCallback.html#apply(epochCount:Long,trainingLoss:Double):Unit", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "lamp.data.ValidationCallback", "object" : "lamp\/data\/ValidationCallback$.html", "members_object" : [{"label" : "noop", "tail" : ": ValidationCallback", "member" : "lamp.data.ValidationCallback.noop", "link" : "lamp\/data\/ValidationCallback$.html#noop:lamp.data.ValidationCallback", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/data\/ValidationCallback$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/data\/ValidationCallback$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/data\/ValidationCallback$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/data\/ValidationCallback$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/data\/ValidationCallback$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/data\/ValidationCallback$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/data\/ValidationCallback$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/ValidationCallback$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/ValidationCallback$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/ValidationCallback$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/data\/ValidationCallback$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/data\/ValidationCallback$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/data\/ValidationCallback$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/data\/ValidationCallback$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/data\/ValidationCallback$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/data\/ValidationCallback$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/data\/ValidationCallback$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/data\/ValidationCallback$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/data\/ValidationCallback$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "lamp\/data\/ValidationCallback.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/data\/ValidationCallback.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/data\/ValidationCallback.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/data\/ValidationCallback.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/data\/ValidationCallback.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/data\/ValidationCallback.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/data\/ValidationCallback.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/data\/ValidationCallback.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/ValidationCallback.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/ValidationCallback.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/ValidationCallback.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/data\/ValidationCallback.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/data\/ValidationCallback.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/data\/ValidationCallback.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/data\/ValidationCallback.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/data\/ValidationCallback.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/data\/ValidationCallback.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/data\/ValidationCallback.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/data\/ValidationCallback.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/data\/ValidationCallback.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "apply", "tail" : "(epochCount: Long, validationLoss: Double): Unit", "member" : "lamp.data.ValidationCallback.apply", "link" : "lamp\/data\/ValidationCallback.html#apply(epochCount:Long,validationLoss:Double):Unit", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "lamp.data.Writer", "shortDescription" : "Serializes tensors", "object" : "lamp\/data\/Writer$.html", "members_object" : [{"label" : "writeCheckpoint", "tail" : "(file: File, model: GenericModule[A, B], bufferSize: Int): IO[Either[String, Unit]]", "member" : "lamp.data.Writer.writeCheckpoint", "link" : "lamp\/data\/Writer$.html#writeCheckpoint[A,B](file:java.io.File,model:lamp.nn.GenericModule[A,B],bufferSize:Int):cats.effect.IO[scala.util.Either[String,Unit]]", "kind" : "def"}, {"label" : "writeTensorsIntoFile", "tail" : "(tensors: Seq[STen], file: File, bufferSize: Int): IO[Either[String, Unit]]", "member" : "lamp.data.Writer.writeTensorsIntoFile", "link" : "lamp\/data\/Writer$.html#writeTensorsIntoFile(tensors:Seq[lamp.STen],file:java.io.File,bufferSize:Int):cats.effect.IO[scala.util.Either[String,Unit]]", "kind" : "def"}, {"label" : "writeTensorDataIntoChannel", "tail" : "(tensors: Seq[STen], channel: WritableByteChannel, bufferSize: Int): Either[String, Seq[(Long, Long, Long)]]", "member" : "lamp.data.Writer.writeTensorDataIntoChannel", "link" : "lamp\/data\/Writer$.html#writeTensorDataIntoChannel(tensors:Seq[lamp.STen],channel:java.nio.channels.WritableByteChannel,bufferSize:Int):Either[String,Seq[(Long,Long,Long)]]", "kind" : "def"}, {"label" : "writeTensorDataAndMakeDescriptor", "tail" : "(tensors: Seq[STen], location: String, dataChannel: WritableByteChannel, initialByteOffset: Long, bufferSize: Int): Either[String, TensorList]", "member" : "lamp.data.Writer.writeTensorDataAndMakeDescriptor", "link" : "lamp\/data\/Writer$.html#writeTensorDataAndMakeDescriptor(tensors:Seq[lamp.STen],location:String,dataChannel:java.nio.channels.WritableByteChannel,initialByteOffset:Long,bufferSize:Int):scala.util.Either[String,lamp.data.schemas.TensorList]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/data\/Writer$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/data\/Writer$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/data\/Writer$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/data\/Writer$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/data\/Writer$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/data\/Writer$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/data\/Writer$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/Writer$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/Writer$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/Writer$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/data\/Writer$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/data\/Writer$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/data\/Writer$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/data\/Writer$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/data\/Writer$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/data\/Writer$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/data\/Writer$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/data\/Writer$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/data\/Writer$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "lamp.data.schemas" : [{"name" : "lamp.data.schemas.LoopState", "object" : "lamp\/data\/schemas\/LoopState$.html", "members_object" : [{"label" : "codec", "tail" : ": JsonValueCodec[LoopState]", "member" : "lamp.data.schemas.LoopState.codec", "link" : "lamp\/data\/schemas\/LoopState$.html#codec:com.github.plokhotnyuk.jsoniter_scala.core.JsonValueCodec[lamp.data.schemas.LoopState]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/data\/schemas\/LoopState$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/data\/schemas\/LoopState$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/data\/schemas\/LoopState$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/data\/schemas\/LoopState$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/data\/schemas\/LoopState$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/data\/schemas\/LoopState$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/data\/schemas\/LoopState$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/schemas\/LoopState$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/schemas\/LoopState$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/schemas\/LoopState$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/data\/schemas\/LoopState$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/data\/schemas\/LoopState$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/data\/schemas\/LoopState$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/data\/schemas\/LoopState$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/data\/schemas\/LoopState$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/data\/schemas\/LoopState$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/data\/schemas\/LoopState$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/data\/schemas\/LoopState$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/data\/schemas\/LoopState$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "lamp\/data\/schemas\/LoopState.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/data\/schemas\/LoopState.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/data\/schemas\/LoopState.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/data\/schemas\/LoopState.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/data\/schemas\/LoopState.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/data\/schemas\/LoopState.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/data\/schemas\/LoopState.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/data\/schemas\/LoopState.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/schemas\/LoopState.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/schemas\/LoopState.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/schemas\/LoopState.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/data\/schemas\/LoopState.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/data\/schemas\/LoopState.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/data\/schemas\/LoopState.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/data\/schemas\/LoopState.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/data\/schemas\/LoopState.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/data\/schemas\/LoopState.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/data\/schemas\/LoopState.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/data\/schemas\/LoopState.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/data\/schemas\/LoopState.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "lamp.data.schemas.SimpleLoopState", "shortDescription" : "", "members_case class" : [{"member" : "lamp.data.schemas.SimpleLoopState#<init>", "error" : "unsupported entity"}, {"label" : "learningCurve", "tail" : ": List[(Int, Double, Option[Double])]", "member" : "lamp.data.schemas.SimpleLoopState.learningCurve", "link" : "lamp\/data\/schemas\/SimpleLoopState.html#learningCurve:List[(Int,Double,Option[Double])]", "kind" : "val"}, {"label" : "minValidationLossModel", "tail" : ": Option[(Int, TensorList)]", "member" : "lamp.data.schemas.SimpleLoopState.minValidationLossModel", "link" : "lamp\/data\/schemas\/SimpleLoopState.html#minValidationLossModel:Option[(Int,lamp.data.schemas.TensorList)]", "kind" : "val"}, {"label" : "minValidationLoss", "tail" : ": Option[Double]", "member" : "lamp.data.schemas.SimpleLoopState.minValidationLoss", "link" : "lamp\/data\/schemas\/SimpleLoopState.html#minValidationLoss:Option[Double]", "kind" : "val"}, {"label" : "lastValidationLoss", "tail" : ": Option[Double]", "member" : "lamp.data.schemas.SimpleLoopState.lastValidationLoss", "link" : "lamp\/data\/schemas\/SimpleLoopState.html#lastValidationLoss:Option[Double]", "kind" : "val"}, {"label" : "epoch", "tail" : ": Int", "member" : "lamp.data.schemas.SimpleLoopState.epoch", "link" : "lamp\/data\/schemas\/SimpleLoopState.html#epoch:Int", "kind" : "val"}, {"label" : "optimizer", "tail" : ": TensorList", "member" : "lamp.data.schemas.SimpleLoopState.optimizer", "link" : "lamp\/data\/schemas\/SimpleLoopState.html#optimizer:lamp.data.schemas.TensorList", "kind" : "val"}, {"label" : "model", "tail" : ": TensorList", "member" : "lamp.data.schemas.SimpleLoopState.model", "link" : "lamp\/data\/schemas\/SimpleLoopState.html#model:lamp.data.schemas.TensorList", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/data\/schemas\/SimpleLoopState.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/data\/schemas\/SimpleLoopState.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/data\/schemas\/SimpleLoopState.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/data\/schemas\/SimpleLoopState.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/data\/schemas\/SimpleLoopState.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/data\/schemas\/SimpleLoopState.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/data\/schemas\/SimpleLoopState.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/data\/schemas\/SimpleLoopState.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/schemas\/SimpleLoopState.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/schemas\/SimpleLoopState.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/schemas\/SimpleLoopState.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/data\/schemas\/SimpleLoopState.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/data\/schemas\/SimpleLoopState.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/data\/schemas\/SimpleLoopState.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/data\/schemas\/SimpleLoopState.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/data\/schemas\/SimpleLoopState.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/data\/schemas\/SimpleLoopState.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/data\/schemas\/SimpleLoopState.html", "kind" : "case class"}, {"name" : "lamp.data.schemas.SimpleThenSWALoopState", "shortDescription" : "", "members_case class" : [{"member" : "lamp.data.schemas.SimpleThenSWALoopState#<init>", "error" : "unsupported entity"}, {"label" : "swa", "tail" : ": Option[SWALoopState]", "member" : "lamp.data.schemas.SimpleThenSWALoopState.swa", "link" : "lamp\/data\/schemas\/SimpleThenSWALoopState.html#swa:Option[lamp.data.schemas.SWALoopState]", "kind" : "val"}, {"label" : "simple", "tail" : ": SimpleLoopState", "member" : "lamp.data.schemas.SimpleThenSWALoopState.simple", "link" : "lamp\/data\/schemas\/SimpleThenSWALoopState.html#simple:lamp.data.schemas.SimpleLoopState", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/data\/schemas\/SimpleThenSWALoopState.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/data\/schemas\/SimpleThenSWALoopState.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/data\/schemas\/SimpleThenSWALoopState.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/data\/schemas\/SimpleThenSWALoopState.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/data\/schemas\/SimpleThenSWALoopState.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/data\/schemas\/SimpleThenSWALoopState.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/data\/schemas\/SimpleThenSWALoopState.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/data\/schemas\/SimpleThenSWALoopState.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/schemas\/SimpleThenSWALoopState.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/schemas\/SimpleThenSWALoopState.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/schemas\/SimpleThenSWALoopState.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/data\/schemas\/SimpleThenSWALoopState.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/data\/schemas\/SimpleThenSWALoopState.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/data\/schemas\/SimpleThenSWALoopState.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/data\/schemas\/SimpleThenSWALoopState.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/data\/schemas\/SimpleThenSWALoopState.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/data\/schemas\/SimpleThenSWALoopState.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/data\/schemas\/SimpleThenSWALoopState.html", "kind" : "case class"}, {"name" : "lamp.data.schemas.SWALoopState", "shortDescription" : "", "members_case class" : [{"member" : "lamp.data.schemas.SWALoopState#<init>", "error" : "unsupported entity"}, {"label" : "learningCurve", "tail" : ": List[(Int, Double, Option[Double])]", "member" : "lamp.data.schemas.SWALoopState.learningCurve", "link" : "lamp\/data\/schemas\/SWALoopState.html#learningCurve:List[(Int,Double,Option[Double])]", "kind" : "val"}, {"label" : "averagedModels", "tail" : ": Option[TensorList]", "member" : "lamp.data.schemas.SWALoopState.averagedModels", "link" : "lamp\/data\/schemas\/SWALoopState.html#averagedModels:Option[lamp.data.schemas.TensorList]", "kind" : "val"}, {"label" : "numberOfAveragedModels", "tail" : ": Int", "member" : "lamp.data.schemas.SWALoopState.numberOfAveragedModels", "link" : "lamp\/data\/schemas\/SWALoopState.html#numberOfAveragedModels:Int", "kind" : "val"}, {"label" : "minValidationLoss", "tail" : ": Option[Double]", "member" : "lamp.data.schemas.SWALoopState.minValidationLoss", "link" : "lamp\/data\/schemas\/SWALoopState.html#minValidationLoss:Option[Double]", "kind" : "val"}, {"label" : "lastValidationLoss", "tail" : ": Option[Double]", "member" : "lamp.data.schemas.SWALoopState.lastValidationLoss", "link" : "lamp\/data\/schemas\/SWALoopState.html#lastValidationLoss:Option[Double]", "kind" : "val"}, {"label" : "epoch", "tail" : ": Int", "member" : "lamp.data.schemas.SWALoopState.epoch", "link" : "lamp\/data\/schemas\/SWALoopState.html#epoch:Int", "kind" : "val"}, {"label" : "optimizer", "tail" : ": TensorList", "member" : "lamp.data.schemas.SWALoopState.optimizer", "link" : "lamp\/data\/schemas\/SWALoopState.html#optimizer:lamp.data.schemas.TensorList", "kind" : "val"}, {"label" : "model", "tail" : ": TensorList", "member" : "lamp.data.schemas.SWALoopState.model", "link" : "lamp\/data\/schemas\/SWALoopState.html#model:lamp.data.schemas.TensorList", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/data\/schemas\/SWALoopState.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/data\/schemas\/SWALoopState.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/data\/schemas\/SWALoopState.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/data\/schemas\/SWALoopState.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/data\/schemas\/SWALoopState.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/data\/schemas\/SWALoopState.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/data\/schemas\/SWALoopState.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/data\/schemas\/SWALoopState.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/schemas\/SWALoopState.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/schemas\/SWALoopState.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/schemas\/SWALoopState.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/data\/schemas\/SWALoopState.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/data\/schemas\/SWALoopState.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/data\/schemas\/SWALoopState.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/data\/schemas\/SWALoopState.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/data\/schemas\/SWALoopState.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/data\/schemas\/SWALoopState.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/data\/schemas\/SWALoopState.html", "kind" : "case class"}, {"name" : "lamp.data.schemas.TensorDescriptor", "shortDescription" : "", "object" : "lamp\/data\/schemas\/TensorDescriptor$.html", "members_object" : [{"label" : "codec", "tail" : ": JsonValueCodec[TensorDescriptor]", "member" : "lamp.data.schemas.TensorDescriptor.codec", "link" : "lamp\/data\/schemas\/TensorDescriptor$.html#codec:com.github.plokhotnyuk.jsoniter_scala.core.JsonValueCodec[lamp.data.schemas.TensorDescriptor]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/data\/schemas\/TensorDescriptor$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/data\/schemas\/TensorDescriptor$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/data\/schemas\/TensorDescriptor$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/data\/schemas\/TensorDescriptor$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/data\/schemas\/TensorDescriptor$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/data\/schemas\/TensorDescriptor$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/data\/schemas\/TensorDescriptor$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/schemas\/TensorDescriptor$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/schemas\/TensorDescriptor$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/schemas\/TensorDescriptor$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/data\/schemas\/TensorDescriptor$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/data\/schemas\/TensorDescriptor$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/data\/schemas\/TensorDescriptor$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/data\/schemas\/TensorDescriptor$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/data\/schemas\/TensorDescriptor$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/data\/schemas\/TensorDescriptor$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/data\/schemas\/TensorDescriptor$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/data\/schemas\/TensorDescriptor$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/data\/schemas\/TensorDescriptor$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"member" : "lamp.data.schemas.TensorDescriptor#<init>", "error" : "unsupported entity"}, {"label" : "byteLength", "tail" : ": Long", "member" : "lamp.data.schemas.TensorDescriptor.byteLength", "link" : "lamp\/data\/schemas\/TensorDescriptor.html#byteLength:Long", "kind" : "val"}, {"label" : "byteOffset", "tail" : ": Long", "member" : "lamp.data.schemas.TensorDescriptor.byteOffset", "link" : "lamp\/data\/schemas\/TensorDescriptor.html#byteOffset:Long", "kind" : "val"}, {"label" : "dataType", "tail" : ": Byte", "member" : "lamp.data.schemas.TensorDescriptor.dataType", "link" : "lamp\/data\/schemas\/TensorDescriptor.html#dataType:Byte", "kind" : "val"}, {"label" : "dims", "tail" : ": Seq[Long]", "member" : "lamp.data.schemas.TensorDescriptor.dims", "link" : "lamp\/data\/schemas\/TensorDescriptor.html#dims:Seq[Long]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/data\/schemas\/TensorDescriptor.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/data\/schemas\/TensorDescriptor.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/data\/schemas\/TensorDescriptor.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/data\/schemas\/TensorDescriptor.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/data\/schemas\/TensorDescriptor.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/data\/schemas\/TensorDescriptor.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/data\/schemas\/TensorDescriptor.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/data\/schemas\/TensorDescriptor.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/schemas\/TensorDescriptor.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/schemas\/TensorDescriptor.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/schemas\/TensorDescriptor.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/data\/schemas\/TensorDescriptor.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/data\/schemas\/TensorDescriptor.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/data\/schemas\/TensorDescriptor.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/data\/schemas\/TensorDescriptor.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/data\/schemas\/TensorDescriptor.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/data\/schemas\/TensorDescriptor.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/data\/schemas\/TensorDescriptor.html", "kind" : "case class"}, {"name" : "lamp.data.schemas.TensorList", "shortDescription" : "", "object" : "lamp\/data\/schemas\/TensorList$.html", "members_object" : [{"label" : "codec", "tail" : ": JsonValueCodec[TensorList]", "member" : "lamp.data.schemas.TensorList.codec", "link" : "lamp\/data\/schemas\/TensorList$.html#codec:com.github.plokhotnyuk.jsoniter_scala.core.JsonValueCodec[lamp.data.schemas.TensorList]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/data\/schemas\/TensorList$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/data\/schemas\/TensorList$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/data\/schemas\/TensorList$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/data\/schemas\/TensorList$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/data\/schemas\/TensorList$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/data\/schemas\/TensorList$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/data\/schemas\/TensorList$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/schemas\/TensorList$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/schemas\/TensorList$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/schemas\/TensorList$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/data\/schemas\/TensorList$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/data\/schemas\/TensorList$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/data\/schemas\/TensorList$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/data\/schemas\/TensorList$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/data\/schemas\/TensorList$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/data\/schemas\/TensorList$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/data\/schemas\/TensorList$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/data\/schemas\/TensorList$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/data\/schemas\/TensorList$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"member" : "lamp.data.schemas.TensorList#<init>", "error" : "unsupported entity"}, {"label" : "byteLength", "tail" : ": Long", "member" : "lamp.data.schemas.TensorList.byteLength", "link" : "lamp\/data\/schemas\/TensorList.html#byteLength:Long", "kind" : "val"}, {"label" : "byteOffset", "tail" : ": Long", "member" : "lamp.data.schemas.TensorList.byteOffset", "link" : "lamp\/data\/schemas\/TensorList.html#byteOffset:Long", "kind" : "val"}, {"label" : "location", "tail" : ": String", "member" : "lamp.data.schemas.TensorList.location", "link" : "lamp\/data\/schemas\/TensorList.html#location:String", "kind" : "val"}, {"label" : "tensors", "tail" : ": Seq[TensorDescriptor]", "member" : "lamp.data.schemas.TensorList.tensors", "link" : "lamp\/data\/schemas\/TensorList.html#tensors:Seq[lamp.data.schemas.TensorDescriptor]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/data\/schemas\/TensorList.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/data\/schemas\/TensorList.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/data\/schemas\/TensorList.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/data\/schemas\/TensorList.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/data\/schemas\/TensorList.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/data\/schemas\/TensorList.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/data\/schemas\/TensorList.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/data\/schemas\/TensorList.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/schemas\/TensorList.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/schemas\/TensorList.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/schemas\/TensorList.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/data\/schemas\/TensorList.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/data\/schemas\/TensorList.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/data\/schemas\/TensorList.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/data\/schemas\/TensorList.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/data\/schemas\/TensorList.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/data\/schemas\/TensorList.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/data\/schemas\/TensorList.html", "kind" : "case class"}], "lamp.example.timemachine" : [{"name" : "lamp.example.timemachine.CliConfig", "shortDescription" : "", "members_case class" : [{"member" : "lamp.example.timemachine.CliConfig#<init>", "error" : "unsupported entity"}, {"label" : "predictionPrefix", "tail" : ": Option[String]", "member" : "lamp.example.timemachine.CliConfig.predictionPrefix", "link" : "lamp\/example\/timemachine\/CliConfig.html#predictionPrefix:Option[String]", "kind" : "val"}, {"label" : "checkpointLoad", "tail" : ": Option[String]", "member" : "lamp.example.timemachine.CliConfig.checkpointLoad", "link" : "lamp\/example\/timemachine\/CliConfig.html#checkpointLoad:Option[String]", "kind" : "val"}, {"label" : "checkpointSave", "tail" : ": Option[String]", "member" : "lamp.example.timemachine.CliConfig.checkpointSave", "link" : "lamp\/example\/timemachine\/CliConfig.html#checkpointSave:Option[String]", "kind" : "val"}, {"label" : "dropout", "tail" : ": Double", "member" : "lamp.example.timemachine.CliConfig.dropout", "link" : "lamp\/example\/timemachine\/CliConfig.html#dropout:Double", "kind" : "val"}, {"label" : "learningRate", "tail" : ": Double", "member" : "lamp.example.timemachine.CliConfig.learningRate", "link" : "lamp\/example\/timemachine\/CliConfig.html#learningRate:Double", "kind" : "val"}, {"label" : "epochs", "tail" : ": Int", "member" : "lamp.example.timemachine.CliConfig.epochs", "link" : "lamp\/example\/timemachine\/CliConfig.html#epochs:Int", "kind" : "val"}, {"label" : "validationBatchSize", "tail" : ": Int", "member" : "lamp.example.timemachine.CliConfig.validationBatchSize", "link" : "lamp\/example\/timemachine\/CliConfig.html#validationBatchSize:Int", "kind" : "val"}, {"label" : "trainBatchSize", "tail" : ": Int", "member" : "lamp.example.timemachine.CliConfig.trainBatchSize", "link" : "lamp\/example\/timemachine\/CliConfig.html#trainBatchSize:Int", "kind" : "val"}, {"label" : "singlePrecision", "tail" : ": Boolean", "member" : "lamp.example.timemachine.CliConfig.singlePrecision", "link" : "lamp\/example\/timemachine\/CliConfig.html#singlePrecision:Boolean", "kind" : "val"}, {"label" : "cuda", "tail" : ": Boolean", "member" : "lamp.example.timemachine.CliConfig.cuda", "link" : "lamp\/example\/timemachine\/CliConfig.html#cuda:Boolean", "kind" : "val"}, {"label" : "testData", "tail" : ": String", "member" : "lamp.example.timemachine.CliConfig.testData", "link" : "lamp\/example\/timemachine\/CliConfig.html#testData:String", "kind" : "val"}, {"label" : "trainData", "tail" : ": String", "member" : "lamp.example.timemachine.CliConfig.trainData", "link" : "lamp\/example\/timemachine\/CliConfig.html#trainData:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/example\/timemachine\/CliConfig.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/example\/timemachine\/CliConfig.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/example\/timemachine\/CliConfig.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/example\/timemachine\/CliConfig.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/example\/timemachine\/CliConfig.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/example\/timemachine\/CliConfig.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/example\/timemachine\/CliConfig.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/example\/timemachine\/CliConfig.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/example\/timemachine\/CliConfig.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/example\/timemachine\/CliConfig.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/example\/timemachine\/CliConfig.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/example\/timemachine\/CliConfig.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/example\/timemachine\/CliConfig.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/example\/timemachine\/CliConfig.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/example\/timemachine\/CliConfig.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/example\/timemachine\/CliConfig.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/example\/timemachine\/CliConfig.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/example\/timemachine\/CliConfig.html", "kind" : "case class"}, {"name" : "lamp.example.timemachine.Train", "shortDescription" : "", "object" : "lamp\/example\/timemachine\/Train$.html", "members_object" : [{"label" : "parser1", "tail" : ": OParser[String, CliConfig]", "member" : "lamp.example.timemachine.Train.parser1", "link" : "lamp\/example\/timemachine\/Train$.html#parser1:scopt.OParser[String,lamp.example.timemachine.CliConfig]", "kind" : "val"}, {"label" : "builder", "tail" : ": OParserBuilder[CliConfig]", "member" : "lamp.example.timemachine.Train.builder", "link" : "lamp\/example\/timemachine\/Train$.html#builder:scopt.OParserBuilder[lamp.example.timemachine.CliConfig]", "kind" : "val"}, {"label" : "main", "tail" : "(args: Array[String]): Unit", "member" : "scala.App.main", "link" : "lamp\/example\/timemachine\/Train$.html#main(args:Array[String]):Unit", "kind" : "final def"}, {"label" : "delayedInit", "tail" : "(body: => Unit): Unit", "member" : "scala.App.delayedInit", "link" : "lamp\/example\/timemachine\/Train$.html#delayedInit(body:=>Unit):Unit", "kind" : "def"}, {"label" : "args", "tail" : "(): Array[String]", "member" : "scala.App.args", "link" : "lamp\/example\/timemachine\/Train$.html#args:Array[String]", "kind" : "final def"}, {"label" : "executionStart", "tail" : ": Long", "member" : "scala.App.executionStart", "link" : "lamp\/example\/timemachine\/Train$.html#executionStart:Long", "kind" : "final val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/example\/timemachine\/Train$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/example\/timemachine\/Train$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/example\/timemachine\/Train$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/example\/timemachine\/Train$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/example\/timemachine\/Train$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/example\/timemachine\/Train$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/example\/timemachine\/Train$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/example\/timemachine\/Train$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/example\/timemachine\/Train$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/example\/timemachine\/Train$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/example\/timemachine\/Train$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/example\/timemachine\/Train$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/example\/timemachine\/Train$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/example\/timemachine\/Train$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/example\/timemachine\/Train$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/example\/timemachine\/Train$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/example\/timemachine\/Train$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/example\/timemachine\/Train$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/example\/timemachine\/Train$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "lamp.example.arxiv" : [{"name" : "lamp.example.arxiv.CliConfig", "shortDescription" : "", "members_case class" : [{"member" : "lamp.example.arxiv.CliConfig#<init>", "error" : "unsupported entity"}, {"label" : "checkpointLoad", "tail" : ": Option[String]", "member" : "lamp.example.arxiv.CliConfig.checkpointLoad", "link" : "lamp\/example\/arxiv\/CliConfig.html#checkpointLoad:Option[String]", "kind" : "val"}, {"label" : "checkpointSave", "tail" : ": Option[String]", "member" : "lamp.example.arxiv.CliConfig.checkpointSave", "link" : "lamp\/example\/arxiv\/CliConfig.html#checkpointSave:Option[String]", "kind" : "val"}, {"label" : "cuda", "tail" : ": Boolean", "member" : "lamp.example.arxiv.CliConfig.cuda", "link" : "lamp\/example\/arxiv\/CliConfig.html#cuda:Boolean", "kind" : "val"}, {"label" : "folder", "tail" : ": String", "member" : "lamp.example.arxiv.CliConfig.folder", "link" : "lamp\/example\/arxiv\/CliConfig.html#folder:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/example\/arxiv\/CliConfig.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/example\/arxiv\/CliConfig.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/example\/arxiv\/CliConfig.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/example\/arxiv\/CliConfig.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/example\/arxiv\/CliConfig.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/example\/arxiv\/CliConfig.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/example\/arxiv\/CliConfig.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/example\/arxiv\/CliConfig.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/example\/arxiv\/CliConfig.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/example\/arxiv\/CliConfig.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/example\/arxiv\/CliConfig.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/example\/arxiv\/CliConfig.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/example\/arxiv\/CliConfig.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/example\/arxiv\/CliConfig.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/example\/arxiv\/CliConfig.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/example\/arxiv\/CliConfig.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/example\/arxiv\/CliConfig.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/example\/arxiv\/CliConfig.html", "kind" : "case class"}, {"name" : "lamp.example.arxiv.OgbArxivDataset", "shortDescription" : "", "object" : "lamp\/example\/arxiv\/OgbArxivDataset$.html", "members_object" : [{"label" : "read", "tail" : "(file: Path)(arg0: ST[T]): Frame[Int, Int, T]", "member" : "lamp.example.arxiv.OgbArxivDataset.read", "link" : "lamp\/example\/arxiv\/OgbArxivDataset$.html#read[T](file:os.Path)(implicitevidence$2:org.saddle.ST[T]):org.saddle.Frame[Int,Int,T]", "kind" : "def"}, {"label" : "readAndConvert", "tail" : "(file: Path)(arg0: ST[T]): Frame[_ >: String with Int, _ >: String with Int, T]", "member" : "lamp.example.arxiv.OgbArxivDataset.readAndConvert", "link" : "lamp\/example\/arxiv\/OgbArxivDataset$.html#readAndConvert[T](file:os.Path)(implicitevidence$1:org.saddle.ST[T]):org.saddle.Frame[_>:StringwithInt,_>:StringwithInt,T]", "kind" : "def"}, {"label" : "readAll", "tail" : "(folder: File): (Frame[_1, _2, Int], Frame[_1, _2, Int], Frame[_1, _2, Float], Frame[_1, _2, Int]) forSome {type _1 >: String with Int, type _2 >: String with Int, type _1 >: String with Int, type _2 >: String with Int, type _1 >: String with Int, type _2 >: String with Int, type _1 >: String with Int, type _2 >: String with Int}", "member" : "lamp.example.arxiv.OgbArxivDataset.readAll", "link" : "lamp\/example\/arxiv\/OgbArxivDataset$.html#readAll(folder:java.io.File):(org.saddle.Frame[_1,_2,Int],org.saddle.Frame[_1,_2,Int],org.saddle.Frame[_1,_2,Float],org.saddle.Frame[_1,_2,Int])forSome{type_1>:StringwithInt;type_2>:StringwithInt;type_1>:StringwithInt;type_2>:StringwithInt;type_1>:StringwithInt;type_2>:StringwithInt;type_1>:StringwithInt;type_2>:StringwithInt}", "kind" : "def"}, {"label" : "download", "tail" : "(folder: File): (Path, Path, Path, Path)", "member" : "lamp.example.arxiv.OgbArxivDataset.download", "link" : "lamp\/example\/arxiv\/OgbArxivDataset$.html#download(folder:java.io.File):(os.Path,os.Path,os.Path,os.Path)", "kind" : "def"}, {"label" : "url", "tail" : ": String", "member" : "lamp.example.arxiv.OgbArxivDataset.url", "link" : "lamp\/example\/arxiv\/OgbArxivDataset$.html#url:String", "kind" : "val"}, {"label" : "unzip", "tail" : "(zipPath: Path, outputPath: Path): Unit", "member" : "lamp.example.arxiv.OgbArxivDataset.unzip", "link" : "lamp\/example\/arxiv\/OgbArxivDataset$.html#unzip(zipPath:os.Path,outputPath:os.Path):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/example\/arxiv\/OgbArxivDataset$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/example\/arxiv\/OgbArxivDataset$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/example\/arxiv\/OgbArxivDataset$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/example\/arxiv\/OgbArxivDataset$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/example\/arxiv\/OgbArxivDataset$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/example\/arxiv\/OgbArxivDataset$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/example\/arxiv\/OgbArxivDataset$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/example\/arxiv\/OgbArxivDataset$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/example\/arxiv\/OgbArxivDataset$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/example\/arxiv\/OgbArxivDataset$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/example\/arxiv\/OgbArxivDataset$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/example\/arxiv\/OgbArxivDataset$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/example\/arxiv\/OgbArxivDataset$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/example\/arxiv\/OgbArxivDataset$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/example\/arxiv\/OgbArxivDataset$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/example\/arxiv\/OgbArxivDataset$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/example\/arxiv\/OgbArxivDataset$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/example\/arxiv\/OgbArxivDataset$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/example\/arxiv\/OgbArxivDataset$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "lamp.example.arxiv.Train", "shortDescription" : "", "object" : "lamp\/example\/arxiv\/Train$.html", "members_object" : [{"label" : "parser1", "tail" : ": OParser[String, CliConfig]", "member" : "lamp.example.arxiv.Train.parser1", "link" : "lamp\/example\/arxiv\/Train$.html#parser1:scopt.OParser[String,lamp.example.arxiv.CliConfig]", "kind" : "val"}, {"label" : "builder", "tail" : ": OParserBuilder[CliConfig]", "member" : "lamp.example.arxiv.Train.builder", "link" : "lamp\/example\/arxiv\/Train$.html#builder:scopt.OParserBuilder[lamp.example.arxiv.CliConfig]", "kind" : "val"}, {"label" : "main", "tail" : "(args: Array[String]): Unit", "member" : "scala.App.main", "link" : "lamp\/example\/arxiv\/Train$.html#main(args:Array[String]):Unit", "kind" : "final def"}, {"label" : "delayedInit", "tail" : "(body: => Unit): Unit", "member" : "scala.App.delayedInit", "link" : "lamp\/example\/arxiv\/Train$.html#delayedInit(body:=>Unit):Unit", "kind" : "def"}, {"label" : "args", "tail" : "(): Array[String]", "member" : "scala.App.args", "link" : "lamp\/example\/arxiv\/Train$.html#args:Array[String]", "kind" : "final def"}, {"label" : "executionStart", "tail" : ": Long", "member" : "scala.App.executionStart", "link" : "lamp\/example\/arxiv\/Train$.html#executionStart:Long", "kind" : "final val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/example\/arxiv\/Train$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/example\/arxiv\/Train$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/example\/arxiv\/Train$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/example\/arxiv\/Train$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/example\/arxiv\/Train$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/example\/arxiv\/Train$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/example\/arxiv\/Train$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/example\/arxiv\/Train$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/example\/arxiv\/Train$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/example\/arxiv\/Train$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/example\/arxiv\/Train$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/example\/arxiv\/Train$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/example\/arxiv\/Train$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/example\/arxiv\/Train$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/example\/arxiv\/Train$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/example\/arxiv\/Train$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/example\/arxiv\/Train$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/example\/arxiv\/Train$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/example\/arxiv\/Train$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "lamp.onnx" : [{"name" : "lamp.onnx.Converted", "shortDescription" : "", "members_case class" : [{"label" : "appendInput", "tail" : "(t: TensorProto): Converted", "member" : "lamp.onnx.Converted.appendInput", "link" : "lamp\/onnx\/Converted.html#appendInput(t:onnx.onnx.TensorProto):lamp.onnx.Converted", "kind" : "def"}, {"label" : "addConstant", "tail" : "(t: TensorProto): Converted", "member" : "lamp.onnx.Converted.addConstant", "link" : "lamp\/onnx\/Converted.html#addConstant(t:onnx.onnx.TensorProto):lamp.onnx.Converted", "kind" : "def"}, {"label" : "withInput", "tail" : "(s: (Seq[String]) => Seq[String]): Converted", "member" : "lamp.onnx.Converted.withInput", "link" : "lamp\/onnx\/Converted.html#withInput(s:Seq[String]=>Seq[String]):lamp.onnx.Converted", "kind" : "def"}, {"member" : "lamp.onnx.Converted#<init>", "error" : "unsupported entity"}, {"label" : "constants", "tail" : ": Seq[TensorProto]", "member" : "lamp.onnx.Converted.constants", "link" : "lamp\/onnx\/Converted.html#constants:Seq[onnx.onnx.TensorProto]", "kind" : "val"}, {"label" : "node", "tail" : ": NodeProto", "member" : "lamp.onnx.Converted.node", "link" : "lamp\/onnx\/Converted.html#node:onnx.onnx.NodeProto", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/onnx\/Converted.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/onnx\/Converted.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/onnx\/Converted.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/onnx\/Converted.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/onnx\/Converted.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/onnx\/Converted.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/onnx\/Converted.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/onnx\/Converted.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/onnx\/Converted.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/onnx\/Converted.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/onnx\/Converted.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/onnx\/Converted.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/onnx\/Converted.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/onnx\/Converted.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/onnx\/Converted.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/onnx\/Converted.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/onnx\/Converted.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/onnx\/Converted.html", "kind" : "case class"}, {"name" : "lamp.onnx.DefaultOpSet", "shortDescription" : "", "object" : "lamp\/onnx\/DefaultOpSet$.html", "members_object" : [{"label" : "translate", "tail" : "(nm: NameMap, out: VariableNonConstant): Seq[Converted]", "member" : "lamp.onnx.DefaultOpSet1.translate", "link" : "lamp\/onnx\/DefaultOpSet$.html#translate(nm:lamp.onnx.NameMap,out:lamp.autograd.VariableNonConstant):Seq[lamp.onnx.Converted]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/onnx\/DefaultOpSet$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/onnx\/DefaultOpSet$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/onnx\/DefaultOpSet$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/onnx\/DefaultOpSet$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/onnx\/DefaultOpSet$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/onnx\/DefaultOpSet$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/onnx\/DefaultOpSet$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/onnx\/DefaultOpSet$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/onnx\/DefaultOpSet$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/onnx\/DefaultOpSet$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/onnx\/DefaultOpSet$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/onnx\/DefaultOpSet$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/onnx\/DefaultOpSet$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/onnx\/DefaultOpSet$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/onnx\/DefaultOpSet$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/onnx\/DefaultOpSet$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/onnx\/DefaultOpSet$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/onnx\/DefaultOpSet$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/onnx\/DefaultOpSet$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "lamp.onnx.DefaultOpSet1", "trait" : "lamp\/onnx\/DefaultOpSet1.html", "kind" : "trait", "members_trait" : [{"label" : "translate", "tail" : "(nm: NameMap, out: VariableNonConstant): Seq[Converted]", "member" : "lamp.onnx.DefaultOpSet1.translate", "link" : "lamp\/onnx\/DefaultOpSet1.html#translate(nm:lamp.onnx.NameMap,out:lamp.autograd.VariableNonConstant):Seq[lamp.onnx.Converted]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/onnx\/DefaultOpSet1.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/onnx\/DefaultOpSet1.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/onnx\/DefaultOpSet1.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/onnx\/DefaultOpSet1.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/onnx\/DefaultOpSet1.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/onnx\/DefaultOpSet1.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/onnx\/DefaultOpSet1.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/onnx\/DefaultOpSet1.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/onnx\/DefaultOpSet1.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/onnx\/DefaultOpSet1.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/onnx\/DefaultOpSet1.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/onnx\/DefaultOpSet1.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/onnx\/DefaultOpSet1.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/onnx\/DefaultOpSet1.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/onnx\/DefaultOpSet1.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/onnx\/DefaultOpSet1.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/onnx\/DefaultOpSet1.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/onnx\/DefaultOpSet1.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/onnx\/DefaultOpSet1.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "lamp.onnx.NameMap", "trait" : "lamp\/onnx\/NameMap.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/onnx\/NameMap.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/onnx\/NameMap.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/onnx\/NameMap.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/onnx\/NameMap.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/onnx\/NameMap.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/onnx\/NameMap.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/onnx\/NameMap.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/onnx\/NameMap.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/onnx\/NameMap.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/onnx\/NameMap.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/onnx\/NameMap.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/onnx\/NameMap.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/onnx\/NameMap.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/onnx\/NameMap.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/onnx\/NameMap.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/onnx\/NameMap.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/onnx\/NameMap.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/onnx\/NameMap.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/onnx\/NameMap.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "apply", "tail" : "(u: UUID): String", "member" : "lamp.onnx.NameMap.apply", "link" : "lamp\/onnx\/NameMap.html#apply(u:java.util.UUID):String", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "lamp.onnx.Ops", "shortDescription" : "", "object" : "lamp\/onnx\/Ops$.html", "members_object" : [{"label" : "attrLongSeq", "tail" : "(name: String, value: Seq[Long]): AttributeProto", "member" : "lamp.onnx.Ops.attrLongSeq", "link" : "lamp\/onnx\/Ops$.html#attrLongSeq(name:String,value:Seq[Long]):onnx.onnx.AttributeProto", "kind" : "def"}, {"label" : "attr", "tail" : "(name: String, value: Float): AttributeProto", "member" : "lamp.onnx.Ops.attr", "link" : "lamp\/onnx\/Ops$.html#attr(name:String,value:Float):onnx.onnx.AttributeProto", "kind" : "def"}, {"label" : "attr", "tail" : "(name: String, value: Long): AttributeProto", "member" : "lamp.onnx.Ops.attr", "link" : "lamp\/onnx\/Ops$.html#attr(name:String,value:Long):onnx.onnx.AttributeProto", "kind" : "def"}, {"label" : "tensorFromSTen", "tail" : "(d: STen): TensorProto", "member" : "lamp.onnx.Ops.tensorFromSTen", "link" : "lamp\/onnx\/Ops$.html#tensorFromSTen(d:lamp.STen):onnx.onnx.TensorProto", "kind" : "def"}, {"label" : "tensorFromBooleanScalar", "tail" : "(d: Boolean): TensorProto", "member" : "lamp.onnx.Ops.tensorFromBooleanScalar", "link" : "lamp\/onnx\/Ops$.html#tensorFromBooleanScalar(d:Boolean):onnx.onnx.TensorProto", "kind" : "def"}, {"label" : "tensorFromLongScalar", "tail" : "(d: Long): TensorProto", "member" : "lamp.onnx.Ops.tensorFromLongScalar", "link" : "lamp\/onnx\/Ops$.html#tensorFromLongScalar(d:Long):onnx.onnx.TensorProto", "kind" : "def"}, {"label" : "tensorFromIntScalar", "tail" : "(d: Int): TensorProto", "member" : "lamp.onnx.Ops.tensorFromIntScalar", "link" : "lamp\/onnx\/Ops$.html#tensorFromIntScalar(d:Int):onnx.onnx.TensorProto", "kind" : "def"}, {"label" : "tensorFromDoubleScalar", "tail" : "(d: Double, type: Byte): TensorProto", "member" : "lamp.onnx.Ops.tensorFromDoubleScalar", "link" : "lamp\/onnx\/Ops$.html#tensorFromDoubleScalar(d:Double,type:Byte):onnx.onnx.TensorProto", "kind" : "def"}, {"label" : "tensorFromDoubleVec", "tail" : "(vec: Seq[Double], type: Byte): TensorProto", "member" : "lamp.onnx.Ops.tensorFromDoubleVec", "link" : "lamp\/onnx\/Ops$.html#tensorFromDoubleVec(vec:Seq[Double],type:Byte):onnx.onnx.TensorProto", "kind" : "def"}, {"label" : "tensorFromLongVec", "tail" : "(vec: Seq[Long]): TensorProto", "member" : "lamp.onnx.Ops.tensorFromLongVec", "link" : "lamp\/onnx\/Ops$.html#tensorFromLongVec(vec:Seq[Long]):onnx.onnx.TensorProto", "kind" : "def"}, {"label" : "apply", "tail" : "(output: VariableNonConstant, opType: String, attributes: Seq[AttributeProto], domain: Option[String])(makeName: NameMap): Converted", "member" : "lamp.onnx.Ops.apply", "link" : "lamp\/onnx\/Ops$.html#apply(output:lamp.autograd.VariableNonConstant,opType:String,attributes:Seq[onnx.onnx.AttributeProto],domain:Option[String])(makeName:lamp.onnx.NameMap):lamp.onnx.Converted", "kind" : "def"}, {"label" : "ComMicrosoft", "tail" : ": String", "member" : "lamp.onnx.Ops.ComMicrosoft", "link" : "lamp\/onnx\/Ops$.html#ComMicrosoft:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/onnx\/Ops$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/onnx\/Ops$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/onnx\/Ops$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/onnx\/Ops$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/onnx\/Ops$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/onnx\/Ops$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/onnx\/Ops$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/onnx\/Ops$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/onnx\/Ops$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/onnx\/Ops$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/onnx\/Ops$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/onnx\/Ops$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/onnx\/Ops$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/onnx\/Ops$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/onnx\/Ops$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/onnx\/Ops$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/onnx\/Ops$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/onnx\/Ops$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/onnx\/Ops$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "lamp.onnx.OpSet", "trait" : "lamp\/onnx\/OpSet.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/onnx\/OpSet.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/onnx\/OpSet.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/onnx\/OpSet.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/onnx\/OpSet.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/onnx\/OpSet.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/onnx\/OpSet.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/onnx\/OpSet.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/onnx\/OpSet.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/onnx\/OpSet.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/onnx\/OpSet.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/onnx\/OpSet.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/onnx\/OpSet.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/onnx\/OpSet.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/onnx\/OpSet.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/onnx\/OpSet.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/onnx\/OpSet.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/onnx\/OpSet.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/onnx\/OpSet.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/onnx\/OpSet.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "translate", "tail" : "(m: NameMap, op: VariableNonConstant): Seq[Converted]", "member" : "lamp.onnx.OpSet.translate", "link" : "lamp\/onnx\/OpSet.html#translate(m:lamp.onnx.NameMap,op:lamp.autograd.VariableNonConstant):Seq[lamp.onnx.Converted]", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "lamp.onnx.VariableInfo", "shortDescription" : "", "members_case class" : [{"member" : "lamp.onnx.VariableInfo#<init>", "error" : "unsupported entity"}, {"label" : "docString", "tail" : ": String", "member" : "lamp.onnx.VariableInfo.docString", "link" : "lamp\/onnx\/VariableInfo.html#docString:String", "kind" : "val"}, {"label" : "input", "tail" : ": Boolean", "member" : "lamp.onnx.VariableInfo.input", "link" : "lamp\/onnx\/VariableInfo.html#input:Boolean", "kind" : "val"}, {"label" : "name", "tail" : ": String", "member" : "lamp.onnx.VariableInfo.name", "link" : "lamp\/onnx\/VariableInfo.html#name:String", "kind" : "val"}, {"label" : "variable", "tail" : ": Variable", "member" : "lamp.onnx.VariableInfo.variable", "link" : "lamp\/onnx\/VariableInfo.html#variable:lamp.autograd.Variable", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/onnx\/VariableInfo.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/onnx\/VariableInfo.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/onnx\/VariableInfo.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/onnx\/VariableInfo.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/onnx\/VariableInfo.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/onnx\/VariableInfo.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/onnx\/VariableInfo.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/onnx\/VariableInfo.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/onnx\/VariableInfo.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/onnx\/VariableInfo.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/onnx\/VariableInfo.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/onnx\/VariableInfo.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/onnx\/VariableInfo.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/onnx\/VariableInfo.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/onnx\/VariableInfo.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/onnx\/VariableInfo.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/onnx\/VariableInfo.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/onnx\/VariableInfo.html", "kind" : "case class"}], "lamp" : [{"name" : "lamp.CPU", "case object" : "lamp\/CPU$.html", "shortDescription" : "", "members_case object" : [{"label" : "options", "tail" : "(precision: FloatingPointPrecision)(arg0: Sc[S]): STenOptions", "member" : "lamp.CPU.options", "link" : "lamp\/CPU$.html#options[S](precision:lamp.FloatingPointPrecision)(implicitevidence$8:lamp.Sc[S]):lamp.STenOptions", "kind" : "def"}, {"label" : "setSeed", "tail" : "(seed: Long): Unit", "member" : "lamp.CPU.setSeed", "link" : "lamp\/CPU$.html#setSeed(seed:Long):Unit", "kind" : "def"}, {"label" : "to", "tail" : "(t: Tensor): Tensor", "member" : "lamp.CPU.to", "link" : "lamp\/CPU$.html#to(t:aten.Tensor):aten.Tensor", "kind" : "def"}, {"label" : "to", "tail" : "(t: STenOptions)(arg0: Sc[S]): STenOptions", "member" : "lamp.CPU.to", "link" : "lamp\/CPU$.html#to[S](t:lamp.STenOptions)(implicitevidence$7:lamp.Sc[S]):lamp.STenOptions", "kind" : "def"}, {"label" : "withOtherStreamThenSync", "tail" : "(synchronizeBefore: Boolean)(f: => A): A", "member" : "lamp.CPU.withOtherStreamThenSync", "link" : "lamp\/CPU$.html#withOtherStreamThenSync[A](synchronizeBefore:Boolean)(f:=>A):A", "kind" : "def"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/CPU$.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "productElementName", "tail" : "(n: Int): String", "member" : "scala.Product.productElementName", "link" : "lamp\/CPU$.html#productElementName(n:Int):String", "kind" : "def"}, {"label" : "to", "tail" : "(t: STen)(arg0: Sc[S]): STen", "member" : "lamp.Device.to", "link" : "lamp\/CPU$.html#to[S](t:lamp.STen)(implicitevidence$4:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/CPU$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/CPU$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/CPU$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/CPU$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/CPU$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/CPU$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/CPU$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/CPU$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/CPU$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/CPU$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/CPU$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/CPU$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/CPU$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/CPU$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/CPU$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/CPU$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/CPU$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "case object"}, {"name" : "lamp.CudaDevice", "shortDescription" : "", "members_case class" : [{"label" : "options", "tail" : "(precision: FloatingPointPrecision)(arg0: Sc[S]): STenOptions", "member" : "lamp.CudaDevice.options", "link" : "lamp\/CudaDevice.html#options[S](precision:lamp.FloatingPointPrecision)(implicitevidence$10:lamp.Sc[S]):lamp.STenOptions", "kind" : "def"}, {"label" : "to", "tail" : "(t: Tensor): Tensor", "member" : "lamp.CudaDevice.to", "link" : "lamp\/CudaDevice.html#to(t:aten.Tensor):aten.Tensor", "kind" : "def"}, {"label" : "setSeed", "tail" : "(seed: Long): Unit", "member" : "lamp.CudaDevice.setSeed", "link" : "lamp\/CudaDevice.html#setSeed(seed:Long):Unit", "kind" : "def"}, {"label" : "to", "tail" : "(t: STenOptions)(arg0: Sc[S]): STenOptions", "member" : "lamp.CudaDevice.to", "link" : "lamp\/CudaDevice.html#to[S](t:lamp.STenOptions)(implicitevidence$9:lamp.Sc[S]):lamp.STenOptions", "kind" : "def"}, {"label" : "withOtherStreamThenSync", "tail" : "(synchronizeBefore: Boolean)(f: => A): A", "member" : "lamp.CudaDevice.withOtherStreamThenSync", "link" : "lamp\/CudaDevice.html#withOtherStreamThenSync[A](synchronizeBefore:Boolean)(f:=>A):A", "kind" : "def"}, {"member" : "lamp.CudaDevice#<init>", "error" : "unsupported entity"}, {"label" : "i", "tail" : ": Int", "member" : "lamp.CudaDevice.i", "link" : "lamp\/CudaDevice.html#i:Int", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/CudaDevice.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "to", "tail" : "(t: STen)(arg0: Sc[S]): STen", "member" : "lamp.Device.to", "link" : "lamp\/CudaDevice.html#to[S](t:lamp.STen)(implicitevidence$4:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/CudaDevice.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/CudaDevice.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/CudaDevice.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/CudaDevice.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/CudaDevice.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/CudaDevice.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/CudaDevice.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/CudaDevice.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/CudaDevice.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/CudaDevice.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/CudaDevice.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/CudaDevice.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/CudaDevice.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/CudaDevice.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/CudaDevice.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/CudaDevice.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/CudaDevice.html", "kind" : "case class"}, {"name" : "lamp.Device", "object" : "lamp\/Device$.html", "members_object" : [{"label" : "fromOptions", "tail" : "(st: STenOptions): Product with Device with Serializable", "member" : "lamp.Device.fromOptions", "link" : "lamp\/Device$.html#fromOptions(st:lamp.STenOptions):Productwithlamp.Devicewithjava.io.Serializable", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/Device$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/Device$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/Device$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/Device$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/Device$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/Device$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/Device$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/Device$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/Device$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/Device$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/Device$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/Device$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/Device$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/Device$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/Device$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/Device$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/Device$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/Device$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/Device$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "lamp\/Device.html", "kind" : "trait", "members_trait" : [{"label" : "to", "tail" : "(t: STen)(arg0: Sc[S]): STen", "member" : "lamp.Device.to", "link" : "lamp\/Device.html#to[S](t:lamp.STen)(implicitevidence$4:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/Device.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/Device.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/Device.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/Device.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/Device.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/Device.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/Device.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/Device.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/Device.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/Device.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/Device.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/Device.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/Device.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/Device.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/Device.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/Device.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/Device.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/Device.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/Device.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "withOtherStreamThenSync", "tail" : "(synchronizeBefore: Boolean)(f: => A): A", "member" : "lamp.Device.withOtherStreamThenSync", "link" : "lamp\/Device.html#withOtherStreamThenSync[A](synchronizeBefore:Boolean)(f:=>A):A", "kind" : "abstract def"}, {"label" : "setSeed", "tail" : "(seed: Long): Unit", "member" : "lamp.Device.setSeed", "link" : "lamp\/Device.html#setSeed(seed:Long):Unit", "kind" : "abstract def"}, {"label" : "options", "tail" : "(precision: FloatingPointPrecision)(arg0: Sc[S]): STenOptions", "member" : "lamp.Device.options", "link" : "lamp\/Device.html#options[S](precision:lamp.FloatingPointPrecision)(implicitevidence$6:lamp.Sc[S]):lamp.STenOptions", "kind" : "abstract def"}, {"label" : "to", "tail" : "(t: STenOptions)(arg0: Sc[S]): STenOptions", "member" : "lamp.Device.to", "link" : "lamp\/Device.html#to[S](t:lamp.STenOptions)(implicitevidence$5:lamp.Sc[S]):lamp.STenOptions", "kind" : "abstract def"}, {"label" : "to", "tail" : "(t: Tensor): Tensor", "member" : "lamp.Device.to", "link" : "lamp\/Device.html#to(t:aten.Tensor):aten.Tensor", "kind" : "abstract def"}], "shortDescription" : "Represents a device where tensors are stored and tensor operations are executed"}, {"name" : "lamp.DoublePrecision", "case object" : "lamp\/DoublePrecision$.html", "shortDescription" : "", "members_case object" : [{"label" : "convertOption", "tail" : "(t: STenOptions)(arg0: Sc[S]): STenOptions", "member" : "lamp.DoublePrecision.convertOption", "link" : "lamp\/DoublePrecision$.html#convertOption[S](t:lamp.STenOptions)(implicitevidence$2:lamp.Sc[S]):lamp.STenOptions", "kind" : "def"}, {"label" : "convertTensor", "tail" : "(t: Tensor): Tensor", "member" : "lamp.DoublePrecision.convertTensor", "link" : "lamp\/DoublePrecision$.html#convertTensor(t:aten.Tensor):aten.Tensor", "kind" : "def"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/DoublePrecision$.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "productElementName", "tail" : "(n: Int): String", "member" : "scala.Product.productElementName", "link" : "lamp\/DoublePrecision$.html#productElementName(n:Int):String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/DoublePrecision$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/DoublePrecision$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/DoublePrecision$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/DoublePrecision$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/DoublePrecision$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/DoublePrecision$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/DoublePrecision$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/DoublePrecision$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/DoublePrecision$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/DoublePrecision$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/DoublePrecision$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/DoublePrecision$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/DoublePrecision$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/DoublePrecision$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/DoublePrecision$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/DoublePrecision$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/DoublePrecision$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "case object"}, {"name" : "lamp.FloatingPointPrecision", "trait" : "lamp\/FloatingPointPrecision.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/FloatingPointPrecision.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/FloatingPointPrecision.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/FloatingPointPrecision.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/FloatingPointPrecision.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/FloatingPointPrecision.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/FloatingPointPrecision.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/FloatingPointPrecision.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/FloatingPointPrecision.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/FloatingPointPrecision.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/FloatingPointPrecision.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/FloatingPointPrecision.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/FloatingPointPrecision.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/FloatingPointPrecision.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/FloatingPointPrecision.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/FloatingPointPrecision.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/FloatingPointPrecision.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/FloatingPointPrecision.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/FloatingPointPrecision.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/FloatingPointPrecision.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "convertOption", "tail" : "(t: STenOptions)(arg0: Sc[S]): STenOptions", "member" : "lamp.FloatingPointPrecision.convertOption", "link" : "lamp\/FloatingPointPrecision.html#convertOption[S](t:lamp.STenOptions)(implicitevidence$1:lamp.Sc[S]):lamp.STenOptions", "kind" : "abstract def"}, {"label" : "convertTensor", "tail" : "(t: Tensor): Tensor", "member" : "lamp.FloatingPointPrecision.convertTensor", "link" : "lamp\/FloatingPointPrecision.html#convertTensor(t:aten.Tensor):aten.Tensor", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "lamp.Movable", "object" : "lamp\/Movable$.html", "members_object" : [{"label" : "t6", "tail" : "(arg0: Movable[T1], arg1: Movable[T2], arg2: Movable[T3], arg3: Movable[T4], arg4: Movable[T5], arg5: Movable[T6]): Movable[(T1, T2, T3, T4, T5, T6)]", "member" : "lamp.Movable.t6", "link" : "lamp\/Movable$.html#t6[T1,T2,T3,T4,T5,T6](implicitevidence$21:lamp.Movable[T1],implicitevidence$22:lamp.Movable[T2],implicitevidence$23:lamp.Movable[T3],implicitevidence$24:lamp.Movable[T4],implicitevidence$25:lamp.Movable[T5],implicitevidence$26:lamp.Movable[T6]):lamp.Movable[(T1,T2,T3,T4,T5,T6)]", "kind" : "implicit def"}, {"label" : "t5", "tail" : "(arg0: Movable[T1], arg1: Movable[T2], arg2: Movable[T3], arg3: Movable[T4], arg4: Movable[T5]): Movable[(T1, T2, T3, T4, T5)]", "member" : "lamp.Movable.t5", "link" : "lamp\/Movable$.html#t5[T1,T2,T3,T4,T5](implicitevidence$16:lamp.Movable[T1],implicitevidence$17:lamp.Movable[T2],implicitevidence$18:lamp.Movable[T3],implicitevidence$19:lamp.Movable[T4],implicitevidence$20:lamp.Movable[T5]):lamp.Movable[(T1,T2,T3,T4,T5)]", "kind" : "implicit def"}, {"label" : "t4", "tail" : "(arg0: Movable[T1], arg1: Movable[T2], arg2: Movable[T3], arg3: Movable[T4]): Movable[(T1, T2, T3, T4)]", "member" : "lamp.Movable.t4", "link" : "lamp\/Movable$.html#t4[T1,T2,T3,T4](implicitevidence$12:lamp.Movable[T1],implicitevidence$13:lamp.Movable[T2],implicitevidence$14:lamp.Movable[T3],implicitevidence$15:lamp.Movable[T4]):lamp.Movable[(T1,T2,T3,T4)]", "kind" : "implicit def"}, {"label" : "t3", "tail" : "(arg0: Movable[T1], arg1: Movable[T2], arg2: Movable[T3]): Movable[(T1, T2, T3)]", "member" : "lamp.Movable.t3", "link" : "lamp\/Movable$.html#t3[T1,T2,T3](implicitevidence$9:lamp.Movable[T1],implicitevidence$10:lamp.Movable[T2],implicitevidence$11:lamp.Movable[T3]):lamp.Movable[(T1,T2,T3)]", "kind" : "implicit def"}, {"label" : "t2", "tail" : "(arg0: Movable[T1], arg1: Movable[T2]): Movable[(T1, T2)]", "member" : "lamp.Movable.t2", "link" : "lamp\/Movable$.html#t2[T1,T2](implicitevidence$7:lamp.Movable[T1],implicitevidence$8:lamp.Movable[T2]):lamp.Movable[(T1,T2)]", "kind" : "implicit def"}, {"label" : "SeqIsMovable", "tail" : "(arg0: Movable[T]): Movable[Seq[T]]", "member" : "lamp.Movable.SeqIsMovable", "link" : "lamp\/Movable$.html#SeqIsMovable[T](implicitevidence$6:lamp.Movable[T]):lamp.Movable[Seq[T]]", "kind" : "implicit def"}, {"label" : "EitherIsMovable", "tail" : "(arg0: Movable[T1], arg1: Movable[T2]): Movable[Either[T1, T2]]", "member" : "lamp.Movable.EitherIsMovable", "link" : "lamp\/Movable$.html#EitherIsMovable[T1,T2](implicitevidence$4:lamp.Movable[T1],implicitevidence$5:lamp.Movable[T2]):lamp.Movable[Either[T1,T2]]", "kind" : "implicit def"}, {"label" : "OptionIsMovable", "tail" : "(arg0: Movable[T]): Movable[Option[T]]", "member" : "lamp.Movable.OptionIsMovable", "link" : "lamp\/Movable$.html#OptionIsMovable[T](implicitevidence$3:lamp.Movable[T]):lamp.Movable[Option[T]]", "kind" : "implicit def"}, {"label" : "VecIntIsMovable", "tail" : "(): Movable[Vec[Int]] { def list(t: org.saddle.Vec[Int]): scala.collection.immutable.Nil.type }", "member" : "lamp.Movable.VecIntIsMovable", "link" : "lamp\/Movable$.html#VecIntIsMovable:lamp.Movable[org.saddle.Vec[Int]]{deflist(t:org.saddle.Vec[Int]):scala.collection.immutable.Nil.type}", "kind" : "implicit def"}, {"label" : "MatIntIsMovable", "tail" : "(): Movable[Mat[Int]] { def list(t: org.saddle.Mat[Int]): scala.collection.immutable.Nil.type }", "member" : "lamp.Movable.MatIntIsMovable", "link" : "lamp\/Movable$.html#MatIntIsMovable:lamp.Movable[org.saddle.Mat[Int]]{deflist(t:org.saddle.Mat[Int]):scala.collection.immutable.Nil.type}", "kind" : "implicit def"}, {"label" : "VecDoubleIsMovable", "tail" : "(): Movable[Vec[Double]] { def list(t: org.saddle.Vec[Double]): scala.collection.immutable.Nil.type }", "member" : "lamp.Movable.VecDoubleIsMovable", "link" : "lamp\/Movable$.html#VecDoubleIsMovable:lamp.Movable[org.saddle.Vec[Double]]{deflist(t:org.saddle.Vec[Double]):scala.collection.immutable.Nil.type}", "kind" : "implicit def"}, {"label" : "MatDoubleIsMovable", "tail" : "(): Movable[Mat[Double]] { def list(t: org.saddle.Mat[Double]): scala.collection.immutable.Nil.type }", "member" : "lamp.Movable.MatDoubleIsMovable", "link" : "lamp\/Movable$.html#MatDoubleIsMovable:lamp.Movable[org.saddle.Mat[Double]]{deflist(t:org.saddle.Mat[Double]):scala.collection.immutable.Nil.type}", "kind" : "implicit def"}, {"label" : "ByteIsMovable", "tail" : "(): Movable[Byte] { def list(t: Byte): scala.collection.immutable.Nil.type }", "member" : "lamp.Movable.ByteIsMovable", "link" : "lamp\/Movable$.html#ByteIsMovable:lamp.Movable[Byte]{deflist(t:Byte):scala.collection.immutable.Nil.type}", "kind" : "implicit def"}, {"label" : "ShortIsMovable", "tail" : "(): Movable[Short] { def list(t: Short): scala.collection.immutable.Nil.type }", "member" : "lamp.Movable.ShortIsMovable", "link" : "lamp\/Movable$.html#ShortIsMovable:lamp.Movable[Short]{deflist(t:Short):scala.collection.immutable.Nil.type}", "kind" : "implicit def"}, {"label" : "LongIsMovable", "tail" : "(): Movable[Long] { def list(t: Long): scala.collection.immutable.Nil.type }", "member" : "lamp.Movable.LongIsMovable", "link" : "lamp\/Movable$.html#LongIsMovable:lamp.Movable[Long]{deflist(t:Long):scala.collection.immutable.Nil.type}", "kind" : "implicit def"}, {"label" : "IntIsMovable", "tail" : "(): Movable[Int] { def list(t: Int): scala.collection.immutable.Nil.type }", "member" : "lamp.Movable.IntIsMovable", "link" : "lamp\/Movable$.html#IntIsMovable:lamp.Movable[Int]{deflist(t:Int):scala.collection.immutable.Nil.type}", "kind" : "implicit def"}, {"label" : "BooleanIsMovable", "tail" : "(): Movable[Boolean] { def list(t: Boolean): scala.collection.immutable.Nil.type }", "member" : "lamp.Movable.BooleanIsMovable", "link" : "lamp\/Movable$.html#BooleanIsMovable:lamp.Movable[Boolean]{deflist(t:Boolean):scala.collection.immutable.Nil.type}", "kind" : "implicit def"}, {"label" : "FloatIsMovable", "tail" : "(): Movable[Float] { def list(t: Float): scala.collection.immutable.Nil.type }", "member" : "lamp.Movable.FloatIsMovable", "link" : "lamp\/Movable$.html#FloatIsMovable:lamp.Movable[Float]{deflist(t:Float):scala.collection.immutable.Nil.type}", "kind" : "implicit def"}, {"label" : "DoubleIsMovable", "tail" : "(): Movable[Double] { def list(t: Double): scala.collection.immutable.Nil.type }", "member" : "lamp.Movable.DoubleIsMovable", "link" : "lamp\/Movable$.html#DoubleIsMovable:lamp.Movable[Double]{deflist(t:Double):scala.collection.immutable.Nil.type}", "kind" : "implicit def"}, {"label" : "stringIsMovable", "tail" : "(): Movable[String] { def list(t: String): scala.collection.immutable.Nil.type }", "member" : "lamp.Movable.stringIsMovable", "link" : "lamp\/Movable$.html#stringIsMovable:lamp.Movable[String]{deflist(t:String):scala.collection.immutable.Nil.type}", "kind" : "implicit def"}, {"label" : "unitIsMovable", "tail" : "(): Movable[Unit] { def list(t: Unit): scala.collection.immutable.Nil.type }", "member" : "lamp.Movable.unitIsMovable", "link" : "lamp\/Movable$.html#unitIsMovable:lamp.Movable[Unit]{deflist(t:Unit):scala.collection.immutable.Nil.type}", "kind" : "implicit def"}, {"label" : "stensorIsMovable", "tail" : "(): Movable[STen]", "member" : "lamp.Movable.stensorIsMovable", "link" : "lamp\/Movable$.html#stensorIsMovable:lamp.Movable[lamp.STen]", "kind" : "implicit def"}, {"label" : "by", "tail" : "(convert: (T) => K)(arg0: Movable[K]): Movable[T]", "member" : "lamp.Movable.by", "link" : "lamp\/Movable$.html#by[T,K](convert:T=>K)(implicitevidence$2:lamp.Movable[K]):lamp.Movable[T]", "kind" : "def"}, {"label" : "nonEmpty", "tail" : "(extract: (T) => List[Tensor]): Movable[T]", "member" : "lamp.Movable.nonEmpty", "link" : "lamp\/Movable$.html#nonEmpty[T](extract:T=>List[aten.Tensor]):lamp.Movable[T]", "kind" : "def"}, {"label" : "empty", "tail" : "(): Movable[T] { def list(t: T): scala.collection.immutable.Nil.type }", "member" : "lamp.Movable.empty", "link" : "lamp\/Movable$.html#empty[T]:lamp.Movable[T]{deflist(t:T):scala.collection.immutable.Nil.type}", "kind" : "def"}, {"label" : "MovableSyntax", "tail" : "", "member" : "lamp.Movable.MovableSyntax", "link" : "lamp\/Movable$.html#MovableSyntax[T]extendsAnyRef", "kind" : "implicit class"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/Movable$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/Movable$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/Movable$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/Movable$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/Movable$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/Movable$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/Movable$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/Movable$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/Movable$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/Movable$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/Movable$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/Movable$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/Movable$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/Movable$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/Movable$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/Movable$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/Movable$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/Movable$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/Movable$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "lamp\/Movable.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/Movable.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/Movable.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/Movable.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/Movable.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/Movable.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/Movable.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/Movable.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/Movable.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/Movable.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/Movable.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/Movable.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/Movable.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/Movable.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/Movable.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/Movable.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/Movable.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/Movable.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/Movable.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/Movable.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "list", "tail" : "(movable: R): List[Tensor]", "member" : "lamp.Movable.list", "link" : "lamp\/Movable.html#list(movable:R):List[aten.Tensor]", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "lamp.Scope", "shortDescription" : "Faciliates memory management of off-heap data structures.", "object" : "lamp\/Scope$.html", "members_class" : [{"label" : "release", "tail" : "(): Unit", "member" : "lamp.Scope.release", "link" : "lamp\/Scope.html#release():Unit", "kind" : "def"}, {"label" : "register", "tail" : "(resource: TensorOptions): Unit", "member" : "lamp.Scope.register", "link" : "lamp\/Scope.html#register(resource:aten.TensorOptions):Unit", "kind" : "def"}, {"label" : "register", "tail" : "(resource: Tensor): Unit", "member" : "lamp.Scope.register", "link" : "lamp\/Scope.html#register(resource:aten.Tensor):Unit", "kind" : "def"}, {"label" : "apply", "tail" : "(resource: TensorOptions): TensorOptions", "member" : "lamp.Scope.apply", "link" : "lamp\/Scope.html#apply(resource:aten.TensorOptions):aten.TensorOptions", "kind" : "def"}, {"label" : "apply", "tail" : "(resource: Tensor): Tensor", "member" : "lamp.Scope.apply", "link" : "lamp\/Scope.html#apply(resource:aten.Tensor):aten.Tensor", "kind" : "def"}, {"label" : "ResourceType", "tail" : "", "member" : "lamp.Scope.ResourceType", "link" : "lamp\/Scope.html#ResourceType=Either[aten.Tensor,aten.TensorOptions]", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/Scope.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/Scope.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/Scope.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/Scope.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/Scope.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/Scope.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/Scope.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/Scope.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/Scope.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/Scope.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/Scope.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/Scope.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/Scope.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/Scope.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/Scope.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/Scope.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/Scope.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/Scope.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/Scope.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "leak", "tail" : "(op: (Scope) => A): A", "member" : "lamp.Scope.leak", "link" : "lamp\/Scope$.html#leak[A](op:lamp.Scope=>A):A", "kind" : "def"}, {"label" : "root", "tail" : "(op: (Scope) => Unit): Unit", "member" : "lamp.Scope.root", "link" : "lamp\/Scope$.html#root[A](op:lamp.Scope=>Unit):Unit", "kind" : "def"}, {"label" : "apply", "tail" : "(op: (Scope) => A)(arg0: Movable[A], parent: Scope): A", "member" : "lamp.Scope.apply", "link" : "lamp\/Scope$.html#apply[A](op:lamp.Scope=>A)(implicitevidence$29:lamp.Movable[A],implicitparent:lamp.Scope):A", "kind" : "def"}, {"label" : "bracket", "tail" : "(parent: Scope)(use: (Scope) => IO[A])(arg0: Movable[A]): IO[A]", "member" : "lamp.Scope.bracket", "link" : "lamp\/Scope$.html#bracket[A](parent:lamp.Scope)(use:lamp.Scope=>cats.effect.IO[A])(implicitevidence$28:lamp.Movable[A]):cats.effect.IO[A]", "kind" : "def"}, {"label" : "bracket", "tail" : "(use: (Scope) => IO[A])(arg0: Movable[A], parent: Scope): IO[A]", "member" : "lamp.Scope.bracket", "link" : "lamp\/Scope$.html#bracket[A](use:lamp.Scope=>cats.effect.IO[A])(implicitevidence$27:lamp.Movable[A],implicitparent:lamp.Scope):cats.effect.IO[A]", "kind" : "def"}, {"label" : "inResource", "tail" : "(): Resource[IO, Scope]", "member" : "lamp.Scope.inResource", "link" : "lamp\/Scope$.html#inResource:cats.effect.kernel.Resource[cats.effect.IO,lamp.Scope]", "kind" : "def"}, {"label" : "free", "tail" : "(): Scope", "member" : "lamp.Scope.free", "link" : "lamp\/Scope$.html#free:lamp.Scope", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/Scope$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/Scope$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/Scope$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/Scope$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/Scope$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/Scope$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/Scope$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/Scope$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/Scope$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/Scope$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/Scope$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/Scope$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/Scope$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/Scope$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/Scope$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/Scope$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/Scope$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/Scope$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/Scope$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "lamp\/Scope.html", "kind" : "class"}, {"name" : "lamp.SinglePrecision", "case object" : "lamp\/SinglePrecision$.html", "shortDescription" : "", "members_case object" : [{"label" : "convertOption", "tail" : "(t: STenOptions)(arg0: Sc[S]): STenOptions", "member" : "lamp.SinglePrecision.convertOption", "link" : "lamp\/SinglePrecision$.html#convertOption[S](t:lamp.STenOptions)(implicitevidence$3:lamp.Sc[S]):lamp.STenOptions", "kind" : "def"}, {"label" : "convertTensor", "tail" : "(t: Tensor): Tensor", "member" : "lamp.SinglePrecision.convertTensor", "link" : "lamp\/SinglePrecision$.html#convertTensor(t:aten.Tensor):aten.Tensor", "kind" : "def"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/SinglePrecision$.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "productElementName", "tail" : "(n: Int): String", "member" : "scala.Product.productElementName", "link" : "lamp\/SinglePrecision$.html#productElementName(n:Int):String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/SinglePrecision$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/SinglePrecision$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/SinglePrecision$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/SinglePrecision$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/SinglePrecision$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/SinglePrecision$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/SinglePrecision$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/SinglePrecision$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/SinglePrecision$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/SinglePrecision$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/SinglePrecision$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/SinglePrecision$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/SinglePrecision$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/SinglePrecision$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/SinglePrecision$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/SinglePrecision$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/SinglePrecision$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "case object"}, {"name" : "lamp.STen", "shortDescription" : "Memory managed, off-heap N-dimensional array.", "object" : "lamp\/STen$.html", "members_object" : [{"label" : "where", "tail" : "(condition: Tensor, self: STen, other: STen)(arg0: Sc[S]): STen", "member" : "lamp.STen.where", "link" : "lamp\/STen$.html#where[S](condition:aten.Tensor,self:lamp.STen,other:lamp.STen)(implicitevidence$46:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "where", "tail" : "(condition: STen, self: STen, other: STen)(arg0: Sc[S]): STen", "member" : "lamp.STen.where", "link" : "lamp\/STen$.html#where[S](condition:lamp.STen,self:lamp.STen,other:lamp.STen)(implicitevidence$45:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "mse_loss", "tail" : "(self: STen, target: STen, reduction: Long)(arg0: Sc[S]): STen", "member" : "lamp.STen.mse_loss", "link" : "lamp\/STen$.html#mse_loss[S](self:lamp.STen,target:lamp.STen,reduction:Long)(implicitevidence$44:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "mse_loss_backward", "tail" : "(gradOutput: STen, self: STen, target: STen, reduction: Long)(arg0: Sc[S]): STen", "member" : "lamp.STen.mse_loss_backward", "link" : "lamp\/STen$.html#mse_loss_backward[S](gradOutput:lamp.STen,self:lamp.STen,target:lamp.STen,reduction:Long)(implicitevidence$43:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "l1_loss_backward", "tail" : "(gradOutput: STen, self: STen, target: STen, reduction: Long)(arg0: Sc[S]): STen", "member" : "lamp.STen.l1_loss_backward", "link" : "lamp\/STen$.html#l1_loss_backward[S](gradOutput:lamp.STen,self:lamp.STen,target:lamp.STen,reduction:Long)(implicitevidence$42:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "to_dense_backward", "tail" : "(gradOutput: STen, input: STen)(arg0: Sc[S]): STen", "member" : "lamp.STen.to_dense_backward", "link" : "lamp\/STen$.html#to_dense_backward[S](gradOutput:lamp.STen,input:lamp.STen)(implicitevidence$41:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "softplus_backward", "tail" : "(gradOutput: STen, self: STen, beta: Double, threshold: Double, output: STen)(arg0: Sc[S]): STen", "member" : "lamp.STen.softplus_backward", "link" : "lamp\/STen$.html#softplus_backward[S](gradOutput:lamp.STen,self:lamp.STen,beta:Double,threshold:Double,output:lamp.STen)(implicitevidence$40:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "tanh_backward", "tail" : "(gradOutput: STen, output: STen)(arg0: Sc[S]): STen", "member" : "lamp.STen.tanh_backward", "link" : "lamp\/STen$.html#tanh_backward[S](gradOutput:lamp.STen,output:lamp.STen)(implicitevidence$39:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "addcmulOut", "tail" : "(out: STen, self: STen, tensor1: STen, tensor2: STen, alpha: Double): Unit", "member" : "lamp.STen.addcmulOut", "link" : "lamp\/STen$.html#addcmulOut(out:lamp.STen,self:lamp.STen,tensor1:lamp.STen,tensor2:lamp.STen,alpha:Double):Unit", "kind" : "def"}, {"label" : "addmmOut", "tail" : "(out: STen, self: STen, mat1: STen, mat2: STen, beta: Double, alpha: Double): Unit", "member" : "lamp.STen.addmmOut", "link" : "lamp\/STen$.html#addmmOut(out:lamp.STen,self:lamp.STen,mat1:lamp.STen,mat2:lamp.STen,beta:Double,alpha:Double):Unit", "kind" : "def"}, {"label" : "meanOut", "tail" : "(out: STen, self: STen, dim: Seq[Int], keepDim: Boolean): Unit", "member" : "lamp.STen.meanOut", "link" : "lamp\/STen$.html#meanOut(out:lamp.STen,self:lamp.STen,dim:Seq[Int],keepDim:Boolean):Unit", "kind" : "def"}, {"label" : "sumOut", "tail" : "(out: STen, self: STen, dim: Seq[Int], keepDim: Boolean): Unit", "member" : "lamp.STen.sumOut", "link" : "lamp\/STen$.html#sumOut(out:lamp.STen,self:lamp.STen,dim:Seq[Int],keepDim:Boolean):Unit", "kind" : "def"}, {"label" : "powOut", "tail" : "(out: STen, self: STen, other: STen): Unit", "member" : "lamp.STen.powOut", "link" : "lamp\/STen$.html#powOut(out:lamp.STen,self:lamp.STen,other:lamp.STen):Unit", "kind" : "def"}, {"label" : "powOut", "tail" : "(out: STen, self: STen, other: Double): Unit", "member" : "lamp.STen.powOut", "link" : "lamp\/STen$.html#powOut(out:lamp.STen,self:lamp.STen,other:Double):Unit", "kind" : "def"}, {"label" : "remainderOut", "tail" : "(out: STen, self: STen, other: Double): Unit", "member" : "lamp.STen.remainderOut", "link" : "lamp\/STen$.html#remainderOut(out:lamp.STen,self:lamp.STen,other:Double):Unit", "kind" : "def"}, {"label" : "remainderOut", "tail" : "(out: STen, self: STen, other: STen): Unit", "member" : "lamp.STen.remainderOut", "link" : "lamp\/STen$.html#remainderOut(out:lamp.STen,self:lamp.STen,other:lamp.STen):Unit", "kind" : "def"}, {"label" : "bmmOut", "tail" : "(out: STen, self: STen, other: STen): Unit", "member" : "lamp.STen.bmmOut", "link" : "lamp\/STen$.html#bmmOut(out:lamp.STen,self:lamp.STen,other:lamp.STen):Unit", "kind" : "def"}, {"label" : "mmOut", "tail" : "(out: STen, self: STen, other: STen): Unit", "member" : "lamp.STen.mmOut", "link" : "lamp\/STen$.html#mmOut(out:lamp.STen,self:lamp.STen,other:lamp.STen):Unit", "kind" : "def"}, {"label" : "divOut", "tail" : "(out: STen, self: STen, other: STen): Unit", "member" : "lamp.STen.divOut", "link" : "lamp\/STen$.html#divOut(out:lamp.STen,self:lamp.STen,other:lamp.STen):Unit", "kind" : "def"}, {"label" : "mulOut", "tail" : "(out: STen, self: STen, other: STen): Unit", "member" : "lamp.STen.mulOut", "link" : "lamp\/STen$.html#mulOut(out:lamp.STen,self:lamp.STen,other:lamp.STen):Unit", "kind" : "def"}, {"label" : "subOut", "tail" : "(out: STen, self: STen, other: STen, alpha: Double): Unit", "member" : "lamp.STen.subOut", "link" : "lamp\/STen$.html#subOut(out:lamp.STen,self:lamp.STen,other:lamp.STen,alpha:Double):Unit", "kind" : "def"}, {"label" : "addOut", "tail" : "(out: STen, self: STen, other: STen, alpha: Double): Unit", "member" : "lamp.STen.addOut", "link" : "lamp\/STen$.html#addOut(out:lamp.STen,self:lamp.STen,other:lamp.STen,alpha:Double):Unit", "kind" : "def"}, {"label" : "catOut", "tail" : "(out: STen, tensors: Seq[STen], dim: Int): Unit", "member" : "lamp.STen.catOut", "link" : "lamp\/STen$.html#catOut(out:lamp.STen,tensors:Seq[lamp.STen],dim:Int):Unit", "kind" : "def"}, {"label" : "indexSelectOut", "tail" : "(out: STen, self: STen, dim: Int, index: STen): Unit", "member" : "lamp.STen.indexSelectOut", "link" : "lamp\/STen$.html#indexSelectOut(out:lamp.STen,self:lamp.STen,dim:Int,index:lamp.STen):Unit", "kind" : "def"}, {"label" : "triangularSolve", "tail" : "(b: STen, A: STen, upper: Boolean, transpose: Boolean, uniTriangular: Boolean)(arg0: Sc[S]): STen", "member" : "lamp.STen.triangularSolve", "link" : "lamp\/STen$.html#triangularSolve[S](b:lamp.STen,A:lamp.STen,upper:Boolean,transpose:Boolean,uniTriangular:Boolean)(implicitevidence$38:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "atan2", "tail" : "(y: STen, x: STen)(arg0: Sc[S]): STen", "member" : "lamp.STen.atan2", "link" : "lamp\/STen$.html#atan2[S](y:lamp.STen,x:lamp.STen)(implicitevidence$37:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "sparse_coo", "tail" : "(indices: STen, values: STen, dim: Seq[Long], tensorOptions: STenOptions)(arg0: Sc[S]): STen", "member" : "lamp.STen.sparse_coo", "link" : "lamp\/STen$.html#sparse_coo[S](indices:lamp.STen,values:lamp.STen,dim:Seq[Long],tensorOptions:lamp.STenOptions)(implicitevidence$36:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "linspace", "tail" : "(start: Double, end: Double, steps: Long, tensorOptions: STenOptions)(arg0: Sc[S]): STen", "member" : "lamp.STen.linspace", "link" : "lamp\/STen$.html#linspace[S](start:Double,end:Double,steps:Long,tensorOptions:lamp.STenOptions)(implicitevidence$35:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "arange", "tail" : "(start: Double, end: Double, step: Double, tensorOptions: STenOptions)(arg0: Sc[S]): STen", "member" : "lamp.STen.arange", "link" : "lamp\/STen$.html#arange[S](start:Double,end:Double,step:Double,tensorOptions:lamp.STenOptions)(implicitevidence$34:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "eye", "tail" : "(n: Int, m: Int, tensorOptions: STenOptions)(arg0: Sc[S]): STen", "member" : "lamp.STen.eye", "link" : "lamp\/STen$.html#eye[S](n:Int,m:Int,tensorOptions:lamp.STenOptions)(implicitevidence$33:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "eye", "tail" : "(n: Int, tensorOptions: STenOptions)(arg0: Sc[S]): STen", "member" : "lamp.STen.eye", "link" : "lamp\/STen$.html#eye[S](n:Int,tensorOptions:lamp.STenOptions)(implicitevidence$32:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "randint", "tail" : "(low: Long, high: Long, size: Seq[Long], tensorOptions: STenOptions)(arg0: Sc[S]): STen", "member" : "lamp.STen.randint", "link" : "lamp\/STen$.html#randint[S](low:Long,high:Long,size:Seq[Long],tensorOptions:lamp.STenOptions)(implicitevidence$31:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "randint", "tail" : "(high: Long, size: Seq[Long], tensorOptions: STenOptions)(arg0: Sc[S]): STen", "member" : "lamp.STen.randint", "link" : "lamp\/STen$.html#randint[S](high:Long,size:Seq[Long],tensorOptions:lamp.STenOptions)(implicitevidence$30:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "randperm", "tail" : "(n: Long, tensorOptions: STenOptions)(arg0: Sc[S]): STen", "member" : "lamp.STen.randperm", "link" : "lamp\/STen$.html#randperm[S](n:Long,tensorOptions:lamp.STenOptions)(implicitevidence$29:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "normal", "tail" : "(mean: Double, std: Double, size: Seq[Long], options: STenOptions)(arg0: Sc[S]): STen", "member" : "lamp.STen.normal", "link" : "lamp\/STen$.html#normal[S](mean:Double,std:Double,size:Seq[Long],options:lamp.STenOptions)(implicitevidence$28:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "randn", "tail" : "(size: Seq[Long], tensorOptions: STenOptions)(arg0: Sc[S]): STen", "member" : "lamp.STen.randn", "link" : "lamp\/STen$.html#randn[S](size:Seq[Long],tensorOptions:lamp.STenOptions)(implicitevidence$27:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "rand", "tail" : "(size: Seq[Long], tensorOptions: STenOptions)(arg0: Sc[S]): STen", "member" : "lamp.STen.rand", "link" : "lamp\/STen$.html#rand[S](size:Seq[Long],tensorOptions:lamp.STenOptions)(implicitevidence$26:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "zerosLike", "tail" : "(tensor: STen)(arg0: Sc[S]): STen", "member" : "lamp.STen.zerosLike", "link" : "lamp\/STen$.html#zerosLike[S](tensor:lamp.STen)(implicitevidence$25:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "zerosLike", "tail" : "(tensor: Tensor)(arg0: Sc[S]): STen", "member" : "lamp.STen.zerosLike", "link" : "lamp\/STen$.html#zerosLike[S](tensor:aten.Tensor)(implicitevidence$24:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "zeros", "tail" : "(size: Seq[Long], tensorOptions: STenOptions)(arg0: Sc[S]): STen", "member" : "lamp.STen.zeros", "link" : "lamp\/STen$.html#zeros[S](size:Seq[Long],tensorOptions:lamp.STenOptions)(implicitevidence$23:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "onesLike", "tail" : "(tensor: STen)(arg0: Sc[S]): STen", "member" : "lamp.STen.onesLike", "link" : "lamp\/STen$.html#onesLike[S](tensor:lamp.STen)(implicitevidence$22:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "onesLike", "tail" : "(tensor: Tensor)(arg0: Sc[S]): STen", "member" : "lamp.STen.onesLike", "link" : "lamp\/STen$.html#onesLike[S](tensor:aten.Tensor)(implicitevidence$21:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "ones", "tail" : "(size: Seq[Long], tensorOptions: STenOptions)(arg0: Sc[S]): STen", "member" : "lamp.STen.ones", "link" : "lamp\/STen$.html#ones[S](size:Seq[Long],tensorOptions:lamp.STenOptions)(implicitevidence$20:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "scalarDouble", "tail" : "(value: Double, options: STenOptions)(arg0: Sc[S]): STen", "member" : "lamp.STen.scalarDouble", "link" : "lamp\/STen$.html#scalarDouble[S](value:Double,options:lamp.STenOptions)(implicitevidence$19:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "scalarLong", "tail" : "(value: Long, options: STenOptions)(scope: Scope): STen", "member" : "lamp.STen.scalarLong", "link" : "lamp\/STen$.html#scalarLong(value:Long,options:lamp.STenOptions)(implicitscope:lamp.Scope):lamp.STen", "kind" : "def"}, {"label" : "stack", "tail" : "(tensors: Seq[STen], dim: Long)(arg0: Sc[S]): STen", "member" : "lamp.STen.stack", "link" : "lamp\/STen$.html#stack[S](tensors:Seq[lamp.STen],dim:Long)(implicitevidence$18:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "cat", "tail" : "(tensors: Seq[STen], dim: Long)(arg0: Sc[S]): STen", "member" : "lamp.STen.cat", "link" : "lamp\/STen$.html#cat[S](tensors:Seq[lamp.STen],dim:Long)(implicitevidence$17:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "owned", "tail" : "(value: Tensor)(scope: Scope): STen", "member" : "lamp.STen.owned", "link" : "lamp\/STen$.html#owned(value:aten.Tensor)(implicitscope:lamp.Scope):lamp.STen", "kind" : "def"}, {"label" : "apply", "tail" : "(vs: Double*)(arg0: Sc[S]): STen", "member" : "lamp.STen.apply", "link" : "lamp\/STen$.html#apply[S](vs:Double*)(implicitevidence$16:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "free", "tail" : "(value: Tensor): STen", "member" : "lamp.STen.free", "link" : "lamp\/STen$.html#free(value:aten.Tensor):lamp.STen", "kind" : "def"}, {"label" : "tensorsFromFile", "tail" : "(path: String, offset: Long, length: Long, pin: Boolean, tensors: List[(Byte, Long, Long)])(arg0: Sc[S]): Vector[STen]", "member" : "lamp.STen.tensorsFromFile", "link" : "lamp\/STen$.html#tensorsFromFile[S](path:String,offset:Long,length:Long,pin:Boolean,tensors:List[(Byte,Long,Long)])(implicitevidence$15:lamp.Sc[S]):Vector[lamp.STen]", "kind" : "def"}, {"label" : "fromFile", "tail" : "(path: String, offset: Long, length: Long, scalarTypeByte: Byte, pin: Boolean)(arg0: Sc[S]): STen", "member" : "lamp.STen.fromFile", "link" : "lamp\/STen$.html#fromFile[S](path:String,offset:Long,length:Long,scalarTypeByte:Byte,pin:Boolean)(implicitevidence$14:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "fromFloatArray", "tail" : "(ar: Array[Float], dim: Seq[Long], device: Device)(arg0: Sc[S]): STen", "member" : "lamp.STen.fromFloatArray", "link" : "lamp\/STen$.html#fromFloatArray[S](ar:Array[Float],dim:Seq[Long],device:lamp.Device)(implicitevidence$13:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "fromDoubleArray", "tail" : "(ar: Array[Double], dim: Seq[Long], device: Device, precision: FloatingPointPrecision)(arg0: Sc[S]): STen", "member" : "lamp.STen.fromDoubleArray", "link" : "lamp\/STen$.html#fromDoubleArray[S](ar:Array[Double],dim:Seq[Long],device:lamp.Device,precision:lamp.FloatingPointPrecision)(implicitevidence$12:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "fromLongArray", "tail" : "(ar: Array[Long], dim: Seq[Long], device: Device)(arg0: Sc[S]): STen", "member" : "lamp.STen.fromLongArray", "link" : "lamp\/STen$.html#fromLongArray[S](ar:Array[Long],dim:Seq[Long],device:lamp.Device)(implicitevidence$11:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "fromLongVec", "tail" : "(m: Vec[Long], cuda: Boolean)(arg0: Sc[S]): STen", "member" : "lamp.STen.fromLongVec", "link" : "lamp\/STen$.html#fromLongVec[S](m:org.saddle.Vec[Long],cuda:Boolean)(implicitevidence$10:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "fromLongVec", "tail" : "(m: Vec[Long], device: Device)(arg0: Sc[S]): STen", "member" : "lamp.STen.fromLongVec", "link" : "lamp\/STen$.html#fromLongVec[S](m:org.saddle.Vec[Long],device:lamp.Device)(implicitevidence$9:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "fromLongMat", "tail" : "(m: Mat[Long], cuda: Boolean)(arg0: Sc[S]): STen", "member" : "lamp.STen.fromLongMat", "link" : "lamp\/STen$.html#fromLongMat[S](m:org.saddle.Mat[Long],cuda:Boolean)(implicitevidence$8:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "fromLongMat", "tail" : "(m: Mat[Long], device: Device)(arg0: Sc[S]): STen", "member" : "lamp.STen.fromLongMat", "link" : "lamp\/STen$.html#fromLongMat[S](m:org.saddle.Mat[Long],device:lamp.Device)(implicitevidence$7:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "fromVec", "tail" : "(m: Vec[Double], device: Device, precision: FloatingPointPrecision)(arg0: Sc[S]): STen", "member" : "lamp.STen.fromVec", "link" : "lamp\/STen$.html#fromVec[S](m:org.saddle.Vec[Double],device:lamp.Device,precision:lamp.FloatingPointPrecision)(implicitevidence$6:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "fromVec", "tail" : "(m: Vec[Double], cuda: Boolean)(arg0: Sc[S]): STen", "member" : "lamp.STen.fromVec", "link" : "lamp\/STen$.html#fromVec[S](m:org.saddle.Vec[Double],cuda:Boolean)(implicitevidence$5:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "fromFloatMat", "tail" : "(m: Mat[Float], device: Device)(arg0: Sc[S]): STen", "member" : "lamp.STen.fromFloatMat", "link" : "lamp\/STen$.html#fromFloatMat[S](m:org.saddle.Mat[Float],device:lamp.Device)(implicitevidence$4:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "fromMat", "tail" : "(m: Mat[Double], device: Device, precision: FloatingPointPrecision)(arg0: Sc[S]): STen", "member" : "lamp.STen.fromMat", "link" : "lamp\/STen$.html#fromMat[S](m:org.saddle.Mat[Double],device:lamp.Device,precision:lamp.FloatingPointPrecision)(implicitevidence$3:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "fromMat", "tail" : "(m: Mat[Double], cuda: Boolean)(arg0: Sc[S]): STen", "member" : "lamp.STen.fromMat", "link" : "lamp\/STen$.html#fromMat[S](m:org.saddle.Mat[Double],cuda:Boolean)(implicitevidence$2:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "OwnedSyntax", "tail" : "", "member" : "lamp.STen.OwnedSyntax", "link" : "lamp\/STen$.html#OwnedSyntaxextendsAnyRef", "kind" : "implicit class"}, {"label" : "lOptions", "tail" : ": STenOptions", "member" : "lamp.STen.lOptions", "link" : "lamp\/STen$.html#lOptions:lamp.STenOptions", "kind" : "val"}, {"label" : "fOptions", "tail" : ": STenOptions", "member" : "lamp.STen.fOptions", "link" : "lamp\/STen$.html#fOptions:lamp.STenOptions", "kind" : "val"}, {"label" : "dOptions", "tail" : ": STenOptions", "member" : "lamp.STen.dOptions", "link" : "lamp\/STen$.html#dOptions:lamp.STenOptions", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/STen$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/STen$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/STen$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/STen$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/STen$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/STen$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/STen$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/STen$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/STen$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/STen$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/STen$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/STen$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/STen$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/STen$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/STen$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/STen$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/STen$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/STen$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/STen$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "diagonalView", "tail" : "(offset: Int, dim1: Int, dim2: Int)(arg0: Sc[S]): STen", "member" : "lamp.STen.diagonalView", "link" : "lamp\/STen.html#diagonalView[S](offset:Int,dim1:Int,dim2:Int)(implicitevidence$244:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "tril", "tail" : "(diagonal: Int)(arg0: Sc[S]): STen", "member" : "lamp.STen.tril", "link" : "lamp\/STen.html#tril[S](diagonal:Int)(implicitevidence$243:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "tril_", "tail" : "(diagonal: Int): Unit", "member" : "lamp.STen.tril_", "link" : "lamp\/STen.html#tril_(diagonal:Int):Unit", "kind" : "def"}, {"label" : "toDense", "tail" : "(arg0: Sc[S]): STen", "member" : "lamp.STen.toDense", "link" : "lamp\/STen.html#toDense[S](implicitevidence$242:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "matrixRank", "tail" : "(hermitian: Boolean)(arg0: Sc[S]): STen", "member" : "lamp.STen.matrixRank", "link" : "lamp\/STen.html#matrixRank[S](hermitian:Boolean)(implicitevidence$241:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "qr", "tail" : "(mode: String)(arg0: Sc[S]): (STen, STen)", "member" : "lamp.STen.qr", "link" : "lamp\/STen.html#qr[S](mode:String)(implicitevidence$240:lamp.Sc[S]):(lamp.STen,lamp.STen)", "kind" : "def"}, {"label" : "tensorsolve", "tail" : "(other: Tensor)(arg0: Sc[S]): STen", "member" : "lamp.STen.tensorsolve", "link" : "lamp\/STen.html#tensorsolve[S](other:aten.Tensor)(implicitevidence$239:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "tensorinv", "tail" : "(int: Int)(arg0: Sc[S]): STen", "member" : "lamp.STen.tensorinv", "link" : "lamp\/STen.html#tensorinv[S](int:Int)(implicitevidence$238:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "solve", "tail" : "(other: Tensor)(arg0: Sc[S]): STen", "member" : "lamp.STen.solve", "link" : "lamp\/STen.html#solve[S](other:aten.Tensor)(implicitevidence$237:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "cond", "tail" : "(hermitian: Boolean)(arg0: Sc[S]): STen", "member" : "lamp.STen.cond", "link" : "lamp\/STen.html#cond[S](hermitian:Boolean)(implicitevidence$236:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "cond", "tail" : "(norm: String)(arg0: Sc[S]): STen", "member" : "lamp.STen.cond", "link" : "lamp\/STen.html#cond[S](norm:String)(implicitevidence$235:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "cond", "tail" : "(arg0: Sc[S]): STen", "member" : "lamp.STen.cond", "link" : "lamp\/STen.html#cond[S](implicitevidence$234:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "outer", "tail" : "(other: STen)(arg0: Sc[S]): STen", "member" : "lamp.STen.outer", "link" : "lamp\/STen.html#outer[S](other:lamp.STen)(implicitevidence$233:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "inner", "tail" : "(other: STen)(arg0: Sc[S]): STen", "member" : "lamp.STen.inner", "link" : "lamp\/STen.html#inner[S](other:lamp.STen)(implicitevidence$232:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "inv", "tail" : "(arg0: Sc[S]): STen", "member" : "lamp.STen.inv", "link" : "lamp\/STen.html#inv[S](implicitevidence$231:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "eigvalsh", "tail" : "(uplo: String)(arg0: Sc[S]): STen", "member" : "lamp.STen.eigvalsh", "link" : "lamp\/STen.html#eigvalsh[S](uplo:String)(implicitevidence$230:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "eigh", "tail" : "(uplo: String)(arg0: Sc[S]): (STen, STen)", "member" : "lamp.STen.eigh", "link" : "lamp\/STen.html#eigh[S](uplo:String)(implicitevidence$229:lamp.Sc[S]):(lamp.STen,lamp.STen)", "kind" : "def"}, {"label" : "slogdet", "tail" : "(arg0: Sc[S]): (STen, STen)", "member" : "lamp.STen.slogdet", "link" : "lamp\/STen.html#slogdet[S](implicitevidence$228:lamp.Sc[S]):(lamp.STen,lamp.STen)", "kind" : "def"}, {"label" : "diag", "tail" : "(diagonal: Long)(arg0: Sc[S]): STen", "member" : "lamp.STen.diag", "link" : "lamp\/STen.html#diag[S](diagonal:Long)(implicitevidence$227:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "svd", "tail" : "(arg0: Sc[S]): (STen, STen, STen)", "member" : "lamp.STen.svd", "link" : "lamp\/STen.html#svd[S](implicitevidence$226:lamp.Sc[S]):(lamp.STen,lamp.STen,lamp.STen)", "kind" : "def"}, {"label" : "frobeniusNorm", "tail" : "(arg0: Sc[S]): STen", "member" : "lamp.STen.frobeniusNorm", "link" : "lamp\/STen.html#frobeniusNorm[S](implicitevidence$225:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "dropout_", "tail" : "(p: Double, training: Boolean): Unit", "member" : "lamp.STen.dropout_", "link" : "lamp\/STen.html#dropout_(p:Double,training:Boolean):Unit", "kind" : "def"}, {"label" : "round", "tail" : "(arg0: Sc[S]): STen", "member" : "lamp.STen.round", "link" : "lamp\/STen.html#round[S](implicitevidence$224:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "where", "tail" : "(arg0: Sc[S]): List[STen]", "member" : "lamp.STen.where", "link" : "lamp\/STen.html#where[S](implicitevidence$223:lamp.Sc[S]):List[lamp.STen]", "kind" : "def"}, {"label" : "stdAndMean", "tail" : "(dim: Seq[Int], unbiased: Boolean, keepDim: Boolean)(arg0: Sc[S]): (STen, STen)", "member" : "lamp.STen.stdAndMean", "link" : "lamp\/STen.html#stdAndMean[S](dim:Seq[Int],unbiased:Boolean,keepDim:Boolean)(implicitevidence$222:lamp.Sc[S]):(lamp.STen,lamp.STen)", "kind" : "def"}, {"label" : "stdAndMean", "tail" : "(unbiased: Boolean)(arg0: Sc[S]): (STen, STen)", "member" : "lamp.STen.stdAndMean", "link" : "lamp\/STen.html#stdAndMean[S](unbiased:Boolean)(implicitevidence$221:lamp.Sc[S]):(lamp.STen,lamp.STen)", "kind" : "def"}, {"label" : "varAndMean", "tail" : "(dim: Seq[Int], unbiased: Boolean, keepDim: Boolean)(arg0: Sc[S]): (STen, STen)", "member" : "lamp.STen.varAndMean", "link" : "lamp\/STen.html#varAndMean[S](dim:Seq[Int],unbiased:Boolean,keepDim:Boolean)(implicitevidence$220:lamp.Sc[S]):(lamp.STen,lamp.STen)", "kind" : "def"}, {"label" : "varAndMean", "tail" : "(unbiased: Boolean)(arg0: Sc[S]): (STen, STen)", "member" : "lamp.STen.varAndMean", "link" : "lamp\/STen.html#varAndMean[S](unbiased:Boolean)(implicitevidence$219:lamp.Sc[S]):(lamp.STen,lamp.STen)", "kind" : "def"}, {"label" : "unsqueeze", "tail" : "(dim: Int)(arg0: Sc[S]): STen", "member" : "lamp.STen.unsqueeze", "link" : "lamp\/STen.html#unsqueeze[S](dim:Int)(implicitevidence$218:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "squeeze", "tail" : "(arg0: Sc[S]): STen", "member" : "lamp.STen.squeeze", "link" : "lamp\/STen.html#squeeze[S](implicitevidence$217:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "squeeze", "tail" : "(dim: Int)(arg0: Sc[S]): STen", "member" : "lamp.STen.squeeze", "link" : "lamp\/STen.html#squeeze[S](dim:Int)(implicitevidence$216:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "sort", "tail" : "(dim: Int, descending: Boolean)(arg0: Sc[S]): (STen, STen)", "member" : "lamp.STen.sort", "link" : "lamp\/STen.html#sort[S](dim:Int,descending:Boolean)(implicitevidence$215:lamp.Sc[S]):(lamp.STen,lamp.STen)", "kind" : "def"}, {"label" : "repeat", "tail" : "(dims: List[Long])(arg0: Sc[S]): STen", "member" : "lamp.STen.repeat", "link" : "lamp\/STen.html#repeat[S](dims:List[Long])(implicitevidence$214:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "repeatInterleave", "tail" : "(arg0: Sc[S]): STen", "member" : "lamp.STen.repeatInterleave", "link" : "lamp\/STen.html#repeatInterleave[S](implicitevidence$213:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "repeatInterleave", "tail" : "(repeats: Long, dim: Int)(arg0: Sc[S]): STen", "member" : "lamp.STen.repeatInterleave", "link" : "lamp\/STen.html#repeatInterleave[S](repeats:Long,dim:Int)(implicitevidence$212:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "repeatInterleave", "tail" : "(repeats: STen, dim: Int)(arg0: Sc[S]): STen", "member" : "lamp.STen.repeatInterleave", "link" : "lamp\/STen.html#repeatInterleave[S](repeats:lamp.STen,dim:Int)(implicitevidence$211:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "pinverse", "tail" : "(rcond: Double)(arg0: Sc[S]): STen", "member" : "lamp.STen.pinverse", "link" : "lamp\/STen.html#pinverse[S](rcond:Double)(implicitevidence$210:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "oneHot", "tail" : "(numClasses: Int)(arg0: Sc[S]): STen", "member" : "lamp.STen.oneHot", "link" : "lamp\/STen.html#oneHot[S](numClasses:Int)(implicitevidence$209:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "narrow", "tail" : "(dim: Int, start: STen, length: Long)(arg0: Sc[S]): STen", "member" : "lamp.STen.narrow", "link" : "lamp\/STen.html#narrow[S](dim:Int,start:lamp.STen,length:Long)(implicitevidence$208:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "narrow", "tail" : "(dim: Int, start: Long, length: Long)(arg0: Sc[S]): STen", "member" : "lamp.STen.narrow", "link" : "lamp\/STen.html#narrow[S](dim:Int,start:Long,length:Long)(implicitevidence$207:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "matrixRank", "tail" : "(tol: Double, symmetric: Boolean)(arg0: Sc[S]): STen", "member" : "lamp.STen.matrixRank", "link" : "lamp\/STen.html#matrixRank[S](tol:Double,symmetric:Boolean)(implicitevidence$206:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "matrixPower", "tail" : "(n: Int)(arg0: Sc[S]): STen", "member" : "lamp.STen.matrixPower", "link" : "lamp\/STen.html#matrixPower[S](n:Int)(implicitevidence$205:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "index_copy_", "tail" : "(dim: Int, index: STen, source: STen): Unit", "member" : "lamp.STen.index_copy_", "link" : "lamp\/STen.html#index_copy_(dim:Int,index:lamp.STen,source:lamp.STen):Unit", "kind" : "def"}, {"label" : "indexCopy", "tail" : "(dim: Int, index: STen, source: STen)(arg0: Sc[S]): STen", "member" : "lamp.STen.indexCopy", "link" : "lamp\/STen.html#indexCopy[S](dim:Int,index:lamp.STen,source:lamp.STen)(implicitevidence$204:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "indexPut", "tail" : "(indices: List[STen], values: STen, accumulate: Boolean)(arg0: Sc[S]): STen", "member" : "lamp.STen.indexPut", "link" : "lamp\/STen.html#indexPut[S](indices:List[lamp.STen],values:lamp.STen,accumulate:Boolean)(implicitevidence$203:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "index", "tail" : "(indices: STen*)(arg0: Sc[S]): STen", "member" : "lamp.STen.index", "link" : "lamp\/STen.html#index[S](indices:lamp.STen*)(implicitevidence$202:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "expm1", "tail" : "(arg0: Sc[S]): STen", "member" : "lamp.STen.expm1", "link" : "lamp\/STen.html#expm1[S](implicitevidence$201:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "log10", "tail" : "(arg0: Sc[S]): STen", "member" : "lamp.STen.log10", "link" : "lamp\/STen.html#log10[S](implicitevidence$200:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "isfinite", "tail" : "(arg0: Sc[S]): STen", "member" : "lamp.STen.isfinite", "link" : "lamp\/STen.html#isfinite[S](implicitevidence$199:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "isnan", "tail" : "(arg0: Sc[S]): STen", "member" : "lamp.STen.isnan", "link" : "lamp\/STen.html#isnan[S](implicitevidence$198:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "neg", "tail" : "(arg0: Sc[S]): STen", "member" : "lamp.STen.neg", "link" : "lamp\/STen.html#neg[S](implicitevidence$197:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "ne", "tail" : "(other: Double)(arg0: Sc[S]): STen", "member" : "lamp.STen.ne", "link" : "lamp\/STen.html#ne[S](other:Double)(implicitevidence$196:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "ne", "tail" : "(other: STen)(arg0: Sc[S]): STen", "member" : "lamp.STen.ne", "link" : "lamp\/STen.html#ne[S](other:lamp.STen)(implicitevidence$195:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "le", "tail" : "(other: Double)(arg0: Sc[S]): STen", "member" : "lamp.STen.le", "link" : "lamp\/STen.html#le[S](other:Double)(implicitevidence$194:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "le", "tail" : "(other: STen)(arg0: Sc[S]): STen", "member" : "lamp.STen.le", "link" : "lamp\/STen.html#le[S](other:lamp.STen)(implicitevidence$193:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "ge", "tail" : "(other: Double)(arg0: Sc[S]): STen", "member" : "lamp.STen.ge", "link" : "lamp\/STen.html#ge[S](other:Double)(implicitevidence$192:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "ge", "tail" : "(other: STen)(arg0: Sc[S]): STen", "member" : "lamp.STen.ge", "link" : "lamp\/STen.html#ge[S](other:lamp.STen)(implicitevidence$191:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "lt", "tail" : "(other: Double)(arg0: Sc[S]): STen", "member" : "lamp.STen.lt", "link" : "lamp\/STen.html#lt[S](other:Double)(implicitevidence$190:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "lt", "tail" : "(other: STen)(arg0: Sc[S]): STen", "member" : "lamp.STen.lt", "link" : "lamp\/STen.html#lt[S](other:lamp.STen)(implicitevidence$189:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "gt", "tail" : "(other: Double)(arg0: Sc[S]): STen", "member" : "lamp.STen.gt", "link" : "lamp\/STen.html#gt[S](other:Double)(implicitevidence$188:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "gt", "tail" : "(other: STen)(arg0: Sc[S]): STen", "member" : "lamp.STen.gt", "link" : "lamp\/STen.html#gt[S](other:lamp.STen)(implicitevidence$187:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "equalDeep", "tail" : "(input2: STen): Boolean", "member" : "lamp.STen.equalDeep", "link" : "lamp\/STen.html#equalDeep(input2:lamp.STen):Boolean", "kind" : "def"}, {"label" : "choleskySolve", "tail" : "(choleskyFactor: STen, upper: Boolean)(arg0: Sc[S]): STen", "member" : "lamp.STen.choleskySolve", "link" : "lamp\/STen.html#choleskySolve[S](choleskyFactor:lamp.STen,upper:Boolean)(implicitevidence$186:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "choleskyInverse", "tail" : "(upper: Boolean)(arg0: Sc[S]): STen", "member" : "lamp.STen.choleskyInverse", "link" : "lamp\/STen.html#choleskyInverse[S](upper:Boolean)(implicitevidence$185:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "cholesky", "tail" : "(upper: Boolean)(arg0: Sc[S]): STen", "member" : "lamp.STen.cholesky", "link" : "lamp\/STen.html#cholesky[S](upper:Boolean)(implicitevidence$184:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "argsort", "tail" : "(dim: Int, descending: Boolean)(arg0: Sc[S]): STen", "member" : "lamp.STen.argsort", "link" : "lamp\/STen.html#argsort[S](dim:Int,descending:Boolean)(implicitevidence$183:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "min", "tail" : "(dim: Int, keepDim: Boolean)(arg0: Sc[S]): (STen, STen)", "member" : "lamp.STen.min", "link" : "lamp\/STen.html#min[S](dim:Int,keepDim:Boolean)(implicitevidence$182:lamp.Sc[S]):(lamp.STen,lamp.STen)", "kind" : "def"}, {"label" : "min", "tail" : "(other: STen)(arg0: Sc[S]): STen", "member" : "lamp.STen.min", "link" : "lamp\/STen.html#min[S](other:lamp.STen)(implicitevidence$181:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "min", "tail" : "(arg0: Sc[S]): STen", "member" : "lamp.STen.min", "link" : "lamp\/STen.html#min[S](implicitevidence$180:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "max", "tail" : "(dim: Int, keepDim: Boolean)(arg0: Sc[S]): (STen, STen)", "member" : "lamp.STen.max", "link" : "lamp\/STen.html#max[S](dim:Int,keepDim:Boolean)(implicitevidence$179:lamp.Sc[S]):(lamp.STen,lamp.STen)", "kind" : "def"}, {"label" : "max", "tail" : "(other: STen)(arg0: Sc[S]): STen", "member" : "lamp.STen.max", "link" : "lamp\/STen.html#max[S](other:lamp.STen)(implicitevidence$178:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "max", "tail" : "(arg0: Sc[S]): STen", "member" : "lamp.STen.max", "link" : "lamp\/STen.html#max[S](implicitevidence$177:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "mode", "tail" : "(dim: Int, keepDim: Boolean)(arg0: Sc[S]): (STen, STen)", "member" : "lamp.STen.mode", "link" : "lamp\/STen.html#mode[S](dim:Int,keepDim:Boolean)(implicitevidence$176:lamp.Sc[S]):(lamp.STen,lamp.STen)", "kind" : "def"}, {"label" : "median", "tail" : "(dim: Int, keepDim: Boolean)(arg0: Sc[S]): (STen, STen)", "member" : "lamp.STen.median", "link" : "lamp\/STen.html#median[S](dim:Int,keepDim:Boolean)(implicitevidence$175:lamp.Sc[S]):(lamp.STen,lamp.STen)", "kind" : "def"}, {"label" : "median", "tail" : "(arg0: Sc[S]): STen", "member" : "lamp.STen.median", "link" : "lamp\/STen.html#median[S](implicitevidence$174:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "std", "tail" : "(dim: Int, unbiased: Boolean, keepDim: Boolean)(arg0: Sc[S]): STen", "member" : "lamp.STen.std", "link" : "lamp\/STen.html#std[S](dim:Int,unbiased:Boolean,keepDim:Boolean)(implicitevidence$173:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "std", "tail" : "(dim: Seq[Int], unbiased: Boolean, keepDim: Boolean)(arg0: Sc[S]): STen", "member" : "lamp.STen.std", "link" : "lamp\/STen.html#std[S](dim:Seq[Int],unbiased:Boolean,keepDim:Boolean)(implicitevidence$172:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "std", "tail" : "(unbiased: Boolean)(arg0: Sc[S]): STen", "member" : "lamp.STen.std", "link" : "lamp\/STen.html#std[S](unbiased:Boolean)(implicitevidence$171:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "variance", "tail" : "(dim: Int, unbiased: Boolean, keepDim: Boolean)(arg0: Sc[S]): STen", "member" : "lamp.STen.variance", "link" : "lamp\/STen.html#variance[S](dim:Int,unbiased:Boolean,keepDim:Boolean)(implicitevidence$170:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "variance", "tail" : "(dim: Seq[Int], unbiased: Boolean, keepDim: Boolean)(arg0: Sc[S]): STen", "member" : "lamp.STen.variance", "link" : "lamp\/STen.html#variance[S](dim:Seq[Int],unbiased:Boolean,keepDim:Boolean)(implicitevidence$169:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "variance", "tail" : "(unbiased: Boolean)(arg0: Sc[S]): STen", "member" : "lamp.STen.variance", "link" : "lamp\/STen.html#variance[S](unbiased:Boolean)(implicitevidence$168:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "mean", "tail" : "(dim: Int, keepDim: Boolean)(arg0: Sc[S]): STen", "member" : "lamp.STen.mean", "link" : "lamp\/STen.html#mean[S](dim:Int,keepDim:Boolean)(implicitevidence$167:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "mean", "tail" : "(dim: Seq[Int], keepDim: Boolean)(arg0: Sc[S]): STen", "member" : "lamp.STen.mean", "link" : "lamp\/STen.html#mean[S](dim:Seq[Int],keepDim:Boolean)(implicitevidence$166:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "mean", "tail" : "(arg0: Sc[S]): STen", "member" : "lamp.STen.mean", "link" : "lamp\/STen.html#mean[S](implicitevidence$165:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "cross", "tail" : "(other: STen, dim: Int)(arg0: Sc[S]): STen", "member" : "lamp.STen.cross", "link" : "lamp\/STen.html#cross[S](other:lamp.STen,dim:Int)(implicitevidence$164:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "softplus", "tail" : "(beta: Double, threshold: Double)(arg0: Sc[S]): STen", "member" : "lamp.STen.softplus", "link" : "lamp\/STen.html#softplus[S](beta:Double,threshold:Double)(implicitevidence$163:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "logSoftMax", "tail" : "(dim: Int)(arg0: Sc[S]): STen", "member" : "lamp.STen.logSoftMax", "link" : "lamp\/STen.html#logSoftMax[S](dim:Int)(implicitevidence$162:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "norm2", "tail" : "(dim: Seq[Int], keepDim: Boolean)(arg0: Sc[S]): STen", "member" : "lamp.STen.norm2", "link" : "lamp\/STen.html#norm2[S](dim:Seq[Int],keepDim:Boolean)(implicitevidence$161:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "reshape", "tail" : "(dims: Long*)(arg0: Sc[S]): STen", "member" : "lamp.STen.reshape", "link" : "lamp\/STen.html#reshape[S](dims:Long*)(implicitevidence$160:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "view", "tail" : "(dims: Long*)(arg0: Sc[S]): STen", "member" : "lamp.STen.view", "link" : "lamp\/STen.html#view[S](dims:Long*)(implicitevidence$159:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "expand", "tail" : "(shape: List[Long])(scope: Scope): STen", "member" : "lamp.STen.expand", "link" : "lamp\/STen.html#expand(shape:List[Long])(implicitscope:lamp.Scope):lamp.STen", "kind" : "def"}, {"label" : "expandAs", "tail" : "(other: STen)(arg0: Sc[S]): STen", "member" : "lamp.STen.expandAs", "link" : "lamp\/STen.html#expandAs[S](other:lamp.STen)(implicitevidence$158:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "gather", "tail" : "(dim: Long, index: STen)(arg0: Sc[S]): STen", "member" : "lamp.STen.gather", "link" : "lamp\/STen.html#gather[S](dim:Long,index:lamp.STen)(implicitevidence$157:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "gather", "tail" : "(dim: Long, index: Tensor)(arg0: Sc[S]): STen", "member" : "lamp.STen.gather", "link" : "lamp\/STen.html#gather[S](dim:Long,index:aten.Tensor)(implicitevidence$156:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "indexFill", "tail" : "(dim: Long, index: Tensor, source: Double)(arg0: Sc[S]): STen", "member" : "lamp.STen.indexFill", "link" : "lamp\/STen.html#indexFill[S](dim:Long,index:aten.Tensor,source:Double)(implicitevidence$155:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "indexFill", "tail" : "(dim: Long, index: STen, source: Double)(arg0: Sc[S]): STen", "member" : "lamp.STen.indexFill", "link" : "lamp\/STen.html#indexFill[S](dim:Long,index:lamp.STen,source:Double)(implicitevidence$154:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "indexFill", "tail" : "(dim: Long, index: STen, source: STen)(arg0: Sc[S]): STen", "member" : "lamp.STen.indexFill", "link" : "lamp\/STen.html#indexFill[S](dim:Long,index:lamp.STen,source:lamp.STen)(implicitevidence$153:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "indexAdd", "tail" : "(dim: Long, index: Tensor, source: STen)(arg0: Sc[S]): STen", "member" : "lamp.STen.indexAdd", "link" : "lamp\/STen.html#indexAdd[S](dim:Long,index:aten.Tensor,source:lamp.STen)(implicitevidence$152:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "indexAdd", "tail" : "(dim: Long, index: STen, source: STen)(arg0: Sc[S]): STen", "member" : "lamp.STen.indexAdd", "link" : "lamp\/STen.html#indexAdd[S](dim:Long,index:lamp.STen,source:lamp.STen)(implicitevidence$151:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "scatterAdd", "tail" : "(dim: Long, index: STen, source: STen)(arg0: Sc[S]): STen", "member" : "lamp.STen.scatterAdd", "link" : "lamp\/STen.html#scatterAdd[S](dim:Long,index:lamp.STen,source:lamp.STen)(implicitevidence$150:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "scatter", "tail" : "(dim: Long, index: STen, source: Double)(arg0: Sc[S]): STen", "member" : "lamp.STen.scatter", "link" : "lamp\/STen.html#scatter[S](dim:Long,index:lamp.STen,source:Double)(implicitevidence$149:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "scatter", "tail" : "(dim: Long, index: STen, source: STen)(arg0: Sc[S]): STen", "member" : "lamp.STen.scatter", "link" : "lamp\/STen.html#scatter[S](dim:Long,index:lamp.STen,source:lamp.STen)(implicitevidence$148:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "fill_", "tail" : "(v: STen): Unit", "member" : "lamp.STen.fill_", "link" : "lamp\/STen.html#fill_(v:lamp.STen):Unit", "kind" : "def"}, {"label" : "zero_", "tail" : "(): Unit", "member" : "lamp.STen.zero_", "link" : "lamp\/STen.html#zero_():Unit", "kind" : "def"}, {"label" : "maskedScatter", "tail" : "(mask: STen, src: STen)(arg0: Sc[S]): STen", "member" : "lamp.STen.maskedScatter", "link" : "lamp\/STen.html#maskedScatter[S](mask:lamp.STen,src:lamp.STen)(implicitevidence$147:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "maskedFill", "tail" : "(mask: Tensor, fill: Double)(arg0: Sc[S]): STen", "member" : "lamp.STen.maskedFill", "link" : "lamp\/STen.html#maskedFill[S](mask:aten.Tensor,fill:Double)(implicitevidence$146:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "maskedFill", "tail" : "(mask: STen, fill: Double)(arg0: Sc[S]): STen", "member" : "lamp.STen.maskedFill", "link" : "lamp\/STen.html#maskedFill[S](mask:lamp.STen,fill:Double)(implicitevidence$145:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "maskedSelect", "tail" : "(mask: Tensor)(arg0: Sc[S]): STen", "member" : "lamp.STen.maskedSelect", "link" : "lamp\/STen.html#maskedSelect[S](mask:aten.Tensor)(implicitevidence$144:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "maskedSelect", "tail" : "(mask: STen)(arg0: Sc[S]): STen", "member" : "lamp.STen.maskedSelect", "link" : "lamp\/STen.html#maskedSelect[S](mask:lamp.STen)(implicitevidence$143:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "fill_", "tail" : "(v: Double): Unit", "member" : "lamp.STen.fill_", "link" : "lamp\/STen.html#fill_(v:Double):Unit", "kind" : "def"}, {"label" : "slice", "tail" : "(dim: Long, start: Long, end: Long, step: Long)(arg0: Sc[S]): STen", "member" : "lamp.STen.slice", "link" : "lamp\/STen.html#slice[S](dim:Long,start:Long,end:Long,step:Long)(implicitevidence$142:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "slice", "tail" : "(dim: Int, start: Long, end: Long, step: Long)(arg0: Sc[S]): STen", "member" : "lamp.STen.slice", "link" : "lamp\/STen.html#slice[S](dim:Int,start:Long,end:Long,step:Long)(implicitevidence$141:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "topk", "tail" : "(k: Int, dim: Int, largest: Boolean, sorted: Boolean)(arg0: Sc[S]): (STen, STen)", "member" : "lamp.STen.topk", "link" : "lamp\/STen.html#topk[S](k:Int,dim:Int,largest:Boolean,sorted:Boolean)(implicitevidence$140:lamp.Sc[S]):(lamp.STen,lamp.STen)", "kind" : "def"}, {"label" : "colSum", "tail" : "(arg0: Sc[S]): STen", "member" : "lamp.STen.colSum", "link" : "lamp\/STen.html#colSum[S](implicitevidence$139:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "rowSum", "tail" : "(arg0: Sc[S]): STen", "member" : "lamp.STen.rowSum", "link" : "lamp\/STen.html#rowSum[S](implicitevidence$138:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "sum", "tail" : "(dim: Int, keepDim: Boolean)(arg0: Sc[S]): STen", "member" : "lamp.STen.sum", "link" : "lamp\/STen.html#sum[S](dim:Int,keepDim:Boolean)(implicitevidence$137:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "sum", "tail" : "(dim: Seq[Int], keepDim: Boolean)(arg0: Sc[S]): STen", "member" : "lamp.STen.sum", "link" : "lamp\/STen.html#sum[S](dim:Seq[Int],keepDim:Boolean)(implicitevidence$136:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "sum", "tail" : "(arg0: Sc[S]): STen", "member" : "lamp.STen.sum", "link" : "lamp\/STen.html#sum[S](implicitevidence$135:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "pow_", "tail" : "(exponent: Double): Unit", "member" : "lamp.STen.pow_", "link" : "lamp\/STen.html#pow_(exponent:Double):Unit", "kind" : "def"}, {"label" : "pow", "tail" : "(exponent: STen)(arg0: Sc[S]): STen", "member" : "lamp.STen.pow", "link" : "lamp\/STen.html#pow[S](exponent:lamp.STen)(implicitevidence$134:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "pow", "tail" : "(exponent: Double)(arg0: Sc[S]): STen", "member" : "lamp.STen.pow", "link" : "lamp\/STen.html#pow[S](exponent:Double)(implicitevidence$133:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "remainder", "tail" : "(other: Double)(arg0: Sc[S]): STen", "member" : "lamp.STen.remainder", "link" : "lamp\/STen.html#remainder[S](other:Double)(implicitevidence$132:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "remainder", "tail" : "(other: STen)(arg0: Sc[S]): STen", "member" : "lamp.STen.remainder", "link" : "lamp\/STen.html#remainder[S](other:lamp.STen)(implicitevidence$131:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "trace", "tail" : "(arg0: Sc[S]): STen", "member" : "lamp.STen.trace", "link" : "lamp\/STen.html#trace[S](implicitevidence$130:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "det", "tail" : "(arg0: Sc[S]): STen", "member" : "lamp.STen.det", "link" : "lamp\/STen.html#det[S](implicitevidence$129:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "reciprocal_", "tail" : "(): Unit", "member" : "lamp.STen.reciprocal_", "link" : "lamp\/STen.html#reciprocal_():Unit", "kind" : "def"}, {"label" : "reciprocal", "tail" : "(arg0: Sc[S]): STen", "member" : "lamp.STen.reciprocal", "link" : "lamp\/STen.html#reciprocal[S](implicitevidence$128:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "floor_", "tail" : "(): Unit", "member" : "lamp.STen.floor_", "link" : "lamp\/STen.html#floor_():Unit", "kind" : "def"}, {"label" : "floor", "tail" : "(arg0: Sc[S]): STen", "member" : "lamp.STen.floor", "link" : "lamp\/STen.html#floor[S](implicitevidence$127:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "ceil_", "tail" : "(): Unit", "member" : "lamp.STen.ceil_", "link" : "lamp\/STen.html#ceil_():Unit", "kind" : "def"}, {"label" : "ceil", "tail" : "(arg0: Sc[S]): STen", "member" : "lamp.STen.ceil", "link" : "lamp\/STen.html#ceil[S](implicitevidence$126:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "abs_", "tail" : "(): Unit", "member" : "lamp.STen.abs_", "link" : "lamp\/STen.html#abs_():Unit", "kind" : "def"}, {"label" : "abs", "tail" : "(arg0: Sc[S]): STen", "member" : "lamp.STen.abs", "link" : "lamp\/STen.html#abs[S](implicitevidence$125:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "square_", "tail" : "(): Unit", "member" : "lamp.STen.square_", "link" : "lamp\/STen.html#square_():Unit", "kind" : "def"}, {"label" : "square", "tail" : "(arg0: Sc[S]): STen", "member" : "lamp.STen.square", "link" : "lamp\/STen.html#square[S](implicitevidence$124:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "sqrt_", "tail" : "(): Unit", "member" : "lamp.STen.sqrt_", "link" : "lamp\/STen.html#sqrt_():Unit", "kind" : "def"}, {"label" : "sqrt", "tail" : "(arg0: Sc[S]): STen", "member" : "lamp.STen.sqrt", "link" : "lamp\/STen.html#sqrt[S](implicitevidence$123:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "asin_", "tail" : "(): Unit", "member" : "lamp.STen.asin_", "link" : "lamp\/STen.html#asin_():Unit", "kind" : "def"}, {"label" : "asin", "tail" : "(arg0: Sc[S]): STen", "member" : "lamp.STen.asin", "link" : "lamp\/STen.html#asin[S](implicitevidence$122:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "acos_", "tail" : "(): Unit", "member" : "lamp.STen.acos_", "link" : "lamp\/STen.html#acos_():Unit", "kind" : "def"}, {"label" : "acos", "tail" : "(arg0: Sc[S]): STen", "member" : "lamp.STen.acos", "link" : "lamp\/STen.html#acos[S](implicitevidence$121:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "atan_", "tail" : "(): Unit", "member" : "lamp.STen.atan_", "link" : "lamp\/STen.html#atan_():Unit", "kind" : "def"}, {"label" : "atan", "tail" : "(arg0: Sc[S]): STen", "member" : "lamp.STen.atan", "link" : "lamp\/STen.html#atan[S](implicitevidence$120:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "tanh_", "tail" : "(): Unit", "member" : "lamp.STen.tanh_", "link" : "lamp\/STen.html#tanh_():Unit", "kind" : "def"}, {"label" : "tanh", "tail" : "(arg0: Sc[S]): STen", "member" : "lamp.STen.tanh", "link" : "lamp\/STen.html#tanh[S](implicitevidence$119:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "tan_", "tail" : "(): Unit", "member" : "lamp.STen.tan_", "link" : "lamp\/STen.html#tan_():Unit", "kind" : "def"}, {"label" : "tan", "tail" : "(arg0: Sc[S]): STen", "member" : "lamp.STen.tan", "link" : "lamp\/STen.html#tan[S](implicitevidence$118:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "cos_", "tail" : "(): Unit", "member" : "lamp.STen.cos_", "link" : "lamp\/STen.html#cos_():Unit", "kind" : "def"}, {"label" : "cos", "tail" : "(arg0: Sc[S]): STen", "member" : "lamp.STen.cos", "link" : "lamp\/STen.html#cos[S](implicitevidence$117:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "sin_", "tail" : "(): Unit", "member" : "lamp.STen.sin_", "link" : "lamp\/STen.html#sin_():Unit", "kind" : "def"}, {"label" : "sin", "tail" : "(arg0: Sc[S]): STen", "member" : "lamp.STen.sin", "link" : "lamp\/STen.html#sin[S](implicitevidence$116:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "log1p_", "tail" : "(): Unit", "member" : "lamp.STen.log1p_", "link" : "lamp\/STen.html#log1p_():Unit", "kind" : "def"}, {"label" : "log1p", "tail" : "(arg0: Sc[S]): STen", "member" : "lamp.STen.log1p", "link" : "lamp\/STen.html#log1p[S](implicitevidence$115:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "log_", "tail" : "(): Unit", "member" : "lamp.STen.log_", "link" : "lamp\/STen.html#log_():Unit", "kind" : "def"}, {"label" : "log", "tail" : "(arg0: Sc[S]): STen", "member" : "lamp.STen.log", "link" : "lamp\/STen.html#log[S](implicitevidence$114:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "exp_", "tail" : "(): Unit", "member" : "lamp.STen.exp_", "link" : "lamp\/STen.html#exp_():Unit", "kind" : "def"}, {"label" : "exp", "tail" : "(arg0: Sc[S]): STen", "member" : "lamp.STen.exp", "link" : "lamp\/STen.html#exp[S](implicitevidence$113:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "sign_", "tail" : "(): Unit", "member" : "lamp.STen.sign_", "link" : "lamp\/STen.html#sign_():Unit", "kind" : "def"}, {"label" : "sign", "tail" : "(arg0: Sc[S]): STen", "member" : "lamp.STen.sign", "link" : "lamp\/STen.html#sign[S](implicitevidence$112:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "sigmoid_", "tail" : "(): Unit", "member" : "lamp.STen.sigmoid_", "link" : "lamp\/STen.html#sigmoid_():Unit", "kind" : "def"}, {"label" : "sigmoid", "tail" : "(arg0: Sc[S]): STen", "member" : "lamp.STen.sigmoid", "link" : "lamp\/STen.html#sigmoid[S](implicitevidence$111:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "gelu", "tail" : "(arg0: Sc[S]): STen", "member" : "lamp.STen.gelu", "link" : "lamp\/STen.html#gelu[S](implicitevidence$110:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "leakyRelu_", "tail" : "(negativeSlope: Double): Unit", "member" : "lamp.STen.leakyRelu_", "link" : "lamp\/STen.html#leakyRelu_(negativeSlope:Double):Unit", "kind" : "def"}, {"label" : "leakyRelu", "tail" : "(negativeSlope: Double)(arg0: Sc[S]): STen", "member" : "lamp.STen.leakyRelu", "link" : "lamp\/STen.html#leakyRelu[S](negativeSlope:Double)(implicitevidence$109:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "relu_", "tail" : "(): Unit", "member" : "lamp.STen.relu_", "link" : "lamp\/STen.html#relu_():Unit", "kind" : "def"}, {"label" : "relu", "tail" : "(arg0: Sc[S]): STen", "member" : "lamp.STen.relu", "link" : "lamp\/STen.html#relu[S](implicitevidence$108:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "addcmulSelf", "tail" : "(tensor1: STen, tensor2: Tensor, alpha: Double): Unit", "member" : "lamp.STen.addcmulSelf", "link" : "lamp\/STen.html#addcmulSelf(tensor1:lamp.STen,tensor2:aten.Tensor,alpha:Double):Unit", "kind" : "def"}, {"label" : "addcmulSelf", "tail" : "(tensor1: STen, tensor2: STen, alpha: Double): Unit", "member" : "lamp.STen.addcmulSelf", "link" : "lamp\/STen.html#addcmulSelf(tensor1:lamp.STen,tensor2:lamp.STen,alpha:Double):Unit", "kind" : "def"}, {"label" : "addcmul", "tail" : "(tensor1: STen, tensor2: STen, alpha: Double)(arg0: Sc[S]): STen", "member" : "lamp.STen.addcmul", "link" : "lamp\/STen.html#addcmul[S](tensor1:lamp.STen,tensor2:lamp.STen,alpha:Double)(implicitevidence$107:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "baddbmm", "tail" : "(batch1: STen, batch2: STen, beta: Double, alpha: Double)(arg0: Sc[S]): STen", "member" : "lamp.STen.baddbmm", "link" : "lamp\/STen.html#baddbmm[S](batch1:lamp.STen,batch2:lamp.STen,beta:Double,alpha:Double)(implicitevidence$106:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "bmm", "tail" : "(other: STen)(arg0: Sc[S]): STen", "member" : "lamp.STen.bmm", "link" : "lamp\/STen.html#bmm[S](other:lamp.STen)(implicitevidence$105:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "dot", "tail" : "(other: STen)(arg0: Sc[S]): STen", "member" : "lamp.STen.dot", "link" : "lamp\/STen.html#dot[S](other:lamp.STen)(implicitevidence$104:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "matmul", "tail" : "(other: STen)(arg0: Sc[S]): STen", "member" : "lamp.STen.matmul", "link" : "lamp\/STen.html#matmul[S](other:lamp.STen)(implicitevidence$103:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "mm", "tail" : "(other: STen)(arg0: Sc[S]): STen", "member" : "lamp.STen.mm", "link" : "lamp\/STen.html#mm[S](other:lamp.STen)(implicitevidence$102:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "\/=", "tail" : "(other: STen): Unit", "member" : "lamp.STen.\/=", "link" : "lamp\/STen.html#\/=(other:lamp.STen):Unit", "kind" : "def"}, {"label" : "\/", "tail" : "(other: Double)(arg0: Sc[S]): STen", "member" : "lamp.STen.\/", "link" : "lamp\/STen.html#\/[S](other:Double)(implicitevidence$101:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "\/", "tail" : "(other: Tensor)(arg0: Sc[S]): STen", "member" : "lamp.STen.\/", "link" : "lamp\/STen.html#\/[S](other:aten.Tensor)(implicitevidence$100:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "\/", "tail" : "(other: STen)(arg0: Sc[S]): STen", "member" : "lamp.STen.\/", "link" : "lamp\/STen.html#\/[S](other:lamp.STen)(implicitevidence$99:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "*=", "tail" : "(other: Long): Unit", "member" : "lamp.STen.*=", "link" : "lamp\/STen.html#*=(other:Long):Unit", "kind" : "def"}, {"label" : "*=", "tail" : "(other: Double): Unit", "member" : "lamp.STen.*=", "link" : "lamp\/STen.html#*=(other:Double):Unit", "kind" : "def"}, {"label" : "*=", "tail" : "(other: STen): Unit", "member" : "lamp.STen.*=", "link" : "lamp\/STen.html#*=(other:lamp.STen):Unit", "kind" : "def"}, {"label" : "*", "tail" : "(other: Double)(arg0: Sc[S]): STen", "member" : "lamp.STen.*", "link" : "lamp\/STen.html#*[S](other:Double)(implicitevidence$98:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "*", "tail" : "(other: Tensor)(arg0: Sc[S]): STen", "member" : "lamp.STen.*", "link" : "lamp\/STen.html#*[S](other:aten.Tensor)(implicitevidence$97:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "multiply", "tail" : "(other: Long)(arg0: Sc[S]): STen", "member" : "lamp.STen.multiply", "link" : "lamp\/STen.html#multiply[S](other:Long)(implicitevidence$96:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "*", "tail" : "(other: STen)(arg0: Sc[S]): STen", "member" : "lamp.STen.*", "link" : "lamp\/STen.html#*[S](other:lamp.STen)(implicitevidence$95:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "sub", "tail" : "(other: Double, alpha: Double)(arg0: Sc[S]): STen", "member" : "lamp.STen.sub", "link" : "lamp\/STen.html#sub[S](other:Double,alpha:Double)(implicitevidence$94:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "sub", "tail" : "(other: STen, alpha: Double)(arg0: Sc[S]): STen", "member" : "lamp.STen.sub", "link" : "lamp\/STen.html#sub[S](other:lamp.STen,alpha:Double)(implicitevidence$93:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "-=", "tail" : "(other: STen): Unit", "member" : "lamp.STen.-=", "link" : "lamp\/STen.html#-=(other:lamp.STen):Unit", "kind" : "def"}, {"label" : "-", "tail" : "(other: STen)(arg0: Sc[S]): STen", "member" : "lamp.STen.-", "link" : "lamp\/STen.html#-[S](other:lamp.STen)(implicitevidence$92:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "addmm", "tail" : "(mat1: STen, mat2: STen, beta: Double, alpha: Double)(arg0: Sc[S]): STen", "member" : "lamp.STen.addmm", "link" : "lamp\/STen.html#addmm[S](mat1:lamp.STen,mat2:lamp.STen,beta:Double,alpha:Double)(implicitevidence$91:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "add", "tail" : "(other: Double, alpha: Double)(arg0: Sc[S]): STen", "member" : "lamp.STen.add", "link" : "lamp\/STen.html#add[S](other:Double,alpha:Double)(implicitevidence$90:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "add", "tail" : "(other: STen, alpha: Double)(arg0: Sc[S]): STen", "member" : "lamp.STen.add", "link" : "lamp\/STen.html#add[S](other:lamp.STen,alpha:Double)(implicitevidence$89:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "+", "tail" : "(other: Long)(arg0: Sc[S]): STen", "member" : "lamp.STen.+", "link" : "lamp\/STen.html#+[S](other:Long)(implicitevidence$88:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "+", "tail" : "(other: Double)(arg0: Sc[S]): STen", "member" : "lamp.STen.+", "link" : "lamp\/STen.html#+[S](other:Double)(implicitevidence$87:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "+=", "tail" : "(other: Long): Unit", "member" : "lamp.STen.+=", "link" : "lamp\/STen.html#+=(other:Long):Unit", "kind" : "def"}, {"label" : "+=", "tail" : "(other: Double): Unit", "member" : "lamp.STen.+=", "link" : "lamp\/STen.html#+=(other:Double):Unit", "kind" : "def"}, {"label" : "+=", "tail" : "(other: STen): Unit", "member" : "lamp.STen.+=", "link" : "lamp\/STen.html#+=(other:lamp.STen):Unit", "kind" : "def"}, {"label" : "add_l", "tail" : "(other: STen)(arg0: Sc[S]): STen", "member" : "lamp.STen.add_l", "link" : "lamp\/STen.html#add_l[S](other:lamp.STen)(implicitevidence$86:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "+", "tail" : "(other: STen)(arg0: Sc[S]): STen", "member" : "lamp.STen.+", "link" : "lamp\/STen.html#+[S](other:lamp.STen)(implicitevidence$85:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "castToLong", "tail" : "(arg0: Sc[S]): STen", "member" : "lamp.STen.castToLong", "link" : "lamp\/STen.html#castToLong[S](implicitevidence$84:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "castToDouble", "tail" : "(arg0: Sc[S]): STen", "member" : "lamp.STen.castToDouble", "link" : "lamp\/STen.html#castToDouble[S](implicitevidence$83:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "castToFloat", "tail" : "(arg0: Sc[S]): STen", "member" : "lamp.STen.castToFloat", "link" : "lamp\/STen.html#castToFloat[S](implicitevidence$82:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "castToByte", "tail" : "(arg0: Sc[S]): STen", "member" : "lamp.STen.castToByte", "link" : "lamp\/STen.html#castToByte[S](implicitevidence$81:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "castToChar", "tail" : "(arg0: Sc[S]): STen", "member" : "lamp.STen.castToChar", "link" : "lamp\/STen.html#castToChar[S](implicitevidence$80:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "uniqueConsecutive", "tail" : "(dim: Int, returnInverse: Boolean, returnCounts: Boolean)(arg0: Sc[S]): (STen, STen, STen)", "member" : "lamp.STen.uniqueConsecutive", "link" : "lamp\/STen.html#uniqueConsecutive[S](dim:Int,returnInverse:Boolean,returnCounts:Boolean)(implicitevidence$79:lamp.Sc[S]):(lamp.STen,lamp.STen,lamp.STen)", "kind" : "def"}, {"label" : "unique", "tail" : "(dim: Int, sorted: Boolean, returnInverse: Boolean, returnCounts: Boolean)(arg0: Sc[S]): (STen, STen, STen)", "member" : "lamp.STen.unique", "link" : "lamp\/STen.html#unique[S](dim:Int,sorted:Boolean,returnInverse:Boolean,returnCounts:Boolean)(implicitevidence$78:lamp.Sc[S]):(lamp.STen,lamp.STen,lamp.STen)", "kind" : "def"}, {"label" : "unique", "tail" : "(sorted: Boolean, returnInverse: Boolean, returnCounts: Boolean)(arg0: Sc[S]): (STen, STen, STen)", "member" : "lamp.STen.unique", "link" : "lamp\/STen.html#unique[S](sorted:Boolean,returnInverse:Boolean,returnCounts:Boolean)(implicitevidence$77:lamp.Sc[S]):(lamp.STen,lamp.STen,lamp.STen)", "kind" : "def"}, {"label" : "unique", "tail" : "(sorted: Boolean, returnInverse: Boolean)(arg0: Sc[S]): (STen, STen)", "member" : "lamp.STen.unique", "link" : "lamp\/STen.html#unique[S](sorted:Boolean,returnInverse:Boolean)(implicitevidence$76:lamp.Sc[S]):(lamp.STen,lamp.STen)", "kind" : "def"}, {"label" : "bincount", "tail" : "(weights: Option[STen], minLength: Int)(arg0: Sc[S]): STen", "member" : "lamp.STen.bincount", "link" : "lamp\/STen.html#bincount[S](weights:Option[lamp.STen],minLength:Int)(implicitevidence$75:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "cat", "tail" : "(other: STen, dim: Long)(arg0: Sc[S]): STen", "member" : "lamp.STen.cat", "link" : "lamp\/STen.html#cat[S](other:lamp.STen,dim:Long)(implicitevidence$74:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "equ", "tail" : "(other: Long)(arg0: Sc[S]): STen", "member" : "lamp.STen.equ", "link" : "lamp\/STen.html#equ[S](other:Long)(implicitevidence$73:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "equ", "tail" : "(other: Double)(arg0: Sc[S]): STen", "member" : "lamp.STen.equ", "link" : "lamp\/STen.html#equ[S](other:Double)(implicitevidence$72:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "equ", "tail" : "(other: STen)(arg0: Sc[S]): STen", "member" : "lamp.STen.equ", "link" : "lamp\/STen.html#equ[S](other:lamp.STen)(implicitevidence$71:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "maskFill", "tail" : "(mask: STen, fill: Double)(arg0: Sc[S]): STen", "member" : "lamp.STen.maskFill", "link" : "lamp\/STen.html#maskFill[S](mask:lamp.STen,fill:Double)(implicitevidence$70:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "argmin", "tail" : "(dim: Long, keepDim: Boolean)(arg0: Sc[S]): STen", "member" : "lamp.STen.argmin", "link" : "lamp\/STen.html#argmin[S](dim:Long,keepDim:Boolean)(implicitevidence$69:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "argmax", "tail" : "(dim: Long, keepDim: Boolean)(arg0: Sc[S]): STen", "member" : "lamp.STen.argmax", "link" : "lamp\/STen.html#argmax[S](dim:Long,keepDim:Boolean)(implicitevidence$68:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "indexSelect", "tail" : "(dim: Long, index: Tensor)(arg0: Sc[S]): STen", "member" : "lamp.STen.indexSelect", "link" : "lamp\/STen.html#indexSelect[S](dim:Long,index:aten.Tensor)(implicitevidence$67:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "indexSelect", "tail" : "(dim: Long, index: STen)(arg0: Sc[S]): STen", "member" : "lamp.STen.indexSelect", "link" : "lamp\/STen.html#indexSelect[S](dim:Long,index:lamp.STen)(implicitevidence$66:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "flatten", "tail" : "(startDim: Long, endDim: Long)(arg0: Sc[S]): STen", "member" : "lamp.STen.flatten", "link" : "lamp\/STen.html#flatten[S](startDim:Long,endDim:Long)(implicitevidence$65:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "select", "tail" : "(dim: Long, index: Long)(arg0: Sc[S]): STen", "member" : "lamp.STen.select", "link" : "lamp\/STen.html#select[S](dim:Long,index:Long)(implicitevidence$64:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "transpose", "tail" : "(dim1: Int, dim2: Int)(arg0: Sc[S]): STen", "member" : "lamp.STen.transpose", "link" : "lamp\/STen.html#transpose[S](dim1:Int,dim2:Int)(implicitevidence$63:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "t", "tail" : "(arg0: Sc[S]): STen", "member" : "lamp.STen.t", "link" : "lamp\/STen.html#t[S](implicitevidence$62:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "unbroadcast", "tail" : "(sizes: Seq[Long])(arg0: Sc[S]): STen", "member" : "lamp.STen.unbroadcast", "link" : "lamp\/STen.html#unbroadcast[S](sizes:Seq[Long])(implicitevidence$61:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "lamp.STen.toString", "link" : "lamp\/STen.html#toString():String", "kind" : "def"}, {"label" : "copyFrom", "tail" : "(source: STen, nonBlocking: Boolean): Unit", "member" : "lamp.STen.copyFrom", "link" : "lamp\/STen.html#copyFrom(source:lamp.STen,nonBlocking:Boolean):Unit", "kind" : "def"}, {"label" : "copyFrom", "tail" : "(source: STen): Unit", "member" : "lamp.STen.copyFrom", "link" : "lamp\/STen.html#copyFrom(source:lamp.STen):Unit", "kind" : "def"}, {"label" : "copyFrom", "tail" : "(source: Tensor, nonBlocking: Boolean): Unit", "member" : "lamp.STen.copyFrom", "link" : "lamp\/STen.html#copyFrom(source:aten.Tensor,nonBlocking:Boolean):Unit", "kind" : "def"}, {"label" : "copyTo", "tail" : "(options: STenOptions)(arg0: Sc[S]): STen", "member" : "lamp.STen.copyTo", "link" : "lamp\/STen.html#copyTo[S](options:lamp.STenOptions)(implicitevidence$60:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "cloneTensor", "tail" : "(arg0: Sc[S]): STen", "member" : "lamp.STen.cloneTensor", "link" : "lamp\/STen.html#cloneTensor[S](implicitevidence$59:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "copyToDevice", "tail" : "(device: Device)(scope: Scope): STen", "member" : "lamp.STen.copyToDevice", "link" : "lamp\/STen.html#copyToDevice(device:lamp.Device)(implicitscope:lamp.Scope):lamp.STen", "kind" : "def"}, {"label" : "scalarTypeByte", "tail" : "(): Byte", "member" : "lamp.STen.scalarTypeByte", "link" : "lamp\/STen.html#scalarTypeByte:Byte", "kind" : "def"}, {"label" : "device", "tail" : "(): Product with Device with Serializable", "member" : "lamp.STen.device", "link" : "lamp\/STen.html#device:Productwithlamp.Devicewithjava.io.Serializable", "kind" : "def"}, {"label" : "deviceIndex", "tail" : "(): Int", "member" : "lamp.STen.deviceIndex", "link" : "lamp\/STen.html#deviceIndex:Int", "kind" : "def"}, {"label" : "isSparse", "tail" : "(): Boolean", "member" : "lamp.STen.isSparse", "link" : "lamp\/STen.html#isSparse:Boolean", "kind" : "def"}, {"label" : "isCuda", "tail" : "(): Boolean", "member" : "lamp.STen.isCuda", "link" : "lamp\/STen.html#isCuda:Boolean", "kind" : "def"}, {"label" : "isCPU", "tail" : "(): Boolean", "member" : "lamp.STen.isCPU", "link" : "lamp\/STen.html#isCPU:Boolean", "kind" : "def"}, {"label" : "isLong", "tail" : "(): Boolean", "member" : "lamp.STen.isLong", "link" : "lamp\/STen.html#isLong:Boolean", "kind" : "def"}, {"label" : "isFloat", "tail" : "(): Boolean", "member" : "lamp.STen.isFloat", "link" : "lamp\/STen.html#isFloat:Boolean", "kind" : "def"}, {"label" : "isDouble", "tail" : "(): Boolean", "member" : "lamp.STen.isDouble", "link" : "lamp\/STen.html#isDouble:Boolean", "kind" : "def"}, {"label" : "values", "tail" : "(arg0: Sc[S]): STen", "member" : "lamp.STen.values", "link" : "lamp\/STen.html#values[S](implicitevidence$58:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "indices", "tail" : "(arg0: Sc[S]): STen", "member" : "lamp.STen.indices", "link" : "lamp\/STen.html#indices[S](implicitevidence$57:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "coalesce", "tail" : "(arg0: Sc[S]): STen", "member" : "lamp.STen.coalesce", "link" : "lamp\/STen.html#coalesce[S](implicitevidence$56:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "options", "tail" : "(arg0: Sc[S]): STenOptions", "member" : "lamp.STen.options", "link" : "lamp\/STen.html#options[S](implicitevidence$55:lamp.Sc[S]):lamp.STenOptions", "kind" : "def"}, {"label" : "sizes", "tail" : "(): List[Long]", "member" : "lamp.STen.sizes", "link" : "lamp\/STen.html#sizes:List[Long]", "kind" : "def"}, {"label" : "shape", "tail" : "(): List[Long]", "member" : "lamp.STen.shape", "link" : "lamp\/STen.html#shape:List[Long]", "kind" : "def"}, {"label" : "toLongVec", "tail" : "(): Vec[Long]", "member" : "lamp.STen.toLongVec", "link" : "lamp\/STen.html#toLongVec:org.saddle.Vec[Long]", "kind" : "def"}, {"label" : "toFloatVec", "tail" : "(): Vec[Float]", "member" : "lamp.STen.toFloatVec", "link" : "lamp\/STen.html#toFloatVec:org.saddle.Vec[Float]", "kind" : "def"}, {"label" : "toVec", "tail" : "(): Vec[Double]", "member" : "lamp.STen.toVec", "link" : "lamp\/STen.html#toVec:org.saddle.Vec[Double]", "kind" : "def"}, {"label" : "toLongMat", "tail" : "(): Mat[Long]", "member" : "lamp.STen.toLongMat", "link" : "lamp\/STen.html#toLongMat:org.saddle.Mat[Long]", "kind" : "def"}, {"label" : "toFloatMat", "tail" : "(): Mat[Float]", "member" : "lamp.STen.toFloatMat", "link" : "lamp\/STen.html#toFloatMat:org.saddle.Mat[Float]", "kind" : "def"}, {"label" : "toMat", "tail" : "(): Mat[Double]", "member" : "lamp.STen.toMat", "link" : "lamp\/STen.html#toMat:org.saddle.Mat[Double]", "kind" : "def"}, {"label" : "numBytes", "tail" : "(): Long", "member" : "lamp.STen.numBytes", "link" : "lamp\/STen.html#numBytes:Long", "kind" : "def"}, {"label" : "elementSize", "tail" : "(): Long", "member" : "lamp.STen.elementSize", "link" : "lamp\/STen.html#elementSize:Long", "kind" : "def"}, {"label" : "numel", "tail" : "(): Long", "member" : "lamp.STen.numel", "link" : "lamp\/STen.html#numel:Long", "kind" : "def"}, {"label" : "value", "tail" : ": Tensor", "member" : "lamp.STen.value", "link" : "lamp\/STen.html#value:aten.Tensor", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/STen.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/STen.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/STen.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/STen.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/STen.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/STen.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/STen.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/STen.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/STen.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/STen.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/STen.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/STen.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/STen.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/STen.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/STen.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/STen.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/STen.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/STen.html", "kind" : "case class"}, {"name" : "lamp.STenOptions", "shortDescription" : "", "object" : "lamp\/STenOptions$.html", "members_object" : [{"label" : "owned", "tail" : "(value: TensorOptions)(scope: Scope): STenOptions", "member" : "lamp.STenOptions.owned", "link" : "lamp\/STenOptions$.html#owned(value:aten.TensorOptions)(implicitscope:lamp.Scope):lamp.STenOptions", "kind" : "def"}, {"label" : "OwnedSyntaxOp", "tail" : "", "member" : "lamp.STenOptions.OwnedSyntaxOp", "link" : "lamp\/STenOptions$.html#OwnedSyntaxOpextendsAnyRef", "kind" : "implicit class"}, {"label" : "fromScalarType", "tail" : "(b: Byte)(arg0: Sc[S]): STenOptions", "member" : "lamp.STenOptions.fromScalarType", "link" : "lamp\/STenOptions$.html#fromScalarType[S](b:Byte)(implicitevidence$53:lamp.Sc[S]):lamp.STenOptions", "kind" : "def"}, {"label" : "l", "tail" : "(): STenOptions", "member" : "lamp.STenOptions.l", "link" : "lamp\/STenOptions$.html#l:lamp.STenOptions", "kind" : "def"}, {"label" : "f", "tail" : "(): STenOptions", "member" : "lamp.STenOptions.f", "link" : "lamp\/STenOptions$.html#f:lamp.STenOptions", "kind" : "def"}, {"label" : "d", "tail" : "(): STenOptions", "member" : "lamp.STenOptions.d", "link" : "lamp\/STenOptions$.html#d:lamp.STenOptions", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/STenOptions$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/STenOptions$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/STenOptions$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/STenOptions$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/STenOptions$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/STenOptions$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/STenOptions$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/STenOptions$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/STenOptions$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/STenOptions$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/STenOptions$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/STenOptions$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/STenOptions$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/STenOptions$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/STenOptions$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/STenOptions$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/STenOptions$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/STenOptions$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/STenOptions$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "scalarTypeByte", "tail" : "(): Byte", "member" : "lamp.STenOptions.scalarTypeByte", "link" : "lamp\/STenOptions.html#scalarTypeByte:Byte", "kind" : "def"}, {"label" : "deviceIndex", "tail" : "(): Int", "member" : "lamp.STenOptions.deviceIndex", "link" : "lamp\/STenOptions.html#deviceIndex:Int", "kind" : "def"}, {"label" : "isSparse", "tail" : "(): Boolean", "member" : "lamp.STenOptions.isSparse", "link" : "lamp\/STenOptions.html#isSparse:Boolean", "kind" : "def"}, {"label" : "isCuda", "tail" : "(): Boolean", "member" : "lamp.STenOptions.isCuda", "link" : "lamp\/STenOptions.html#isCuda:Boolean", "kind" : "def"}, {"label" : "isCPU", "tail" : "(): Boolean", "member" : "lamp.STenOptions.isCPU", "link" : "lamp\/STenOptions.html#isCPU:Boolean", "kind" : "def"}, {"label" : "isLong", "tail" : "(): Boolean", "member" : "lamp.STenOptions.isLong", "link" : "lamp\/STenOptions.html#isLong:Boolean", "kind" : "def"}, {"label" : "isFloat", "tail" : "(): Boolean", "member" : "lamp.STenOptions.isFloat", "link" : "lamp\/STenOptions.html#isFloat:Boolean", "kind" : "def"}, {"label" : "isDouble", "tail" : "(): Boolean", "member" : "lamp.STenOptions.isDouble", "link" : "lamp\/STenOptions.html#isDouble:Boolean", "kind" : "def"}, {"label" : "cuda", "tail" : "(arg0: Sc[S]): STenOptions", "member" : "lamp.STenOptions.cuda", "link" : "lamp\/STenOptions.html#cuda[S](implicitevidence$52:lamp.Sc[S]):lamp.STenOptions", "kind" : "def"}, {"label" : "cudaIndex", "tail" : "(index: Short)(arg0: Sc[S]): STenOptions", "member" : "lamp.STenOptions.cudaIndex", "link" : "lamp\/STenOptions.html#cudaIndex[S](index:Short)(implicitevidence$51:lamp.Sc[S]):lamp.STenOptions", "kind" : "def"}, {"label" : "cpu", "tail" : "(arg0: Sc[S]): STenOptions", "member" : "lamp.STenOptions.cpu", "link" : "lamp\/STenOptions.html#cpu[S](implicitevidence$50:lamp.Sc[S]):lamp.STenOptions", "kind" : "def"}, {"label" : "toFloat", "tail" : "(arg0: Sc[S]): STenOptions", "member" : "lamp.STenOptions.toFloat", "link" : "lamp\/STenOptions.html#toFloat[S](implicitevidence$49:lamp.Sc[S]):lamp.STenOptions", "kind" : "def"}, {"label" : "toDouble", "tail" : "(arg0: Sc[S]): STenOptions", "member" : "lamp.STenOptions.toDouble", "link" : "lamp\/STenOptions.html#toDouble[S](implicitevidence$48:lamp.Sc[S]):lamp.STenOptions", "kind" : "def"}, {"label" : "toLong", "tail" : "(arg0: Sc[S]): STenOptions", "member" : "lamp.STenOptions.toLong", "link" : "lamp\/STenOptions.html#toLong[S](implicitevidence$47:lamp.Sc[S]):lamp.STenOptions", "kind" : "def"}, {"member" : "lamp.STenOptions#<init>", "error" : "unsupported entity"}, {"label" : "value", "tail" : ": TensorOptions", "member" : "lamp.STenOptions.value", "link" : "lamp\/STenOptions.html#value:aten.TensorOptions", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/STenOptions.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/STenOptions.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/STenOptions.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/STenOptions.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/STenOptions.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/STenOptions.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/STenOptions.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/STenOptions.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/STenOptions.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/STenOptions.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/STenOptions.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/STenOptions.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/STenOptions.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/STenOptions.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/STenOptions.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/STenOptions.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/STenOptions.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/STenOptions.html", "kind" : "case class"}, {"name" : "lamp.TensorHelpers", "shortDescription" : "", "object" : "lamp\/TensorHelpers$.html", "members_object" : [{"label" : "precision", "tail" : "(t: Tensor): Option[Product with FloatingPointPrecision with Serializable]", "member" : "lamp.TensorHelpers.precision", "link" : "lamp\/TensorHelpers$.html#precision(t:aten.Tensor):Option[Productwithlamp.FloatingPointPrecisionwithjava.io.Serializable]", "kind" : "def"}, {"label" : "device", "tail" : "(t: Tensor): Product with Device with Serializable", "member" : "lamp.TensorHelpers.device", "link" : "lamp\/TensorHelpers$.html#device(t:aten.Tensor):Productwithlamp.Devicewithjava.io.Serializable", "kind" : "def"}, {"label" : "fromLongArray", "tail" : "(arr: Array[Long], dim: Seq[Long], device: Device): Tensor", "member" : "lamp.TensorHelpers.fromLongArray", "link" : "lamp\/TensorHelpers$.html#fromLongArray(arr:Array[Long],dim:Seq[Long],device:lamp.Device):aten.Tensor", "kind" : "def"}, {"label" : "fromFloatArray", "tail" : "(arr: Array[Float], dim: Seq[Long], device: Device): Tensor", "member" : "lamp.TensorHelpers.fromFloatArray", "link" : "lamp\/TensorHelpers$.html#fromFloatArray(arr:Array[Float],dim:Seq[Long],device:lamp.Device):aten.Tensor", "kind" : "def"}, {"label" : "fromDoubleArray", "tail" : "(arr: Array[Double], dim: Seq[Long], device: Device, precision: FloatingPointPrecision): Tensor", "member" : "lamp.TensorHelpers.fromDoubleArray", "link" : "lamp\/TensorHelpers$.html#fromDoubleArray(arr:Array[Double],dim:Seq[Long],device:lamp.Device,precision:lamp.FloatingPointPrecision):aten.Tensor", "kind" : "def"}, {"label" : "fromVec", "tail" : "(m: Vec[Double], device: Device, precision: FloatingPointPrecision): Tensor", "member" : "lamp.TensorHelpers.fromVec", "link" : "lamp\/TensorHelpers$.html#fromVec(m:org.saddle.Vec[Double],device:lamp.Device,precision:lamp.FloatingPointPrecision):aten.Tensor", "kind" : "def"}, {"label" : "fromVec", "tail" : "(m: Vec[Double], cuda: Boolean): Tensor", "member" : "lamp.TensorHelpers.fromVec", "link" : "lamp\/TensorHelpers$.html#fromVec(m:org.saddle.Vec[Double],cuda:Boolean):aten.Tensor", "kind" : "def"}, {"label" : "fromLongVec", "tail" : "(m: Vec[Long], device: Device): Tensor", "member" : "lamp.TensorHelpers.fromLongVec", "link" : "lamp\/TensorHelpers$.html#fromLongVec(m:org.saddle.Vec[Long],device:lamp.Device):aten.Tensor", "kind" : "def"}, {"label" : "fromLongVec", "tail" : "(m: Vec[Long], cuda: Boolean): Tensor", "member" : "lamp.TensorHelpers.fromLongVec", "link" : "lamp\/TensorHelpers$.html#fromLongVec(m:org.saddle.Vec[Long],cuda:Boolean):aten.Tensor", "kind" : "def"}, {"label" : "fromLongMat", "tail" : "(m: Mat[Long], device: Device): Tensor", "member" : "lamp.TensorHelpers.fromLongMat", "link" : "lamp\/TensorHelpers$.html#fromLongMat(m:org.saddle.Mat[Long],device:lamp.Device):aten.Tensor", "kind" : "def"}, {"label" : "fromLongMat", "tail" : "(m: Mat[Long], cuda: Boolean): Tensor", "member" : "lamp.TensorHelpers.fromLongMat", "link" : "lamp\/TensorHelpers$.html#fromLongMat(m:org.saddle.Mat[Long],cuda:Boolean):aten.Tensor", "kind" : "def"}, {"label" : "fromMat", "tail" : "(m: Mat[Double], device: Device, precision: FloatingPointPrecision): Tensor", "member" : "lamp.TensorHelpers.fromMat", "link" : "lamp\/TensorHelpers$.html#fromMat(m:org.saddle.Mat[Double],device:lamp.Device,precision:lamp.FloatingPointPrecision):aten.Tensor", "kind" : "def"}, {"label" : "fromFloatMat", "tail" : "(m: Mat[Float], device: Device): Tensor", "member" : "lamp.TensorHelpers.fromFloatMat", "link" : "lamp\/TensorHelpers$.html#fromFloatMat(m:org.saddle.Mat[Float],device:lamp.Device):aten.Tensor", "kind" : "def"}, {"label" : "fromMat", "tail" : "(m: Mat[Double], cuda: Boolean): Tensor", "member" : "lamp.TensorHelpers.fromMat", "link" : "lamp\/TensorHelpers$.html#fromMat(m:org.saddle.Mat[Double],cuda:Boolean):aten.Tensor", "kind" : "def"}, {"label" : "fromMatList", "tail" : "(m: Seq[Mat[Double]], device: Device, precision: FloatingPointPrecision): Tensor", "member" : "lamp.TensorHelpers.fromMatList", "link" : "lamp\/TensorHelpers$.html#fromMatList(m:Seq[org.saddle.Mat[Double]],device:lamp.Device,precision:lamp.FloatingPointPrecision):aten.Tensor", "kind" : "def"}, {"label" : "fromMatList", "tail" : "(m: Seq[Mat[Double]], cuda: Boolean): Tensor", "member" : "lamp.TensorHelpers.fromMatList", "link" : "lamp\/TensorHelpers$.html#fromMatList(m:Seq[org.saddle.Mat[Double]],cuda:Boolean):aten.Tensor", "kind" : "def"}, {"label" : "toLongMat", "tail" : "(t0: Tensor): Mat[Long]", "member" : "lamp.TensorHelpers.toLongMat", "link" : "lamp\/TensorHelpers$.html#toLongMat(t0:aten.Tensor):org.saddle.Mat[Long]", "kind" : "def"}, {"label" : "toFloatMat", "tail" : "(t0: Tensor): Mat[Float]", "member" : "lamp.TensorHelpers.toFloatMat", "link" : "lamp\/TensorHelpers$.html#toFloatMat(t0:aten.Tensor):org.saddle.Mat[Float]", "kind" : "def"}, {"label" : "toFloatVec", "tail" : "(t0: Tensor): Vec[Float]", "member" : "lamp.TensorHelpers.toFloatVec", "link" : "lamp\/TensorHelpers$.html#toFloatVec(t0:aten.Tensor):org.saddle.Vec[Float]", "kind" : "def"}, {"label" : "toLongVec", "tail" : "(t0: Tensor): Vec[Long]", "member" : "lamp.TensorHelpers.toLongVec", "link" : "lamp\/TensorHelpers$.html#toLongVec(t0:aten.Tensor):org.saddle.Vec[Long]", "kind" : "def"}, {"label" : "toVec", "tail" : "(t0: Tensor): Vec[Double]", "member" : "lamp.TensorHelpers.toVec", "link" : "lamp\/TensorHelpers$.html#toVec(t0:aten.Tensor):org.saddle.Vec[Double]", "kind" : "def"}, {"label" : "toMat", "tail" : "(t0: Tensor): Mat[Double]", "member" : "lamp.TensorHelpers.toMat", "link" : "lamp\/TensorHelpers$.html#toMat(t0:aten.Tensor):org.saddle.Mat[Double]", "kind" : "def"}, {"label" : "unbroadcast", "tail" : "(p: Tensor, desiredShape: List[Long]): Option[Tensor]", "member" : "lamp.TensorHelpers.unbroadcast", "link" : "lamp\/TensorHelpers$.html#unbroadcast(p:aten.Tensor,desiredShape:List[Long]):Option[aten.Tensor]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/TensorHelpers$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/TensorHelpers$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/TensorHelpers$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/TensorHelpers$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/TensorHelpers$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/TensorHelpers$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/TensorHelpers$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/TensorHelpers$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/TensorHelpers$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/TensorHelpers$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/TensorHelpers$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/TensorHelpers$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/TensorHelpers$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/TensorHelpers$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/TensorHelpers$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/TensorHelpers$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/TensorHelpers$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/TensorHelpers$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/TensorHelpers$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "lamp.example" : [], "lamp.nn" : [{"name" : "lamp.nn.AdamW", "shortDescription" : "", "object" : "lamp\/nn\/AdamW$.html", "members_object" : [{"label" : "factory", "tail" : "(weightDecay: OptimizerHyperparameter, learningRate: OptimizerHyperparameter, beta1: OptimizerHyperparameter, beta2: OptimizerHyperparameter, eps: Double, clip: Option[Double], debias: Boolean): (Seq[(STen, PTag)]) => AdamW", "member" : "lamp.nn.AdamW.factory", "link" : "lamp\/nn\/AdamW$.html#factory(weightDecay:lamp.nn.OptimizerHyperparameter,learningRate:lamp.nn.OptimizerHyperparameter,beta1:lamp.nn.OptimizerHyperparameter,beta2:lamp.nn.OptimizerHyperparameter,eps:Double,clip:Option[Double],debias:Boolean):Seq[(lamp.STen,lamp.nn.PTag)]=>lamp.nn.AdamW", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/AdamW$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/AdamW$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/AdamW$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/AdamW$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/AdamW$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/AdamW$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/AdamW$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/AdamW$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/AdamW$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/AdamW$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/AdamW$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/AdamW$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/AdamW$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/AdamW$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/AdamW$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/AdamW$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/AdamW$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/AdamW$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/AdamW$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "step", "tail" : "(gradients: Seq[Option[STen]], scheduleFactor: Double): Unit", "member" : "lamp.nn.AdamW.step", "link" : "lamp\/nn\/AdamW.html#step(gradients:Seq[Option[lamp.STen]],scheduleFactor:Double):Unit", "kind" : "def"}, {"label" : "release", "tail" : "(): Unit", "member" : "lamp.nn.AdamW.release", "link" : "lamp\/nn\/AdamW.html#release():Unit", "kind" : "def"}, {"label" : "state", "tail" : "(): List[STen]", "member" : "lamp.nn.AdamW.state", "link" : "lamp\/nn\/AdamW.html#state:List[lamp.STen]", "kind" : "def"}, {"label" : "stepCountSTen", "tail" : ": STen", "member" : "lamp.nn.AdamW.stepCountSTen", "link" : "lamp\/nn\/AdamW.html#stepCountSTen:lamp.STen", "kind" : "val"}, {"label" : "stepCount", "tail" : ": Long", "member" : "lamp.nn.AdamW.stepCount", "link" : "lamp\/nn\/AdamW.html#stepCount:Long", "kind" : "var"}, {"label" : "load", "tail" : "(tensors: Seq[STen]): Unit", "member" : "lamp.nn.AdamW.load", "link" : "lamp\/nn\/AdamW.html#load(tensors:Seq[lamp.STen]):Unit", "kind" : "def"}, {"label" : "vt", "tail" : ": List[STen]", "member" : "lamp.nn.AdamW.vt", "link" : "lamp\/nn\/AdamW.html#vt:List[lamp.STen]", "kind" : "val"}, {"label" : "mt", "tail" : ": List[STen]", "member" : "lamp.nn.AdamW.mt", "link" : "lamp\/nn\/AdamW.html#mt:List[lamp.STen]", "kind" : "val"}, {"label" : "scope", "tail" : ": Scope", "member" : "lamp.nn.AdamW.scope", "link" : "lamp\/nn\/AdamW.html#scope:lamp.Scope", "kind" : "val"}, {"member" : "lamp.nn.AdamW#<init>", "error" : "unsupported entity"}, {"label" : "debias", "tail" : ": Boolean", "member" : "lamp.nn.AdamW.debias", "link" : "lamp\/nn\/AdamW.html#debias:Boolean", "kind" : "val"}, {"label" : "clip", "tail" : ": Option[Double]", "member" : "lamp.nn.AdamW.clip", "link" : "lamp\/nn\/AdamW.html#clip:Option[Double]", "kind" : "val"}, {"label" : "eps", "tail" : ": Double", "member" : "lamp.nn.AdamW.eps", "link" : "lamp\/nn\/AdamW.html#eps:Double", "kind" : "val"}, {"label" : "beta2", "tail" : ": OptimizerHyperparameter", "member" : "lamp.nn.AdamW.beta2", "link" : "lamp\/nn\/AdamW.html#beta2:lamp.nn.OptimizerHyperparameter", "kind" : "val"}, {"label" : "beta1", "tail" : ": OptimizerHyperparameter", "member" : "lamp.nn.AdamW.beta1", "link" : "lamp\/nn\/AdamW.html#beta1:lamp.nn.OptimizerHyperparameter", "kind" : "val"}, {"label" : "learningRate", "tail" : ": OptimizerHyperparameter", "member" : "lamp.nn.AdamW.learningRate", "link" : "lamp\/nn\/AdamW.html#learningRate:lamp.nn.OptimizerHyperparameter", "kind" : "val"}, {"label" : "weightDecay", "tail" : ": OptimizerHyperparameter", "member" : "lamp.nn.AdamW.weightDecay", "link" : "lamp\/nn\/AdamW.html#weightDecay:lamp.nn.OptimizerHyperparameter", "kind" : "val"}, {"label" : "parameters", "tail" : ": Seq[(STen, PTag)]", "member" : "lamp.nn.AdamW.parameters", "link" : "lamp\/nn\/AdamW.html#parameters:Seq[(lamp.STen,lamp.nn.PTag)]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/nn\/AdamW.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/AdamW.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/AdamW.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/AdamW.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/AdamW.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/AdamW.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/AdamW.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/AdamW.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/AdamW.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/AdamW.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/AdamW.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/AdamW.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/AdamW.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/AdamW.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/AdamW.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/AdamW.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/AdamW.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/nn\/AdamW.html", "kind" : "case class"}, {"name" : "lamp.nn.AdversarialTraining", "shortDescription" : "", "members_case class" : [{"label" : "apply", "tail" : "(samples: Variable, target: STen, module: M with Module, lossFunction: LossFunction, computeGradients: Boolean, zeroGradBeforeComputingGradients: Boolean)(scope: Scope): (Variable, Long, Option[Seq[Option[STen]]])", "member" : "lamp.nn.AdversarialTraining.apply", "link" : "lamp\/nn\/AdversarialTraining.html#apply[M<:lamp.nn.Module](samples:lamp.autograd.Variable,target:lamp.STen,module:Mwithlamp.nn.Module,lossFunction:lamp.nn.LossFunction,computeGradients:Boolean,zeroGradBeforeComputingGradients:Boolean)(implicitscope:lamp.Scope):(lamp.autograd.Variable,Long,Option[Seq[Option[lamp.STen]]])", "kind" : "def"}, {"member" : "lamp.nn.AdversarialTraining#<init>", "error" : "unsupported entity"}, {"label" : "eps", "tail" : ": Double", "member" : "lamp.nn.AdversarialTraining.eps", "link" : "lamp\/nn\/AdversarialTraining.html#eps:Double", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/nn\/AdversarialTraining.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/AdversarialTraining.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/AdversarialTraining.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/AdversarialTraining.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/AdversarialTraining.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/AdversarialTraining.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/AdversarialTraining.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/AdversarialTraining.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/AdversarialTraining.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/AdversarialTraining.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/AdversarialTraining.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/AdversarialTraining.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/AdversarialTraining.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/AdversarialTraining.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/AdversarialTraining.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/AdversarialTraining.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/AdversarialTraining.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/nn\/AdversarialTraining.html", "kind" : "case class"}, {"name" : "lamp.nn.Attention", "shortDescription" : "", "object" : "lamp\/nn\/Attention$.html", "members_object" : [{"label" : "forward", "tail" : "(decoder: M with StatefulModule[Variable, Variable, T], x: Variable, keyValue: Variable, state: T, tokens: Variable, padToken: Long)(stateToKey: (T) => Variable)(arg0: Sc[S]): (Variable, T)", "member" : "lamp.nn.Attention.forward", "link" : "lamp\/nn\/Attention$.html#forward[T,M<:lamp.nn.StatefulModule[lamp.autograd.Variable,lamp.autograd.Variable,T],S](decoder:Mwithlamp.nn.StatefulModule[lamp.autograd.Variable,lamp.autograd.Variable,T],x:lamp.autograd.Variable,keyValue:lamp.autograd.Variable,state:T,tokens:lamp.autograd.Variable,padToken:Long)(stateToKey:T=>lamp.autograd.Variable)(implicitevidence$3:lamp.Sc[S]):(lamp.autograd.Variable,T)", "kind" : "def"}, {"label" : "dotProductAttention", "tail" : "(query: Variable, keyvalue: Variable, tokens: Variable, padToken: Long)(arg0: Sc[S]): Variable", "member" : "lamp.nn.Attention.dotProductAttention", "link" : "lamp\/nn\/Attention$.html#dotProductAttention[S](query:lamp.autograd.Variable,keyvalue:lamp.autograd.Variable,tokens:lamp.autograd.Variable,padToken:Long)(implicitevidence$2:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "sequenceMask", "tail" : "(tokens: Variable, maskable: Variable, maskedToken: Long, fill: Double)(arg0: Sc[S]): Variable", "member" : "lamp.nn.Attention.sequenceMask", "link" : "lamp\/nn\/Attention$.html#sequenceMask[S](tokens:lamp.autograd.Variable,maskable:lamp.autograd.Variable,maskedToken:Long,fill:Double)(implicitevidence$1:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/Attention$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/Attention$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/Attention$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/Attention$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/Attention$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/Attention$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/Attention$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Attention$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Attention$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Attention$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/Attention$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/Attention$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/Attention$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/Attention$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/Attention$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/Attention$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/Attention$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/Attention$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/Attention$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "lamp.nn.AttentionDecoder", "shortDescription" : "", "members_case class" : [{"label" : "forward1", "tail" : "(x: Variable, state: T)(arg0: Sc[S]): (Variable, T)", "member" : "lamp.nn.AttentionDecoder.forward1", "link" : "lamp\/nn\/AttentionDecoder.html#forward1[S](x:lamp.autograd.Variable,state:T)(implicitevidence$5:lamp.Sc[S]):(lamp.autograd.Variable,T)", "kind" : "def"}, {"label" : "forward", "tail" : "(x: (Variable, T))(arg0: Sc[S]): (Variable, T)", "member" : "lamp.nn.AttentionDecoder.forward", "link" : "lamp\/nn\/AttentionDecoder.html#forward[S](x:(lamp.autograd.Variable,T))(implicitevidence$4:lamp.Sc[S]):(lamp.autograd.Variable,T)", "kind" : "def"}, {"label" : "state", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.AttentionDecoder.state", "link" : "lamp\/nn\/AttentionDecoder.html#state:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "def"}, {"member" : "lamp.nn.AttentionDecoder#<init>", "error" : "unsupported entity"}, {"label" : "padToken", "tail" : ": Long", "member" : "lamp.nn.AttentionDecoder.padToken", "link" : "lamp\/nn\/AttentionDecoder.html#padToken:Long", "kind" : "val"}, {"label" : "tokens", "tail" : ": Variable", "member" : "lamp.nn.AttentionDecoder.tokens", "link" : "lamp\/nn\/AttentionDecoder.html#tokens:lamp.autograd.Variable", "kind" : "val"}, {"label" : "keyValue", "tail" : ": Variable", "member" : "lamp.nn.AttentionDecoder.keyValue", "link" : "lamp\/nn\/AttentionDecoder.html#keyValue:lamp.autograd.Variable", "kind" : "val"}, {"label" : "stateToKey", "tail" : ": (T) => Variable", "member" : "lamp.nn.AttentionDecoder.stateToKey", "link" : "lamp\/nn\/AttentionDecoder.html#stateToKey:T=>lamp.autograd.Variable", "kind" : "val"}, {"label" : "embedding", "tail" : ": M0 with Module", "member" : "lamp.nn.AttentionDecoder.embedding", "link" : "lamp\/nn\/AttentionDecoder.html#embedding:M0withlamp.nn.Module", "kind" : "val"}, {"label" : "decoder", "tail" : ": M with StatefulModule[Variable, Variable, T]", "member" : "lamp.nn.AttentionDecoder.decoder", "link" : "lamp\/nn\/AttentionDecoder.html#decoder:Mwithlamp.nn.StatefulModule[lamp.autograd.Variable,lamp.autograd.Variable,T]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/nn\/AttentionDecoder.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "learnableParameters", "tail" : "(): Long", "member" : "lamp.nn.GenericModule.learnableParameters", "link" : "lamp\/nn\/AttentionDecoder.html#learnableParameters:Long", "kind" : "final def"}, {"label" : "gradients", "tail" : "(loss: Variable, zeroGrad: Boolean): Seq[Option[STen]]", "member" : "lamp.nn.GenericModule.gradients", "link" : "lamp\/nn\/AttentionDecoder.html#gradients(loss:lamp.autograd.Variable,zeroGrad:Boolean):Seq[Option[lamp.STen]]", "kind" : "final def"}, {"label" : "zeroGrad", "tail" : "(): Unit", "member" : "lamp.nn.GenericModule.zeroGrad", "link" : "lamp\/nn\/AttentionDecoder.html#zeroGrad():Unit", "kind" : "final def"}, {"label" : "parameters", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.GenericModule.parameters", "link" : "lamp\/nn\/AttentionDecoder.html#parameters:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "final def"}, {"label" : "apply", "tail" : "(a: (Variable, T))(arg0: Sc[S]): (Variable, T)", "member" : "lamp.nn.GenericModule.apply", "link" : "lamp\/nn\/AttentionDecoder.html#apply[S](a:A)(implicitevidence$17:lamp.Sc[S]):B", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/AttentionDecoder.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/AttentionDecoder.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/AttentionDecoder.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/AttentionDecoder.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/AttentionDecoder.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/AttentionDecoder.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/AttentionDecoder.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/AttentionDecoder.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/AttentionDecoder.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/AttentionDecoder.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/AttentionDecoder.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/AttentionDecoder.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/AttentionDecoder.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/AttentionDecoder.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/AttentionDecoder.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/AttentionDecoder.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/nn\/AttentionDecoder.html", "kind" : "case class"}, {"name" : "lamp.nn.BatchNorm", "shortDescription" : "", "object" : "lamp\/nn\/BatchNorm$.html", "members_object" : [{"label" : "apply", "tail" : "(features: Int, tOpt: STenOptions, training: Boolean, momentum: Double, eps: Double, forceTrain: Boolean, forceEval: Boolean, evalIfBatchSizeIsOne: Boolean)(arg0: Sc[S]): BatchNorm", "member" : "lamp.nn.BatchNorm.apply", "link" : "lamp\/nn\/BatchNorm$.html#apply[S](features:Int,tOpt:lamp.STenOptions,training:Boolean,momentum:Double,eps:Double,forceTrain:Boolean,forceEval:Boolean,evalIfBatchSizeIsOne:Boolean)(implicitevidence$2:lamp.Sc[S]):lamp.nn.BatchNorm", "kind" : "def"}, {"label" : "RunningVar", "tail" : "", "member" : "lamp.nn.BatchNorm.RunningVar", "link" : "lamp\/nn\/BatchNorm$.html#RunningVar", "kind" : "case object"}, {"label" : "RunningMean", "tail" : "", "member" : "lamp.nn.BatchNorm.RunningMean", "link" : "lamp\/nn\/BatchNorm$.html#RunningMean", "kind" : "case object"}, {"label" : "Bias", "tail" : "", "member" : "lamp.nn.BatchNorm.Bias", "link" : "lamp\/nn\/BatchNorm$.html#Bias", "kind" : "case object"}, {"label" : "Weights", "tail" : "", "member" : "lamp.nn.BatchNorm.Weights", "link" : "lamp\/nn\/BatchNorm$.html#Weights", "kind" : "case object"}, {"label" : "load", "tail" : ": Load[BatchNorm]", "member" : "lamp.nn.BatchNorm.load", "link" : "lamp\/nn\/BatchNorm$.html#load:lamp.nn.Load[lamp.nn.BatchNorm]", "kind" : "implicit val"}, {"label" : "trainingMode", "tail" : ": TrainingMode[BatchNorm]", "member" : "lamp.nn.BatchNorm.trainingMode", "link" : "lamp\/nn\/BatchNorm$.html#trainingMode:lamp.nn.TrainingMode[lamp.nn.BatchNorm]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/BatchNorm$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/BatchNorm$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/BatchNorm$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/BatchNorm$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/BatchNorm$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/BatchNorm$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/BatchNorm$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/BatchNorm$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/BatchNorm$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/BatchNorm$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/BatchNorm$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/BatchNorm$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/BatchNorm$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/BatchNorm$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/BatchNorm$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/BatchNorm$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/BatchNorm$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/BatchNorm$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/BatchNorm$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "forward", "tail" : "(x: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.nn.BatchNorm.forward", "link" : "lamp\/nn\/BatchNorm.html#forward[S](x:lamp.autograd.Variable)(implicitevidence$1:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "state", "tail" : ": List[(Constant, LeafTag with Product with Serializable)]", "member" : "lamp.nn.BatchNorm.state", "link" : "lamp\/nn\/BatchNorm.html#state:List[(lamp.autograd.Constant,lamp.nn.LeafTagwithProductwithjava.io.Serializable)]", "kind" : "val"}, {"member" : "lamp.nn.BatchNorm#<init>", "error" : "unsupported entity"}, {"label" : "evalIfBatchSizeIsOne", "tail" : ": Boolean", "member" : "lamp.nn.BatchNorm.evalIfBatchSizeIsOne", "link" : "lamp\/nn\/BatchNorm.html#evalIfBatchSizeIsOne:Boolean", "kind" : "val"}, {"label" : "forceEval", "tail" : ": Boolean", "member" : "lamp.nn.BatchNorm.forceEval", "link" : "lamp\/nn\/BatchNorm.html#forceEval:Boolean", "kind" : "val"}, {"label" : "forceTrain", "tail" : ": Boolean", "member" : "lamp.nn.BatchNorm.forceTrain", "link" : "lamp\/nn\/BatchNorm.html#forceTrain:Boolean", "kind" : "val"}, {"label" : "eps", "tail" : ": Double", "member" : "lamp.nn.BatchNorm.eps", "link" : "lamp\/nn\/BatchNorm.html#eps:Double", "kind" : "val"}, {"label" : "momentum", "tail" : ": Double", "member" : "lamp.nn.BatchNorm.momentum", "link" : "lamp\/nn\/BatchNorm.html#momentum:Double", "kind" : "val"}, {"label" : "training", "tail" : ": Boolean", "member" : "lamp.nn.BatchNorm.training", "link" : "lamp\/nn\/BatchNorm.html#training:Boolean", "kind" : "val"}, {"label" : "runningVar", "tail" : ": Constant", "member" : "lamp.nn.BatchNorm.runningVar", "link" : "lamp\/nn\/BatchNorm.html#runningVar:lamp.autograd.Constant", "kind" : "val"}, {"label" : "runningMean", "tail" : ": Constant", "member" : "lamp.nn.BatchNorm.runningMean", "link" : "lamp\/nn\/BatchNorm.html#runningMean:lamp.autograd.Constant", "kind" : "val"}, {"label" : "bias", "tail" : ": Constant", "member" : "lamp.nn.BatchNorm.bias", "link" : "lamp\/nn\/BatchNorm.html#bias:lamp.autograd.Constant", "kind" : "val"}, {"label" : "weight", "tail" : ": Constant", "member" : "lamp.nn.BatchNorm.weight", "link" : "lamp\/nn\/BatchNorm.html#weight:lamp.autograd.Constant", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/nn\/BatchNorm.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "learnableParameters", "tail" : "(): Long", "member" : "lamp.nn.GenericModule.learnableParameters", "link" : "lamp\/nn\/BatchNorm.html#learnableParameters:Long", "kind" : "final def"}, {"label" : "gradients", "tail" : "(loss: Variable, zeroGrad: Boolean): Seq[Option[STen]]", "member" : "lamp.nn.GenericModule.gradients", "link" : "lamp\/nn\/BatchNorm.html#gradients(loss:lamp.autograd.Variable,zeroGrad:Boolean):Seq[Option[lamp.STen]]", "kind" : "final def"}, {"label" : "zeroGrad", "tail" : "(): Unit", "member" : "lamp.nn.GenericModule.zeroGrad", "link" : "lamp\/nn\/BatchNorm.html#zeroGrad():Unit", "kind" : "final def"}, {"label" : "parameters", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.GenericModule.parameters", "link" : "lamp\/nn\/BatchNorm.html#parameters:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "final def"}, {"label" : "apply", "tail" : "(a: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.nn.GenericModule.apply", "link" : "lamp\/nn\/BatchNorm.html#apply[S](a:A)(implicitevidence$17:lamp.Sc[S]):B", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/BatchNorm.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/BatchNorm.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/BatchNorm.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/BatchNorm.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/BatchNorm.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/BatchNorm.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/BatchNorm.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/BatchNorm.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/BatchNorm.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/BatchNorm.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/BatchNorm.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/BatchNorm.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/BatchNorm.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/BatchNorm.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/BatchNorm.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/BatchNorm.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/nn\/BatchNorm.html", "kind" : "case class"}, {"name" : "lamp.nn.BatchNorm2D", "shortDescription" : "", "object" : "lamp\/nn\/BatchNorm2D$.html", "members_object" : [{"label" : "apply", "tail" : "(features: Int, tOpt: STenOptions, training: Boolean, momentum: Double, eps: Double)(arg0: Sc[S]): BatchNorm2D", "member" : "lamp.nn.BatchNorm2D.apply", "link" : "lamp\/nn\/BatchNorm2D$.html#apply[S](features:Int,tOpt:lamp.STenOptions,training:Boolean,momentum:Double,eps:Double)(implicitevidence$2:lamp.Sc[S]):lamp.nn.BatchNorm2D", "kind" : "def"}, {"label" : "Bias", "tail" : "", "member" : "lamp.nn.BatchNorm2D.Bias", "link" : "lamp\/nn\/BatchNorm2D$.html#Bias", "kind" : "case object"}, {"label" : "Weights", "tail" : "", "member" : "lamp.nn.BatchNorm2D.Weights", "link" : "lamp\/nn\/BatchNorm2D$.html#Weights", "kind" : "case object"}, {"label" : "load", "tail" : ": Load[BatchNorm2D]", "member" : "lamp.nn.BatchNorm2D.load", "link" : "lamp\/nn\/BatchNorm2D$.html#load:lamp.nn.Load[lamp.nn.BatchNorm2D]", "kind" : "implicit val"}, {"label" : "trainingMode", "tail" : ": TrainingMode[BatchNorm2D]", "member" : "lamp.nn.BatchNorm2D.trainingMode", "link" : "lamp\/nn\/BatchNorm2D$.html#trainingMode:lamp.nn.TrainingMode[lamp.nn.BatchNorm2D]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/BatchNorm2D$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/BatchNorm2D$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/BatchNorm2D$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/BatchNorm2D$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/BatchNorm2D$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/BatchNorm2D$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/BatchNorm2D$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/BatchNorm2D$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/BatchNorm2D$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/BatchNorm2D$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/BatchNorm2D$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/BatchNorm2D$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/BatchNorm2D$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/BatchNorm2D$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/BatchNorm2D$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/BatchNorm2D$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/BatchNorm2D$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/BatchNorm2D$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/BatchNorm2D$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "forward", "tail" : "(x: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.nn.BatchNorm2D.forward", "link" : "lamp\/nn\/BatchNorm2D.html#forward[S](x:lamp.autograd.Variable)(implicitevidence$1:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "state", "tail" : ": List[(Constant, LeafTag with Product with Serializable)]", "member" : "lamp.nn.BatchNorm2D.state", "link" : "lamp\/nn\/BatchNorm2D.html#state:List[(lamp.autograd.Constant,lamp.nn.LeafTagwithProductwithjava.io.Serializable)]", "kind" : "val"}, {"member" : "lamp.nn.BatchNorm2D#<init>", "error" : "unsupported entity"}, {"label" : "eps", "tail" : ": Double", "member" : "lamp.nn.BatchNorm2D.eps", "link" : "lamp\/nn\/BatchNorm2D.html#eps:Double", "kind" : "val"}, {"label" : "momentum", "tail" : ": Double", "member" : "lamp.nn.BatchNorm2D.momentum", "link" : "lamp\/nn\/BatchNorm2D.html#momentum:Double", "kind" : "val"}, {"label" : "training", "tail" : ": Boolean", "member" : "lamp.nn.BatchNorm2D.training", "link" : "lamp\/nn\/BatchNorm2D.html#training:Boolean", "kind" : "val"}, {"label" : "runningVar", "tail" : ": Constant", "member" : "lamp.nn.BatchNorm2D.runningVar", "link" : "lamp\/nn\/BatchNorm2D.html#runningVar:lamp.autograd.Constant", "kind" : "val"}, {"label" : "runningMean", "tail" : ": Constant", "member" : "lamp.nn.BatchNorm2D.runningMean", "link" : "lamp\/nn\/BatchNorm2D.html#runningMean:lamp.autograd.Constant", "kind" : "val"}, {"label" : "bias", "tail" : ": Constant", "member" : "lamp.nn.BatchNorm2D.bias", "link" : "lamp\/nn\/BatchNorm2D.html#bias:lamp.autograd.Constant", "kind" : "val"}, {"label" : "weight", "tail" : ": Constant", "member" : "lamp.nn.BatchNorm2D.weight", "link" : "lamp\/nn\/BatchNorm2D.html#weight:lamp.autograd.Constant", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/nn\/BatchNorm2D.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "learnableParameters", "tail" : "(): Long", "member" : "lamp.nn.GenericModule.learnableParameters", "link" : "lamp\/nn\/BatchNorm2D.html#learnableParameters:Long", "kind" : "final def"}, {"label" : "gradients", "tail" : "(loss: Variable, zeroGrad: Boolean): Seq[Option[STen]]", "member" : "lamp.nn.GenericModule.gradients", "link" : "lamp\/nn\/BatchNorm2D.html#gradients(loss:lamp.autograd.Variable,zeroGrad:Boolean):Seq[Option[lamp.STen]]", "kind" : "final def"}, {"label" : "zeroGrad", "tail" : "(): Unit", "member" : "lamp.nn.GenericModule.zeroGrad", "link" : "lamp\/nn\/BatchNorm2D.html#zeroGrad():Unit", "kind" : "final def"}, {"label" : "parameters", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.GenericModule.parameters", "link" : "lamp\/nn\/BatchNorm2D.html#parameters:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "final def"}, {"label" : "apply", "tail" : "(a: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.nn.GenericModule.apply", "link" : "lamp\/nn\/BatchNorm2D.html#apply[S](a:A)(implicitevidence$17:lamp.Sc[S]):B", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/BatchNorm2D.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/BatchNorm2D.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/BatchNorm2D.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/BatchNorm2D.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/BatchNorm2D.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/BatchNorm2D.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/BatchNorm2D.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/BatchNorm2D.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/BatchNorm2D.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/BatchNorm2D.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/BatchNorm2D.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/BatchNorm2D.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/BatchNorm2D.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/BatchNorm2D.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/BatchNorm2D.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/BatchNorm2D.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/nn\/BatchNorm2D.html", "kind" : "case class"}, {"name" : "lamp.nn.Conv1D", "shortDescription" : "", "object" : "lamp\/nn\/Conv1D$.html", "members_object" : [{"label" : "apply", "tail" : "(inChannels: Long, outChannels: Long, kernelSize: Long, tOpt: STenOptions, bias: Boolean, stride: Long, padding: Long, dilation: Long, groups: Long)(arg0: Sc[S]): Conv1D", "member" : "lamp.nn.Conv1D.apply", "link" : "lamp\/nn\/Conv1D$.html#apply[S](inChannels:Long,outChannels:Long,kernelSize:Long,tOpt:lamp.STenOptions,bias:Boolean,stride:Long,padding:Long,dilation:Long,groups:Long)(implicitevidence$2:lamp.Sc[S]):lamp.nn.Conv1D", "kind" : "def"}, {"label" : "Bias", "tail" : "", "member" : "lamp.nn.Conv1D.Bias", "link" : "lamp\/nn\/Conv1D$.html#Bias", "kind" : "case object"}, {"label" : "Weights", "tail" : "", "member" : "lamp.nn.Conv1D.Weights", "link" : "lamp\/nn\/Conv1D$.html#Weights", "kind" : "case object"}, {"label" : "load", "tail" : ": Load[Conv1D]", "member" : "lamp.nn.Conv1D.load", "link" : "lamp\/nn\/Conv1D$.html#load:lamp.nn.Load[lamp.nn.Conv1D]", "kind" : "implicit val"}, {"label" : "trainingMode", "tail" : ": TrainingMode[Conv1D]", "member" : "lamp.nn.Conv1D.trainingMode", "link" : "lamp\/nn\/Conv1D$.html#trainingMode:lamp.nn.TrainingMode[lamp.nn.Conv1D]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/Conv1D$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/Conv1D$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/Conv1D$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/Conv1D$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/Conv1D$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/Conv1D$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/Conv1D$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Conv1D$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Conv1D$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Conv1D$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/Conv1D$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/Conv1D$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/Conv1D$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/Conv1D$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/Conv1D$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/Conv1D$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/Conv1D$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/Conv1D$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/Conv1D$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "forward", "tail" : "(x: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.nn.Conv1D.forward", "link" : "lamp\/nn\/Conv1D.html#forward[S](x:lamp.autograd.Variable)(implicitevidence$1:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "state", "tail" : ": List[(Constant, LeafTag with Product with Serializable)]", "member" : "lamp.nn.Conv1D.state", "link" : "lamp\/nn\/Conv1D.html#state:List[(lamp.autograd.Constant,lamp.nn.LeafTagwithProductwithjava.io.Serializable)]", "kind" : "val"}, {"member" : "lamp.nn.Conv1D#<init>", "error" : "unsupported entity"}, {"label" : "groups", "tail" : ": Long", "member" : "lamp.nn.Conv1D.groups", "link" : "lamp\/nn\/Conv1D.html#groups:Long", "kind" : "val"}, {"label" : "dilation", "tail" : ": Long", "member" : "lamp.nn.Conv1D.dilation", "link" : "lamp\/nn\/Conv1D.html#dilation:Long", "kind" : "val"}, {"label" : "padding", "tail" : ": Long", "member" : "lamp.nn.Conv1D.padding", "link" : "lamp\/nn\/Conv1D.html#padding:Long", "kind" : "val"}, {"label" : "stride", "tail" : ": Long", "member" : "lamp.nn.Conv1D.stride", "link" : "lamp\/nn\/Conv1D.html#stride:Long", "kind" : "val"}, {"label" : "bias", "tail" : ": Constant", "member" : "lamp.nn.Conv1D.bias", "link" : "lamp\/nn\/Conv1D.html#bias:lamp.autograd.Constant", "kind" : "val"}, {"label" : "weights", "tail" : ": Constant", "member" : "lamp.nn.Conv1D.weights", "link" : "lamp\/nn\/Conv1D.html#weights:lamp.autograd.Constant", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/nn\/Conv1D.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "learnableParameters", "tail" : "(): Long", "member" : "lamp.nn.GenericModule.learnableParameters", "link" : "lamp\/nn\/Conv1D.html#learnableParameters:Long", "kind" : "final def"}, {"label" : "gradients", "tail" : "(loss: Variable, zeroGrad: Boolean): Seq[Option[STen]]", "member" : "lamp.nn.GenericModule.gradients", "link" : "lamp\/nn\/Conv1D.html#gradients(loss:lamp.autograd.Variable,zeroGrad:Boolean):Seq[Option[lamp.STen]]", "kind" : "final def"}, {"label" : "zeroGrad", "tail" : "(): Unit", "member" : "lamp.nn.GenericModule.zeroGrad", "link" : "lamp\/nn\/Conv1D.html#zeroGrad():Unit", "kind" : "final def"}, {"label" : "parameters", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.GenericModule.parameters", "link" : "lamp\/nn\/Conv1D.html#parameters:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "final def"}, {"label" : "apply", "tail" : "(a: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.nn.GenericModule.apply", "link" : "lamp\/nn\/Conv1D.html#apply[S](a:A)(implicitevidence$17:lamp.Sc[S]):B", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/Conv1D.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/Conv1D.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/Conv1D.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/Conv1D.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/Conv1D.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/Conv1D.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/Conv1D.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Conv1D.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Conv1D.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Conv1D.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/Conv1D.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/Conv1D.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/Conv1D.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/Conv1D.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/Conv1D.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/Conv1D.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/nn\/Conv1D.html", "kind" : "case class"}, {"name" : "lamp.nn.Conv2D", "shortDescription" : "", "object" : "lamp\/nn\/Conv2D$.html", "members_object" : [{"label" : "apply", "tail" : "(inChannels: Long, outChannels: Long, kernelSize: Long, tOpt: STenOptions, bias: Boolean, stride: Long, padding: Long, dilation: Long, groups: Long)(arg0: Sc[S]): Conv2D", "member" : "lamp.nn.Conv2D.apply", "link" : "lamp\/nn\/Conv2D$.html#apply[S](inChannels:Long,outChannels:Long,kernelSize:Long,tOpt:lamp.STenOptions,bias:Boolean,stride:Long,padding:Long,dilation:Long,groups:Long)(implicitevidence$2:lamp.Sc[S]):lamp.nn.Conv2D", "kind" : "def"}, {"label" : "Bias", "tail" : "", "member" : "lamp.nn.Conv2D.Bias", "link" : "lamp\/nn\/Conv2D$.html#Bias", "kind" : "case object"}, {"label" : "Weights", "tail" : "", "member" : "lamp.nn.Conv2D.Weights", "link" : "lamp\/nn\/Conv2D$.html#Weights", "kind" : "case object"}, {"label" : "load", "tail" : ": Load[Conv2D]", "member" : "lamp.nn.Conv2D.load", "link" : "lamp\/nn\/Conv2D$.html#load:lamp.nn.Load[lamp.nn.Conv2D]", "kind" : "implicit val"}, {"label" : "trainingMode", "tail" : ": TrainingMode[Conv2D]", "member" : "lamp.nn.Conv2D.trainingMode", "link" : "lamp\/nn\/Conv2D$.html#trainingMode:lamp.nn.TrainingMode[lamp.nn.Conv2D]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/Conv2D$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/Conv2D$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/Conv2D$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/Conv2D$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/Conv2D$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/Conv2D$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/Conv2D$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Conv2D$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Conv2D$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Conv2D$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/Conv2D$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/Conv2D$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/Conv2D$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/Conv2D$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/Conv2D$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/Conv2D$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/Conv2D$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/Conv2D$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/Conv2D$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "forward", "tail" : "(x: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.nn.Conv2D.forward", "link" : "lamp\/nn\/Conv2D.html#forward[S](x:lamp.autograd.Variable)(implicitevidence$1:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "state", "tail" : ": List[(Constant, LeafTag with Product with Serializable)]", "member" : "lamp.nn.Conv2D.state", "link" : "lamp\/nn\/Conv2D.html#state:List[(lamp.autograd.Constant,lamp.nn.LeafTagwithProductwithjava.io.Serializable)]", "kind" : "val"}, {"member" : "lamp.nn.Conv2D#<init>", "error" : "unsupported entity"}, {"label" : "groups", "tail" : ": Long", "member" : "lamp.nn.Conv2D.groups", "link" : "lamp\/nn\/Conv2D.html#groups:Long", "kind" : "val"}, {"label" : "dilation", "tail" : ": Long", "member" : "lamp.nn.Conv2D.dilation", "link" : "lamp\/nn\/Conv2D.html#dilation:Long", "kind" : "val"}, {"label" : "padding", "tail" : ": Long", "member" : "lamp.nn.Conv2D.padding", "link" : "lamp\/nn\/Conv2D.html#padding:Long", "kind" : "val"}, {"label" : "stride", "tail" : ": Long", "member" : "lamp.nn.Conv2D.stride", "link" : "lamp\/nn\/Conv2D.html#stride:Long", "kind" : "val"}, {"label" : "bias", "tail" : ": Constant", "member" : "lamp.nn.Conv2D.bias", "link" : "lamp\/nn\/Conv2D.html#bias:lamp.autograd.Constant", "kind" : "val"}, {"label" : "weights", "tail" : ": Constant", "member" : "lamp.nn.Conv2D.weights", "link" : "lamp\/nn\/Conv2D.html#weights:lamp.autograd.Constant", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/nn\/Conv2D.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "learnableParameters", "tail" : "(): Long", "member" : "lamp.nn.GenericModule.learnableParameters", "link" : "lamp\/nn\/Conv2D.html#learnableParameters:Long", "kind" : "final def"}, {"label" : "gradients", "tail" : "(loss: Variable, zeroGrad: Boolean): Seq[Option[STen]]", "member" : "lamp.nn.GenericModule.gradients", "link" : "lamp\/nn\/Conv2D.html#gradients(loss:lamp.autograd.Variable,zeroGrad:Boolean):Seq[Option[lamp.STen]]", "kind" : "final def"}, {"label" : "zeroGrad", "tail" : "(): Unit", "member" : "lamp.nn.GenericModule.zeroGrad", "link" : "lamp\/nn\/Conv2D.html#zeroGrad():Unit", "kind" : "final def"}, {"label" : "parameters", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.GenericModule.parameters", "link" : "lamp\/nn\/Conv2D.html#parameters:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "final def"}, {"label" : "apply", "tail" : "(a: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.nn.GenericModule.apply", "link" : "lamp\/nn\/Conv2D.html#apply[S](a:A)(implicitevidence$17:lamp.Sc[S]):B", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/Conv2D.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/Conv2D.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/Conv2D.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/Conv2D.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/Conv2D.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/Conv2D.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/Conv2D.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Conv2D.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Conv2D.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Conv2D.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/Conv2D.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/Conv2D.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/Conv2D.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/Conv2D.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/Conv2D.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/Conv2D.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/nn\/Conv2D.html", "kind" : "case class"}, {"name" : "lamp.nn.Conv2DTransposed", "shortDescription" : "", "object" : "lamp\/nn\/Conv2DTransposed$.html", "members_object" : [{"label" : "apply", "tail" : "(inChannels: Long, outChannels: Long, kernelSize: Long, tOpt: STenOptions, bias: Boolean, stride: Long, padding: Long, dilation: Long)(arg0: Sc[S]): Conv2DTransposed", "member" : "lamp.nn.Conv2DTransposed.apply", "link" : "lamp\/nn\/Conv2DTransposed$.html#apply[S](inChannels:Long,outChannels:Long,kernelSize:Long,tOpt:lamp.STenOptions,bias:Boolean,stride:Long,padding:Long,dilation:Long)(implicitevidence$2:lamp.Sc[S]):lamp.nn.Conv2DTransposed", "kind" : "def"}, {"label" : "Bias", "tail" : "", "member" : "lamp.nn.Conv2DTransposed.Bias", "link" : "lamp\/nn\/Conv2DTransposed$.html#Bias", "kind" : "case object"}, {"label" : "Weights", "tail" : "", "member" : "lamp.nn.Conv2DTransposed.Weights", "link" : "lamp\/nn\/Conv2DTransposed$.html#Weights", "kind" : "case object"}, {"label" : "load", "tail" : ": Load[Conv2DTransposed]", "member" : "lamp.nn.Conv2DTransposed.load", "link" : "lamp\/nn\/Conv2DTransposed$.html#load:lamp.nn.Load[lamp.nn.Conv2DTransposed]", "kind" : "implicit val"}, {"label" : "trainingMode", "tail" : ": TrainingMode[Conv2DTransposed]", "member" : "lamp.nn.Conv2DTransposed.trainingMode", "link" : "lamp\/nn\/Conv2DTransposed$.html#trainingMode:lamp.nn.TrainingMode[lamp.nn.Conv2DTransposed]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/Conv2DTransposed$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/Conv2DTransposed$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/Conv2DTransposed$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/Conv2DTransposed$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/Conv2DTransposed$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/Conv2DTransposed$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/Conv2DTransposed$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Conv2DTransposed$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Conv2DTransposed$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Conv2DTransposed$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/Conv2DTransposed$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/Conv2DTransposed$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/Conv2DTransposed$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/Conv2DTransposed$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/Conv2DTransposed$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/Conv2DTransposed$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/Conv2DTransposed$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/Conv2DTransposed$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/Conv2DTransposed$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "forward", "tail" : "(x: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.nn.Conv2DTransposed.forward", "link" : "lamp\/nn\/Conv2DTransposed.html#forward[S](x:lamp.autograd.Variable)(implicitevidence$1:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "state", "tail" : ": List[(Constant, LeafTag with Product with Serializable)]", "member" : "lamp.nn.Conv2DTransposed.state", "link" : "lamp\/nn\/Conv2DTransposed.html#state:List[(lamp.autograd.Constant,lamp.nn.LeafTagwithProductwithjava.io.Serializable)]", "kind" : "val"}, {"member" : "lamp.nn.Conv2DTransposed#<init>", "error" : "unsupported entity"}, {"label" : "dilation", "tail" : ": Long", "member" : "lamp.nn.Conv2DTransposed.dilation", "link" : "lamp\/nn\/Conv2DTransposed.html#dilation:Long", "kind" : "val"}, {"label" : "padding", "tail" : ": Long", "member" : "lamp.nn.Conv2DTransposed.padding", "link" : "lamp\/nn\/Conv2DTransposed.html#padding:Long", "kind" : "val"}, {"label" : "stride", "tail" : ": Long", "member" : "lamp.nn.Conv2DTransposed.stride", "link" : "lamp\/nn\/Conv2DTransposed.html#stride:Long", "kind" : "val"}, {"label" : "bias", "tail" : ": Constant", "member" : "lamp.nn.Conv2DTransposed.bias", "link" : "lamp\/nn\/Conv2DTransposed.html#bias:lamp.autograd.Constant", "kind" : "val"}, {"label" : "weights", "tail" : ": Constant", "member" : "lamp.nn.Conv2DTransposed.weights", "link" : "lamp\/nn\/Conv2DTransposed.html#weights:lamp.autograd.Constant", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/nn\/Conv2DTransposed.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "learnableParameters", "tail" : "(): Long", "member" : "lamp.nn.GenericModule.learnableParameters", "link" : "lamp\/nn\/Conv2DTransposed.html#learnableParameters:Long", "kind" : "final def"}, {"label" : "gradients", "tail" : "(loss: Variable, zeroGrad: Boolean): Seq[Option[STen]]", "member" : "lamp.nn.GenericModule.gradients", "link" : "lamp\/nn\/Conv2DTransposed.html#gradients(loss:lamp.autograd.Variable,zeroGrad:Boolean):Seq[Option[lamp.STen]]", "kind" : "final def"}, {"label" : "zeroGrad", "tail" : "(): Unit", "member" : "lamp.nn.GenericModule.zeroGrad", "link" : "lamp\/nn\/Conv2DTransposed.html#zeroGrad():Unit", "kind" : "final def"}, {"label" : "parameters", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.GenericModule.parameters", "link" : "lamp\/nn\/Conv2DTransposed.html#parameters:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "final def"}, {"label" : "apply", "tail" : "(a: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.nn.GenericModule.apply", "link" : "lamp\/nn\/Conv2DTransposed.html#apply[S](a:A)(implicitevidence$17:lamp.Sc[S]):B", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/Conv2DTransposed.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/Conv2DTransposed.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/Conv2DTransposed.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/Conv2DTransposed.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/Conv2DTransposed.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/Conv2DTransposed.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/Conv2DTransposed.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Conv2DTransposed.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Conv2DTransposed.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Conv2DTransposed.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/Conv2DTransposed.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/Conv2DTransposed.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/Conv2DTransposed.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/Conv2DTransposed.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/Conv2DTransposed.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/Conv2DTransposed.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/nn\/Conv2DTransposed.html", "kind" : "case class"}, {"name" : "lamp.nn.DependentHyperparameter", "shortDescription" : "", "members_case class" : [{"label" : "apply", "tail" : "(p: PTag): Double", "member" : "lamp.nn.DependentHyperparameter.apply", "link" : "lamp\/nn\/DependentHyperparameter.html#apply(p:lamp.nn.PTag):Double", "kind" : "def"}, {"member" : "lamp.nn.DependentHyperparameter#<init>", "error" : "unsupported entity"}, {"label" : "default", "tail" : ": Double", "member" : "lamp.nn.DependentHyperparameter.default", "link" : "lamp\/nn\/DependentHyperparameter.html#default:Double", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/nn\/DependentHyperparameter.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/DependentHyperparameter.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/DependentHyperparameter.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/DependentHyperparameter.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/DependentHyperparameter.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/DependentHyperparameter.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/DependentHyperparameter.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/DependentHyperparameter.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/DependentHyperparameter.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/DependentHyperparameter.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/DependentHyperparameter.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/DependentHyperparameter.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/DependentHyperparameter.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/DependentHyperparameter.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/DependentHyperparameter.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/DependentHyperparameter.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/DependentHyperparameter.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/nn\/DependentHyperparameter.html", "kind" : "case class"}, {"name" : "lamp.nn.Dropout", "shortDescription" : "", "object" : "lamp\/nn\/Dropout$.html", "members_object" : [{"label" : "tr", "tail" : ": TrainingMode[Dropout]", "member" : "lamp.nn.Dropout.tr", "link" : "lamp\/nn\/Dropout$.html#tr:lamp.nn.TrainingMode[lamp.nn.Dropout]", "kind" : "implicit val"}, {"label" : "load", "tail" : ": Load[Dropout]", "member" : "lamp.nn.Dropout.load", "link" : "lamp\/nn\/Dropout$.html#load:lamp.nn.Load[lamp.nn.Dropout]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/Dropout$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/Dropout$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/Dropout$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/Dropout$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/Dropout$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/Dropout$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/Dropout$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Dropout$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Dropout$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Dropout$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/Dropout$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/Dropout$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/Dropout$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/Dropout$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/Dropout$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/Dropout$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/Dropout$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/Dropout$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/Dropout$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "forward", "tail" : "(x: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.nn.Dropout.forward", "link" : "lamp\/nn\/Dropout.html#forward[S](x:lamp.autograd.Variable)(implicitevidence$1:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "state", "tail" : "(): Nil", "member" : "lamp.nn.Dropout.state", "link" : "lamp\/nn\/Dropout.html#state:scala.collection.immutable.Nil.type", "kind" : "def"}, {"member" : "lamp.nn.Dropout#<init>", "error" : "unsupported entity"}, {"label" : "training", "tail" : ": Boolean", "member" : "lamp.nn.Dropout.training", "link" : "lamp\/nn\/Dropout.html#training:Boolean", "kind" : "val"}, {"label" : "prob", "tail" : ": Double", "member" : "lamp.nn.Dropout.prob", "link" : "lamp\/nn\/Dropout.html#prob:Double", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/nn\/Dropout.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "learnableParameters", "tail" : "(): Long", "member" : "lamp.nn.GenericModule.learnableParameters", "link" : "lamp\/nn\/Dropout.html#learnableParameters:Long", "kind" : "final def"}, {"label" : "gradients", "tail" : "(loss: Variable, zeroGrad: Boolean): Seq[Option[STen]]", "member" : "lamp.nn.GenericModule.gradients", "link" : "lamp\/nn\/Dropout.html#gradients(loss:lamp.autograd.Variable,zeroGrad:Boolean):Seq[Option[lamp.STen]]", "kind" : "final def"}, {"label" : "zeroGrad", "tail" : "(): Unit", "member" : "lamp.nn.GenericModule.zeroGrad", "link" : "lamp\/nn\/Dropout.html#zeroGrad():Unit", "kind" : "final def"}, {"label" : "parameters", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.GenericModule.parameters", "link" : "lamp\/nn\/Dropout.html#parameters:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "final def"}, {"label" : "apply", "tail" : "(a: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.nn.GenericModule.apply", "link" : "lamp\/nn\/Dropout.html#apply[S](a:A)(implicitevidence$17:lamp.Sc[S]):B", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/Dropout.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/Dropout.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/Dropout.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/Dropout.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/Dropout.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/Dropout.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/Dropout.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Dropout.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Dropout.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Dropout.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/Dropout.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/Dropout.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/Dropout.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/Dropout.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/Dropout.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/Dropout.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/nn\/Dropout.html", "kind" : "case class"}, {"name" : "lamp.nn.EitherModule", "shortDescription" : "", "object" : "lamp\/nn\/EitherModule$.html", "members_object" : [{"label" : "Tag", "tail" : "", "member" : "lamp.nn.EitherModule.Tag", "link" : "lamp\/nn\/EitherModule$.html#Tag[T<:lamp.nn.PTag]extendsPTagwithProductwithSerializable", "kind" : "case class"}, {"label" : "load", "tail" : "(arg0: Load[M1], arg1: Load[M2]): Load[EitherModule[A, B, M1, M2]]", "member" : "lamp.nn.EitherModule.load", "link" : "lamp\/nn\/EitherModule$.html#load[A,B,M1<:lamp.nn.GenericModule[A,B],M2<:lamp.nn.GenericModule[A,B]](implicitevidence$4:lamp.nn.Load[M1],implicitevidence$5:lamp.nn.Load[M2]):lamp.nn.Load[lamp.nn.EitherModule[A,B,M1,M2]]", "kind" : "implicit def"}, {"label" : "trainingMode", "tail" : "(arg0: TrainingMode[M1], arg1: TrainingMode[M2]): TrainingMode[EitherModule[A, B, M1, M2]]", "member" : "lamp.nn.EitherModule.trainingMode", "link" : "lamp\/nn\/EitherModule$.html#trainingMode[A,B,M1<:lamp.nn.GenericModule[A,B],M2<:lamp.nn.GenericModule[A,B]](implicitevidence$2:lamp.nn.TrainingMode[M1],implicitevidence$3:lamp.nn.TrainingMode[M2]):lamp.nn.TrainingMode[lamp.nn.EitherModule[A,B,M1,M2]]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/EitherModule$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/EitherModule$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/EitherModule$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/EitherModule$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/EitherModule$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/EitherModule$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/EitherModule$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/EitherModule$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/EitherModule$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/EitherModule$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/EitherModule$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/EitherModule$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/EitherModule$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/EitherModule$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/EitherModule$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/EitherModule$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/EitherModule$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/EitherModule$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/EitherModule$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "forward", "tail" : "(x: A)(arg0: Sc[S]): B", "member" : "lamp.nn.EitherModule.forward", "link" : "lamp\/nn\/EitherModule.html#forward[S](x:A)(implicitevidence$1:lamp.Sc[S]):B", "kind" : "def"}, {"label" : "state", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.EitherModule.state", "link" : "lamp\/nn\/EitherModule.html#state:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "def"}, {"member" : "lamp.nn.EitherModule#<init>", "error" : "unsupported entity"}, {"label" : "members", "tail" : ": Either[M1 with GenericModule[A, B], M2 with GenericModule[A, B]]", "member" : "lamp.nn.EitherModule.members", "link" : "lamp\/nn\/EitherModule.html#members:Either[M1withlamp.nn.GenericModule[A,B],M2withlamp.nn.GenericModule[A,B]]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/nn\/EitherModule.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "learnableParameters", "tail" : "(): Long", "member" : "lamp.nn.GenericModule.learnableParameters", "link" : "lamp\/nn\/EitherModule.html#learnableParameters:Long", "kind" : "final def"}, {"label" : "gradients", "tail" : "(loss: Variable, zeroGrad: Boolean): Seq[Option[STen]]", "member" : "lamp.nn.GenericModule.gradients", "link" : "lamp\/nn\/EitherModule.html#gradients(loss:lamp.autograd.Variable,zeroGrad:Boolean):Seq[Option[lamp.STen]]", "kind" : "final def"}, {"label" : "zeroGrad", "tail" : "(): Unit", "member" : "lamp.nn.GenericModule.zeroGrad", "link" : "lamp\/nn\/EitherModule.html#zeroGrad():Unit", "kind" : "final def"}, {"label" : "parameters", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.GenericModule.parameters", "link" : "lamp\/nn\/EitherModule.html#parameters:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "final def"}, {"label" : "apply", "tail" : "(a: A)(arg0: Sc[S]): B", "member" : "lamp.nn.GenericModule.apply", "link" : "lamp\/nn\/EitherModule.html#apply[S](a:A)(implicitevidence$17:lamp.Sc[S]):B", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/EitherModule.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/EitherModule.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/EitherModule.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/EitherModule.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/EitherModule.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/EitherModule.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/EitherModule.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/EitherModule.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/EitherModule.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/EitherModule.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/EitherModule.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/EitherModule.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/EitherModule.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/EitherModule.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/EitherModule.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/EitherModule.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/nn\/EitherModule.html", "kind" : "case class"}, {"name" : "lamp.nn.Embedding", "shortDescription" : "Learnable mapping from classes to dense vectors.", "object" : "lamp\/nn\/Embedding$.html", "members_object" : [{"label" : "apply", "tail" : "(classes: Int, dimensions: Int, tOpt: STenOptions)(arg0: Sc[S]): Embedding", "member" : "lamp.nn.Embedding.apply", "link" : "lamp\/nn\/Embedding$.html#apply[S](classes:Int,dimensions:Int,tOpt:lamp.STenOptions)(implicitevidence$2:lamp.Sc[S]):lamp.nn.Embedding", "kind" : "def"}, {"label" : "Weights", "tail" : "", "member" : "lamp.nn.Embedding.Weights", "link" : "lamp\/nn\/Embedding$.html#Weights", "kind" : "case object"}, {"label" : "load", "tail" : ": Load[Embedding]", "member" : "lamp.nn.Embedding.load", "link" : "lamp\/nn\/Embedding$.html#load:lamp.nn.Load[lamp.nn.Embedding]", "kind" : "implicit val"}, {"label" : "trainingMode", "tail" : ": TrainingMode[Embedding]", "member" : "lamp.nn.Embedding.trainingMode", "link" : "lamp\/nn\/Embedding$.html#trainingMode:lamp.nn.TrainingMode[lamp.nn.Embedding]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/Embedding$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/Embedding$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/Embedding$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/Embedding$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/Embedding$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/Embedding$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/Embedding$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Embedding$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Embedding$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Embedding$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/Embedding$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/Embedding$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/Embedding$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/Embedding$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/Embedding$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/Embedding$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/Embedding$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/Embedding$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/Embedding$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "forward", "tail" : "(x: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.nn.Embedding.forward", "link" : "lamp\/nn\/Embedding.html#forward[S](x:lamp.autograd.Variable)(implicitevidence$1:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "state", "tail" : ": List[(Constant, Weights.type)]", "member" : "lamp.nn.Embedding.state", "link" : "lamp\/nn\/Embedding.html#state:List[(lamp.autograd.Constant,lamp.nn.Embedding.Weights.type)]", "kind" : "val"}, {"member" : "lamp.nn.Embedding#<init>", "error" : "unsupported entity"}, {"label" : "weights", "tail" : ": Constant", "member" : "lamp.nn.Embedding.weights", "link" : "lamp\/nn\/Embedding.html#weights:lamp.autograd.Constant", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/nn\/Embedding.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "learnableParameters", "tail" : "(): Long", "member" : "lamp.nn.GenericModule.learnableParameters", "link" : "lamp\/nn\/Embedding.html#learnableParameters:Long", "kind" : "final def"}, {"label" : "gradients", "tail" : "(loss: Variable, zeroGrad: Boolean): Seq[Option[STen]]", "member" : "lamp.nn.GenericModule.gradients", "link" : "lamp\/nn\/Embedding.html#gradients(loss:lamp.autograd.Variable,zeroGrad:Boolean):Seq[Option[lamp.STen]]", "kind" : "final def"}, {"label" : "zeroGrad", "tail" : "(): Unit", "member" : "lamp.nn.GenericModule.zeroGrad", "link" : "lamp\/nn\/Embedding.html#zeroGrad():Unit", "kind" : "final def"}, {"label" : "parameters", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.GenericModule.parameters", "link" : "lamp\/nn\/Embedding.html#parameters:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "final def"}, {"label" : "apply", "tail" : "(a: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.nn.GenericModule.apply", "link" : "lamp\/nn\/Embedding.html#apply[S](a:A)(implicitevidence$17:lamp.Sc[S]):B", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/Embedding.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/Embedding.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/Embedding.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/Embedding.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/Embedding.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/Embedding.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/Embedding.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Embedding.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Embedding.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Embedding.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/Embedding.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/Embedding.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/Embedding.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/Embedding.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/Embedding.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/Embedding.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/nn\/Embedding.html", "kind" : "case class"}, {"name" : "lamp.nn.FreeRunningRNN", "shortDescription" : "Wraps a (sequence x batch) long -> (sequence x batch x dim) double stateful moduleand runs in it greedy (argmax) generation mode over timeSteps steps.", "object" : "lamp\/nn\/FreeRunningRNN$.html", "members_object" : [{"label" : "load", "tail" : "(arg0: Load[M]): Load[FreeRunningRNN[T, M]]", "member" : "lamp.nn.FreeRunningRNN.load", "link" : "lamp\/nn\/FreeRunningRNN$.html#load[T,M<:lamp.nn.StatefulModule[lamp.autograd.Variable,lamp.autograd.Variable,T]](implicitevidence$4:lamp.nn.Load[M]):lamp.nn.Load[lamp.nn.FreeRunningRNN[T,M]]", "kind" : "implicit def"}, {"label" : "is", "tail" : "(st: InitState[M, T]): InitState[FreeRunningRNN[T, M], T]", "member" : "lamp.nn.FreeRunningRNN.is", "link" : "lamp\/nn\/FreeRunningRNN$.html#is[T,M<:lamp.nn.StatefulModule[lamp.autograd.Variable,lamp.autograd.Variable,T]](implicitst:lamp.nn.InitState[M,T]):lamp.nn.InitState[lamp.nn.FreeRunningRNN[T,M],T]", "kind" : "implicit def"}, {"label" : "trainingMode", "tail" : "(arg0: TrainingMode[M]): TrainingMode[FreeRunningRNN[T, M]]", "member" : "lamp.nn.FreeRunningRNN.trainingMode", "link" : "lamp\/nn\/FreeRunningRNN$.html#trainingMode[T,M<:lamp.nn.StatefulModule[lamp.autograd.Variable,lamp.autograd.Variable,T]](implicitevidence$3:lamp.nn.TrainingMode[M]):lamp.nn.TrainingMode[lamp.nn.FreeRunningRNN[T,M]]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/FreeRunningRNN$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/FreeRunningRNN$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/FreeRunningRNN$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/FreeRunningRNN$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/FreeRunningRNN$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/FreeRunningRNN$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/FreeRunningRNN$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/FreeRunningRNN$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/FreeRunningRNN$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/FreeRunningRNN$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/FreeRunningRNN$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/FreeRunningRNN$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/FreeRunningRNN$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/FreeRunningRNN$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/FreeRunningRNN$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/FreeRunningRNN$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/FreeRunningRNN$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/FreeRunningRNN$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/FreeRunningRNN$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "loop", "tail" : "(lastOutput: Variable, lastState: T, n: Int, buffer: Seq[Variable])(arg0: Sc[S]): (Seq[Variable], T)", "member" : "lamp.nn.FreeRunningRNN.loop", "link" : "lamp\/nn\/FreeRunningRNN.html#loop[S](lastOutput:lamp.autograd.Variable,lastState:T,n:Int,buffer:Seq[lamp.autograd.Variable])(implicitevidence$2:lamp.Sc[S]):(Seq[lamp.autograd.Variable],T)", "kind" : "def"}, {"label" : "forward", "tail" : "(x: (Variable, T))(arg0: Sc[S]): (Variable, T)", "member" : "lamp.nn.FreeRunningRNN.forward", "link" : "lamp\/nn\/FreeRunningRNN.html#forward[S](x:(lamp.autograd.Variable,T))(implicitevidence$1:lamp.Sc[S]):(lamp.autograd.Variable,T)", "kind" : "def"}, {"label" : "state", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.FreeRunningRNN.state", "link" : "lamp\/nn\/FreeRunningRNN.html#state:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "def"}, {"member" : "lamp.nn.FreeRunningRNN#<init>", "error" : "unsupported entity"}, {"label" : "timeSteps", "tail" : ": Int", "member" : "lamp.nn.FreeRunningRNN.timeSteps", "link" : "lamp\/nn\/FreeRunningRNN.html#timeSteps:Int", "kind" : "val"}, {"label" : "module", "tail" : ": M with StatefulModule[Variable, Variable, T]", "member" : "lamp.nn.FreeRunningRNN.module", "link" : "lamp\/nn\/FreeRunningRNN.html#module:Mwithlamp.nn.StatefulModule[lamp.autograd.Variable,lamp.autograd.Variable,T]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/nn\/FreeRunningRNN.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "learnableParameters", "tail" : "(): Long", "member" : "lamp.nn.GenericModule.learnableParameters", "link" : "lamp\/nn\/FreeRunningRNN.html#learnableParameters:Long", "kind" : "final def"}, {"label" : "gradients", "tail" : "(loss: Variable, zeroGrad: Boolean): Seq[Option[STen]]", "member" : "lamp.nn.GenericModule.gradients", "link" : "lamp\/nn\/FreeRunningRNN.html#gradients(loss:lamp.autograd.Variable,zeroGrad:Boolean):Seq[Option[lamp.STen]]", "kind" : "final def"}, {"label" : "zeroGrad", "tail" : "(): Unit", "member" : "lamp.nn.GenericModule.zeroGrad", "link" : "lamp\/nn\/FreeRunningRNN.html#zeroGrad():Unit", "kind" : "final def"}, {"label" : "parameters", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.GenericModule.parameters", "link" : "lamp\/nn\/FreeRunningRNN.html#parameters:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "final def"}, {"label" : "apply", "tail" : "(a: (Variable, T))(arg0: Sc[S]): (Variable, T)", "member" : "lamp.nn.GenericModule.apply", "link" : "lamp\/nn\/FreeRunningRNN.html#apply[S](a:A)(implicitevidence$17:lamp.Sc[S]):B", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/FreeRunningRNN.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/FreeRunningRNN.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/FreeRunningRNN.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/FreeRunningRNN.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/FreeRunningRNN.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/FreeRunningRNN.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/FreeRunningRNN.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/FreeRunningRNN.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/FreeRunningRNN.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/FreeRunningRNN.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/FreeRunningRNN.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/FreeRunningRNN.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/FreeRunningRNN.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/FreeRunningRNN.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/FreeRunningRNN.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/FreeRunningRNN.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/nn\/FreeRunningRNN.html", "kind" : "case class"}, {"name" : "lamp.nn.Fun", "shortDescription" : "", "object" : "lamp\/nn\/Fun$.html", "members_object" : [{"label" : "load", "tail" : ": Load[Fun]", "member" : "lamp.nn.Fun.load", "link" : "lamp\/nn\/Fun$.html#load:lamp.nn.Load[lamp.nn.Fun]", "kind" : "implicit val"}, {"label" : "trainingMode", "tail" : ": TrainingMode[Fun]", "member" : "lamp.nn.Fun.trainingMode", "link" : "lamp\/nn\/Fun$.html#trainingMode:lamp.nn.TrainingMode[lamp.nn.Fun]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/Fun$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/Fun$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/Fun$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/Fun$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/Fun$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/Fun$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/Fun$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Fun$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Fun$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Fun$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/Fun$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/Fun$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/Fun$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/Fun$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/Fun$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/Fun$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/Fun$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/Fun$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/Fun$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "forward", "tail" : "(x: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.nn.Fun.forward", "link" : "lamp\/nn\/Fun.html#forward[S](x:lamp.autograd.Variable)(implicitevidence$9:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "state", "tail" : "(): Nil", "member" : "lamp.nn.Fun.state", "link" : "lamp\/nn\/Fun.html#state:scala.collection.immutable.Nil.type", "kind" : "def"}, {"member" : "lamp.nn.Fun#<init>", "error" : "unsupported entity"}, {"label" : "fun", "tail" : ": (Scope) => (Variable) => Variable", "member" : "lamp.nn.Fun.fun", "link" : "lamp\/nn\/Fun.html#fun:lamp.Scope=>(lamp.autograd.Variable=>lamp.autograd.Variable)", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/nn\/Fun.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "learnableParameters", "tail" : "(): Long", "member" : "lamp.nn.GenericModule.learnableParameters", "link" : "lamp\/nn\/Fun.html#learnableParameters:Long", "kind" : "final def"}, {"label" : "gradients", "tail" : "(loss: Variable, zeroGrad: Boolean): Seq[Option[STen]]", "member" : "lamp.nn.GenericModule.gradients", "link" : "lamp\/nn\/Fun.html#gradients(loss:lamp.autograd.Variable,zeroGrad:Boolean):Seq[Option[lamp.STen]]", "kind" : "final def"}, {"label" : "zeroGrad", "tail" : "(): Unit", "member" : "lamp.nn.GenericModule.zeroGrad", "link" : "lamp\/nn\/Fun.html#zeroGrad():Unit", "kind" : "final def"}, {"label" : "parameters", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.GenericModule.parameters", "link" : "lamp\/nn\/Fun.html#parameters:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "final def"}, {"label" : "apply", "tail" : "(a: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.nn.GenericModule.apply", "link" : "lamp\/nn\/Fun.html#apply[S](a:A)(implicitevidence$17:lamp.Sc[S]):B", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/Fun.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/Fun.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/Fun.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/Fun.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/Fun.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/Fun.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/Fun.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Fun.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Fun.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Fun.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/Fun.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/Fun.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/Fun.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/Fun.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/Fun.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/Fun.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/nn\/Fun.html", "kind" : "case class"}, {"name" : "lamp.nn.GCN", "shortDescription" : "", "object" : "lamp\/nn\/GCN$.html", "members_object" : [{"label" : "gcn", "tail" : "(in: Int, out: Int, tOpt: STenOptions, dropout: Double, nonLinearity: Boolean)(arg0: Sc[S]): GCN[ResidualModule[EitherModule[Variable, Variable, Seq4[Variable, Variable, Variable, Variable, Variable, Linear with GenericModule[Variable, Variable], BatchNorm with GenericModule[Variable, Variable], Fun with GenericModule[Variable, Variable], Dropout with GenericModule[Variable, Variable]], Seq2[Variable, Variable, Variable, Linear with GenericModule[Variable, Variable], BatchNorm with GenericModule[Variable, Variable]]]]]", "member" : "lamp.nn.GCN.gcn", "link" : "lamp\/nn\/GCN$.html#gcn[S](in:Int,out:Int,tOpt:lamp.STenOptions,dropout:Double,nonLinearity:Boolean)(implicitevidence$14:lamp.Sc[S]):lamp.nn.GCN[lamp.nn.ResidualModule[lamp.nn.EitherModule[lamp.autograd.Variable,lamp.autograd.Variable,lamp.nn.Seq4[lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.nn.Linearwithlamp.nn.GenericModule[lamp.autograd.Variable,lamp.autograd.Variable],lamp.nn.BatchNormwithlamp.nn.GenericModule[lamp.autograd.Variable,lamp.autograd.Variable],lamp.nn.Funwithlamp.nn.GenericModule[lamp.autograd.Variable,lamp.autograd.Variable],lamp.nn.Dropoutwithlamp.nn.GenericModule[lamp.autograd.Variable,lamp.autograd.Variable]],lamp.nn.Seq2[lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.nn.Linearwithlamp.nn.GenericModule[lamp.autograd.Variable,lamp.autograd.Variable],lamp.nn.BatchNormwithlamp.nn.GenericModule[lamp.autograd.Variable,lamp.autograd.Variable]]]]]", "kind" : "def"}, {"label" : "load", "tail" : "(arg0: Load[M]): Load[GCN[M]]", "member" : "lamp.nn.GCN.load", "link" : "lamp\/nn\/GCN$.html#load[M<:lamp.nn.Module](implicitevidence$13:lamp.nn.Load[M]):lamp.nn.Load[lamp.nn.GCN[M]]", "kind" : "implicit def"}, {"label" : "trainingMode", "tail" : "(arg0: TrainingMode[M]): TrainingMode[GCN[M]]", "member" : "lamp.nn.GCN.trainingMode", "link" : "lamp\/nn\/GCN$.html#trainingMode[M<:lamp.nn.Module](implicitevidence$12:lamp.nn.TrainingMode[M]):lamp.nn.TrainingMode[lamp.nn.GCN[M]]", "kind" : "implicit def"}, {"label" : "gcnAggregation", "tail" : "(nodeFeatures: Variable, degrees: Variable, a: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.nn.GCN.gcnAggregation", "link" : "lamp\/nn\/GCN$.html#gcnAggregation[S](nodeFeatures:lamp.autograd.Variable,degrees:lamp.autograd.Variable,a:lamp.autograd.Variable)(implicitevidence$11:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "gcnAggregation", "tail" : "(nodeFeatures: Variable, edgeList: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.nn.GCN.gcnAggregation", "link" : "lamp\/nn\/GCN$.html#gcnAggregation[S](nodeFeatures:lamp.autograd.Variable,edgeList:lamp.autograd.Variable)(implicitevidence$10:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "precomputeSparseAdjacency", "tail" : "(valueOpt: STenOptions, edgeList: Variable, numNodes: Long)(arg0: Sc[S]): (Constant, Constant)", "member" : "lamp.nn.GCN.precomputeSparseAdjacency", "link" : "lamp\/nn\/GCN$.html#precomputeSparseAdjacency[S](valueOpt:lamp.STenOptions,edgeList:lamp.autograd.Variable,numNodes:Long)(implicitevidence$9:lamp.Sc[S]):(lamp.autograd.Constant,lamp.autograd.Constant)", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/GCN$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/GCN$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/GCN$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/GCN$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/GCN$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/GCN$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/GCN$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/GCN$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/GCN$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/GCN$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/GCN$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/GCN$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/GCN$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/GCN$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/GCN$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/GCN$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/GCN$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/GCN$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/GCN$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "forward", "tail" : "(x: (Variable, Variable))(arg0: Sc[S]): (Variable, Variable)", "member" : "lamp.nn.GCN.forward", "link" : "lamp\/nn\/GCN.html#forward[S](x:(lamp.autograd.Variable,lamp.autograd.Variable))(implicitevidence$4:lamp.Sc[S]):(lamp.autograd.Variable,lamp.autograd.Variable)", "kind" : "def"}, {"label" : "state", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.GCN.state", "link" : "lamp\/nn\/GCN.html#state:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "def"}, {"member" : "lamp.nn.GCN#<init>", "error" : "unsupported entity"}, {"label" : "transform", "tail" : ": M with Module", "member" : "lamp.nn.GCN.transform", "link" : "lamp\/nn\/GCN.html#transform:Mwithlamp.nn.Module", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/nn\/GCN.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "learnableParameters", "tail" : "(): Long", "member" : "lamp.nn.GenericModule.learnableParameters", "link" : "lamp\/nn\/GCN.html#learnableParameters:Long", "kind" : "final def"}, {"label" : "gradients", "tail" : "(loss: Variable, zeroGrad: Boolean): Seq[Option[STen]]", "member" : "lamp.nn.GenericModule.gradients", "link" : "lamp\/nn\/GCN.html#gradients(loss:lamp.autograd.Variable,zeroGrad:Boolean):Seq[Option[lamp.STen]]", "kind" : "final def"}, {"label" : "zeroGrad", "tail" : "(): Unit", "member" : "lamp.nn.GenericModule.zeroGrad", "link" : "lamp\/nn\/GCN.html#zeroGrad():Unit", "kind" : "final def"}, {"label" : "parameters", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.GenericModule.parameters", "link" : "lamp\/nn\/GCN.html#parameters:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "final def"}, {"label" : "apply", "tail" : "(a: (Variable, Variable))(arg0: Sc[S]): (Variable, Variable)", "member" : "lamp.nn.GenericModule.apply", "link" : "lamp\/nn\/GCN.html#apply[S](a:A)(implicitevidence$17:lamp.Sc[S]):B", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/GCN.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/GCN.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/GCN.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/GCN.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/GCN.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/GCN.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/GCN.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/GCN.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/GCN.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/GCN.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/GCN.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/GCN.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/GCN.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/GCN.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/GCN.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/GCN.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/nn\/GCN.html", "kind" : "case class"}, {"name" : "lamp.nn.GenericFun", "shortDescription" : "", "object" : "lamp\/nn\/GenericFun$.html", "members_object" : [{"label" : "load", "tail" : "(): Load[GenericFun[A, B]]", "member" : "lamp.nn.GenericFun.load", "link" : "lamp\/nn\/GenericFun$.html#load[A,B]:lamp.nn.Load[lamp.nn.GenericFun[A,B]]", "kind" : "implicit def"}, {"label" : "trainingMode", "tail" : "(): TrainingMode[GenericFun[A, B]]", "member" : "lamp.nn.GenericFun.trainingMode", "link" : "lamp\/nn\/GenericFun$.html#trainingMode[A,B]:lamp.nn.TrainingMode[lamp.nn.GenericFun[A,B]]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/GenericFun$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/GenericFun$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/GenericFun$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/GenericFun$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/GenericFun$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/GenericFun$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/GenericFun$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/GenericFun$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/GenericFun$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/GenericFun$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/GenericFun$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/GenericFun$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/GenericFun$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/GenericFun$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/GenericFun$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/GenericFun$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/GenericFun$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/GenericFun$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/GenericFun$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "forward", "tail" : "(x: A)(arg0: Sc[S]): B", "member" : "lamp.nn.GenericFun.forward", "link" : "lamp\/nn\/GenericFun.html#forward[S](x:A)(implicitevidence$10:lamp.Sc[S]):B", "kind" : "def"}, {"label" : "state", "tail" : "(): Nil", "member" : "lamp.nn.GenericFun.state", "link" : "lamp\/nn\/GenericFun.html#state:scala.collection.immutable.Nil.type", "kind" : "def"}, {"member" : "lamp.nn.GenericFun#<init>", "error" : "unsupported entity"}, {"label" : "fun", "tail" : ": (Scope) => (A) => B", "member" : "lamp.nn.GenericFun.fun", "link" : "lamp\/nn\/GenericFun.html#fun:lamp.Scope=>(A=>B)", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/nn\/GenericFun.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "learnableParameters", "tail" : "(): Long", "member" : "lamp.nn.GenericModule.learnableParameters", "link" : "lamp\/nn\/GenericFun.html#learnableParameters:Long", "kind" : "final def"}, {"label" : "gradients", "tail" : "(loss: Variable, zeroGrad: Boolean): Seq[Option[STen]]", "member" : "lamp.nn.GenericModule.gradients", "link" : "lamp\/nn\/GenericFun.html#gradients(loss:lamp.autograd.Variable,zeroGrad:Boolean):Seq[Option[lamp.STen]]", "kind" : "final def"}, {"label" : "zeroGrad", "tail" : "(): Unit", "member" : "lamp.nn.GenericModule.zeroGrad", "link" : "lamp\/nn\/GenericFun.html#zeroGrad():Unit", "kind" : "final def"}, {"label" : "parameters", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.GenericModule.parameters", "link" : "lamp\/nn\/GenericFun.html#parameters:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "final def"}, {"label" : "apply", "tail" : "(a: A)(arg0: Sc[S]): B", "member" : "lamp.nn.GenericModule.apply", "link" : "lamp\/nn\/GenericFun.html#apply[S](a:A)(implicitevidence$17:lamp.Sc[S]):B", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/GenericFun.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/GenericFun.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/GenericFun.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/GenericFun.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/GenericFun.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/GenericFun.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/GenericFun.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/GenericFun.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/GenericFun.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/GenericFun.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/GenericFun.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/GenericFun.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/GenericFun.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/GenericFun.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/GenericFun.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/GenericFun.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/nn\/GenericFun.html", "kind" : "case class"}, {"name" : "lamp.nn.GenericModule", "object" : "lamp\/nn\/GenericModule$.html", "members_object" : [{"label" : "movable", "tail" : "(): Movable[GenericModule[A, B]]", "member" : "lamp.nn.GenericModule.movable", "link" : "lamp\/nn\/GenericModule$.html#movable[A,B]:lamp.Movable[lamp.nn.GenericModule[A,B]]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/GenericModule$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/GenericModule$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/GenericModule$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/GenericModule$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/GenericModule$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/GenericModule$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/GenericModule$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/GenericModule$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/GenericModule$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/GenericModule$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/GenericModule$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/GenericModule$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/GenericModule$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/GenericModule$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/GenericModule$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/GenericModule$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/GenericModule$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/GenericModule$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/GenericModule$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "lamp\/nn\/GenericModule.html", "kind" : "trait", "members_trait" : [{"label" : "learnableParameters", "tail" : "(): Long", "member" : "lamp.nn.GenericModule.learnableParameters", "link" : "lamp\/nn\/GenericModule.html#learnableParameters:Long", "kind" : "final def"}, {"label" : "gradients", "tail" : "(loss: Variable, zeroGrad: Boolean): Seq[Option[STen]]", "member" : "lamp.nn.GenericModule.gradients", "link" : "lamp\/nn\/GenericModule.html#gradients(loss:lamp.autograd.Variable,zeroGrad:Boolean):Seq[Option[lamp.STen]]", "kind" : "final def"}, {"label" : "zeroGrad", "tail" : "(): Unit", "member" : "lamp.nn.GenericModule.zeroGrad", "link" : "lamp\/nn\/GenericModule.html#zeroGrad():Unit", "kind" : "final def"}, {"label" : "parameters", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.GenericModule.parameters", "link" : "lamp\/nn\/GenericModule.html#parameters:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "final def"}, {"label" : "apply", "tail" : "(a: A)(arg0: Sc[S]): B", "member" : "lamp.nn.GenericModule.apply", "link" : "lamp\/nn\/GenericModule.html#apply[S](a:A)(implicitevidence$17:lamp.Sc[S]):B", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/GenericModule.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/GenericModule.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/GenericModule.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/GenericModule.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/GenericModule.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/GenericModule.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/GenericModule.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/GenericModule.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/GenericModule.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/GenericModule.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/GenericModule.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/GenericModule.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/GenericModule.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/GenericModule.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/GenericModule.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/GenericModule.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/GenericModule.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/GenericModule.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/GenericModule.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "state", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.GenericModule.state", "link" : "lamp\/nn\/GenericModule.html#state:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "abstract def"}, {"label" : "forward", "tail" : "(x: A)(arg0: Sc[S]): B", "member" : "lamp.nn.GenericModule.forward", "link" : "lamp\/nn\/GenericModule.html#forward[S](x:A)(implicitevidence$16:lamp.Sc[S]):B", "kind" : "abstract def"}], "shortDescription" : "Base type of modules"}, {"name" : "lamp.nn.GraphAttention", "shortDescription" : "", "object" : "lamp\/nn\/GraphAttention$.html", "members_object" : [{"label" : "load", "tail" : ": Load[GraphAttention]", "member" : "lamp.nn.GraphAttention.load", "link" : "lamp\/nn\/GraphAttention$.html#load:lamp.nn.Load[lamp.nn.GraphAttention]", "kind" : "implicit val"}, {"label" : "tr", "tail" : ": TrainingMode[GraphAttention]", "member" : "lamp.nn.GraphAttention.tr", "link" : "lamp\/nn\/GraphAttention$.html#tr:lamp.nn.TrainingMode[lamp.nn.GraphAttention]", "kind" : "implicit val"}, {"label" : "multiheadGraphAttention", "tail" : "(nodeFeatures: Variable, edgeFeatures: Variable, edgeI: STen, edgeJ: STen, wNodeKey1: Variable, wNodeKey2: Variable, wEdgeKey: Variable, wNodeValue: Variable, wAttention: Option[Variable], numHeads: Int)(arg0: Sc[S]): Variable", "member" : "lamp.nn.GraphAttention.multiheadGraphAttention", "link" : "lamp\/nn\/GraphAttention$.html#multiheadGraphAttention[S](nodeFeatures:lamp.autograd.Variable,edgeFeatures:lamp.autograd.Variable,edgeI:lamp.STen,edgeJ:lamp.STen,wNodeKey1:lamp.autograd.Variable,wNodeKey2:lamp.autograd.Variable,wEdgeKey:lamp.autograd.Variable,wNodeValue:lamp.autograd.Variable,wAttention:Option[lamp.autograd.Variable],numHeads:Int)(implicitevidence$3:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "Graph", "tail" : "", "member" : "lamp.nn.GraphAttention.Graph", "link" : "lamp\/nn\/GraphAttention$.html#GraphextendsProductwithSerializable", "kind" : "case class"}, {"label" : "Weights", "tail" : "", "member" : "lamp.nn.GraphAttention.Weights", "link" : "lamp\/nn\/GraphAttention$.html#Weights", "kind" : "case object"}, {"label" : "apply", "tail" : "(nodeDim: Int, edgeDim: Int, attentionKeyHiddenDimPerHead: Int, attentionNumHeads: Int, valueDimPerHead: Int, dropout: Double, tOpt: STenOptions, dotProductAttention: Boolean, nonLinearity: Boolean)(arg0: Sc[S]): GraphAttention", "member" : "lamp.nn.GraphAttention.apply", "link" : "lamp\/nn\/GraphAttention$.html#apply[S](nodeDim:Int,edgeDim:Int,attentionKeyHiddenDimPerHead:Int,attentionNumHeads:Int,valueDimPerHead:Int,dropout:Double,tOpt:lamp.STenOptions,dotProductAttention:Boolean,nonLinearity:Boolean)(implicitevidence$2:lamp.Sc[S]):lamp.nn.GraphAttention", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/GraphAttention$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/GraphAttention$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/GraphAttention$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/GraphAttention$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/GraphAttention$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/GraphAttention$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/GraphAttention$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/GraphAttention$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/GraphAttention$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/GraphAttention$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/GraphAttention$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/GraphAttention$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/GraphAttention$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/GraphAttention$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/GraphAttention$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/GraphAttention$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/GraphAttention$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/GraphAttention$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/GraphAttention$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "state", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.GraphAttention.state", "link" : "lamp\/nn\/GraphAttention.html#state:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "def"}, {"label" : "forward", "tail" : "(x: Graph)(arg0: Sc[S]): Graph", "member" : "lamp.nn.GraphAttention.forward", "link" : "lamp\/nn\/GraphAttention.html#forward[S](x:lamp.nn.GraphAttention.Graph)(implicitevidence$1:lamp.Sc[S]):lamp.nn.GraphAttention.Graph", "kind" : "def"}, {"member" : "lamp.nn.GraphAttention#<init>", "error" : "unsupported entity"}, {"label" : "numHeads", "tail" : ": Int", "member" : "lamp.nn.GraphAttention.numHeads", "link" : "lamp\/nn\/GraphAttention.html#numHeads:Int", "kind" : "val"}, {"label" : "dropout", "tail" : ": Dropout", "member" : "lamp.nn.GraphAttention.dropout", "link" : "lamp\/nn\/GraphAttention.html#dropout:lamp.nn.Dropout", "kind" : "val"}, {"label" : "nonLinearity", "tail" : ": Boolean", "member" : "lamp.nn.GraphAttention.nonLinearity", "link" : "lamp\/nn\/GraphAttention.html#nonLinearity:Boolean", "kind" : "val"}, {"label" : "wAttention", "tail" : ": Option[Constant]", "member" : "lamp.nn.GraphAttention.wAttention", "link" : "lamp\/nn\/GraphAttention.html#wAttention:Option[lamp.autograd.Constant]", "kind" : "val"}, {"label" : "wNodeValue", "tail" : ": Constant", "member" : "lamp.nn.GraphAttention.wNodeValue", "link" : "lamp\/nn\/GraphAttention.html#wNodeValue:lamp.autograd.Constant", "kind" : "val"}, {"label" : "wEdgeKey", "tail" : ": Constant", "member" : "lamp.nn.GraphAttention.wEdgeKey", "link" : "lamp\/nn\/GraphAttention.html#wEdgeKey:lamp.autograd.Constant", "kind" : "val"}, {"label" : "wNodeKey2", "tail" : ": Constant", "member" : "lamp.nn.GraphAttention.wNodeKey2", "link" : "lamp\/nn\/GraphAttention.html#wNodeKey2:lamp.autograd.Constant", "kind" : "val"}, {"label" : "wNodeKey1", "tail" : ": Constant", "member" : "lamp.nn.GraphAttention.wNodeKey1", "link" : "lamp\/nn\/GraphAttention.html#wNodeKey1:lamp.autograd.Constant", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/nn\/GraphAttention.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "learnableParameters", "tail" : "(): Long", "member" : "lamp.nn.GenericModule.learnableParameters", "link" : "lamp\/nn\/GraphAttention.html#learnableParameters:Long", "kind" : "final def"}, {"label" : "gradients", "tail" : "(loss: Variable, zeroGrad: Boolean): Seq[Option[STen]]", "member" : "lamp.nn.GenericModule.gradients", "link" : "lamp\/nn\/GraphAttention.html#gradients(loss:lamp.autograd.Variable,zeroGrad:Boolean):Seq[Option[lamp.STen]]", "kind" : "final def"}, {"label" : "zeroGrad", "tail" : "(): Unit", "member" : "lamp.nn.GenericModule.zeroGrad", "link" : "lamp\/nn\/GraphAttention.html#zeroGrad():Unit", "kind" : "final def"}, {"label" : "parameters", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.GenericModule.parameters", "link" : "lamp\/nn\/GraphAttention.html#parameters:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "final def"}, {"label" : "apply", "tail" : "(a: Graph)(arg0: Sc[S]): Graph", "member" : "lamp.nn.GenericModule.apply", "link" : "lamp\/nn\/GraphAttention.html#apply[S](a:A)(implicitevidence$17:lamp.Sc[S]):B", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/GraphAttention.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/GraphAttention.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/GraphAttention.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/GraphAttention.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/GraphAttention.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/GraphAttention.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/GraphAttention.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/GraphAttention.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/GraphAttention.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/GraphAttention.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/GraphAttention.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/GraphAttention.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/GraphAttention.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/GraphAttention.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/GraphAttention.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/GraphAttention.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/nn\/GraphAttention.html", "kind" : "case class"}, {"name" : "lamp.nn.GraphReadout", "shortDescription" : "", "object" : "lamp\/nn\/GraphReadout$.html", "members_object" : [{"label" : "load", "tail" : "(arg0: Load[M1]): Load[GraphReadout[M1]]", "member" : "lamp.nn.GraphReadout.load", "link" : "lamp\/nn\/GraphReadout$.html#load[M1<:lamp.nn.GraphModule](implicitevidence$3:lamp.nn.Load[M1]):lamp.nn.Load[lamp.nn.GraphReadout[M1]]", "kind" : "implicit def"}, {"label" : "trainingMode", "tail" : "(arg0: TrainingMode[M1]): TrainingMode[GraphReadout[M1]]", "member" : "lamp.nn.GraphReadout.trainingMode", "link" : "lamp\/nn\/GraphReadout$.html#trainingMode[M1<:lamp.nn.GraphModule](implicitevidence$2:lamp.nn.TrainingMode[M1]):lamp.nn.TrainingMode[lamp.nn.GraphReadout[M1]]", "kind" : "implicit def"}, {"label" : "Mean", "tail" : "", "member" : "lamp.nn.GraphReadout.Mean", "link" : "lamp\/nn\/GraphReadout$.html#Mean", "kind" : "case object"}, {"label" : "Sum", "tail" : "", "member" : "lamp.nn.GraphReadout.Sum", "link" : "lamp\/nn\/GraphReadout$.html#Sum", "kind" : "case object"}, {"label" : "PoolType", "tail" : "", "member" : "lamp.nn.GraphReadout.PoolType", "link" : "lamp\/nn\/GraphReadout$.html#PoolTypeextendsAnyRef", "kind" : "sealed trait"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/GraphReadout$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/GraphReadout$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/GraphReadout$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/GraphReadout$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/GraphReadout$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/GraphReadout$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/GraphReadout$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/GraphReadout$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/GraphReadout$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/GraphReadout$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/GraphReadout$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/GraphReadout$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/GraphReadout$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/GraphReadout$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/GraphReadout$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/GraphReadout$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/GraphReadout$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/GraphReadout$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/GraphReadout$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "forward", "tail" : "(x: (Variable, Variable, Variable))(arg0: Sc[S]): Variable", "member" : "lamp.nn.GraphReadout.forward", "link" : "lamp\/nn\/GraphReadout.html#forward[S](x:(lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable))(implicitevidence$1:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "state", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.GraphReadout.state", "link" : "lamp\/nn\/GraphReadout.html#state:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "def"}, {"member" : "lamp.nn.GraphReadout#<init>", "error" : "unsupported entity"}, {"label" : "pooling", "tail" : ": PoolType", "member" : "lamp.nn.GraphReadout.pooling", "link" : "lamp\/nn\/GraphReadout.html#pooling:lamp.nn.GraphReadout.PoolType", "kind" : "val"}, {"label" : "m", "tail" : ": M with GraphModule", "member" : "lamp.nn.GraphReadout.m", "link" : "lamp\/nn\/GraphReadout.html#m:Mwithlamp.nn.GraphModule", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/nn\/GraphReadout.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "learnableParameters", "tail" : "(): Long", "member" : "lamp.nn.GenericModule.learnableParameters", "link" : "lamp\/nn\/GraphReadout.html#learnableParameters:Long", "kind" : "final def"}, {"label" : "gradients", "tail" : "(loss: Variable, zeroGrad: Boolean): Seq[Option[STen]]", "member" : "lamp.nn.GenericModule.gradients", "link" : "lamp\/nn\/GraphReadout.html#gradients(loss:lamp.autograd.Variable,zeroGrad:Boolean):Seq[Option[lamp.STen]]", "kind" : "final def"}, {"label" : "zeroGrad", "tail" : "(): Unit", "member" : "lamp.nn.GenericModule.zeroGrad", "link" : "lamp\/nn\/GraphReadout.html#zeroGrad():Unit", "kind" : "final def"}, {"label" : "parameters", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.GenericModule.parameters", "link" : "lamp\/nn\/GraphReadout.html#parameters:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "final def"}, {"label" : "apply", "tail" : "(a: (Variable, Variable, Variable))(arg0: Sc[S]): Variable", "member" : "lamp.nn.GenericModule.apply", "link" : "lamp\/nn\/GraphReadout.html#apply[S](a:A)(implicitevidence$17:lamp.Sc[S]):B", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/GraphReadout.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/GraphReadout.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/GraphReadout.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/GraphReadout.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/GraphReadout.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/GraphReadout.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/GraphReadout.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/GraphReadout.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/GraphReadout.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/GraphReadout.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/GraphReadout.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/GraphReadout.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/GraphReadout.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/GraphReadout.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/GraphReadout.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/GraphReadout.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/nn\/GraphReadout.html", "kind" : "case class"}, {"name" : "lamp.nn.GRU", "shortDescription" : "Inputs of size (sequence length * batch * in dim)Outputs of size (sequence length * batch * hidden dim)", "object" : "lamp\/nn\/GRU$.html", "members_object" : [{"label" : "apply", "tail" : "(in: Int, hiddenSize: Int, tOpt: STenOptions)(arg0: Sc[S]): GRU", "member" : "lamp.nn.GRU.apply", "link" : "lamp\/nn\/GRU$.html#apply[S](in:Int,hiddenSize:Int,tOpt:lamp.STenOptions)(implicitevidence$4:lamp.Sc[S]):lamp.nn.GRU", "kind" : "def"}, {"label" : "BiasH", "tail" : "", "member" : "lamp.nn.GRU.BiasH", "link" : "lamp\/nn\/GRU$.html#BiasH", "kind" : "case object"}, {"label" : "BiasZ", "tail" : "", "member" : "lamp.nn.GRU.BiasZ", "link" : "lamp\/nn\/GRU$.html#BiasZ", "kind" : "case object"}, {"label" : "BiasR", "tail" : "", "member" : "lamp.nn.GRU.BiasR", "link" : "lamp\/nn\/GRU$.html#BiasR", "kind" : "case object"}, {"label" : "WeightXz", "tail" : "", "member" : "lamp.nn.GRU.WeightXz", "link" : "lamp\/nn\/GRU$.html#WeightXz", "kind" : "case object"}, {"label" : "WeightXr", "tail" : "", "member" : "lamp.nn.GRU.WeightXr", "link" : "lamp\/nn\/GRU$.html#WeightXr", "kind" : "case object"}, {"label" : "WeightHz", "tail" : "", "member" : "lamp.nn.GRU.WeightHz", "link" : "lamp\/nn\/GRU$.html#WeightHz", "kind" : "case object"}, {"label" : "WeightHr", "tail" : "", "member" : "lamp.nn.GRU.WeightHr", "link" : "lamp\/nn\/GRU$.html#WeightHr", "kind" : "case object"}, {"label" : "WeightHh", "tail" : "", "member" : "lamp.nn.GRU.WeightHh", "link" : "lamp\/nn\/GRU$.html#WeightHh", "kind" : "case object"}, {"label" : "WeightXh", "tail" : "", "member" : "lamp.nn.GRU.WeightXh", "link" : "lamp\/nn\/GRU$.html#WeightXh", "kind" : "case object"}, {"label" : "load", "tail" : ": Load[GRU]", "member" : "lamp.nn.GRU.load", "link" : "lamp\/nn\/GRU$.html#load:lamp.nn.Load[lamp.nn.GRU]", "kind" : "implicit val"}, {"label" : "is", "tail" : ": InitState[GRU, Option[Variable]]", "member" : "lamp.nn.GRU.is", "link" : "lamp\/nn\/GRU$.html#is:lamp.nn.InitState[lamp.nn.GRU,Option[lamp.autograd.Variable]]", "kind" : "implicit val"}, {"label" : "trainingMode", "tail" : ": TrainingMode[GRU]", "member" : "lamp.nn.GRU.trainingMode", "link" : "lamp\/nn\/GRU$.html#trainingMode:lamp.nn.TrainingMode[lamp.nn.GRU]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/GRU$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/GRU$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/GRU$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/GRU$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/GRU$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/GRU$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/GRU$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/GRU$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/GRU$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/GRU$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/GRU$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/GRU$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/GRU$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/GRU$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/GRU$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/GRU$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/GRU$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/GRU$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/GRU$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "forward", "tail" : "(a: (Variable, Option[Variable]))(arg0: Sc[S]): (Variable, Some[Variable])", "member" : "lamp.nn.GRU.forward", "link" : "lamp\/nn\/GRU.html#forward[S](a:(lamp.autograd.Variable,Option[lamp.autograd.Variable]))(implicitevidence$2:lamp.Sc[S]):(lamp.autograd.Variable,Some[lamp.autograd.Variable])", "kind" : "def"}, {"label" : "initState", "tail" : "(): None", "member" : "lamp.nn.GRU.initState", "link" : "lamp\/nn\/GRU.html#initState:None.type", "kind" : "def"}, {"label" : "state", "tail" : "(): List[(Constant, LeafTag with Product with Serializable)]", "member" : "lamp.nn.GRU.state", "link" : "lamp\/nn\/GRU.html#state:List[(lamp.autograd.Constant,lamp.nn.LeafTagwithProductwithjava.io.Serializable)]", "kind" : "def"}, {"label" : "hiddenSize", "tail" : ": Long", "member" : "lamp.nn.GRU.hiddenSize", "link" : "lamp\/nn\/GRU.html#hiddenSize:Long", "kind" : "val"}, {"label" : "inputSize", "tail" : ": Long", "member" : "lamp.nn.GRU.inputSize", "link" : "lamp\/nn\/GRU.html#inputSize:Long", "kind" : "val"}, {"member" : "lamp.nn.GRU#<init>", "error" : "unsupported entity"}, {"label" : "biasH", "tail" : ": Constant", "member" : "lamp.nn.GRU.biasH", "link" : "lamp\/nn\/GRU.html#biasH:lamp.autograd.Constant", "kind" : "val"}, {"label" : "biasZ", "tail" : ": Constant", "member" : "lamp.nn.GRU.biasZ", "link" : "lamp\/nn\/GRU.html#biasZ:lamp.autograd.Constant", "kind" : "val"}, {"label" : "biasR", "tail" : ": Constant", "member" : "lamp.nn.GRU.biasR", "link" : "lamp\/nn\/GRU.html#biasR:lamp.autograd.Constant", "kind" : "val"}, {"label" : "weightHz", "tail" : ": Constant", "member" : "lamp.nn.GRU.weightHz", "link" : "lamp\/nn\/GRU.html#weightHz:lamp.autograd.Constant", "kind" : "val"}, {"label" : "weightHr", "tail" : ": Constant", "member" : "lamp.nn.GRU.weightHr", "link" : "lamp\/nn\/GRU.html#weightHr:lamp.autograd.Constant", "kind" : "val"}, {"label" : "weightXz", "tail" : ": Constant", "member" : "lamp.nn.GRU.weightXz", "link" : "lamp\/nn\/GRU.html#weightXz:lamp.autograd.Constant", "kind" : "val"}, {"label" : "weightXr", "tail" : ": Constant", "member" : "lamp.nn.GRU.weightXr", "link" : "lamp\/nn\/GRU.html#weightXr:lamp.autograd.Constant", "kind" : "val"}, {"label" : "weightHh", "tail" : ": Constant", "member" : "lamp.nn.GRU.weightHh", "link" : "lamp\/nn\/GRU.html#weightHh:lamp.autograd.Constant", "kind" : "val"}, {"label" : "weightXh", "tail" : ": Constant", "member" : "lamp.nn.GRU.weightXh", "link" : "lamp\/nn\/GRU.html#weightXh:lamp.autograd.Constant", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/nn\/GRU.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "learnableParameters", "tail" : "(): Long", "member" : "lamp.nn.GenericModule.learnableParameters", "link" : "lamp\/nn\/GRU.html#learnableParameters:Long", "kind" : "final def"}, {"label" : "gradients", "tail" : "(loss: Variable, zeroGrad: Boolean): Seq[Option[STen]]", "member" : "lamp.nn.GenericModule.gradients", "link" : "lamp\/nn\/GRU.html#gradients(loss:lamp.autograd.Variable,zeroGrad:Boolean):Seq[Option[lamp.STen]]", "kind" : "final def"}, {"label" : "zeroGrad", "tail" : "(): Unit", "member" : "lamp.nn.GenericModule.zeroGrad", "link" : "lamp\/nn\/GRU.html#zeroGrad():Unit", "kind" : "final def"}, {"label" : "parameters", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.GenericModule.parameters", "link" : "lamp\/nn\/GRU.html#parameters:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "final def"}, {"label" : "apply", "tail" : "(a: (Variable, Option[Variable]))(arg0: Sc[S]): (Variable, Option[Variable])", "member" : "lamp.nn.GenericModule.apply", "link" : "lamp\/nn\/GRU.html#apply[S](a:A)(implicitevidence$17:lamp.Sc[S]):B", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/GRU.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/GRU.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/GRU.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/GRU.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/GRU.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/GRU.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/GRU.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/GRU.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/GRU.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/GRU.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/GRU.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/GRU.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/GRU.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/GRU.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/GRU.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/GRU.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/nn\/GRU.html", "kind" : "case class"}, {"name" : "lamp.nn.InitState", "object" : "lamp\/nn\/InitState$.html", "members_object" : [{"label" : "make", "tail" : "(f: (M) => C): InitState[M, C]", "member" : "lamp.nn.InitState.make", "link" : "lamp\/nn\/InitState$.html#make[M,C](f:M=>C):lamp.nn.InitState[M,C]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/InitState$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/InitState$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/InitState$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/InitState$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/InitState$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/InitState$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/InitState$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/InitState$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/InitState$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/InitState$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/InitState$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/InitState$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/InitState$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/InitState$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/InitState$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/InitState$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/InitState$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/InitState$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/InitState$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "lamp\/nn\/InitState.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/InitState.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/InitState.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/InitState.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/InitState.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/InitState.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/InitState.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/InitState.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/InitState.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/InitState.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/InitState.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/InitState.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/InitState.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/InitState.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/InitState.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/InitState.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/InitState.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/InitState.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/InitState.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/InitState.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "initState", "tail" : "(m: M): C", "member" : "lamp.nn.InitState.initState", "link" : "lamp\/nn\/InitState.html#initState(m:M):C", "kind" : "abstract def"}], "shortDescription" : "Type class about how to initialize recurrent neural networks"}, {"name" : "lamp.nn.InitStateSyntax", "shortDescription" : "", "members_class" : [{"label" : "initState", "tail" : "(): C", "member" : "lamp.nn.InitStateSyntax.initState", "link" : "lamp\/nn\/package$$InitStateSyntax.html#initState:C", "kind" : "def"}, {"member" : "lamp.nn.InitStateSyntax#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/package$$InitStateSyntax.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/package$$InitStateSyntax.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/package$$InitStateSyntax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/package$$InitStateSyntax.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/package$$InitStateSyntax.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/package$$InitStateSyntax.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/package$$InitStateSyntax.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/package$$InitStateSyntax.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/package$$InitStateSyntax.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/package$$InitStateSyntax.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/package$$InitStateSyntax.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/package$$InitStateSyntax.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/package$$InitStateSyntax.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/package$$InitStateSyntax.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/package$$InitStateSyntax.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/package$$InitStateSyntax.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/package$$InitStateSyntax.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/package$$InitStateSyntax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/package$$InitStateSyntax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "lamp\/nn\/package$$InitStateSyntax.html", "kind" : "class"}, {"name" : "lamp.nn.LayerNorm", "shortDescription" : "", "object" : "lamp\/nn\/LayerNorm$.html", "members_object" : [{"label" : "apply", "tail" : "(normalizedShape: List[Long], tOpt: STenOptions, eps: Double)(arg0: Sc[S]): LayerNorm", "member" : "lamp.nn.LayerNorm.apply", "link" : "lamp\/nn\/LayerNorm$.html#apply[S](normalizedShape:List[Long],tOpt:lamp.STenOptions,eps:Double)(implicitevidence$2:lamp.Sc[S]):lamp.nn.LayerNorm", "kind" : "def"}, {"label" : "Bias", "tail" : "", "member" : "lamp.nn.LayerNorm.Bias", "link" : "lamp\/nn\/LayerNorm$.html#Bias", "kind" : "case object"}, {"label" : "Scale", "tail" : "", "member" : "lamp.nn.LayerNorm.Scale", "link" : "lamp\/nn\/LayerNorm$.html#Scale", "kind" : "case object"}, {"label" : "load", "tail" : ": Load[LayerNorm]", "member" : "lamp.nn.LayerNorm.load", "link" : "lamp\/nn\/LayerNorm$.html#load:lamp.nn.Load[lamp.nn.LayerNorm]", "kind" : "implicit val"}, {"label" : "trainingMode", "tail" : ": TrainingMode[LayerNorm]", "member" : "lamp.nn.LayerNorm.trainingMode", "link" : "lamp\/nn\/LayerNorm$.html#trainingMode:lamp.nn.TrainingMode[lamp.nn.LayerNorm]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/LayerNorm$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/LayerNorm$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/LayerNorm$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/LayerNorm$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/LayerNorm$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/LayerNorm$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/LayerNorm$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/LayerNorm$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/LayerNorm$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/LayerNorm$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/LayerNorm$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/LayerNorm$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/LayerNorm$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/LayerNorm$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/LayerNorm$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/LayerNorm$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/LayerNorm$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/LayerNorm$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/LayerNorm$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "forward", "tail" : "(x: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.nn.LayerNorm.forward", "link" : "lamp\/nn\/LayerNorm.html#forward[S](x:lamp.autograd.Variable)(implicitevidence$1:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "state", "tail" : ": List[(Constant, LeafTag with Product with Serializable)]", "member" : "lamp.nn.LayerNorm.state", "link" : "lamp\/nn\/LayerNorm.html#state:List[(lamp.autograd.Constant,lamp.nn.LeafTagwithProductwithjava.io.Serializable)]", "kind" : "val"}, {"member" : "lamp.nn.LayerNorm#<init>", "error" : "unsupported entity"}, {"label" : "normalizedShape", "tail" : ": List[Long]", "member" : "lamp.nn.LayerNorm.normalizedShape", "link" : "lamp\/nn\/LayerNorm.html#normalizedShape:List[Long]", "kind" : "val"}, {"label" : "eps", "tail" : ": Double", "member" : "lamp.nn.LayerNorm.eps", "link" : "lamp\/nn\/LayerNorm.html#eps:Double", "kind" : "val"}, {"label" : "bias", "tail" : ": Constant", "member" : "lamp.nn.LayerNorm.bias", "link" : "lamp\/nn\/LayerNorm.html#bias:lamp.autograd.Constant", "kind" : "val"}, {"label" : "scale", "tail" : ": Constant", "member" : "lamp.nn.LayerNorm.scale", "link" : "lamp\/nn\/LayerNorm.html#scale:lamp.autograd.Constant", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/nn\/LayerNorm.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "learnableParameters", "tail" : "(): Long", "member" : "lamp.nn.GenericModule.learnableParameters", "link" : "lamp\/nn\/LayerNorm.html#learnableParameters:Long", "kind" : "final def"}, {"label" : "gradients", "tail" : "(loss: Variable, zeroGrad: Boolean): Seq[Option[STen]]", "member" : "lamp.nn.GenericModule.gradients", "link" : "lamp\/nn\/LayerNorm.html#gradients(loss:lamp.autograd.Variable,zeroGrad:Boolean):Seq[Option[lamp.STen]]", "kind" : "final def"}, {"label" : "zeroGrad", "tail" : "(): Unit", "member" : "lamp.nn.GenericModule.zeroGrad", "link" : "lamp\/nn\/LayerNorm.html#zeroGrad():Unit", "kind" : "final def"}, {"label" : "parameters", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.GenericModule.parameters", "link" : "lamp\/nn\/LayerNorm.html#parameters:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "final def"}, {"label" : "apply", "tail" : "(a: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.nn.GenericModule.apply", "link" : "lamp\/nn\/LayerNorm.html#apply[S](a:A)(implicitevidence$17:lamp.Sc[S]):B", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/LayerNorm.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/LayerNorm.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/LayerNorm.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/LayerNorm.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/LayerNorm.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/LayerNorm.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/LayerNorm.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/LayerNorm.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/LayerNorm.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/LayerNorm.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/LayerNorm.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/LayerNorm.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/LayerNorm.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/LayerNorm.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/LayerNorm.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/LayerNorm.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/nn\/LayerNorm.html", "kind" : "case class"}, {"name" : "lamp.nn.LeafTag", "trait" : "lamp\/nn\/LeafTag.html", "kind" : "trait", "members_trait" : [{"label" : "leaf", "tail" : "(): PTag", "member" : "lamp.nn.LeafTag.leaf", "link" : "lamp\/nn\/LeafTag.html#leaf:lamp.nn.PTag", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/LeafTag.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/LeafTag.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/LeafTag.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/LeafTag.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/LeafTag.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/LeafTag.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/LeafTag.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/LeafTag.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/LeafTag.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/LeafTag.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/LeafTag.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/LeafTag.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/LeafTag.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/LeafTag.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/LeafTag.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/LeafTag.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/LeafTag.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/LeafTag.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/LeafTag.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "lamp.nn.LearningRateSchedule", "object" : "lamp\/nn\/LearningRateSchedule$.html", "members_object" : [{"label" : "cyclicSchedule", "tail" : "(maxFactor: Double, periodLength: Long): LearningRateSchedule[Unit]", "member" : "lamp.nn.LearningRateSchedule.cyclicSchedule", "link" : "lamp\/nn\/LearningRateSchedule$.html#cyclicSchedule(maxFactor:Double,periodLength:Long):lamp.nn.LearningRateSchedule[Unit]", "kind" : "def"}, {"label" : "stepAfter", "tail" : "(steps: Long, factor: Double): LearningRateSchedule[Unit]", "member" : "lamp.nn.LearningRateSchedule.stepAfter", "link" : "lamp\/nn\/LearningRateSchedule$.html#stepAfter(steps:Long,factor:Double):lamp.nn.LearningRateSchedule[Unit]", "kind" : "def"}, {"label" : "linear", "tail" : "(start: Double, end: Double, maxSteps: Long): LearningRateSchedule[Unit]", "member" : "lamp.nn.LearningRateSchedule.linear", "link" : "lamp\/nn\/LearningRateSchedule$.html#linear(start:Double,end:Double,maxSteps:Long):lamp.nn.LearningRateSchedule[Unit]", "kind" : "def"}, {"label" : "decrement", "tail" : "(every: Int, decrementFraction: Double): LearningRateSchedule[Unit]", "member" : "lamp.nn.LearningRateSchedule.decrement", "link" : "lamp\/nn\/LearningRateSchedule$.html#decrement(every:Int,decrementFraction:Double):lamp.nn.LearningRateSchedule[Unit]", "kind" : "def"}, {"label" : "noop", "tail" : "(): LearningRateSchedule[Unit]", "member" : "lamp.nn.LearningRateSchedule.noop", "link" : "lamp\/nn\/LearningRateSchedule$.html#noop:lamp.nn.LearningRateSchedule[Unit]", "kind" : "def"}, {"label" : "interpolate", "tail" : "(startY: Double, endY: Double, endX: Double, x: Double): Double", "member" : "lamp.nn.LearningRateSchedule.interpolate", "link" : "lamp\/nn\/LearningRateSchedule$.html#interpolate(startY:Double,endY:Double,endX:Double,x:Double):Double", "kind" : "def"}, {"label" : "fromEpochCount", "tail" : "(f: (Long) => Double): LearningRateSchedule[Unit]", "member" : "lamp.nn.LearningRateSchedule.fromEpochCount", "link" : "lamp\/nn\/LearningRateSchedule$.html#fromEpochCount(f:Long=>Double):lamp.nn.LearningRateSchedule[Unit]", "kind" : "def"}, {"label" : "reduceLROnPlateau", "tail" : "(startFactor: Double, reduceFactor: Double, patience: Int, threshold: Double, relativeThresholdMode: Boolean, stopFactor: Double): LearningRateSchedule[ReduceLROnPlateauState]", "member" : "lamp.nn.LearningRateSchedule.reduceLROnPlateau", "link" : "lamp\/nn\/LearningRateSchedule$.html#reduceLROnPlateau(startFactor:Double,reduceFactor:Double,patience:Int,threshold:Double,relativeThresholdMode:Boolean,stopFactor:Double):lamp.nn.LearningRateSchedule[lamp.nn.LearningRateSchedule.ReduceLROnPlateauState]", "kind" : "def"}, {"label" : "ReduceLROnPlateauState", "tail" : "", "member" : "lamp.nn.LearningRateSchedule.ReduceLROnPlateauState", "link" : "lamp\/nn\/LearningRateSchedule$.html#ReduceLROnPlateauStateextendsProductwithSerializable", "kind" : "case class"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/LearningRateSchedule$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/LearningRateSchedule$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/LearningRateSchedule$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/LearningRateSchedule$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/LearningRateSchedule$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/LearningRateSchedule$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/LearningRateSchedule$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/LearningRateSchedule$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/LearningRateSchedule$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/LearningRateSchedule$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/LearningRateSchedule$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/LearningRateSchedule$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/LearningRateSchedule$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/LearningRateSchedule$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/LearningRateSchedule$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/LearningRateSchedule$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/LearningRateSchedule$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/LearningRateSchedule$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/LearningRateSchedule$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "lamp\/nn\/LearningRateSchedule.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/LearningRateSchedule.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/LearningRateSchedule.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/LearningRateSchedule.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/LearningRateSchedule.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/LearningRateSchedule.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/LearningRateSchedule.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/LearningRateSchedule.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/LearningRateSchedule.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/LearningRateSchedule.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/LearningRateSchedule.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/LearningRateSchedule.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/LearningRateSchedule.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/LearningRateSchedule.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/LearningRateSchedule.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/LearningRateSchedule.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/LearningRateSchedule.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/LearningRateSchedule.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/LearningRateSchedule.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/LearningRateSchedule.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "learningRateFactor", "tail" : "(state: State, epoch: Long, lastValidationLoss: Option[Double]): (State, Double)", "member" : "lamp.nn.LearningRateSchedule.learningRateFactor", "link" : "lamp\/nn\/LearningRateSchedule.html#learningRateFactor(state:State,epoch:Long,lastValidationLoss:Option[Double]):(State,Double)", "kind" : "abstract def"}, {"label" : "init", "tail" : "(): State", "member" : "lamp.nn.LearningRateSchedule.init", "link" : "lamp\/nn\/LearningRateSchedule.html#init:State", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "lamp.nn.LiftedModule", "shortDescription" : "", "object" : "lamp\/nn\/LiftedModule$.html", "members_object" : [{"label" : "initState", "tail" : "(): InitState[LiftedModule[M], Unit]", "member" : "lamp.nn.LiftedModule.initState", "link" : "lamp\/nn\/LiftedModule$.html#initState[M<:lamp.nn.Module]:lamp.nn.InitState[lamp.nn.LiftedModule[M],Unit]", "kind" : "implicit def"}, {"label" : "load", "tail" : "(arg0: Load[M]): Load[LiftedModule[M]]", "member" : "lamp.nn.LiftedModule.load", "link" : "lamp\/nn\/LiftedModule$.html#load[M<:lamp.nn.Module](implicitevidence$13:lamp.nn.Load[M]):lamp.nn.Load[lamp.nn.LiftedModule[M]]", "kind" : "implicit def"}, {"label" : "trainingMode", "tail" : "(arg0: TrainingMode[M]): TrainingMode[LiftedModule[M]]", "member" : "lamp.nn.LiftedModule.trainingMode", "link" : "lamp\/nn\/LiftedModule$.html#trainingMode[M<:lamp.nn.Module](implicitevidence$12:lamp.nn.TrainingMode[M]):lamp.nn.TrainingMode[lamp.nn.LiftedModule[M]]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/LiftedModule$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/LiftedModule$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/LiftedModule$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/LiftedModule$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/LiftedModule$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/LiftedModule$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/LiftedModule$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/LiftedModule$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/LiftedModule$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/LiftedModule$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/LiftedModule$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/LiftedModule$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/LiftedModule$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/LiftedModule$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/LiftedModule$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/LiftedModule$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/LiftedModule$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/LiftedModule$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/LiftedModule$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "forward", "tail" : "(x: (Variable, Unit))(arg0: Sc[S]): (Variable, Unit)", "member" : "lamp.nn.LiftedModule.forward", "link" : "lamp\/nn\/LiftedModule.html#forward[S](x:(lamp.autograd.Variable,Unit))(implicitevidence$11:lamp.Sc[S]):(lamp.autograd.Variable,Unit)", "kind" : "def"}, {"label" : "state", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.LiftedModule.state", "link" : "lamp\/nn\/LiftedModule.html#state:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "def"}, {"member" : "lamp.nn.LiftedModule#<init>", "error" : "unsupported entity"}, {"label" : "mod", "tail" : ": M with Module", "member" : "lamp.nn.LiftedModule.mod", "link" : "lamp\/nn\/LiftedModule.html#mod:Mwithlamp.nn.Module", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/nn\/LiftedModule.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "learnableParameters", "tail" : "(): Long", "member" : "lamp.nn.GenericModule.learnableParameters", "link" : "lamp\/nn\/LiftedModule.html#learnableParameters:Long", "kind" : "final def"}, {"label" : "gradients", "tail" : "(loss: Variable, zeroGrad: Boolean): Seq[Option[STen]]", "member" : "lamp.nn.GenericModule.gradients", "link" : "lamp\/nn\/LiftedModule.html#gradients(loss:lamp.autograd.Variable,zeroGrad:Boolean):Seq[Option[lamp.STen]]", "kind" : "final def"}, {"label" : "zeroGrad", "tail" : "(): Unit", "member" : "lamp.nn.GenericModule.zeroGrad", "link" : "lamp\/nn\/LiftedModule.html#zeroGrad():Unit", "kind" : "final def"}, {"label" : "parameters", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.GenericModule.parameters", "link" : "lamp\/nn\/LiftedModule.html#parameters:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "final def"}, {"label" : "apply", "tail" : "(a: (Variable, Unit))(arg0: Sc[S]): (Variable, Unit)", "member" : "lamp.nn.GenericModule.apply", "link" : "lamp\/nn\/LiftedModule.html#apply[S](a:A)(implicitevidence$17:lamp.Sc[S]):B", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/LiftedModule.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/LiftedModule.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/LiftedModule.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/LiftedModule.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/LiftedModule.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/LiftedModule.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/LiftedModule.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/LiftedModule.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/LiftedModule.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/LiftedModule.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/LiftedModule.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/LiftedModule.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/LiftedModule.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/LiftedModule.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/LiftedModule.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/LiftedModule.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/nn\/LiftedModule.html", "kind" : "case class"}, {"name" : "lamp.nn.Linear", "shortDescription" : "", "object" : "lamp\/nn\/Linear$.html", "members_object" : [{"label" : "apply", "tail" : "(in: Int, out: Int, tOpt: STenOptions, bias: Boolean)(arg0: Sc[S]): Linear", "member" : "lamp.nn.Linear.apply", "link" : "lamp\/nn\/Linear$.html#apply[S](in:Int,out:Int,tOpt:lamp.STenOptions,bias:Boolean)(implicitevidence$2:lamp.Sc[S]):lamp.nn.Linear", "kind" : "def"}, {"label" : "Bias", "tail" : "", "member" : "lamp.nn.Linear.Bias", "link" : "lamp\/nn\/Linear$.html#Bias", "kind" : "case object"}, {"label" : "Weights", "tail" : "", "member" : "lamp.nn.Linear.Weights", "link" : "lamp\/nn\/Linear$.html#Weights", "kind" : "case object"}, {"label" : "load", "tail" : ": Load[Linear]", "member" : "lamp.nn.Linear.load", "link" : "lamp\/nn\/Linear$.html#load:lamp.nn.Load[lamp.nn.Linear]", "kind" : "implicit val"}, {"label" : "trainingMode", "tail" : ": TrainingMode[Linear]", "member" : "lamp.nn.Linear.trainingMode", "link" : "lamp\/nn\/Linear$.html#trainingMode:lamp.nn.TrainingMode[lamp.nn.Linear]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/Linear$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/Linear$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/Linear$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/Linear$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/Linear$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/Linear$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/Linear$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Linear$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Linear$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Linear$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/Linear$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/Linear$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/Linear$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/Linear$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/Linear$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/Linear$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/Linear$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/Linear$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/Linear$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "forward", "tail" : "(x: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.nn.Linear.forward", "link" : "lamp\/nn\/Linear.html#forward[S](x:lamp.autograd.Variable)(implicitevidence$1:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "state", "tail" : ": List[(Constant, LeafTag with Product with Serializable)]", "member" : "lamp.nn.Linear.state", "link" : "lamp\/nn\/Linear.html#state:List[(lamp.autograd.Constant,lamp.nn.LeafTagwithProductwithjava.io.Serializable)]", "kind" : "val"}, {"member" : "lamp.nn.Linear#<init>", "error" : "unsupported entity"}, {"label" : "bias", "tail" : ": Option[Constant]", "member" : "lamp.nn.Linear.bias", "link" : "lamp\/nn\/Linear.html#bias:Option[lamp.autograd.Constant]", "kind" : "val"}, {"label" : "weights", "tail" : ": Constant", "member" : "lamp.nn.Linear.weights", "link" : "lamp\/nn\/Linear.html#weights:lamp.autograd.Constant", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/nn\/Linear.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "learnableParameters", "tail" : "(): Long", "member" : "lamp.nn.GenericModule.learnableParameters", "link" : "lamp\/nn\/Linear.html#learnableParameters:Long", "kind" : "final def"}, {"label" : "gradients", "tail" : "(loss: Variable, zeroGrad: Boolean): Seq[Option[STen]]", "member" : "lamp.nn.GenericModule.gradients", "link" : "lamp\/nn\/Linear.html#gradients(loss:lamp.autograd.Variable,zeroGrad:Boolean):Seq[Option[lamp.STen]]", "kind" : "final def"}, {"label" : "zeroGrad", "tail" : "(): Unit", "member" : "lamp.nn.GenericModule.zeroGrad", "link" : "lamp\/nn\/Linear.html#zeroGrad():Unit", "kind" : "final def"}, {"label" : "parameters", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.GenericModule.parameters", "link" : "lamp\/nn\/Linear.html#parameters:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "final def"}, {"label" : "apply", "tail" : "(a: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.nn.GenericModule.apply", "link" : "lamp\/nn\/Linear.html#apply[S](a:A)(implicitevidence$17:lamp.Sc[S]):B", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/Linear.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/Linear.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/Linear.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/Linear.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/Linear.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/Linear.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/Linear.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Linear.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Linear.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Linear.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/Linear.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/Linear.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/Linear.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/Linear.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/Linear.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/Linear.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/nn\/Linear.html", "kind" : "case class"}, {"name" : "lamp.nn.Load", "object" : "lamp\/nn\/Load$.html", "members_object" : [{"label" : "make", "tail" : "(f: (M) => (Seq[STen]) => Unit): Load[M]", "member" : "lamp.nn.Load.make", "link" : "lamp\/nn\/Load$.html#make[M](f:M=>(Seq[lamp.STen]=>Unit)):lamp.nn.Load[M]", "kind" : "def"}, {"label" : "identity", "tail" : "(): Load[M]", "member" : "lamp.nn.Load.identity", "link" : "lamp\/nn\/Load$.html#identity[M]:lamp.nn.Load[M]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/Load$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/Load$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/Load$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/Load$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/Load$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/Load$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/Load$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Load$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Load$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Load$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/Load$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/Load$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/Load$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/Load$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/Load$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/Load$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/Load$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/Load$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/Load$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "lamp\/nn\/Load.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/Load.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/Load.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/Load.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/Load.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/Load.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/Load.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/Load.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Load.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Load.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Load.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/Load.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/Load.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/Load.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/Load.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/Load.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/Load.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/Load.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/Load.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/Load.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "load", "tail" : "(m: M, tensors: Seq[STen]): Unit", "member" : "lamp.nn.Load.load", "link" : "lamp\/nn\/Load.html#load(m:M,tensors:Seq[lamp.STen]):Unit", "kind" : "abstract def"}], "shortDescription" : "Type class about how to load the contents of the state of modules from external tensors"}, {"name" : "lamp.nn.LoadSyntax", "shortDescription" : "", "members_class" : [{"label" : "load", "tail" : "(tensors: Seq[STen]): Unit", "member" : "lamp.nn.LoadSyntax.load", "link" : "lamp\/nn\/package$$LoadSyntax.html#load(tensors:Seq[lamp.STen]):Unit", "kind" : "def"}, {"member" : "lamp.nn.LoadSyntax#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/package$$LoadSyntax.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/package$$LoadSyntax.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/package$$LoadSyntax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/package$$LoadSyntax.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/package$$LoadSyntax.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/package$$LoadSyntax.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/package$$LoadSyntax.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/package$$LoadSyntax.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/package$$LoadSyntax.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/package$$LoadSyntax.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/package$$LoadSyntax.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/package$$LoadSyntax.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/package$$LoadSyntax.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/package$$LoadSyntax.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/package$$LoadSyntax.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/package$$LoadSyntax.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/package$$LoadSyntax.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/package$$LoadSyntax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/package$$LoadSyntax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "lamp\/nn\/package$$LoadSyntax.html", "kind" : "class"}, {"name" : "lamp.nn.LossCalculation", "trait" : "lamp\/nn\/LossCalculation.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/LossCalculation.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/LossCalculation.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/LossCalculation.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/LossCalculation.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/LossCalculation.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/LossCalculation.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/LossCalculation.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/LossCalculation.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/LossCalculation.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/LossCalculation.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/LossCalculation.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/LossCalculation.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/LossCalculation.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/LossCalculation.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/LossCalculation.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/LossCalculation.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/LossCalculation.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/LossCalculation.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/LossCalculation.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "apply", "tail" : "(samples: I, target: STen, module: M with GenericModule[I, Variable], lossFunction: LossFunction, computeGradients: Boolean, zeroGradBeforeComputingGradients: Boolean)(scope: Scope): (Variable, Long, Option[Seq[Option[STen]]])", "member" : "lamp.nn.LossCalculation.apply", "link" : "lamp\/nn\/LossCalculation.html#apply[M<:lamp.nn.GenericModule[I,lamp.autograd.Variable]](samples:I,target:lamp.STen,module:Mwithlamp.nn.GenericModule[I,lamp.autograd.Variable],lossFunction:lamp.nn.LossFunction,computeGradients:Boolean,zeroGradBeforeComputingGradients:Boolean)(implicitscope:lamp.Scope):(lamp.autograd.Variable,Long,Option[Seq[Option[lamp.STen]]])", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "lamp.nn.LossFunction", "trait" : "lamp\/nn\/LossFunction.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/LossFunction.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/LossFunction.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/LossFunction.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/LossFunction.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/LossFunction.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/LossFunction.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/LossFunction.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/LossFunction.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/LossFunction.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/LossFunction.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/LossFunction.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/LossFunction.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/LossFunction.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/LossFunction.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/LossFunction.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/LossFunction.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/LossFunction.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/LossFunction.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/LossFunction.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "apply", "tail" : "(output: Variable, target: STen)(arg0: Sc[S]): (Variable, Long)", "member" : "lamp.nn.LossFunction.apply", "link" : "lamp\/nn\/LossFunction.html#apply[S](output:lamp.autograd.Variable,target:lamp.STen)(implicitevidence$1:lamp.Sc[S]):(lamp.autograd.Variable,Long)", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "lamp.nn.LossFunctions", "shortDescription" : "", "object" : "lamp\/nn\/LossFunctions$.html", "members_object" : [{"label" : "SequenceNLL", "tail" : "", "member" : "lamp.nn.LossFunctions.SequenceNLL", "link" : "lamp\/nn\/LossFunctions$.html#SequenceNLLextendsLossFunctionwithProductwithSerializable", "kind" : "case class"}, {"label" : "BCEWithLogits", "tail" : "", "member" : "lamp.nn.LossFunctions.BCEWithLogits", "link" : "lamp\/nn\/LossFunctions$.html#BCEWithLogitsextendsLossFunctionwithProductwithSerializable", "kind" : "case class"}, {"label" : "NLL", "tail" : "", "member" : "lamp.nn.LossFunctions.NLL", "link" : "lamp\/nn\/LossFunctions$.html#NLLextendsLossFunctionwithProductwithSerializable", "kind" : "case class"}, {"label" : "L1Loss", "tail" : "", "member" : "lamp.nn.LossFunctions.L1Loss", "link" : "lamp\/nn\/LossFunctions$.html#L1Loss", "kind" : "case object"}, {"label" : "MSE", "tail" : "", "member" : "lamp.nn.LossFunctions.MSE", "link" : "lamp\/nn\/LossFunctions$.html#MSE", "kind" : "case object"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/LossFunctions$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/LossFunctions$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/LossFunctions$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/LossFunctions$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/LossFunctions$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/LossFunctions$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/LossFunctions$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/LossFunctions$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/LossFunctions$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/LossFunctions$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/LossFunctions$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/LossFunctions$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/LossFunctions$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/LossFunctions$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/LossFunctions$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/LossFunctions$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/LossFunctions$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/LossFunctions$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/LossFunctions$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "lamp.nn.LSTM", "shortDescription" : "Inputs of size (sequence length * batch * vocab)Outputs of size (sequence length * batch * output dim)", "object" : "lamp\/nn\/LSTM$.html", "members_object" : [{"label" : "apply", "tail" : "(in: Int, hiddenSize: Int, tOpt: STenOptions)(arg0: Sc[S]): LSTM", "member" : "lamp.nn.LSTM.apply", "link" : "lamp\/nn\/LSTM$.html#apply[S](in:Int,hiddenSize:Int,tOpt:lamp.STenOptions)(implicitevidence$4:lamp.Sc[S]):lamp.nn.LSTM", "kind" : "def"}, {"label" : "BiasC", "tail" : "", "member" : "lamp.nn.LSTM.BiasC", "link" : "lamp\/nn\/LSTM$.html#BiasC", "kind" : "case object"}, {"label" : "BiasO", "tail" : "", "member" : "lamp.nn.LSTM.BiasO", "link" : "lamp\/nn\/LSTM$.html#BiasO", "kind" : "case object"}, {"label" : "BiasF", "tail" : "", "member" : "lamp.nn.LSTM.BiasF", "link" : "lamp\/nn\/LSTM$.html#BiasF", "kind" : "case object"}, {"label" : "BiasI", "tail" : "", "member" : "lamp.nn.LSTM.BiasI", "link" : "lamp\/nn\/LSTM$.html#BiasI", "kind" : "case object"}, {"label" : "WeightHc", "tail" : "", "member" : "lamp.nn.LSTM.WeightHc", "link" : "lamp\/nn\/LSTM$.html#WeightHc", "kind" : "case object"}, {"label" : "WeightXc", "tail" : "", "member" : "lamp.nn.LSTM.WeightXc", "link" : "lamp\/nn\/LSTM$.html#WeightXc", "kind" : "case object"}, {"label" : "WeightHo", "tail" : "", "member" : "lamp.nn.LSTM.WeightHo", "link" : "lamp\/nn\/LSTM$.html#WeightHo", "kind" : "case object"}, {"label" : "WeightHf", "tail" : "", "member" : "lamp.nn.LSTM.WeightHf", "link" : "lamp\/nn\/LSTM$.html#WeightHf", "kind" : "case object"}, {"label" : "WeightHi", "tail" : "", "member" : "lamp.nn.LSTM.WeightHi", "link" : "lamp\/nn\/LSTM$.html#WeightHi", "kind" : "case object"}, {"label" : "WeightXo", "tail" : "", "member" : "lamp.nn.LSTM.WeightXo", "link" : "lamp\/nn\/LSTM$.html#WeightXo", "kind" : "case object"}, {"label" : "WeightXf", "tail" : "", "member" : "lamp.nn.LSTM.WeightXf", "link" : "lamp\/nn\/LSTM$.html#WeightXf", "kind" : "case object"}, {"label" : "WeightXi", "tail" : "", "member" : "lamp.nn.LSTM.WeightXi", "link" : "lamp\/nn\/LSTM$.html#WeightXi", "kind" : "case object"}, {"label" : "load", "tail" : ": Load[LSTM]", "member" : "lamp.nn.LSTM.load", "link" : "lamp\/nn\/LSTM$.html#load:lamp.nn.Load[lamp.nn.LSTM]", "kind" : "implicit val"}, {"label" : "is", "tail" : ": InitState[LSTM, Option[(Variable, Variable)]]", "member" : "lamp.nn.LSTM.is", "link" : "lamp\/nn\/LSTM$.html#is:lamp.nn.InitState[lamp.nn.LSTM,Option[(lamp.autograd.Variable,lamp.autograd.Variable)]]", "kind" : "implicit val"}, {"label" : "trainingMode", "tail" : ": TrainingMode[LSTM]", "member" : "lamp.nn.LSTM.trainingMode", "link" : "lamp\/nn\/LSTM$.html#trainingMode:lamp.nn.TrainingMode[lamp.nn.LSTM]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/LSTM$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/LSTM$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/LSTM$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/LSTM$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/LSTM$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/LSTM$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/LSTM$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/LSTM$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/LSTM$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/LSTM$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/LSTM$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/LSTM$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/LSTM$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/LSTM$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/LSTM$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/LSTM$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/LSTM$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/LSTM$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/LSTM$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "forward", "tail" : "(a: (Variable, Option[(Variable, Variable)]))(arg0: Sc[S]): (Variable, Some[(Variable, Variable)])", "member" : "lamp.nn.LSTM.forward", "link" : "lamp\/nn\/LSTM.html#forward[S](a:(lamp.autograd.Variable,Option[(lamp.autograd.Variable,lamp.autograd.Variable)]))(implicitevidence$2:lamp.Sc[S]):(lamp.autograd.Variable,Some[(lamp.autograd.Variable,lamp.autograd.Variable)])", "kind" : "def"}, {"label" : "state", "tail" : "(): List[(Constant, LeafTag with Product with Serializable)]", "member" : "lamp.nn.LSTM.state", "link" : "lamp\/nn\/LSTM.html#state:List[(lamp.autograd.Constant,lamp.nn.LeafTagwithProductwithjava.io.Serializable)]", "kind" : "def"}, {"label" : "hiddenSize", "tail" : ": Long", "member" : "lamp.nn.LSTM.hiddenSize", "link" : "lamp\/nn\/LSTM.html#hiddenSize:Long", "kind" : "val"}, {"member" : "lamp.nn.LSTM#<init>", "error" : "unsupported entity"}, {"label" : "biasC", "tail" : ": Constant", "member" : "lamp.nn.LSTM.biasC", "link" : "lamp\/nn\/LSTM.html#biasC:lamp.autograd.Constant", "kind" : "val"}, {"label" : "biasO", "tail" : ": Constant", "member" : "lamp.nn.LSTM.biasO", "link" : "lamp\/nn\/LSTM.html#biasO:lamp.autograd.Constant", "kind" : "val"}, {"label" : "biasF", "tail" : ": Constant", "member" : "lamp.nn.LSTM.biasF", "link" : "lamp\/nn\/LSTM.html#biasF:lamp.autograd.Constant", "kind" : "val"}, {"label" : "biasI", "tail" : ": Constant", "member" : "lamp.nn.LSTM.biasI", "link" : "lamp\/nn\/LSTM.html#biasI:lamp.autograd.Constant", "kind" : "val"}, {"label" : "weightHc", "tail" : ": Constant", "member" : "lamp.nn.LSTM.weightHc", "link" : "lamp\/nn\/LSTM.html#weightHc:lamp.autograd.Constant", "kind" : "val"}, {"label" : "weightXc", "tail" : ": Constant", "member" : "lamp.nn.LSTM.weightXc", "link" : "lamp\/nn\/LSTM.html#weightXc:lamp.autograd.Constant", "kind" : "val"}, {"label" : "weightHo", "tail" : ": Constant", "member" : "lamp.nn.LSTM.weightHo", "link" : "lamp\/nn\/LSTM.html#weightHo:lamp.autograd.Constant", "kind" : "val"}, {"label" : "weightHf", "tail" : ": Constant", "member" : "lamp.nn.LSTM.weightHf", "link" : "lamp\/nn\/LSTM.html#weightHf:lamp.autograd.Constant", "kind" : "val"}, {"label" : "weightHi", "tail" : ": Constant", "member" : "lamp.nn.LSTM.weightHi", "link" : "lamp\/nn\/LSTM.html#weightHi:lamp.autograd.Constant", "kind" : "val"}, {"label" : "weightXo", "tail" : ": Constant", "member" : "lamp.nn.LSTM.weightXo", "link" : "lamp\/nn\/LSTM.html#weightXo:lamp.autograd.Constant", "kind" : "val"}, {"label" : "weightXf", "tail" : ": Constant", "member" : "lamp.nn.LSTM.weightXf", "link" : "lamp\/nn\/LSTM.html#weightXf:lamp.autograd.Constant", "kind" : "val"}, {"label" : "weightXi", "tail" : ": Constant", "member" : "lamp.nn.LSTM.weightXi", "link" : "lamp\/nn\/LSTM.html#weightXi:lamp.autograd.Constant", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/nn\/LSTM.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "learnableParameters", "tail" : "(): Long", "member" : "lamp.nn.GenericModule.learnableParameters", "link" : "lamp\/nn\/LSTM.html#learnableParameters:Long", "kind" : "final def"}, {"label" : "gradients", "tail" : "(loss: Variable, zeroGrad: Boolean): Seq[Option[STen]]", "member" : "lamp.nn.GenericModule.gradients", "link" : "lamp\/nn\/LSTM.html#gradients(loss:lamp.autograd.Variable,zeroGrad:Boolean):Seq[Option[lamp.STen]]", "kind" : "final def"}, {"label" : "zeroGrad", "tail" : "(): Unit", "member" : "lamp.nn.GenericModule.zeroGrad", "link" : "lamp\/nn\/LSTM.html#zeroGrad():Unit", "kind" : "final def"}, {"label" : "parameters", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.GenericModule.parameters", "link" : "lamp\/nn\/LSTM.html#parameters:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "final def"}, {"label" : "apply", "tail" : "(a: (Variable, Option[(Variable, Variable)]))(arg0: Sc[S]): (Variable, Option[(Variable, Variable)])", "member" : "lamp.nn.GenericModule.apply", "link" : "lamp\/nn\/LSTM.html#apply[S](a:A)(implicitevidence$17:lamp.Sc[S]):B", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/LSTM.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/LSTM.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/LSTM.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/LSTM.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/LSTM.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/LSTM.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/LSTM.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/LSTM.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/LSTM.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/LSTM.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/LSTM.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/LSTM.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/LSTM.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/LSTM.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/LSTM.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/LSTM.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/nn\/LSTM.html", "kind" : "case class"}, {"name" : "lamp.nn.MappedState", "shortDescription" : "", "object" : "lamp\/nn\/MappedState$.html", "members_object" : [{"label" : "initState", "tail" : "(is: InitState[M, C]): InitState[MappedState[A, B, C, D, M], C]", "member" : "lamp.nn.MappedState.initState", "link" : "lamp\/nn\/MappedState$.html#initState[A,B,C,D,M<:lamp.nn.StatefulModule[A,B,C]](implicitis:lamp.nn.InitState[M,C]):lamp.nn.InitState[lamp.nn.MappedState[A,B,C,D,M],C]", "kind" : "implicit def"}, {"label" : "load", "tail" : "(arg0: Load[M]): Load[MappedState[A, B, C, D, M]]", "member" : "lamp.nn.MappedState.load", "link" : "lamp\/nn\/MappedState$.html#load[A,B,C,D,M<:lamp.nn.StatefulModule[A,B,C]](implicitevidence$19:lamp.nn.Load[M]):lamp.nn.Load[lamp.nn.MappedState[A,B,C,D,M]]", "kind" : "implicit def"}, {"label" : "trainingMode", "tail" : "(t: TrainingMode[M]): TrainingMode[MappedState[A, B, C, D, M]]", "member" : "lamp.nn.MappedState.trainingMode", "link" : "lamp\/nn\/MappedState$.html#trainingMode[A,B,C,D,M<:lamp.nn.StatefulModule[A,B,C]](implicitt:lamp.nn.TrainingMode[M]):lamp.nn.TrainingMode[lamp.nn.MappedState[A,B,C,D,M]]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/MappedState$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/MappedState$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/MappedState$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/MappedState$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/MappedState$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/MappedState$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/MappedState$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/MappedState$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/MappedState$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/MappedState$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/MappedState$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/MappedState$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/MappedState$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/MappedState$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/MappedState$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/MappedState$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/MappedState$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/MappedState$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/MappedState$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "forward", "tail" : "(x: (A, C))(arg0: Sc[S]): (B, D)", "member" : "lamp.nn.MappedState.forward", "link" : "lamp\/nn\/MappedState.html#forward[S](x:(A,C))(implicitevidence$18:lamp.Sc[S]):(B,D)", "kind" : "def"}, {"label" : "state", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.MappedState.state", "link" : "lamp\/nn\/MappedState.html#state:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "def"}, {"member" : "lamp.nn.MappedState#<init>", "error" : "unsupported entity"}, {"label" : "map", "tail" : ": (C) => D", "member" : "lamp.nn.MappedState.map", "link" : "lamp\/nn\/MappedState.html#map:C=>D", "kind" : "val"}, {"label" : "statefulModule", "tail" : ": M with StatefulModule[A, B, C]", "member" : "lamp.nn.MappedState.statefulModule", "link" : "lamp\/nn\/MappedState.html#statefulModule:Mwithlamp.nn.StatefulModule[A,B,C]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/nn\/MappedState.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "learnableParameters", "tail" : "(): Long", "member" : "lamp.nn.GenericModule.learnableParameters", "link" : "lamp\/nn\/MappedState.html#learnableParameters:Long", "kind" : "final def"}, {"label" : "gradients", "tail" : "(loss: Variable, zeroGrad: Boolean): Seq[Option[STen]]", "member" : "lamp.nn.GenericModule.gradients", "link" : "lamp\/nn\/MappedState.html#gradients(loss:lamp.autograd.Variable,zeroGrad:Boolean):Seq[Option[lamp.STen]]", "kind" : "final def"}, {"label" : "zeroGrad", "tail" : "(): Unit", "member" : "lamp.nn.GenericModule.zeroGrad", "link" : "lamp\/nn\/MappedState.html#zeroGrad():Unit", "kind" : "final def"}, {"label" : "parameters", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.GenericModule.parameters", "link" : "lamp\/nn\/MappedState.html#parameters:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "final def"}, {"label" : "apply", "tail" : "(a: (A, C))(arg0: Sc[S]): (B, D)", "member" : "lamp.nn.GenericModule.apply", "link" : "lamp\/nn\/MappedState.html#apply[S](a:A)(implicitevidence$17:lamp.Sc[S]):B", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/MappedState.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/MappedState.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/MappedState.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/MappedState.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/MappedState.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/MappedState.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/MappedState.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/MappedState.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/MappedState.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/MappedState.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/MappedState.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/MappedState.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/MappedState.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/MappedState.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/MappedState.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/MappedState.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/nn\/MappedState.html", "kind" : "case class"}, {"name" : "lamp.nn.MLP", "shortDescription" : "Factory for multilayer fully connected feed forward networks", "object" : "lamp\/nn\/MLP$.html", "members_object" : [{"label" : "apply", "tail" : "(in: Int, out: Int, hidden: Seq[Int], tOpt: STenOptions, dropout: Double, lastNonLinearity: Boolean, activationFunction: ActivationFunction)(arg0: Sc[S]): Seq2[Variable, Variable, Variable, Sequential[Variable, Seq4[Variable, Variable, Variable, Variable, Variable, Linear with GenericModule[Variable, Variable], BatchNorm with GenericModule[Variable, Variable], Fun with GenericModule[Variable, Variable], Dropout with GenericModule[Variable, Variable]]] with GenericModule[Variable, Variable], EitherModule[Variable, Variable, Seq4[Variable, Variable, Variable, Variable, Variable, Linear with GenericModule[Variable, Variable], BatchNorm with GenericModule[Variable, Variable], Fun with GenericModule[Variable, Variable], Dropout with GenericModule[Variable, Variable]], Seq2[Variable, Variable, Variable, Linear with GenericModule[Variable, Variable], BatchNorm with GenericModule[Variable, Variable]]] with GenericModule[Variable, Variable]]", "member" : "lamp.nn.MLP.apply", "link" : "lamp\/nn\/MLP$.html#apply[S](in:Int,out:Int,hidden:Seq[Int],tOpt:lamp.STenOptions,dropout:Double,lastNonLinearity:Boolean,activationFunction:lamp.nn.MLP.ActivationFunction)(implicitevidence$1:lamp.Sc[S]):lamp.nn.Seq2[lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.nn.Sequential[lamp.autograd.Variable,lamp.nn.Seq4[lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.nn.Linearwithlamp.nn.GenericModule[lamp.autograd.Variable,lamp.autograd.Variable],lamp.nn.BatchNormwithlamp.nn.GenericModule[lamp.autograd.Variable,lamp.autograd.Variable],lamp.nn.Funwithlamp.nn.GenericModule[lamp.autograd.Variable,lamp.autograd.Variable],lamp.nn.Dropoutwithlamp.nn.GenericModule[lamp.autograd.Variable,lamp.autograd.Variable]]]withlamp.nn.GenericModule[lamp.autograd.Variable,lamp.autograd.Variable],lamp.nn.EitherModule[lamp.autograd.Variable,lamp.autograd.Variable,lamp.nn.Seq4[lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.nn.Linearwithlamp.nn.GenericModule[lamp.autograd.Variable,lamp.autograd.Variable],lamp.nn.BatchNormwithlamp.nn.GenericModule[lamp.autograd.Variable,lamp.autograd.Variable],lamp.nn.Funwithlamp.nn.GenericModule[lamp.autograd.Variable,lamp.autograd.Variable],lamp.nn.Dropoutwithlamp.nn.GenericModule[lamp.autograd.Variable,lamp.autograd.Variable]],lamp.nn.Seq2[lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.nn.Linearwithlamp.nn.GenericModule[lamp.autograd.Variable,lamp.autograd.Variable],lamp.nn.BatchNormwithlamp.nn.GenericModule[lamp.autograd.Variable,lamp.autograd.Variable]]]withlamp.nn.GenericModule[lamp.autograd.Variable,lamp.autograd.Variable]]", "kind" : "def"}, {"label" : "Sigmoid", "tail" : "", "member" : "lamp.nn.MLP.Sigmoid", "link" : "lamp\/nn\/MLP$.html#Sigmoid", "kind" : "case object"}, {"label" : "Swish1", "tail" : "", "member" : "lamp.nn.MLP.Swish1", "link" : "lamp\/nn\/MLP$.html#Swish1", "kind" : "case object"}, {"label" : "Gelu", "tail" : "", "member" : "lamp.nn.MLP.Gelu", "link" : "lamp\/nn\/MLP$.html#Gelu", "kind" : "case object"}, {"label" : "Relu", "tail" : "", "member" : "lamp.nn.MLP.Relu", "link" : "lamp\/nn\/MLP$.html#Relu", "kind" : "case object"}, {"label" : "ActivationFunction", "tail" : "", "member" : "lamp.nn.MLP.ActivationFunction", "link" : "lamp\/nn\/MLP$.html#ActivationFunctionextendsAnyRef", "kind" : "sealed trait"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/MLP$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/MLP$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/MLP$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/MLP$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/MLP$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/MLP$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/MLP$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/MLP$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/MLP$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/MLP$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/MLP$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/MLP$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/MLP$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/MLP$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/MLP$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/MLP$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/MLP$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/MLP$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/MLP$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "lamp.nn.ModelWithOptimizer", "shortDescription" : "", "members_case class" : [{"label" : "release", "tail" : "(): Unit", "member" : "lamp.nn.ModelWithOptimizer.release", "link" : "lamp\/nn\/ModelWithOptimizer.html#release():Unit", "kind" : "def"}, {"member" : "lamp.nn.ModelWithOptimizer#<init>", "error" : "unsupported entity"}, {"label" : "optimizer", "tail" : ": Optimizer", "member" : "lamp.nn.ModelWithOptimizer.optimizer", "link" : "lamp\/nn\/ModelWithOptimizer.html#optimizer:lamp.nn.Optimizer", "kind" : "val"}, {"label" : "model", "tail" : ": SupervisedModel[I, M]", "member" : "lamp.nn.ModelWithOptimizer.model", "link" : "lamp\/nn\/ModelWithOptimizer.html#model:lamp.nn.SupervisedModel[I,M]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/nn\/ModelWithOptimizer.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/ModelWithOptimizer.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/ModelWithOptimizer.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/ModelWithOptimizer.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/ModelWithOptimizer.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/ModelWithOptimizer.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/ModelWithOptimizer.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/ModelWithOptimizer.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/ModelWithOptimizer.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/ModelWithOptimizer.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/ModelWithOptimizer.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/ModelWithOptimizer.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/ModelWithOptimizer.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/ModelWithOptimizer.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/ModelWithOptimizer.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/ModelWithOptimizer.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/ModelWithOptimizer.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/nn\/ModelWithOptimizer.html", "kind" : "case class"}, {"name" : "lamp.nn.MultiheadAttention", "shortDescription" : "Multi-head scaled dot product attention module", "object" : "lamp\/nn\/MultiheadAttention$.html", "members_object" : [{"label" : "multiheadAttention", "tail" : "(query: Variable, keys: Variable, values: Variable, tokens: STen, padToken: Long, dropout: Double, trainDropout: Boolean, wQuery: Variable, wKeys: Variable, wValues: Variable, wOutput: Variable, numHeads: Int, linearized: Boolean)(arg0: Sc[S]): Variable", "member" : "lamp.nn.MultiheadAttention.multiheadAttention", "link" : "lamp\/nn\/MultiheadAttention$.html#multiheadAttention[S](query:lamp.autograd.Variable,keys:lamp.autograd.Variable,values:lamp.autograd.Variable,tokens:lamp.STen,padToken:Long,dropout:Double,trainDropout:Boolean,wQuery:lamp.autograd.Variable,wKeys:lamp.autograd.Variable,wValues:lamp.autograd.Variable,wOutput:lamp.autograd.Variable,numHeads:Int,linearized:Boolean)(implicitevidence$11:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "linearizedAttention", "tail" : "(query: Variable, keys: Variable, values: Variable, tokens: STen, padToken: Long, dropout: Double, trainDropout: Boolean)(arg0: Sc[S]): Variable", "member" : "lamp.nn.MultiheadAttention.linearizedAttention", "link" : "lamp\/nn\/MultiheadAttention$.html#linearizedAttention[S](query:lamp.autograd.Variable,keys:lamp.autograd.Variable,values:lamp.autograd.Variable,tokens:lamp.STen,padToken:Long,dropout:Double,trainDropout:Boolean)(implicitevidence$10:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "scaledDotProductAttention", "tail" : "(query: Variable, keys: Variable, values: Variable, tokens: STen, padToken: Long, dropout: Double, trainDropout: Boolean)(arg0: Sc[S]): Variable", "member" : "lamp.nn.MultiheadAttention.scaledDotProductAttention", "link" : "lamp\/nn\/MultiheadAttention$.html#scaledDotProductAttention[S](query:lamp.autograd.Variable,keys:lamp.autograd.Variable,values:lamp.autograd.Variable,tokens:lamp.STen,padToken:Long,dropout:Double,trainDropout:Boolean)(implicitevidence$9:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "maskedSoftmax", "tail" : "(input: Variable, pad: Long, tokens: STen)(arg0: Sc[S]): Variable", "member" : "lamp.nn.MultiheadAttention.maskedSoftmax", "link" : "lamp\/nn\/MultiheadAttention$.html#maskedSoftmax[S](input:lamp.autograd.Variable,pad:Long,tokens:lamp.STen)(implicitevidence$8:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "sequenceMask", "tail" : "(tokens: STen, maskable: Variable, pad: Long, fill: Double)(arg0: Sc[S]): Variable", "member" : "lamp.nn.MultiheadAttention.sequenceMask", "link" : "lamp\/nn\/MultiheadAttention$.html#sequenceMask[S](tokens:lamp.STen,maskable:lamp.autograd.Variable,pad:Long,fill:Double)(implicitevidence$7:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "load", "tail" : ": Load[MultiheadAttention]", "member" : "lamp.nn.MultiheadAttention.load", "link" : "lamp\/nn\/MultiheadAttention$.html#load:lamp.nn.Load[lamp.nn.MultiheadAttention]", "kind" : "implicit val"}, {"label" : "trainingMode", "tail" : ": TrainingMode[MultiheadAttention]", "member" : "lamp.nn.MultiheadAttention.trainingMode", "link" : "lamp\/nn\/MultiheadAttention$.html#trainingMode:lamp.nn.TrainingMode[lamp.nn.MultiheadAttention]", "kind" : "implicit val"}, {"label" : "WeightsO", "tail" : "", "member" : "lamp.nn.MultiheadAttention.WeightsO", "link" : "lamp\/nn\/MultiheadAttention$.html#WeightsO", "kind" : "case object"}, {"label" : "WeightsV", "tail" : "", "member" : "lamp.nn.MultiheadAttention.WeightsV", "link" : "lamp\/nn\/MultiheadAttention$.html#WeightsV", "kind" : "case object"}, {"label" : "WeightsK", "tail" : "", "member" : "lamp.nn.MultiheadAttention.WeightsK", "link" : "lamp\/nn\/MultiheadAttention$.html#WeightsK", "kind" : "case object"}, {"label" : "WeightsQ", "tail" : "", "member" : "lamp.nn.MultiheadAttention.WeightsQ", "link" : "lamp\/nn\/MultiheadAttention$.html#WeightsQ", "kind" : "case object"}, {"label" : "apply", "tail" : "(dQ: Int, dK: Int, dV: Int, hiddenPerHead: Int, out: Int, dropout: Double, numHeads: Int, padToken: Long, tOpt: STenOptions, linearized: Boolean)(arg0: Sc[S]): MultiheadAttention", "member" : "lamp.nn.MultiheadAttention.apply", "link" : "lamp\/nn\/MultiheadAttention$.html#apply[S](dQ:Int,dK:Int,dV:Int,hiddenPerHead:Int,out:Int,dropout:Double,numHeads:Int,padToken:Long,tOpt:lamp.STenOptions,linearized:Boolean)(implicitevidence$6:lamp.Sc[S]):lamp.nn.MultiheadAttention", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/MultiheadAttention$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/MultiheadAttention$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/MultiheadAttention$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/MultiheadAttention$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/MultiheadAttention$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/MultiheadAttention$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/MultiheadAttention$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/MultiheadAttention$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/MultiheadAttention$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/MultiheadAttention$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/MultiheadAttention$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/MultiheadAttention$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/MultiheadAttention$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/MultiheadAttention$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/MultiheadAttention$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/MultiheadAttention$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/MultiheadAttention$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/MultiheadAttention$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/MultiheadAttention$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "forward", "tail" : "(x: (Variable, Variable, Variable, STen))(arg0: Sc[S]): Variable", "member" : "lamp.nn.MultiheadAttention.forward", "link" : "lamp\/nn\/MultiheadAttention.html#forward[S](x:(lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.STen))(implicitevidence$5:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "state", "tail" : ": List[(Constant, LeafTag with Product with Serializable)]", "member" : "lamp.nn.MultiheadAttention.state", "link" : "lamp\/nn\/MultiheadAttention.html#state:List[(lamp.autograd.Constant,lamp.nn.LeafTagwithProductwithjava.io.Serializable)]", "kind" : "val"}, {"member" : "lamp.nn.MultiheadAttention#<init>", "error" : "unsupported entity"}, {"label" : "linearized", "tail" : ": Boolean", "member" : "lamp.nn.MultiheadAttention.linearized", "link" : "lamp\/nn\/MultiheadAttention.html#linearized:Boolean", "kind" : "val"}, {"label" : "padToken", "tail" : ": Long", "member" : "lamp.nn.MultiheadAttention.padToken", "link" : "lamp\/nn\/MultiheadAttention.html#padToken:Long", "kind" : "val"}, {"label" : "numHeads", "tail" : ": Int", "member" : "lamp.nn.MultiheadAttention.numHeads", "link" : "lamp\/nn\/MultiheadAttention.html#numHeads:Int", "kind" : "val"}, {"label" : "train", "tail" : ": Boolean", "member" : "lamp.nn.MultiheadAttention.train", "link" : "lamp\/nn\/MultiheadAttention.html#train:Boolean", "kind" : "val"}, {"label" : "dropout", "tail" : ": Double", "member" : "lamp.nn.MultiheadAttention.dropout", "link" : "lamp\/nn\/MultiheadAttention.html#dropout:Double", "kind" : "val"}, {"label" : "wO", "tail" : ": Constant", "member" : "lamp.nn.MultiheadAttention.wO", "link" : "lamp\/nn\/MultiheadAttention.html#wO:lamp.autograd.Constant", "kind" : "val"}, {"label" : "wV", "tail" : ": Constant", "member" : "lamp.nn.MultiheadAttention.wV", "link" : "lamp\/nn\/MultiheadAttention.html#wV:lamp.autograd.Constant", "kind" : "val"}, {"label" : "wK", "tail" : ": Constant", "member" : "lamp.nn.MultiheadAttention.wK", "link" : "lamp\/nn\/MultiheadAttention.html#wK:lamp.autograd.Constant", "kind" : "val"}, {"label" : "wQ", "tail" : ": Constant", "member" : "lamp.nn.MultiheadAttention.wQ", "link" : "lamp\/nn\/MultiheadAttention.html#wQ:lamp.autograd.Constant", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/nn\/MultiheadAttention.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "learnableParameters", "tail" : "(): Long", "member" : "lamp.nn.GenericModule.learnableParameters", "link" : "lamp\/nn\/MultiheadAttention.html#learnableParameters:Long", "kind" : "final def"}, {"label" : "gradients", "tail" : "(loss: Variable, zeroGrad: Boolean): Seq[Option[STen]]", "member" : "lamp.nn.GenericModule.gradients", "link" : "lamp\/nn\/MultiheadAttention.html#gradients(loss:lamp.autograd.Variable,zeroGrad:Boolean):Seq[Option[lamp.STen]]", "kind" : "final def"}, {"label" : "zeroGrad", "tail" : "(): Unit", "member" : "lamp.nn.GenericModule.zeroGrad", "link" : "lamp\/nn\/MultiheadAttention.html#zeroGrad():Unit", "kind" : "final def"}, {"label" : "parameters", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.GenericModule.parameters", "link" : "lamp\/nn\/MultiheadAttention.html#parameters:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "final def"}, {"label" : "apply", "tail" : "(a: (Variable, Variable, Variable, STen))(arg0: Sc[S]): Variable", "member" : "lamp.nn.GenericModule.apply", "link" : "lamp\/nn\/MultiheadAttention.html#apply[S](a:A)(implicitevidence$17:lamp.Sc[S]):B", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/MultiheadAttention.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/MultiheadAttention.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/MultiheadAttention.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/MultiheadAttention.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/MultiheadAttention.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/MultiheadAttention.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/MultiheadAttention.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/MultiheadAttention.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/MultiheadAttention.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/MultiheadAttention.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/MultiheadAttention.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/MultiheadAttention.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/MultiheadAttention.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/MultiheadAttention.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/MultiheadAttention.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/MultiheadAttention.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/nn\/MultiheadAttention.html", "kind" : "case class"}, {"name" : "lamp.nn.NGCN", "shortDescription" : "", "object" : "lamp\/nn\/NGCN$.html", "members_object" : [{"label" : "ngcn", "tail" : "(in: Int, middle: Int, out: Int, tOpt: STenOptions, dropout: Double, nonLinearity: Boolean, K: Int, r: Int, includeZeroOrder: Boolean)(arg0: Sc[S]): NGCN[ResidualModule[EitherModule[Variable, Variable, Seq4[Variable, Variable, Variable, Variable, Variable, Linear with GenericModule[Variable, Variable], BatchNorm with GenericModule[Variable, Variable], Fun with GenericModule[Variable, Variable], Dropout with GenericModule[Variable, Variable]], Linear]]]", "member" : "lamp.nn.NGCN.ngcn", "link" : "lamp\/nn\/NGCN$.html#ngcn[S](in:Int,middle:Int,out:Int,tOpt:lamp.STenOptions,dropout:Double,nonLinearity:Boolean,K:Int,r:Int,includeZeroOrder:Boolean)(implicitevidence$8:lamp.Sc[S]):lamp.nn.NGCN[lamp.nn.ResidualModule[lamp.nn.EitherModule[lamp.autograd.Variable,lamp.autograd.Variable,lamp.nn.Seq4[lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.nn.Linearwithlamp.nn.GenericModule[lamp.autograd.Variable,lamp.autograd.Variable],lamp.nn.BatchNormwithlamp.nn.GenericModule[lamp.autograd.Variable,lamp.autograd.Variable],lamp.nn.Funwithlamp.nn.GenericModule[lamp.autograd.Variable,lamp.autograd.Variable],lamp.nn.Dropoutwithlamp.nn.GenericModule[lamp.autograd.Variable,lamp.autograd.Variable]],lamp.nn.Linear]]]", "kind" : "def"}, {"label" : "loadN", "tail" : "(arg0: Load[M]): Load[NGCN[M]]", "member" : "lamp.nn.NGCN.loadN", "link" : "lamp\/nn\/NGCN$.html#loadN[M<:lamp.nn.Module](implicitevidence$7:lamp.nn.Load[M]):lamp.nn.Load[lamp.nn.NGCN[M]]", "kind" : "implicit def"}, {"label" : "trainingModeN", "tail" : "(arg0: TrainingMode[M]): TrainingMode[NGCN[M]]", "member" : "lamp.nn.NGCN.trainingModeN", "link" : "lamp\/nn\/NGCN$.html#trainingModeN[M<:lamp.nn.Module](implicitevidence$6:lamp.nn.TrainingMode[M]):lamp.nn.TrainingMode[lamp.nn.NGCN[M]]", "kind" : "implicit def"}, {"label" : "Weights", "tail" : "", "member" : "lamp.nn.NGCN.Weights", "link" : "lamp\/nn\/NGCN$.html#Weights", "kind" : "case object"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/NGCN$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/NGCN$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/NGCN$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/NGCN$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/NGCN$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/NGCN$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/NGCN$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/NGCN$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/NGCN$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/NGCN$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/NGCN$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/NGCN$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/NGCN$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/NGCN$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/NGCN$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/NGCN$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/NGCN$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/NGCN$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/NGCN$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "forward", "tail" : "(x: (Variable, Variable))(arg0: Sc[S]): (Variable, Variable)", "member" : "lamp.nn.NGCN.forward", "link" : "lamp\/nn\/NGCN.html#forward[S](x:(lamp.autograd.Variable,lamp.autograd.Variable))(implicitevidence$5:lamp.Sc[S]):(lamp.autograd.Variable,lamp.autograd.Variable)", "kind" : "def"}, {"label" : "state", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.NGCN.state", "link" : "lamp\/nn\/NGCN.html#state:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "def"}, {"member" : "lamp.nn.NGCN#<init>", "error" : "unsupported entity"}, {"label" : "includeZeroOrder", "tail" : ": Boolean", "member" : "lamp.nn.NGCN.includeZeroOrder", "link" : "lamp\/nn\/NGCN.html#includeZeroOrder:Boolean", "kind" : "val"}, {"label" : "K", "tail" : ": Int", "member" : "lamp.nn.NGCN.K", "link" : "lamp\/nn\/NGCN.html#K:Int", "kind" : "val"}, {"label" : "weightFc", "tail" : ": Constant", "member" : "lamp.nn.NGCN.weightFc", "link" : "lamp\/nn\/NGCN.html#weightFc:lamp.autograd.Constant", "kind" : "val"}, {"label" : "transforms", "tail" : ": Seq[M with Module]", "member" : "lamp.nn.NGCN.transforms", "link" : "lamp\/nn\/NGCN.html#transforms:Seq[Mwithlamp.nn.Module]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/nn\/NGCN.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "learnableParameters", "tail" : "(): Long", "member" : "lamp.nn.GenericModule.learnableParameters", "link" : "lamp\/nn\/NGCN.html#learnableParameters:Long", "kind" : "final def"}, {"label" : "gradients", "tail" : "(loss: Variable, zeroGrad: Boolean): Seq[Option[STen]]", "member" : "lamp.nn.GenericModule.gradients", "link" : "lamp\/nn\/NGCN.html#gradients(loss:lamp.autograd.Variable,zeroGrad:Boolean):Seq[Option[lamp.STen]]", "kind" : "final def"}, {"label" : "zeroGrad", "tail" : "(): Unit", "member" : "lamp.nn.GenericModule.zeroGrad", "link" : "lamp\/nn\/NGCN.html#zeroGrad():Unit", "kind" : "final def"}, {"label" : "parameters", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.GenericModule.parameters", "link" : "lamp\/nn\/NGCN.html#parameters:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "final def"}, {"label" : "apply", "tail" : "(a: (Variable, Variable))(arg0: Sc[S]): (Variable, Variable)", "member" : "lamp.nn.GenericModule.apply", "link" : "lamp\/nn\/NGCN.html#apply[S](a:A)(implicitevidence$17:lamp.Sc[S]):B", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/NGCN.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/NGCN.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/NGCN.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/NGCN.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/NGCN.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/NGCN.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/NGCN.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/NGCN.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/NGCN.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/NGCN.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/NGCN.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/NGCN.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/NGCN.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/NGCN.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/NGCN.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/NGCN.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/nn\/NGCN.html", "kind" : "case class"}, {"name" : "lamp.nn.NoTag", "case object" : "lamp\/nn\/NoTag$.html", "shortDescription" : "", "members_case object" : [{"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/nn\/NoTag$.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "productElementName", "tail" : "(n: Int): String", "member" : "scala.Product.productElementName", "link" : "lamp\/nn\/NoTag$.html#productElementName(n:Int):String", "kind" : "def"}, {"label" : "leaf", "tail" : "(): PTag", "member" : "lamp.nn.LeafTag.leaf", "link" : "lamp\/nn\/NoTag$.html#leaf:lamp.nn.PTag", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/NoTag$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/NoTag$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/NoTag$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/NoTag$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/NoTag$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/NoTag$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/NoTag$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/NoTag$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/NoTag$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/NoTag$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/NoTag$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/NoTag$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/NoTag$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/NoTag$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/NoTag$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/NoTag$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/NoTag$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "case object"}, {"name" : "lamp.nn.Optimizer", "trait" : "lamp\/nn\/Optimizer.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/Optimizer.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/Optimizer.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/Optimizer.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/Optimizer.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/Optimizer.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/Optimizer.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/Optimizer.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Optimizer.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Optimizer.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Optimizer.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/Optimizer.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/Optimizer.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/Optimizer.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/Optimizer.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/Optimizer.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/Optimizer.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/Optimizer.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/Optimizer.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/Optimizer.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "load", "tail" : "(stat: Seq[STen]): Unit", "member" : "lamp.nn.Optimizer.load", "link" : "lamp\/nn\/Optimizer.html#load(stat:Seq[lamp.STen]):Unit", "kind" : "abstract def"}, {"label" : "state", "tail" : "(): Seq[STen]", "member" : "lamp.nn.Optimizer.state", "link" : "lamp\/nn\/Optimizer.html#state:Seq[lamp.STen]", "kind" : "abstract def"}, {"label" : "release", "tail" : "(): Unit", "member" : "lamp.nn.Optimizer.release", "link" : "lamp\/nn\/Optimizer.html#release():Unit", "kind" : "abstract def"}, {"label" : "step", "tail" : "(gradients: Seq[Option[STen]], scheduleFactor: Double): Unit", "member" : "lamp.nn.Optimizer.step", "link" : "lamp\/nn\/Optimizer.html#step(gradients:Seq[Option[lamp.STen]],scheduleFactor:Double):Unit", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "lamp.nn.OptimizerHyperparameter", "trait" : "lamp\/nn\/OptimizerHyperparameter.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/OptimizerHyperparameter.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/OptimizerHyperparameter.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/OptimizerHyperparameter.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/OptimizerHyperparameter.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/OptimizerHyperparameter.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/OptimizerHyperparameter.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/OptimizerHyperparameter.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/OptimizerHyperparameter.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/OptimizerHyperparameter.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/OptimizerHyperparameter.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/OptimizerHyperparameter.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/OptimizerHyperparameter.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/OptimizerHyperparameter.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/OptimizerHyperparameter.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/OptimizerHyperparameter.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/OptimizerHyperparameter.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/OptimizerHyperparameter.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/OptimizerHyperparameter.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/OptimizerHyperparameter.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "apply", "tail" : "(ptag: PTag): Double", "member" : "lamp.nn.OptimizerHyperparameter.apply", "link" : "lamp\/nn\/OptimizerHyperparameter.html#apply(ptag:lamp.nn.PTag):Double", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "lamp.nn.Passthrough", "shortDescription" : "", "object" : "lamp\/nn\/Passthrough$.html", "members_object" : [{"label" : "load", "tail" : "(arg0: Load[M]): Load[Passthrough[M]]", "member" : "lamp.nn.Passthrough.load", "link" : "lamp\/nn\/Passthrough$.html#load[M<:lamp.nn.Module](implicitevidence$3:lamp.nn.Load[M]):lamp.nn.Load[lamp.nn.Passthrough[M]]", "kind" : "implicit def"}, {"label" : "trainingMode", "tail" : "(arg0: TrainingMode[M]): TrainingMode[Passthrough[M]]", "member" : "lamp.nn.Passthrough.trainingMode", "link" : "lamp\/nn\/Passthrough$.html#trainingMode[M<:lamp.nn.Module](implicitevidence$2:lamp.nn.TrainingMode[M]):lamp.nn.TrainingMode[lamp.nn.Passthrough[M]]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/Passthrough$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/Passthrough$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/Passthrough$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/Passthrough$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/Passthrough$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/Passthrough$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/Passthrough$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Passthrough$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Passthrough$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Passthrough$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/Passthrough$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/Passthrough$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/Passthrough$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/Passthrough$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/Passthrough$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/Passthrough$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/Passthrough$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/Passthrough$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/Passthrough$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "forward", "tail" : "(x: (Variable, Variable))(arg0: Sc[S]): (Variable, Variable)", "member" : "lamp.nn.Passthrough.forward", "link" : "lamp\/nn\/Passthrough.html#forward[S](x:(lamp.autograd.Variable,lamp.autograd.Variable))(implicitevidence$1:lamp.Sc[S]):(lamp.autograd.Variable,lamp.autograd.Variable)", "kind" : "def"}, {"label" : "state", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.Passthrough.state", "link" : "lamp\/nn\/Passthrough.html#state:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "def"}, {"member" : "lamp.nn.Passthrough#<init>", "error" : "unsupported entity"}, {"label" : "m", "tail" : ": M with Module", "member" : "lamp.nn.Passthrough.m", "link" : "lamp\/nn\/Passthrough.html#m:Mwithlamp.nn.Module", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/nn\/Passthrough.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "learnableParameters", "tail" : "(): Long", "member" : "lamp.nn.GenericModule.learnableParameters", "link" : "lamp\/nn\/Passthrough.html#learnableParameters:Long", "kind" : "final def"}, {"label" : "gradients", "tail" : "(loss: Variable, zeroGrad: Boolean): Seq[Option[STen]]", "member" : "lamp.nn.GenericModule.gradients", "link" : "lamp\/nn\/Passthrough.html#gradients(loss:lamp.autograd.Variable,zeroGrad:Boolean):Seq[Option[lamp.STen]]", "kind" : "final def"}, {"label" : "zeroGrad", "tail" : "(): Unit", "member" : "lamp.nn.GenericModule.zeroGrad", "link" : "lamp\/nn\/Passthrough.html#zeroGrad():Unit", "kind" : "final def"}, {"label" : "parameters", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.GenericModule.parameters", "link" : "lamp\/nn\/Passthrough.html#parameters:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "final def"}, {"label" : "apply", "tail" : "(a: (Variable, Variable))(arg0: Sc[S]): (Variable, Variable)", "member" : "lamp.nn.GenericModule.apply", "link" : "lamp\/nn\/Passthrough.html#apply[S](a:A)(implicitevidence$17:lamp.Sc[S]):B", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/Passthrough.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/Passthrough.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/Passthrough.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/Passthrough.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/Passthrough.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/Passthrough.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/Passthrough.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Passthrough.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Passthrough.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Passthrough.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/Passthrough.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/Passthrough.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/Passthrough.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/Passthrough.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/Passthrough.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/Passthrough.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/nn\/Passthrough.html", "kind" : "case class"}, {"name" : "lamp.nn.PositionalEmbedding", "shortDescription" : "", "object" : "lamp\/nn\/PositionalEmbedding$.html", "members_object" : [{"label" : "simpleSequence", "tail" : "(sequenceLength: Int, dimension: Int, maxDistance: Int, device: Device, precision: FloatingPointPrecision)(scope: Scope): STen", "member" : "lamp.nn.PositionalEmbedding.simpleSequence", "link" : "lamp\/nn\/PositionalEmbedding$.html#simpleSequence(sequenceLength:Int,dimension:Int,maxDistance:Int,device:lamp.Device,precision:lamp.FloatingPointPrecision)(implicitscope:lamp.Scope):lamp.STen", "kind" : "def"}, {"label" : "vaswani", "tail" : "(sequenceLength: Int, dimension: Int, device: Device, precision: FloatingPointPrecision)(arg0: Sc[S]): STen", "member" : "lamp.nn.PositionalEmbedding.vaswani", "link" : "lamp\/nn\/PositionalEmbedding$.html#vaswani[S](sequenceLength:Int,dimension:Int,device:lamp.Device,precision:lamp.FloatingPointPrecision)(implicitevidence$12:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/PositionalEmbedding$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/PositionalEmbedding$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/PositionalEmbedding$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/PositionalEmbedding$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/PositionalEmbedding$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/PositionalEmbedding$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/PositionalEmbedding$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/PositionalEmbedding$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/PositionalEmbedding$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/PositionalEmbedding$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/PositionalEmbedding$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/PositionalEmbedding$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/PositionalEmbedding$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/PositionalEmbedding$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/PositionalEmbedding$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/PositionalEmbedding$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/PositionalEmbedding$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/PositionalEmbedding$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/PositionalEmbedding$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "lamp.nn.PTag", "object" : "lamp\/nn\/PTag$.html", "members_object" : [{"label" : "isMovable", "tail" : "(): Movable[PTag] { def list(t: lamp.nn.PTag): scala.collection.immutable.Nil.type }", "member" : "lamp.nn.PTag.isMovable", "link" : "lamp\/nn\/PTag$.html#isMovable:lamp.Movable[lamp.nn.PTag]{deflist(t:lamp.nn.PTag):scala.collection.immutable.Nil.type}", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/PTag$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/PTag$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/PTag$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/PTag$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/PTag$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/PTag$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/PTag$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/PTag$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/PTag$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/PTag$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/PTag$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/PTag$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/PTag$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/PTag$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/PTag$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/PTag$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/PTag$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/PTag$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/PTag$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "lamp\/nn\/PTag.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/PTag.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/PTag.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/PTag.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/PTag.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/PTag.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/PTag.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/PTag.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/PTag.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/PTag.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/PTag.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/PTag.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/PTag.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/PTag.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/PTag.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/PTag.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/PTag.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/PTag.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/PTag.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/PTag.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "leaf", "tail" : "(): PTag", "member" : "lamp.nn.PTag.leaf", "link" : "lamp\/nn\/PTag.html#leaf:lamp.nn.PTag", "kind" : "abstract def"}], "shortDescription" : "A small trait to mark paramters for unique identification"}, {"name" : "lamp.nn.RAdam", "shortDescription" : "Rectified Adam optimizer algorithm", "object" : "lamp\/nn\/RAdam$.html", "members_object" : [{"label" : "factory", "tail" : "(weightDecay: OptimizerHyperparameter, learningRate: OptimizerHyperparameter, beta1: OptimizerHyperparameter, beta2: OptimizerHyperparameter, eps: Double, clip: Option[Double]): (Seq[(STen, PTag)]) => RAdam", "member" : "lamp.nn.RAdam.factory", "link" : "lamp\/nn\/RAdam$.html#factory(weightDecay:lamp.nn.OptimizerHyperparameter,learningRate:lamp.nn.OptimizerHyperparameter,beta1:lamp.nn.OptimizerHyperparameter,beta2:lamp.nn.OptimizerHyperparameter,eps:Double,clip:Option[Double]):Seq[(lamp.STen,lamp.nn.PTag)]=>lamp.nn.RAdam", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/RAdam$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/RAdam$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/RAdam$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/RAdam$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/RAdam$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/RAdam$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/RAdam$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/RAdam$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/RAdam$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/RAdam$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/RAdam$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/RAdam$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/RAdam$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/RAdam$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/RAdam$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/RAdam$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/RAdam$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/RAdam$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/RAdam$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "step", "tail" : "(gradients: Seq[Option[STen]], scheduleFactor: Double): Unit", "member" : "lamp.nn.RAdam.step", "link" : "lamp\/nn\/RAdam.html#step(gradients:Seq[Option[lamp.STen]],scheduleFactor:Double):Unit", "kind" : "def"}, {"label" : "state", "tail" : "(): List[STen]", "member" : "lamp.nn.RAdam.state", "link" : "lamp\/nn\/RAdam.html#state:List[lamp.STen]", "kind" : "def"}, {"label" : "release", "tail" : "(): Unit", "member" : "lamp.nn.RAdam.release", "link" : "lamp\/nn\/RAdam.html#release():Unit", "kind" : "def"}, {"label" : "load", "tail" : "(tensors: Seq[STen]): Unit", "member" : "lamp.nn.RAdam.load", "link" : "lamp\/nn\/RAdam.html#load(tensors:Seq[lamp.STen]):Unit", "kind" : "def"}, {"label" : "stepCountSTen", "tail" : ": STen", "member" : "lamp.nn.RAdam.stepCountSTen", "link" : "lamp\/nn\/RAdam.html#stepCountSTen:lamp.STen", "kind" : "val"}, {"label" : "stepCount", "tail" : ": Long", "member" : "lamp.nn.RAdam.stepCount", "link" : "lamp\/nn\/RAdam.html#stepCount:Long", "kind" : "var"}, {"label" : "vt", "tail" : ": List[STen]", "member" : "lamp.nn.RAdam.vt", "link" : "lamp\/nn\/RAdam.html#vt:List[lamp.STen]", "kind" : "val"}, {"label" : "mt", "tail" : ": List[STen]", "member" : "lamp.nn.RAdam.mt", "link" : "lamp\/nn\/RAdam.html#mt:List[lamp.STen]", "kind" : "val"}, {"label" : "scope", "tail" : ": Scope", "member" : "lamp.nn.RAdam.scope", "link" : "lamp\/nn\/RAdam.html#scope:lamp.Scope", "kind" : "val"}, {"member" : "lamp.nn.RAdam#<init>", "error" : "unsupported entity"}, {"label" : "clip", "tail" : ": Option[Double]", "member" : "lamp.nn.RAdam.clip", "link" : "lamp\/nn\/RAdam.html#clip:Option[Double]", "kind" : "val"}, {"label" : "eps", "tail" : ": Double", "member" : "lamp.nn.RAdam.eps", "link" : "lamp\/nn\/RAdam.html#eps:Double", "kind" : "val"}, {"label" : "beta2", "tail" : ": OptimizerHyperparameter", "member" : "lamp.nn.RAdam.beta2", "link" : "lamp\/nn\/RAdam.html#beta2:lamp.nn.OptimizerHyperparameter", "kind" : "val"}, {"label" : "beta1", "tail" : ": OptimizerHyperparameter", "member" : "lamp.nn.RAdam.beta1", "link" : "lamp\/nn\/RAdam.html#beta1:lamp.nn.OptimizerHyperparameter", "kind" : "val"}, {"label" : "learningRate", "tail" : ": OptimizerHyperparameter", "member" : "lamp.nn.RAdam.learningRate", "link" : "lamp\/nn\/RAdam.html#learningRate:lamp.nn.OptimizerHyperparameter", "kind" : "val"}, {"label" : "weightDecay", "tail" : ": OptimizerHyperparameter", "member" : "lamp.nn.RAdam.weightDecay", "link" : "lamp\/nn\/RAdam.html#weightDecay:lamp.nn.OptimizerHyperparameter", "kind" : "val"}, {"label" : "parameters", "tail" : ": Seq[(STen, PTag)]", "member" : "lamp.nn.RAdam.parameters", "link" : "lamp\/nn\/RAdam.html#parameters:Seq[(lamp.STen,lamp.nn.PTag)]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/nn\/RAdam.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/RAdam.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/RAdam.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/RAdam.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/RAdam.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/RAdam.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/RAdam.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/RAdam.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/RAdam.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/RAdam.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/RAdam.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/RAdam.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/RAdam.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/RAdam.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/RAdam.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/RAdam.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/RAdam.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/nn\/RAdam.html", "kind" : "case class"}, {"name" : "lamp.nn.ResidualModule", "shortDescription" : "", "object" : "lamp\/nn\/ResidualModule$.html", "members_object" : [{"label" : "load", "tail" : "(arg0: Load[M]): Load[ResidualModule[M]]", "member" : "lamp.nn.ResidualModule.load", "link" : "lamp\/nn\/ResidualModule$.html#load[M<:lamp.nn.Module](implicitevidence$3:lamp.nn.Load[M]):lamp.nn.Load[lamp.nn.ResidualModule[M]]", "kind" : "implicit def"}, {"label" : "trainingMode", "tail" : "(arg0: TrainingMode[M]): TrainingMode[ResidualModule[M]]", "member" : "lamp.nn.ResidualModule.trainingMode", "link" : "lamp\/nn\/ResidualModule$.html#trainingMode[M<:lamp.nn.Module](implicitevidence$2:lamp.nn.TrainingMode[M]):lamp.nn.TrainingMode[lamp.nn.ResidualModule[M]]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/ResidualModule$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/ResidualModule$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/ResidualModule$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/ResidualModule$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/ResidualModule$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/ResidualModule$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/ResidualModule$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/ResidualModule$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/ResidualModule$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/ResidualModule$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/ResidualModule$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/ResidualModule$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/ResidualModule$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/ResidualModule$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/ResidualModule$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/ResidualModule$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/ResidualModule$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/ResidualModule$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/ResidualModule$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "forward", "tail" : "(x: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.nn.ResidualModule.forward", "link" : "lamp\/nn\/ResidualModule.html#forward[S](x:lamp.autograd.Variable)(implicitevidence$1:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "state", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.ResidualModule.state", "link" : "lamp\/nn\/ResidualModule.html#state:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "def"}, {"member" : "lamp.nn.ResidualModule#<init>", "error" : "unsupported entity"}, {"label" : "transform", "tail" : ": M with Module", "member" : "lamp.nn.ResidualModule.transform", "link" : "lamp\/nn\/ResidualModule.html#transform:Mwithlamp.nn.Module", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/nn\/ResidualModule.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "learnableParameters", "tail" : "(): Long", "member" : "lamp.nn.GenericModule.learnableParameters", "link" : "lamp\/nn\/ResidualModule.html#learnableParameters:Long", "kind" : "final def"}, {"label" : "gradients", "tail" : "(loss: Variable, zeroGrad: Boolean): Seq[Option[STen]]", "member" : "lamp.nn.GenericModule.gradients", "link" : "lamp\/nn\/ResidualModule.html#gradients(loss:lamp.autograd.Variable,zeroGrad:Boolean):Seq[Option[lamp.STen]]", "kind" : "final def"}, {"label" : "zeroGrad", "tail" : "(): Unit", "member" : "lamp.nn.GenericModule.zeroGrad", "link" : "lamp\/nn\/ResidualModule.html#zeroGrad():Unit", "kind" : "final def"}, {"label" : "parameters", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.GenericModule.parameters", "link" : "lamp\/nn\/ResidualModule.html#parameters:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "final def"}, {"label" : "apply", "tail" : "(a: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.nn.GenericModule.apply", "link" : "lamp\/nn\/ResidualModule.html#apply[S](a:A)(implicitevidence$17:lamp.Sc[S]):B", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/ResidualModule.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/ResidualModule.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/ResidualModule.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/ResidualModule.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/ResidualModule.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/ResidualModule.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/ResidualModule.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/ResidualModule.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/ResidualModule.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/ResidualModule.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/ResidualModule.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/ResidualModule.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/ResidualModule.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/ResidualModule.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/ResidualModule.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/ResidualModule.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/nn\/ResidualModule.html", "kind" : "case class"}, {"name" : "lamp.nn.RNN", "shortDescription" : "Inputs of size (sequence length * batch * in dim)Outputs of size (sequence length * batch * hidden dim)", "object" : "lamp\/nn\/RNN$.html", "members_object" : [{"label" : "apply", "tail" : "(in: Int, hiddenSize: Int, tOpt: STenOptions)(arg0: Sc[S]): RNN", "member" : "lamp.nn.RNN.apply", "link" : "lamp\/nn\/RNN$.html#apply[S](in:Int,hiddenSize:Int,tOpt:lamp.STenOptions)(implicitevidence$4:lamp.Sc[S]):lamp.nn.RNN", "kind" : "def"}, {"label" : "BiasH", "tail" : "", "member" : "lamp.nn.RNN.BiasH", "link" : "lamp\/nn\/RNN$.html#BiasH", "kind" : "case object"}, {"label" : "WeightHh", "tail" : "", "member" : "lamp.nn.RNN.WeightHh", "link" : "lamp\/nn\/RNN$.html#WeightHh", "kind" : "case object"}, {"label" : "WeightXh", "tail" : "", "member" : "lamp.nn.RNN.WeightXh", "link" : "lamp\/nn\/RNN$.html#WeightXh", "kind" : "case object"}, {"label" : "load", "tail" : ": Load[RNN]", "member" : "lamp.nn.RNN.load", "link" : "lamp\/nn\/RNN$.html#load:lamp.nn.Load[lamp.nn.RNN]", "kind" : "implicit val"}, {"label" : "is", "tail" : ": InitState[RNN, Option[Variable]]", "member" : "lamp.nn.RNN.is", "link" : "lamp\/nn\/RNN$.html#is:lamp.nn.InitState[lamp.nn.RNN,Option[lamp.autograd.Variable]]", "kind" : "implicit val"}, {"label" : "trainingMode", "tail" : ": TrainingMode[RNN]", "member" : "lamp.nn.RNN.trainingMode", "link" : "lamp\/nn\/RNN$.html#trainingMode:lamp.nn.TrainingMode[lamp.nn.RNN]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/RNN$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/RNN$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/RNN$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/RNN$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/RNN$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/RNN$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/RNN$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/RNN$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/RNN$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/RNN$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/RNN$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/RNN$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/RNN$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/RNN$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/RNN$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/RNN$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/RNN$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/RNN$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/RNN$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "forward1", "tail" : "(x: Variable, state: Option[Variable])(arg0: Sc[S]): (Variable, Some[Variable])", "member" : "lamp.nn.RNN.forward1", "link" : "lamp\/nn\/RNN.html#forward1[S](x:lamp.autograd.Variable,state:Option[lamp.autograd.Variable])(implicitevidence$3:lamp.Sc[S]):(lamp.autograd.Variable,Some[lamp.autograd.Variable])", "kind" : "def"}, {"label" : "forward", "tail" : "(a: (Variable, Option[Variable]))(arg0: Sc[S]): (Variable, Some[Variable])", "member" : "lamp.nn.RNN.forward", "link" : "lamp\/nn\/RNN.html#forward[S](a:(lamp.autograd.Variable,Option[lamp.autograd.Variable]))(implicitevidence$2:lamp.Sc[S]):(lamp.autograd.Variable,Some[lamp.autograd.Variable])", "kind" : "def"}, {"label" : "state", "tail" : "(): List[(Constant, LeafTag with Product with Serializable)]", "member" : "lamp.nn.RNN.state", "link" : "lamp\/nn\/RNN.html#state:List[(lamp.autograd.Constant,lamp.nn.LeafTagwithProductwithjava.io.Serializable)]", "kind" : "def"}, {"label" : "hiddenSize", "tail" : ": Long", "member" : "lamp.nn.RNN.hiddenSize", "link" : "lamp\/nn\/RNN.html#hiddenSize:Long", "kind" : "val"}, {"label" : "inputSize", "tail" : ": Long", "member" : "lamp.nn.RNN.inputSize", "link" : "lamp\/nn\/RNN.html#inputSize:Long", "kind" : "val"}, {"member" : "lamp.nn.RNN#<init>", "error" : "unsupported entity"}, {"label" : "biasH", "tail" : ": Constant", "member" : "lamp.nn.RNN.biasH", "link" : "lamp\/nn\/RNN.html#biasH:lamp.autograd.Constant", "kind" : "val"}, {"label" : "weightHh", "tail" : ": Constant", "member" : "lamp.nn.RNN.weightHh", "link" : "lamp\/nn\/RNN.html#weightHh:lamp.autograd.Constant", "kind" : "val"}, {"label" : "weightXh", "tail" : ": Constant", "member" : "lamp.nn.RNN.weightXh", "link" : "lamp\/nn\/RNN.html#weightXh:lamp.autograd.Constant", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/nn\/RNN.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "learnableParameters", "tail" : "(): Long", "member" : "lamp.nn.GenericModule.learnableParameters", "link" : "lamp\/nn\/RNN.html#learnableParameters:Long", "kind" : "final def"}, {"label" : "gradients", "tail" : "(loss: Variable, zeroGrad: Boolean): Seq[Option[STen]]", "member" : "lamp.nn.GenericModule.gradients", "link" : "lamp\/nn\/RNN.html#gradients(loss:lamp.autograd.Variable,zeroGrad:Boolean):Seq[Option[lamp.STen]]", "kind" : "final def"}, {"label" : "zeroGrad", "tail" : "(): Unit", "member" : "lamp.nn.GenericModule.zeroGrad", "link" : "lamp\/nn\/RNN.html#zeroGrad():Unit", "kind" : "final def"}, {"label" : "parameters", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.GenericModule.parameters", "link" : "lamp\/nn\/RNN.html#parameters:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "final def"}, {"label" : "apply", "tail" : "(a: (Variable, Option[Variable]))(arg0: Sc[S]): (Variable, Option[Variable])", "member" : "lamp.nn.GenericModule.apply", "link" : "lamp\/nn\/RNN.html#apply[S](a:A)(implicitevidence$17:lamp.Sc[S]):B", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/RNN.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/RNN.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/RNN.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/RNN.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/RNN.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/RNN.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/RNN.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/RNN.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/RNN.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/RNN.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/RNN.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/RNN.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/RNN.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/RNN.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/RNN.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/RNN.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/nn\/RNN.html", "kind" : "case class"}, {"name" : "lamp.nn.Seq2", "shortDescription" : "", "object" : "lamp\/nn\/Seq2$.html", "members_object" : [{"label" : "load", "tail" : "(arg0: Load[M1], arg1: Load[M2]): Load[Seq2[T1, T2, T3, M1, M2]]", "member" : "lamp.nn.Seq2.load", "link" : "lamp\/nn\/Seq2$.html#load[T1,T2,T3,S1,S2,M1<:lamp.nn.GenericModule[T1,T2],M2<:lamp.nn.GenericModule[T2,T3]](implicitevidence$4:lamp.nn.Load[M1],implicitevidence$5:lamp.nn.Load[M2]):lamp.nn.Load[lamp.nn.Seq2[T1,T2,T3,M1,M2]]", "kind" : "implicit def"}, {"label" : "trainingMode", "tail" : "(arg0: TrainingMode[M1], arg1: TrainingMode[M2]): TrainingMode[Seq2[T1, T2, T3, M1, M2]]", "member" : "lamp.nn.Seq2.trainingMode", "link" : "lamp\/nn\/Seq2$.html#trainingMode[T1,T2,T3,S1,S2,M1<:lamp.nn.GenericModule[T1,T2],M2<:lamp.nn.GenericModule[T2,T3]](implicitevidence$2:lamp.nn.TrainingMode[M1],implicitevidence$3:lamp.nn.TrainingMode[M2]):lamp.nn.TrainingMode[lamp.nn.Seq2[T1,T2,T3,M1,M2]]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/Seq2$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/Seq2$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/Seq2$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/Seq2$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/Seq2$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/Seq2$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/Seq2$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Seq2$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Seq2$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Seq2$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/Seq2$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/Seq2$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/Seq2$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/Seq2$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/Seq2$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/Seq2$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/Seq2$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/Seq2$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/Seq2$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "forward", "tail" : "(x: T1)(arg0: Sc[S]): T3", "member" : "lamp.nn.Seq2.forward", "link" : "lamp\/nn\/Seq2.html#forward[S](x:T1)(implicitevidence$1:lamp.Sc[S]):T3", "kind" : "def"}, {"label" : "state", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.Seq2.state", "link" : "lamp\/nn\/Seq2.html#state:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "def"}, {"member" : "lamp.nn.Seq2#<init>", "error" : "unsupported entity"}, {"label" : "m2", "tail" : ": M2 with GenericModule[T2, T3]", "member" : "lamp.nn.Seq2.m2", "link" : "lamp\/nn\/Seq2.html#m2:M2withlamp.nn.GenericModule[T2,T3]", "kind" : "val"}, {"label" : "m1", "tail" : ": M1 with GenericModule[T1, T2]", "member" : "lamp.nn.Seq2.m1", "link" : "lamp\/nn\/Seq2.html#m1:M1withlamp.nn.GenericModule[T1,T2]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/nn\/Seq2.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "learnableParameters", "tail" : "(): Long", "member" : "lamp.nn.GenericModule.learnableParameters", "link" : "lamp\/nn\/Seq2.html#learnableParameters:Long", "kind" : "final def"}, {"label" : "gradients", "tail" : "(loss: Variable, zeroGrad: Boolean): Seq[Option[STen]]", "member" : "lamp.nn.GenericModule.gradients", "link" : "lamp\/nn\/Seq2.html#gradients(loss:lamp.autograd.Variable,zeroGrad:Boolean):Seq[Option[lamp.STen]]", "kind" : "final def"}, {"label" : "zeroGrad", "tail" : "(): Unit", "member" : "lamp.nn.GenericModule.zeroGrad", "link" : "lamp\/nn\/Seq2.html#zeroGrad():Unit", "kind" : "final def"}, {"label" : "parameters", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.GenericModule.parameters", "link" : "lamp\/nn\/Seq2.html#parameters:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "final def"}, {"label" : "apply", "tail" : "(a: T1)(arg0: Sc[S]): T3", "member" : "lamp.nn.GenericModule.apply", "link" : "lamp\/nn\/Seq2.html#apply[S](a:A)(implicitevidence$17:lamp.Sc[S]):B", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/Seq2.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/Seq2.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/Seq2.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/Seq2.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/Seq2.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/Seq2.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/Seq2.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Seq2.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Seq2.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Seq2.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/Seq2.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/Seq2.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/Seq2.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/Seq2.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/Seq2.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/Seq2.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/nn\/Seq2.html", "kind" : "case class"}, {"name" : "lamp.nn.Seq2Seq", "shortDescription" : "", "object" : "lamp\/nn\/Seq2Seq$.html", "members_object" : [{"label" : "initState", "tail" : "(is: InitState[M1, S0]): InitState[Seq2Seq[S0, S1, M1, M2], S0]", "member" : "lamp.nn.Seq2Seq.initState", "link" : "lamp\/nn\/Seq2Seq$.html#initState[S0,S1,M1<:lamp.nn.StatefulModule2[lamp.autograd.Variable,lamp.autograd.Variable,S0,S1],M2<:lamp.nn.StatefulModule[lamp.autograd.Variable,lamp.autograd.Variable,S1]](implicitis:lamp.nn.InitState[M1,S0]):lamp.nn.InitState[lamp.nn.Seq2Seq[S0,S1,M1,M2],S0]", "kind" : "implicit def"}, {"label" : "load", "tail" : "(arg0: Load[M1], arg1: Load[M2]): Load[Seq2Seq[S0, S1, M1, M2]]", "member" : "lamp.nn.Seq2Seq.load", "link" : "lamp\/nn\/Seq2Seq$.html#load[S0,S1,M1<:lamp.nn.StatefulModule2[lamp.autograd.Variable,lamp.autograd.Variable,S0,S1],M2<:lamp.nn.StatefulModule[lamp.autograd.Variable,lamp.autograd.Variable,S1]](implicitevidence$4:lamp.nn.Load[M1],implicitevidence$5:lamp.nn.Load[M2]):lamp.nn.Load[lamp.nn.Seq2Seq[S0,S1,M1,M2]]", "kind" : "implicit def"}, {"label" : "trainingMode", "tail" : "(arg0: TrainingMode[M1], arg1: TrainingMode[M2]): TrainingMode[Seq2Seq[S0, S1, M1, M2]]", "member" : "lamp.nn.Seq2Seq.trainingMode", "link" : "lamp\/nn\/Seq2Seq$.html#trainingMode[S0,S1,M1<:lamp.nn.StatefulModule2[lamp.autograd.Variable,lamp.autograd.Variable,S0,S1],M2<:lamp.nn.StatefulModule[lamp.autograd.Variable,lamp.autograd.Variable,S1]](implicitevidence$2:lamp.nn.TrainingMode[M1],implicitevidence$3:lamp.nn.TrainingMode[M2]):lamp.nn.TrainingMode[lamp.nn.Seq2Seq[S0,S1,M1,M2]]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/Seq2Seq$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/Seq2Seq$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/Seq2Seq$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/Seq2Seq$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/Seq2Seq$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/Seq2Seq$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/Seq2Seq$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Seq2Seq$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Seq2Seq$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Seq2Seq$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/Seq2Seq$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/Seq2Seq$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/Seq2Seq$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/Seq2Seq$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/Seq2Seq$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/Seq2Seq$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/Seq2Seq$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/Seq2Seq$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/Seq2Seq$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "state", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.Seq2Seq.state", "link" : "lamp\/nn\/Seq2Seq.html#state:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "def"}, {"label" : "forward", "tail" : "(x: ((Variable, Variable), S0))(arg0: Sc[S]): (Variable, S1)", "member" : "lamp.nn.Seq2Seq.forward", "link" : "lamp\/nn\/Seq2Seq.html#forward[S](x:((lamp.autograd.Variable,lamp.autograd.Variable),S0))(implicitevidence$1:lamp.Sc[S]):(lamp.autograd.Variable,S1)", "kind" : "def"}, {"member" : "lamp.nn.Seq2Seq#<init>", "error" : "unsupported entity"}, {"label" : "decoder", "tail" : ": M2 with StatefulModule[Variable, Variable, S1]", "member" : "lamp.nn.Seq2Seq.decoder", "link" : "lamp\/nn\/Seq2Seq.html#decoder:M2withlamp.nn.StatefulModule[lamp.autograd.Variable,lamp.autograd.Variable,S1]", "kind" : "val"}, {"label" : "encoder", "tail" : ": M1 with StatefulModule2[Variable, Variable, S0, S1]", "member" : "lamp.nn.Seq2Seq.encoder", "link" : "lamp\/nn\/Seq2Seq.html#encoder:M1withlamp.nn.StatefulModule2[lamp.autograd.Variable,lamp.autograd.Variable,S0,S1]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/nn\/Seq2Seq.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "learnableParameters", "tail" : "(): Long", "member" : "lamp.nn.GenericModule.learnableParameters", "link" : "lamp\/nn\/Seq2Seq.html#learnableParameters:Long", "kind" : "final def"}, {"label" : "gradients", "tail" : "(loss: Variable, zeroGrad: Boolean): Seq[Option[STen]]", "member" : "lamp.nn.GenericModule.gradients", "link" : "lamp\/nn\/Seq2Seq.html#gradients(loss:lamp.autograd.Variable,zeroGrad:Boolean):Seq[Option[lamp.STen]]", "kind" : "final def"}, {"label" : "zeroGrad", "tail" : "(): Unit", "member" : "lamp.nn.GenericModule.zeroGrad", "link" : "lamp\/nn\/Seq2Seq.html#zeroGrad():Unit", "kind" : "final def"}, {"label" : "parameters", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.GenericModule.parameters", "link" : "lamp\/nn\/Seq2Seq.html#parameters:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "final def"}, {"label" : "apply", "tail" : "(a: ((Variable, Variable), S0))(arg0: Sc[S]): (Variable, S1)", "member" : "lamp.nn.GenericModule.apply", "link" : "lamp\/nn\/Seq2Seq.html#apply[S](a:A)(implicitevidence$17:lamp.Sc[S]):B", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/Seq2Seq.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/Seq2Seq.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/Seq2Seq.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/Seq2Seq.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/Seq2Seq.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/Seq2Seq.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/Seq2Seq.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Seq2Seq.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Seq2Seq.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Seq2Seq.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/Seq2Seq.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/Seq2Seq.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/Seq2Seq.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/Seq2Seq.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/Seq2Seq.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/Seq2Seq.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/nn\/Seq2Seq.html", "kind" : "case class"}, {"name" : "lamp.nn.Seq2SeqWithAttention", "shortDescription" : "", "object" : "lamp\/nn\/Seq2SeqWithAttention$.html", "members_object" : [{"label" : "initState", "tail" : "(is: InitState[M1, S0]): InitState[Seq2SeqWithAttention[S0, S1, M0, M1, M2], S0]", "member" : "lamp.nn.Seq2SeqWithAttention.initState", "link" : "lamp\/nn\/Seq2SeqWithAttention$.html#initState[S0,S1,M0<:lamp.nn.Module,M1<:lamp.nn.StatefulModule2[lamp.autograd.Variable,lamp.autograd.Variable,S0,S1],M2<:lamp.nn.StatefulModule[lamp.autograd.Variable,lamp.autograd.Variable,S1]](implicitis:lamp.nn.InitState[M1,S0]):lamp.nn.InitState[lamp.nn.Seq2SeqWithAttention[S0,S1,M0,M1,M2],S0]", "kind" : "implicit def"}, {"label" : "load", "tail" : "(arg0: Load[M0], arg1: Load[M1], arg2: Load[M2]): Load[Seq2SeqWithAttention[S0, S1, M0, M1, M2]]", "member" : "lamp.nn.Seq2SeqWithAttention.load", "link" : "lamp\/nn\/Seq2SeqWithAttention$.html#load[S0,S1,M0<:lamp.nn.Module,M1<:lamp.nn.StatefulModule2[lamp.autograd.Variable,lamp.autograd.Variable,S0,S1],M2<:lamp.nn.StatefulModule[lamp.autograd.Variable,lamp.autograd.Variable,S1]](implicitevidence$5:lamp.nn.Load[M0],implicitevidence$6:lamp.nn.Load[M1],implicitevidence$7:lamp.nn.Load[M2]):lamp.nn.Load[lamp.nn.Seq2SeqWithAttention[S0,S1,M0,M1,M2]]", "kind" : "implicit def"}, {"label" : "trainingMode", "tail" : "(arg0: TrainingMode[M0], arg1: TrainingMode[M1], arg2: TrainingMode[M2]): TrainingMode[Seq2SeqWithAttention[S0, S1, M0, M1, M2]]", "member" : "lamp.nn.Seq2SeqWithAttention.trainingMode", "link" : "lamp\/nn\/Seq2SeqWithAttention$.html#trainingMode[S0,S1,M0<:lamp.nn.Module,M1<:lamp.nn.StatefulModule2[lamp.autograd.Variable,lamp.autograd.Variable,S0,S1],M2<:lamp.nn.StatefulModule[lamp.autograd.Variable,lamp.autograd.Variable,S1]](implicitevidence$2:lamp.nn.TrainingMode[M0],implicitevidence$3:lamp.nn.TrainingMode[M1],implicitevidence$4:lamp.nn.TrainingMode[M2]):lamp.nn.TrainingMode[lamp.nn.Seq2SeqWithAttention[S0,S1,M0,M1,M2]]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/Seq2SeqWithAttention$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/Seq2SeqWithAttention$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/Seq2SeqWithAttention$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/Seq2SeqWithAttention$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/Seq2SeqWithAttention$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/Seq2SeqWithAttention$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/Seq2SeqWithAttention$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Seq2SeqWithAttention$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Seq2SeqWithAttention$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Seq2SeqWithAttention$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/Seq2SeqWithAttention$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/Seq2SeqWithAttention$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/Seq2SeqWithAttention$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/Seq2SeqWithAttention$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/Seq2SeqWithAttention$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/Seq2SeqWithAttention$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/Seq2SeqWithAttention$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/Seq2SeqWithAttention$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/Seq2SeqWithAttention$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "state", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.Seq2SeqWithAttention.state", "link" : "lamp\/nn\/Seq2SeqWithAttention.html#state:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "def"}, {"label" : "forward", "tail" : "(x: ((Variable, Variable), S0))(arg0: Sc[S]): (Variable, S1)", "member" : "lamp.nn.Seq2SeqWithAttention.forward", "link" : "lamp\/nn\/Seq2SeqWithAttention.html#forward[S](x:((lamp.autograd.Variable,lamp.autograd.Variable),S0))(implicitevidence$1:lamp.Sc[S]):(lamp.autograd.Variable,S1)", "kind" : "def"}, {"label" : "attentionDecoder", "tail" : "(keyValue: Variable, source: Variable): AttentionDecoder[S1, M2 with StatefulModule[Variable, Variable, S1], M0 with Module]", "member" : "lamp.nn.Seq2SeqWithAttention.attentionDecoder", "link" : "lamp\/nn\/Seq2SeqWithAttention.html#attentionDecoder(keyValue:lamp.autograd.Variable,source:lamp.autograd.Variable):lamp.nn.AttentionDecoder[S1,M2withlamp.nn.StatefulModule[lamp.autograd.Variable,lamp.autograd.Variable,S1],M0withlamp.nn.Module]", "kind" : "def"}, {"member" : "lamp.nn.Seq2SeqWithAttention#<init>", "error" : "unsupported entity"}, {"label" : "stateToKey", "tail" : ": (S1) => Variable", "member" : "lamp.nn.Seq2SeqWithAttention.stateToKey", "link" : "lamp\/nn\/Seq2SeqWithAttention.html#stateToKey:S1=>lamp.autograd.Variable", "kind" : "val"}, {"label" : "padToken", "tail" : ": Long", "member" : "lamp.nn.Seq2SeqWithAttention.padToken", "link" : "lamp\/nn\/Seq2SeqWithAttention.html#padToken:Long", "kind" : "val"}, {"label" : "decoder", "tail" : ": M2 with StatefulModule[Variable, Variable, S1]", "member" : "lamp.nn.Seq2SeqWithAttention.decoder", "link" : "lamp\/nn\/Seq2SeqWithAttention.html#decoder:M2withlamp.nn.StatefulModule[lamp.autograd.Variable,lamp.autograd.Variable,S1]", "kind" : "val"}, {"label" : "encoder", "tail" : ": M1 with StatefulModule2[Variable, Variable, S0, S1]", "member" : "lamp.nn.Seq2SeqWithAttention.encoder", "link" : "lamp\/nn\/Seq2SeqWithAttention.html#encoder:M1withlamp.nn.StatefulModule2[lamp.autograd.Variable,lamp.autograd.Variable,S0,S1]", "kind" : "val"}, {"label" : "destinationEmbedding", "tail" : ": M0 with Module", "member" : "lamp.nn.Seq2SeqWithAttention.destinationEmbedding", "link" : "lamp\/nn\/Seq2SeqWithAttention.html#destinationEmbedding:M0withlamp.nn.Module", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/nn\/Seq2SeqWithAttention.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "learnableParameters", "tail" : "(): Long", "member" : "lamp.nn.GenericModule.learnableParameters", "link" : "lamp\/nn\/Seq2SeqWithAttention.html#learnableParameters:Long", "kind" : "final def"}, {"label" : "gradients", "tail" : "(loss: Variable, zeroGrad: Boolean): Seq[Option[STen]]", "member" : "lamp.nn.GenericModule.gradients", "link" : "lamp\/nn\/Seq2SeqWithAttention.html#gradients(loss:lamp.autograd.Variable,zeroGrad:Boolean):Seq[Option[lamp.STen]]", "kind" : "final def"}, {"label" : "zeroGrad", "tail" : "(): Unit", "member" : "lamp.nn.GenericModule.zeroGrad", "link" : "lamp\/nn\/Seq2SeqWithAttention.html#zeroGrad():Unit", "kind" : "final def"}, {"label" : "parameters", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.GenericModule.parameters", "link" : "lamp\/nn\/Seq2SeqWithAttention.html#parameters:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "final def"}, {"label" : "apply", "tail" : "(a: ((Variable, Variable), S0))(arg0: Sc[S]): (Variable, S1)", "member" : "lamp.nn.GenericModule.apply", "link" : "lamp\/nn\/Seq2SeqWithAttention.html#apply[S](a:A)(implicitevidence$17:lamp.Sc[S]):B", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/Seq2SeqWithAttention.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/Seq2SeqWithAttention.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/Seq2SeqWithAttention.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/Seq2SeqWithAttention.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/Seq2SeqWithAttention.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/Seq2SeqWithAttention.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/Seq2SeqWithAttention.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Seq2SeqWithAttention.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Seq2SeqWithAttention.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Seq2SeqWithAttention.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/Seq2SeqWithAttention.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/Seq2SeqWithAttention.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/Seq2SeqWithAttention.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/Seq2SeqWithAttention.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/Seq2SeqWithAttention.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/Seq2SeqWithAttention.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/nn\/Seq2SeqWithAttention.html", "kind" : "case class"}, {"name" : "lamp.nn.Seq3", "shortDescription" : "", "object" : "lamp\/nn\/Seq3$.html", "members_object" : [{"label" : "load", "tail" : "(arg0: Load[M1], arg1: Load[M2], arg2: Load[M3]): Load[Seq3[T1, T2, T3, T4, M1, M2, M3]]", "member" : "lamp.nn.Seq3.load", "link" : "lamp\/nn\/Seq3$.html#load[T1,T2,T3,T4,M1<:lamp.nn.GenericModule[T1,T2],M2<:lamp.nn.GenericModule[T2,T3],M3<:lamp.nn.GenericModule[T3,T4]](implicitevidence$10:lamp.nn.Load[M1],implicitevidence$11:lamp.nn.Load[M2],implicitevidence$12:lamp.nn.Load[M3]):lamp.nn.Load[lamp.nn.Seq3[T1,T2,T3,T4,M1,M2,M3]]", "kind" : "implicit def"}, {"label" : "trainingMode", "tail" : "(arg0: TrainingMode[M1], arg1: TrainingMode[M2], arg2: TrainingMode[M3]): TrainingMode[Seq3[T1, T2, T3, T4, M1, M2, M3]]", "member" : "lamp.nn.Seq3.trainingMode", "link" : "lamp\/nn\/Seq3$.html#trainingMode[T1,T2,T3,T4,M1<:lamp.nn.GenericModule[T1,T2],M2<:lamp.nn.GenericModule[T2,T3],M3<:lamp.nn.GenericModule[T3,T4]](implicitevidence$7:lamp.nn.TrainingMode[M1],implicitevidence$8:lamp.nn.TrainingMode[M2],implicitevidence$9:lamp.nn.TrainingMode[M3]):lamp.nn.TrainingMode[lamp.nn.Seq3[T1,T2,T3,T4,M1,M2,M3]]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/Seq3$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/Seq3$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/Seq3$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/Seq3$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/Seq3$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/Seq3$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/Seq3$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Seq3$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Seq3$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Seq3$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/Seq3$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/Seq3$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/Seq3$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/Seq3$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/Seq3$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/Seq3$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/Seq3$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/Seq3$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/Seq3$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "forward", "tail" : "(x: T1)(arg0: Sc[S]): T4", "member" : "lamp.nn.Seq3.forward", "link" : "lamp\/nn\/Seq3.html#forward[S](x:T1)(implicitevidence$6:lamp.Sc[S]):T4", "kind" : "def"}, {"label" : "state", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.Seq3.state", "link" : "lamp\/nn\/Seq3.html#state:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "def"}, {"member" : "lamp.nn.Seq3#<init>", "error" : "unsupported entity"}, {"label" : "m3", "tail" : ": M3 with GenericModule[T3, T4]", "member" : "lamp.nn.Seq3.m3", "link" : "lamp\/nn\/Seq3.html#m3:M3withlamp.nn.GenericModule[T3,T4]", "kind" : "val"}, {"label" : "m2", "tail" : ": M2 with GenericModule[T2, T3]", "member" : "lamp.nn.Seq3.m2", "link" : "lamp\/nn\/Seq3.html#m2:M2withlamp.nn.GenericModule[T2,T3]", "kind" : "val"}, {"label" : "m1", "tail" : ": M1 with GenericModule[T1, T2]", "member" : "lamp.nn.Seq3.m1", "link" : "lamp\/nn\/Seq3.html#m1:M1withlamp.nn.GenericModule[T1,T2]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/nn\/Seq3.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "learnableParameters", "tail" : "(): Long", "member" : "lamp.nn.GenericModule.learnableParameters", "link" : "lamp\/nn\/Seq3.html#learnableParameters:Long", "kind" : "final def"}, {"label" : "gradients", "tail" : "(loss: Variable, zeroGrad: Boolean): Seq[Option[STen]]", "member" : "lamp.nn.GenericModule.gradients", "link" : "lamp\/nn\/Seq3.html#gradients(loss:lamp.autograd.Variable,zeroGrad:Boolean):Seq[Option[lamp.STen]]", "kind" : "final def"}, {"label" : "zeroGrad", "tail" : "(): Unit", "member" : "lamp.nn.GenericModule.zeroGrad", "link" : "lamp\/nn\/Seq3.html#zeroGrad():Unit", "kind" : "final def"}, {"label" : "parameters", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.GenericModule.parameters", "link" : "lamp\/nn\/Seq3.html#parameters:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "final def"}, {"label" : "apply", "tail" : "(a: T1)(arg0: Sc[S]): T4", "member" : "lamp.nn.GenericModule.apply", "link" : "lamp\/nn\/Seq3.html#apply[S](a:A)(implicitevidence$17:lamp.Sc[S]):B", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/Seq3.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/Seq3.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/Seq3.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/Seq3.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/Seq3.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/Seq3.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/Seq3.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Seq3.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Seq3.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Seq3.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/Seq3.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/Seq3.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/Seq3.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/Seq3.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/Seq3.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/Seq3.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/nn\/Seq3.html", "kind" : "case class"}, {"name" : "lamp.nn.Seq4", "shortDescription" : "", "object" : "lamp\/nn\/Seq4$.html", "members_object" : [{"label" : "load", "tail" : "(arg0: Load[M1], arg1: Load[M2], arg2: Load[M3], arg3: Load[M4]): Load[Seq4[T1, T2, T3, T4, T5, M1, M2, M3, M4]]", "member" : "lamp.nn.Seq4.load", "link" : "lamp\/nn\/Seq4$.html#load[T1,T2,T3,T4,T5,M1<:lamp.nn.GenericModule[T1,T2],M2<:lamp.nn.GenericModule[T2,T3],M3<:lamp.nn.GenericModule[T3,T4],M4<:lamp.nn.GenericModule[T4,T5]](implicitevidence$18:lamp.nn.Load[M1],implicitevidence$19:lamp.nn.Load[M2],implicitevidence$20:lamp.nn.Load[M3],implicitevidence$21:lamp.nn.Load[M4]):lamp.nn.Load[lamp.nn.Seq4[T1,T2,T3,T4,T5,M1,M2,M3,M4]]", "kind" : "implicit def"}, {"label" : "trainingMode", "tail" : "(arg0: TrainingMode[M1], arg1: TrainingMode[M2], arg2: TrainingMode[M3], arg3: TrainingMode[M4]): TrainingMode[Seq4[T1, T2, T3, T4, T5, M1, M2, M3, M4]]", "member" : "lamp.nn.Seq4.trainingMode", "link" : "lamp\/nn\/Seq4$.html#trainingMode[T1,T2,T3,T4,T5,M1<:lamp.nn.GenericModule[T1,T2],M2<:lamp.nn.GenericModule[T2,T3],M3<:lamp.nn.GenericModule[T3,T4],M4<:lamp.nn.GenericModule[T4,T5]](implicitevidence$14:lamp.nn.TrainingMode[M1],implicitevidence$15:lamp.nn.TrainingMode[M2],implicitevidence$16:lamp.nn.TrainingMode[M3],implicitevidence$17:lamp.nn.TrainingMode[M4]):lamp.nn.TrainingMode[lamp.nn.Seq4[T1,T2,T3,T4,T5,M1,M2,M3,M4]]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/Seq4$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/Seq4$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/Seq4$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/Seq4$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/Seq4$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/Seq4$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/Seq4$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Seq4$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Seq4$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Seq4$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/Seq4$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/Seq4$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/Seq4$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/Seq4$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/Seq4$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/Seq4$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/Seq4$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/Seq4$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/Seq4$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "forward", "tail" : "(x: T1)(arg0: Sc[S]): T5", "member" : "lamp.nn.Seq4.forward", "link" : "lamp\/nn\/Seq4.html#forward[S](x:T1)(implicitevidence$13:lamp.Sc[S]):T5", "kind" : "def"}, {"label" : "state", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.Seq4.state", "link" : "lamp\/nn\/Seq4.html#state:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "def"}, {"member" : "lamp.nn.Seq4#<init>", "error" : "unsupported entity"}, {"label" : "m4", "tail" : ": M4 with GenericModule[T4, T5]", "member" : "lamp.nn.Seq4.m4", "link" : "lamp\/nn\/Seq4.html#m4:M4withlamp.nn.GenericModule[T4,T5]", "kind" : "val"}, {"label" : "m3", "tail" : ": M3 with GenericModule[T3, T4]", "member" : "lamp.nn.Seq4.m3", "link" : "lamp\/nn\/Seq4.html#m3:M3withlamp.nn.GenericModule[T3,T4]", "kind" : "val"}, {"label" : "m2", "tail" : ": M2 with GenericModule[T2, T3]", "member" : "lamp.nn.Seq4.m2", "link" : "lamp\/nn\/Seq4.html#m2:M2withlamp.nn.GenericModule[T2,T3]", "kind" : "val"}, {"label" : "m1", "tail" : ": M1 with GenericModule[T1, T2]", "member" : "lamp.nn.Seq4.m1", "link" : "lamp\/nn\/Seq4.html#m1:M1withlamp.nn.GenericModule[T1,T2]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/nn\/Seq4.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "learnableParameters", "tail" : "(): Long", "member" : "lamp.nn.GenericModule.learnableParameters", "link" : "lamp\/nn\/Seq4.html#learnableParameters:Long", "kind" : "final def"}, {"label" : "gradients", "tail" : "(loss: Variable, zeroGrad: Boolean): Seq[Option[STen]]", "member" : "lamp.nn.GenericModule.gradients", "link" : "lamp\/nn\/Seq4.html#gradients(loss:lamp.autograd.Variable,zeroGrad:Boolean):Seq[Option[lamp.STen]]", "kind" : "final def"}, {"label" : "zeroGrad", "tail" : "(): Unit", "member" : "lamp.nn.GenericModule.zeroGrad", "link" : "lamp\/nn\/Seq4.html#zeroGrad():Unit", "kind" : "final def"}, {"label" : "parameters", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.GenericModule.parameters", "link" : "lamp\/nn\/Seq4.html#parameters:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "final def"}, {"label" : "apply", "tail" : "(a: T1)(arg0: Sc[S]): T5", "member" : "lamp.nn.GenericModule.apply", "link" : "lamp\/nn\/Seq4.html#apply[S](a:A)(implicitevidence$17:lamp.Sc[S]):B", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/Seq4.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/Seq4.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/Seq4.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/Seq4.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/Seq4.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/Seq4.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/Seq4.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Seq4.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Seq4.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Seq4.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/Seq4.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/Seq4.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/Seq4.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/Seq4.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/Seq4.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/Seq4.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/nn\/Seq4.html", "kind" : "case class"}, {"name" : "lamp.nn.Seq5", "shortDescription" : "", "object" : "lamp\/nn\/Seq5$.html", "members_object" : [{"label" : "load", "tail" : "(arg0: Load[M1], arg1: Load[M2], arg2: Load[M3], arg3: Load[M4], arg4: Load[M5]): Load[Seq5[T1, T2, T3, T4, T5, T6, M1, M2, M3, M4, M5]]", "member" : "lamp.nn.Seq5.load", "link" : "lamp\/nn\/Seq5$.html#load[T1,T2,T3,T4,T5,T6,M1<:lamp.nn.GenericModule[T1,T2],M2<:lamp.nn.GenericModule[T2,T3],M3<:lamp.nn.GenericModule[T3,T4],M4<:lamp.nn.GenericModule[T4,T5],M5<:lamp.nn.GenericModule[T5,T6]](implicitevidence$28:lamp.nn.Load[M1],implicitevidence$29:lamp.nn.Load[M2],implicitevidence$30:lamp.nn.Load[M3],implicitevidence$31:lamp.nn.Load[M4],implicitevidence$32:lamp.nn.Load[M5]):lamp.nn.Load[lamp.nn.Seq5[T1,T2,T3,T4,T5,T6,M1,M2,M3,M4,M5]]", "kind" : "implicit def"}, {"label" : "trainingMode", "tail" : "(arg0: TrainingMode[M1], arg1: TrainingMode[M2], arg2: TrainingMode[M3], arg3: TrainingMode[M4], arg4: TrainingMode[M5]): TrainingMode[Seq5[T1, T2, T3, T4, T5, T6, M1, M2, M3, M4, M5]]", "member" : "lamp.nn.Seq5.trainingMode", "link" : "lamp\/nn\/Seq5$.html#trainingMode[T1,T2,T3,T4,T5,T6,M1<:lamp.nn.GenericModule[T1,T2],M2<:lamp.nn.GenericModule[T2,T3],M3<:lamp.nn.GenericModule[T3,T4],M4<:lamp.nn.GenericModule[T4,T5],M5<:lamp.nn.GenericModule[T5,T6]](implicitevidence$23:lamp.nn.TrainingMode[M1],implicitevidence$24:lamp.nn.TrainingMode[M2],implicitevidence$25:lamp.nn.TrainingMode[M3],implicitevidence$26:lamp.nn.TrainingMode[M4],implicitevidence$27:lamp.nn.TrainingMode[M5]):lamp.nn.TrainingMode[lamp.nn.Seq5[T1,T2,T3,T4,T5,T6,M1,M2,M3,M4,M5]]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/Seq5$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/Seq5$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/Seq5$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/Seq5$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/Seq5$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/Seq5$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/Seq5$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Seq5$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Seq5$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Seq5$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/Seq5$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/Seq5$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/Seq5$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/Seq5$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/Seq5$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/Seq5$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/Seq5$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/Seq5$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/Seq5$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "forward", "tail" : "(x: T1)(arg0: Sc[S]): T6", "member" : "lamp.nn.Seq5.forward", "link" : "lamp\/nn\/Seq5.html#forward[S](x:T1)(implicitevidence$22:lamp.Sc[S]):T6", "kind" : "def"}, {"label" : "state", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.Seq5.state", "link" : "lamp\/nn\/Seq5.html#state:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "def"}, {"member" : "lamp.nn.Seq5#<init>", "error" : "unsupported entity"}, {"label" : "m5", "tail" : ": M5 with GenericModule[T5, T6]", "member" : "lamp.nn.Seq5.m5", "link" : "lamp\/nn\/Seq5.html#m5:M5withlamp.nn.GenericModule[T5,T6]", "kind" : "val"}, {"label" : "m4", "tail" : ": M4 with GenericModule[T4, T5]", "member" : "lamp.nn.Seq5.m4", "link" : "lamp\/nn\/Seq5.html#m4:M4withlamp.nn.GenericModule[T4,T5]", "kind" : "val"}, {"label" : "m3", "tail" : ": M3 with GenericModule[T3, T4]", "member" : "lamp.nn.Seq5.m3", "link" : "lamp\/nn\/Seq5.html#m3:M3withlamp.nn.GenericModule[T3,T4]", "kind" : "val"}, {"label" : "m2", "tail" : ": M2 with GenericModule[T2, T3]", "member" : "lamp.nn.Seq5.m2", "link" : "lamp\/nn\/Seq5.html#m2:M2withlamp.nn.GenericModule[T2,T3]", "kind" : "val"}, {"label" : "m1", "tail" : ": M1 with GenericModule[T1, T2]", "member" : "lamp.nn.Seq5.m1", "link" : "lamp\/nn\/Seq5.html#m1:M1withlamp.nn.GenericModule[T1,T2]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/nn\/Seq5.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "learnableParameters", "tail" : "(): Long", "member" : "lamp.nn.GenericModule.learnableParameters", "link" : "lamp\/nn\/Seq5.html#learnableParameters:Long", "kind" : "final def"}, {"label" : "gradients", "tail" : "(loss: Variable, zeroGrad: Boolean): Seq[Option[STen]]", "member" : "lamp.nn.GenericModule.gradients", "link" : "lamp\/nn\/Seq5.html#gradients(loss:lamp.autograd.Variable,zeroGrad:Boolean):Seq[Option[lamp.STen]]", "kind" : "final def"}, {"label" : "zeroGrad", "tail" : "(): Unit", "member" : "lamp.nn.GenericModule.zeroGrad", "link" : "lamp\/nn\/Seq5.html#zeroGrad():Unit", "kind" : "final def"}, {"label" : "parameters", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.GenericModule.parameters", "link" : "lamp\/nn\/Seq5.html#parameters:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "final def"}, {"label" : "apply", "tail" : "(a: T1)(arg0: Sc[S]): T6", "member" : "lamp.nn.GenericModule.apply", "link" : "lamp\/nn\/Seq5.html#apply[S](a:A)(implicitevidence$17:lamp.Sc[S]):B", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/Seq5.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/Seq5.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/Seq5.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/Seq5.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/Seq5.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/Seq5.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/Seq5.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Seq5.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Seq5.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Seq5.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/Seq5.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/Seq5.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/Seq5.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/Seq5.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/Seq5.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/Seq5.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/nn\/Seq5.html", "kind" : "case class"}, {"name" : "lamp.nn.Seq6", "shortDescription" : "", "object" : "lamp\/nn\/Seq6$.html", "members_object" : [{"label" : "load", "tail" : "(arg0: Load[M1], arg1: Load[M2], arg2: Load[M3], arg3: Load[M4], arg4: Load[M5], arg5: Load[M6]): Load[Seq6[T1, T2, T3, T4, T5, T6, T7, M1, M2, M3, M4, M5, M6]]", "member" : "lamp.nn.Seq6.load", "link" : "lamp\/nn\/Seq6$.html#load[T1,T2,T3,T4,T5,T6,T7,M1<:lamp.nn.GenericModule[T1,T2],M2<:lamp.nn.GenericModule[T2,T3],M3<:lamp.nn.GenericModule[T3,T4],M4<:lamp.nn.GenericModule[T4,T5],M5<:lamp.nn.GenericModule[T5,T6],M6<:lamp.nn.GenericModule[T6,T7]](implicitevidence$40:lamp.nn.Load[M1],implicitevidence$41:lamp.nn.Load[M2],implicitevidence$42:lamp.nn.Load[M3],implicitevidence$43:lamp.nn.Load[M4],implicitevidence$44:lamp.nn.Load[M5],implicitevidence$45:lamp.nn.Load[M6]):lamp.nn.Load[lamp.nn.Seq6[T1,T2,T3,T4,T5,T6,T7,M1,M2,M3,M4,M5,M6]]", "kind" : "implicit def"}, {"label" : "trainingMode", "tail" : "(arg0: TrainingMode[M1], arg1: TrainingMode[M2], arg2: TrainingMode[M3], arg3: TrainingMode[M4], arg4: TrainingMode[M5], arg5: TrainingMode[M6]): TrainingMode[Seq6[T1, T2, T3, T4, T5, T6, T7, M1, M2, M3, M4, M5, M6]]", "member" : "lamp.nn.Seq6.trainingMode", "link" : "lamp\/nn\/Seq6$.html#trainingMode[T1,T2,T3,T4,T5,T6,T7,M1<:lamp.nn.GenericModule[T1,T2],M2<:lamp.nn.GenericModule[T2,T3],M3<:lamp.nn.GenericModule[T3,T4],M4<:lamp.nn.GenericModule[T4,T5],M5<:lamp.nn.GenericModule[T5,T6],M6<:lamp.nn.GenericModule[T6,T7]](implicitevidence$34:lamp.nn.TrainingMode[M1],implicitevidence$35:lamp.nn.TrainingMode[M2],implicitevidence$36:lamp.nn.TrainingMode[M3],implicitevidence$37:lamp.nn.TrainingMode[M4],implicitevidence$38:lamp.nn.TrainingMode[M5],implicitevidence$39:lamp.nn.TrainingMode[M6]):lamp.nn.TrainingMode[lamp.nn.Seq6[T1,T2,T3,T4,T5,T6,T7,M1,M2,M3,M4,M5,M6]]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/Seq6$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/Seq6$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/Seq6$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/Seq6$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/Seq6$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/Seq6$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/Seq6$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Seq6$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Seq6$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Seq6$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/Seq6$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/Seq6$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/Seq6$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/Seq6$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/Seq6$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/Seq6$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/Seq6$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/Seq6$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/Seq6$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "forward", "tail" : "(x: T1)(arg0: Sc[S]): T7", "member" : "lamp.nn.Seq6.forward", "link" : "lamp\/nn\/Seq6.html#forward[S](x:T1)(implicitevidence$33:lamp.Sc[S]):T7", "kind" : "def"}, {"label" : "state", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.Seq6.state", "link" : "lamp\/nn\/Seq6.html#state:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "def"}, {"member" : "lamp.nn.Seq6#<init>", "error" : "unsupported entity"}, {"label" : "m6", "tail" : ": M6 with GenericModule[T6, T7]", "member" : "lamp.nn.Seq6.m6", "link" : "lamp\/nn\/Seq6.html#m6:M6withlamp.nn.GenericModule[T6,T7]", "kind" : "val"}, {"label" : "m5", "tail" : ": M5 with GenericModule[T5, T6]", "member" : "lamp.nn.Seq6.m5", "link" : "lamp\/nn\/Seq6.html#m5:M5withlamp.nn.GenericModule[T5,T6]", "kind" : "val"}, {"label" : "m4", "tail" : ": M4 with GenericModule[T4, T5]", "member" : "lamp.nn.Seq6.m4", "link" : "lamp\/nn\/Seq6.html#m4:M4withlamp.nn.GenericModule[T4,T5]", "kind" : "val"}, {"label" : "m3", "tail" : ": M3 with GenericModule[T3, T4]", "member" : "lamp.nn.Seq6.m3", "link" : "lamp\/nn\/Seq6.html#m3:M3withlamp.nn.GenericModule[T3,T4]", "kind" : "val"}, {"label" : "m2", "tail" : ": M2 with GenericModule[T2, T3]", "member" : "lamp.nn.Seq6.m2", "link" : "lamp\/nn\/Seq6.html#m2:M2withlamp.nn.GenericModule[T2,T3]", "kind" : "val"}, {"label" : "m1", "tail" : ": M1 with GenericModule[T1, T2]", "member" : "lamp.nn.Seq6.m1", "link" : "lamp\/nn\/Seq6.html#m1:M1withlamp.nn.GenericModule[T1,T2]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/nn\/Seq6.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "learnableParameters", "tail" : "(): Long", "member" : "lamp.nn.GenericModule.learnableParameters", "link" : "lamp\/nn\/Seq6.html#learnableParameters:Long", "kind" : "final def"}, {"label" : "gradients", "tail" : "(loss: Variable, zeroGrad: Boolean): Seq[Option[STen]]", "member" : "lamp.nn.GenericModule.gradients", "link" : "lamp\/nn\/Seq6.html#gradients(loss:lamp.autograd.Variable,zeroGrad:Boolean):Seq[Option[lamp.STen]]", "kind" : "final def"}, {"label" : "zeroGrad", "tail" : "(): Unit", "member" : "lamp.nn.GenericModule.zeroGrad", "link" : "lamp\/nn\/Seq6.html#zeroGrad():Unit", "kind" : "final def"}, {"label" : "parameters", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.GenericModule.parameters", "link" : "lamp\/nn\/Seq6.html#parameters:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "final def"}, {"label" : "apply", "tail" : "(a: T1)(arg0: Sc[S]): T7", "member" : "lamp.nn.GenericModule.apply", "link" : "lamp\/nn\/Seq6.html#apply[S](a:A)(implicitevidence$17:lamp.Sc[S]):B", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/Seq6.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/Seq6.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/Seq6.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/Seq6.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/Seq6.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/Seq6.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/Seq6.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Seq6.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Seq6.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Seq6.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/Seq6.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/Seq6.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/Seq6.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/Seq6.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/Seq6.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/Seq6.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/nn\/Seq6.html", "kind" : "case class"}, {"name" : "lamp.nn.SeqLinear", "shortDescription" : "Inputs of size (sequence length * batch * in dim)Outputs of size (sequence length * batch * output dim)Applies a linear function to each time step", "object" : "lamp\/nn\/SeqLinear$.html", "members_object" : [{"label" : "apply", "tail" : "(in: Int, out: Int, tOpt: STenOptions)(arg0: Sc[S]): SeqLinear", "member" : "lamp.nn.SeqLinear.apply", "link" : "lamp\/nn\/SeqLinear$.html#apply[S](in:Int,out:Int,tOpt:lamp.STenOptions)(implicitevidence$2:lamp.Sc[S]):lamp.nn.SeqLinear", "kind" : "def"}, {"label" : "Bias", "tail" : "", "member" : "lamp.nn.SeqLinear.Bias", "link" : "lamp\/nn\/SeqLinear$.html#Bias", "kind" : "case object"}, {"label" : "Weight", "tail" : "", "member" : "lamp.nn.SeqLinear.Weight", "link" : "lamp\/nn\/SeqLinear$.html#Weight", "kind" : "case object"}, {"label" : "load", "tail" : ": Load[SeqLinear]", "member" : "lamp.nn.SeqLinear.load", "link" : "lamp\/nn\/SeqLinear$.html#load:lamp.nn.Load[lamp.nn.SeqLinear]", "kind" : "implicit val"}, {"label" : "trainingMode", "tail" : ": TrainingMode[SeqLinear]", "member" : "lamp.nn.SeqLinear.trainingMode", "link" : "lamp\/nn\/SeqLinear$.html#trainingMode:lamp.nn.TrainingMode[lamp.nn.SeqLinear]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/SeqLinear$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/SeqLinear$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/SeqLinear$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/SeqLinear$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/SeqLinear$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/SeqLinear$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/SeqLinear$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/SeqLinear$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/SeqLinear$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/SeqLinear$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/SeqLinear$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/SeqLinear$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/SeqLinear$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/SeqLinear$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/SeqLinear$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/SeqLinear$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/SeqLinear$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/SeqLinear$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/SeqLinear$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "forward", "tail" : "(x: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.nn.SeqLinear.forward", "link" : "lamp\/nn\/SeqLinear.html#forward[S](x:lamp.autograd.Variable)(implicitevidence$1:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "state", "tail" : "(): List[(Constant, LeafTag with Product with Serializable)]", "member" : "lamp.nn.SeqLinear.state", "link" : "lamp\/nn\/SeqLinear.html#state:List[(lamp.autograd.Constant,lamp.nn.LeafTagwithProductwithjava.io.Serializable)]", "kind" : "def"}, {"member" : "lamp.nn.SeqLinear#<init>", "error" : "unsupported entity"}, {"label" : "bias", "tail" : ": Constant", "member" : "lamp.nn.SeqLinear.bias", "link" : "lamp\/nn\/SeqLinear.html#bias:lamp.autograd.Constant", "kind" : "val"}, {"label" : "weight", "tail" : ": Constant", "member" : "lamp.nn.SeqLinear.weight", "link" : "lamp\/nn\/SeqLinear.html#weight:lamp.autograd.Constant", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/nn\/SeqLinear.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "learnableParameters", "tail" : "(): Long", "member" : "lamp.nn.GenericModule.learnableParameters", "link" : "lamp\/nn\/SeqLinear.html#learnableParameters:Long", "kind" : "final def"}, {"label" : "gradients", "tail" : "(loss: Variable, zeroGrad: Boolean): Seq[Option[STen]]", "member" : "lamp.nn.GenericModule.gradients", "link" : "lamp\/nn\/SeqLinear.html#gradients(loss:lamp.autograd.Variable,zeroGrad:Boolean):Seq[Option[lamp.STen]]", "kind" : "final def"}, {"label" : "zeroGrad", "tail" : "(): Unit", "member" : "lamp.nn.GenericModule.zeroGrad", "link" : "lamp\/nn\/SeqLinear.html#zeroGrad():Unit", "kind" : "final def"}, {"label" : "parameters", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.GenericModule.parameters", "link" : "lamp\/nn\/SeqLinear.html#parameters:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "final def"}, {"label" : "apply", "tail" : "(a: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.nn.GenericModule.apply", "link" : "lamp\/nn\/SeqLinear.html#apply[S](a:A)(implicitevidence$17:lamp.Sc[S]):B", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/SeqLinear.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/SeqLinear.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/SeqLinear.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/SeqLinear.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/SeqLinear.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/SeqLinear.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/SeqLinear.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/SeqLinear.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/SeqLinear.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/SeqLinear.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/SeqLinear.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/SeqLinear.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/SeqLinear.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/SeqLinear.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/SeqLinear.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/SeqLinear.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/nn\/SeqLinear.html", "kind" : "case class"}, {"name" : "lamp.nn.sequence", "shortDescription" : "", "object" : "lamp\/nn\/sequence$.html", "members_object" : [{"label" : "apply", "tail" : "(m1: M1 with GenericModule[T1, T2], m2: M2 with GenericModule[T2, T3], m3: M3 with GenericModule[T3, T4], m4: M4 with GenericModule[T4, T5], m5: M5 with GenericModule[T5, T6], m6: M6 with GenericModule[T6, T7]): Seq6[T1, T2, T3, T4, T5, T6, T7, M1 with GenericModule[T1, T2], M2 with GenericModule[T2, T3], M3 with GenericModule[T3, T4], M4 with GenericModule[T4, T5], M5 with GenericModule[T5, T6], M6 with GenericModule[T6, T7]]", "member" : "lamp.nn.sequence.apply", "link" : "lamp\/nn\/sequence$.html#apply[T1,T2,T3,T4,T5,T6,T7,M1<:lamp.nn.GenericModule[T1,T2],M2<:lamp.nn.GenericModule[T2,T3],M3<:lamp.nn.GenericModule[T3,T4],M4<:lamp.nn.GenericModule[T4,T5],M5<:lamp.nn.GenericModule[T5,T6],M6<:lamp.nn.GenericModule[T6,T7]](m1:M1withlamp.nn.GenericModule[T1,T2],m2:M2withlamp.nn.GenericModule[T2,T3],m3:M3withlamp.nn.GenericModule[T3,T4],m4:M4withlamp.nn.GenericModule[T4,T5],m5:M5withlamp.nn.GenericModule[T5,T6],m6:M6withlamp.nn.GenericModule[T6,T7]):lamp.nn.Seq6[T1,T2,T3,T4,T5,T6,T7,M1withlamp.nn.GenericModule[T1,T2],M2withlamp.nn.GenericModule[T2,T3],M3withlamp.nn.GenericModule[T3,T4],M4withlamp.nn.GenericModule[T4,T5],M5withlamp.nn.GenericModule[T5,T6],M6withlamp.nn.GenericModule[T6,T7]]", "kind" : "def"}, {"label" : "apply", "tail" : "(m1: M1 with GenericModule[T1, T2], m2: M2 with GenericModule[T2, T3], m3: M3 with GenericModule[T3, T4], m4: M4 with GenericModule[T4, T5], m5: M5 with GenericModule[T5, T6]): Seq5[T1, T2, T3, T4, T5, T6, M1 with GenericModule[T1, T2], M2 with GenericModule[T2, T3], M3 with GenericModule[T3, T4], M4 with GenericModule[T4, T5], M5 with GenericModule[T5, T6]]", "member" : "lamp.nn.sequence.apply", "link" : "lamp\/nn\/sequence$.html#apply[T1,T2,T3,T4,T5,T6,M1<:lamp.nn.GenericModule[T1,T2],M2<:lamp.nn.GenericModule[T2,T3],M3<:lamp.nn.GenericModule[T3,T4],M4<:lamp.nn.GenericModule[T4,T5],M5<:lamp.nn.GenericModule[T5,T6]](m1:M1withlamp.nn.GenericModule[T1,T2],m2:M2withlamp.nn.GenericModule[T2,T3],m3:M3withlamp.nn.GenericModule[T3,T4],m4:M4withlamp.nn.GenericModule[T4,T5],m5:M5withlamp.nn.GenericModule[T5,T6]):lamp.nn.Seq5[T1,T2,T3,T4,T5,T6,M1withlamp.nn.GenericModule[T1,T2],M2withlamp.nn.GenericModule[T2,T3],M3withlamp.nn.GenericModule[T3,T4],M4withlamp.nn.GenericModule[T4,T5],M5withlamp.nn.GenericModule[T5,T6]]", "kind" : "def"}, {"label" : "apply", "tail" : "(m1: M1 with GenericModule[T1, T2], m2: M2 with GenericModule[T2, T3], m3: M3 with GenericModule[T3, T4], m4: M4 with GenericModule[T4, T5]): Seq4[T1, T2, T3, T4, T5, M1 with GenericModule[T1, T2], M2 with GenericModule[T2, T3], M3 with GenericModule[T3, T4], M4 with GenericModule[T4, T5]]", "member" : "lamp.nn.sequence.apply", "link" : "lamp\/nn\/sequence$.html#apply[T1,T2,T3,T4,T5,M1<:lamp.nn.GenericModule[T1,T2],M2<:lamp.nn.GenericModule[T2,T3],M3<:lamp.nn.GenericModule[T3,T4],M4<:lamp.nn.GenericModule[T4,T5]](m1:M1withlamp.nn.GenericModule[T1,T2],m2:M2withlamp.nn.GenericModule[T2,T3],m3:M3withlamp.nn.GenericModule[T3,T4],m4:M4withlamp.nn.GenericModule[T4,T5]):lamp.nn.Seq4[T1,T2,T3,T4,T5,M1withlamp.nn.GenericModule[T1,T2],M2withlamp.nn.GenericModule[T2,T3],M3withlamp.nn.GenericModule[T3,T4],M4withlamp.nn.GenericModule[T4,T5]]", "kind" : "def"}, {"label" : "apply", "tail" : "(m1: M1 with GenericModule[T1, T2], m2: M2 with GenericModule[T2, T3], m3: M3 with GenericModule[T3, T4]): Seq3[T1, T2, T3, T4, M1 with GenericModule[T1, T2], M2 with GenericModule[T2, T3], M3 with GenericModule[T3, T4]]", "member" : "lamp.nn.sequence.apply", "link" : "lamp\/nn\/sequence$.html#apply[T1,T2,T3,T4,M1<:lamp.nn.GenericModule[T1,T2],M2<:lamp.nn.GenericModule[T2,T3],M3<:lamp.nn.GenericModule[T3,T4]](m1:M1withlamp.nn.GenericModule[T1,T2],m2:M2withlamp.nn.GenericModule[T2,T3],m3:M3withlamp.nn.GenericModule[T3,T4]):lamp.nn.Seq3[T1,T2,T3,T4,M1withlamp.nn.GenericModule[T1,T2],M2withlamp.nn.GenericModule[T2,T3],M3withlamp.nn.GenericModule[T3,T4]]", "kind" : "def"}, {"label" : "apply", "tail" : "(m1: M1 with GenericModule[T1, T2], m2: M2 with GenericModule[T2, T3]): Seq2[T1, T2, T3, M1 with GenericModule[T1, T2], M2 with GenericModule[T2, T3]]", "member" : "lamp.nn.sequence.apply", "link" : "lamp\/nn\/sequence$.html#apply[T1,T2,T3,M1<:lamp.nn.GenericModule[T1,T2],M2<:lamp.nn.GenericModule[T2,T3]](m1:M1withlamp.nn.GenericModule[T1,T2],m2:M2withlamp.nn.GenericModule[T2,T3]):lamp.nn.Seq2[T1,T2,T3,M1withlamp.nn.GenericModule[T1,T2],M2withlamp.nn.GenericModule[T2,T3]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/sequence$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/sequence$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/sequence$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/sequence$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/sequence$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/sequence$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/sequence$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/sequence$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/sequence$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/sequence$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/sequence$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/sequence$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/sequence$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/sequence$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/sequence$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/sequence$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/sequence$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/sequence$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/sequence$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "lamp.nn.Sequential", "shortDescription" : "", "object" : "lamp\/nn\/Sequential$.html", "members_object" : [{"label" : "Tag", "tail" : "", "member" : "lamp.nn.Sequential.Tag", "link" : "lamp\/nn\/Sequential$.html#Tag[T<:lamp.nn.PTag]extendsPTagwithProductwithSerializable", "kind" : "case class"}, {"label" : "load", "tail" : "(arg0: Load[M]): Load[Sequential[A, M]]", "member" : "lamp.nn.Sequential.load", "link" : "lamp\/nn\/Sequential$.html#load[A,M<:lamp.nn.GenericModule[A,A]](implicitevidence$8:lamp.nn.Load[M]):lamp.nn.Load[lamp.nn.Sequential[A,M]]", "kind" : "implicit def"}, {"label" : "trainingMode", "tail" : "(arg0: TrainingMode[M]): TrainingMode[Sequential[A, M]]", "member" : "lamp.nn.Sequential.trainingMode", "link" : "lamp\/nn\/Sequential$.html#trainingMode[A,M<:lamp.nn.GenericModule[A,A]](implicitevidence$7:lamp.nn.TrainingMode[M]):lamp.nn.TrainingMode[lamp.nn.Sequential[A,M]]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/Sequential$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/Sequential$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/Sequential$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/Sequential$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/Sequential$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/Sequential$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/Sequential$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Sequential$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Sequential$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Sequential$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/Sequential$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/Sequential$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/Sequential$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/Sequential$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/Sequential$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/Sequential$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/Sequential$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/Sequential$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/Sequential$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "forward", "tail" : "(x: A)(arg0: Sc[S]): A", "member" : "lamp.nn.Sequential.forward", "link" : "lamp\/nn\/Sequential.html#forward[S](x:A)(implicitevidence$6:lamp.Sc[S]):A", "kind" : "def"}, {"label" : "state", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.Sequential.state", "link" : "lamp\/nn\/Sequential.html#state:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "def"}, {"member" : "lamp.nn.Sequential#<init>", "error" : "unsupported entity"}, {"label" : "members", "tail" : ": M with GenericModule[A, A]*", "member" : "lamp.nn.Sequential.members", "link" : "lamp\/nn\/Sequential.html#members:Mwithlamp.nn.GenericModule[A,A]*", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/nn\/Sequential.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "learnableParameters", "tail" : "(): Long", "member" : "lamp.nn.GenericModule.learnableParameters", "link" : "lamp\/nn\/Sequential.html#learnableParameters:Long", "kind" : "final def"}, {"label" : "gradients", "tail" : "(loss: Variable, zeroGrad: Boolean): Seq[Option[STen]]", "member" : "lamp.nn.GenericModule.gradients", "link" : "lamp\/nn\/Sequential.html#gradients(loss:lamp.autograd.Variable,zeroGrad:Boolean):Seq[Option[lamp.STen]]", "kind" : "final def"}, {"label" : "zeroGrad", "tail" : "(): Unit", "member" : "lamp.nn.GenericModule.zeroGrad", "link" : "lamp\/nn\/Sequential.html#zeroGrad():Unit", "kind" : "final def"}, {"label" : "parameters", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.GenericModule.parameters", "link" : "lamp\/nn\/Sequential.html#parameters:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "final def"}, {"label" : "apply", "tail" : "(a: A)(arg0: Sc[S]): A", "member" : "lamp.nn.GenericModule.apply", "link" : "lamp\/nn\/Sequential.html#apply[S](a:A)(implicitevidence$17:lamp.Sc[S]):B", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/Sequential.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/Sequential.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/Sequential.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/Sequential.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/Sequential.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/Sequential.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/Sequential.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Sequential.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Sequential.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Sequential.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/Sequential.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/Sequential.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/Sequential.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/Sequential.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/Sequential.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/Sequential.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/nn\/Sequential.html", "kind" : "case class"}, {"name" : "lamp.nn.SGDW", "shortDescription" : "", "object" : "lamp\/nn\/SGDW$.html", "members_object" : [{"label" : "factory", "tail" : "(learningRate: OptimizerHyperparameter, weightDecay: OptimizerHyperparameter, momentum: Option[OptimizerHyperparameter], clip: Option[Double]): (Seq[(STen, PTag)]) => SGDW", "member" : "lamp.nn.SGDW.factory", "link" : "lamp\/nn\/SGDW$.html#factory(learningRate:lamp.nn.OptimizerHyperparameter,weightDecay:lamp.nn.OptimizerHyperparameter,momentum:Option[lamp.nn.OptimizerHyperparameter],clip:Option[Double]):Seq[(lamp.STen,lamp.nn.PTag)]=>lamp.nn.SGDW", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/SGDW$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/SGDW$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/SGDW$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/SGDW$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/SGDW$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/SGDW$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/SGDW$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/SGDW$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/SGDW$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/SGDW$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/SGDW$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/SGDW$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/SGDW$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/SGDW$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/SGDW$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/SGDW$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/SGDW$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/SGDW$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/SGDW$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "step", "tail" : "(gradients: Seq[Option[STen]], scheduleFactor: Double): Unit", "member" : "lamp.nn.SGDW.step", "link" : "lamp\/nn\/SGDW.html#step(gradients:Seq[Option[lamp.STen]],scheduleFactor:Double):Unit", "kind" : "def"}, {"label" : "release", "tail" : "(): Unit", "member" : "lamp.nn.SGDW.release", "link" : "lamp\/nn\/SGDW.html#release():Unit", "kind" : "def"}, {"label" : "load", "tail" : "(tensors: Seq[STen]): Unit", "member" : "lamp.nn.SGDW.load", "link" : "lamp\/nn\/SGDW.html#load(tensors:Seq[lamp.STen]):Unit", "kind" : "def"}, {"label" : "state", "tail" : "(): Seq[STen]", "member" : "lamp.nn.SGDW.state", "link" : "lamp\/nn\/SGDW.html#state:Seq[lamp.STen]", "kind" : "def"}, {"label" : "velocity", "tail" : ": Seq[Option[(STen, OptimizerHyperparameter)]]", "member" : "lamp.nn.SGDW.velocity", "link" : "lamp\/nn\/SGDW.html#velocity:Seq[Option[(lamp.STen,lamp.nn.OptimizerHyperparameter)]]", "kind" : "val"}, {"label" : "scope", "tail" : ": Scope", "member" : "lamp.nn.SGDW.scope", "link" : "lamp\/nn\/SGDW.html#scope:lamp.Scope", "kind" : "val"}, {"member" : "lamp.nn.SGDW#<init>", "error" : "unsupported entity"}, {"label" : "clip", "tail" : ": Option[Double]", "member" : "lamp.nn.SGDW.clip", "link" : "lamp\/nn\/SGDW.html#clip:Option[Double]", "kind" : "val"}, {"label" : "momentum", "tail" : ": Option[OptimizerHyperparameter]", "member" : "lamp.nn.SGDW.momentum", "link" : "lamp\/nn\/SGDW.html#momentum:Option[lamp.nn.OptimizerHyperparameter]", "kind" : "val"}, {"label" : "weightDecay", "tail" : ": OptimizerHyperparameter", "member" : "lamp.nn.SGDW.weightDecay", "link" : "lamp\/nn\/SGDW.html#weightDecay:lamp.nn.OptimizerHyperparameter", "kind" : "val"}, {"label" : "learningRate", "tail" : ": OptimizerHyperparameter", "member" : "lamp.nn.SGDW.learningRate", "link" : "lamp\/nn\/SGDW.html#learningRate:lamp.nn.OptimizerHyperparameter", "kind" : "val"}, {"label" : "parameters", "tail" : ": Seq[(STen, PTag)]", "member" : "lamp.nn.SGDW.parameters", "link" : "lamp\/nn\/SGDW.html#parameters:Seq[(lamp.STen,lamp.nn.PTag)]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/nn\/SGDW.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/SGDW.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/SGDW.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/SGDW.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/SGDW.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/SGDW.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/SGDW.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/SGDW.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/SGDW.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/SGDW.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/SGDW.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/SGDW.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/SGDW.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/SGDW.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/SGDW.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/SGDW.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/SGDW.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/nn\/SGDW.html", "kind" : "case class"}, {"name" : "lamp.nn.simple", "shortDescription" : "", "members_case class" : [{"label" : "apply", "tail" : "(p: PTag): Double", "member" : "lamp.nn.simple.apply", "link" : "lamp\/nn\/simple.html#apply(p:lamp.nn.PTag):Double", "kind" : "def"}, {"member" : "lamp.nn.simple#<init>", "error" : "unsupported entity"}, {"label" : "v", "tail" : ": Double", "member" : "lamp.nn.simple.v", "link" : "lamp\/nn\/simple.html#v:Double", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/nn\/simple.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/simple.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/simple.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/simple.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/simple.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/simple.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/simple.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/simple.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/simple.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/simple.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/simple.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/simple.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/simple.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/simple.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/simple.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/simple.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/simple.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/nn\/simple.html", "kind" : "case class"}, {"name" : "lamp.nn.SimpleLossCalculation", "shortDescription" : "", "members_class" : [{"label" : "apply", "tail" : "(samples: I, target: STen, module: M with GenericModule[I, Variable], lossFunction: LossFunction, computeGradients: Boolean, zeroGradBeforeComputingGradients: Boolean)(scope: Scope): (Variable, Long, Option[Seq[Option[STen]]])", "member" : "lamp.nn.SimpleLossCalculation.apply", "link" : "lamp\/nn\/SimpleLossCalculation.html#apply[M<:lamp.nn.GenericModule[I,lamp.autograd.Variable]](samples:I,target:lamp.STen,module:Mwithlamp.nn.GenericModule[I,lamp.autograd.Variable],lossFunction:lamp.nn.LossFunction,computeGradients:Boolean,zeroGradBeforeComputingGradients:Boolean)(implicitscope:lamp.Scope):(lamp.autograd.Variable,Long,Option[Seq[Option[lamp.STen]]])", "kind" : "def"}, {"member" : "lamp.nn.SimpleLossCalculation#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/SimpleLossCalculation.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/SimpleLossCalculation.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/SimpleLossCalculation.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/SimpleLossCalculation.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/SimpleLossCalculation.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/SimpleLossCalculation.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/SimpleLossCalculation.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/SimpleLossCalculation.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/SimpleLossCalculation.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/SimpleLossCalculation.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/SimpleLossCalculation.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/SimpleLossCalculation.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/SimpleLossCalculation.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/SimpleLossCalculation.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/SimpleLossCalculation.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/SimpleLossCalculation.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/SimpleLossCalculation.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/SimpleLossCalculation.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/SimpleLossCalculation.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "lamp\/nn\/SimpleLossCalculation.html", "kind" : "class"}, {"name" : "lamp.nn.StatefulSeq2", "shortDescription" : "", "object" : "lamp\/nn\/StatefulSeq2$.html", "members_object" : [{"label" : "initState", "tail" : "(is1: InitState[M1, S1], is2: InitState[M2, S2]): InitState[StatefulSeq2[T1, T2, T3, S1, S2, M1, M2], (S1, S2)]", "member" : "lamp.nn.StatefulSeq2.initState", "link" : "lamp\/nn\/StatefulSeq2$.html#initState[T1,T2,T3,S1,S2,M1<:lamp.nn.StatefulModule[T1,T2,S1],M2<:lamp.nn.StatefulModule[T2,T3,S2]](implicitis1:lamp.nn.InitState[M1,S1],implicitis2:lamp.nn.InitState[M2,S2]):lamp.nn.InitState[lamp.nn.StatefulSeq2[T1,T2,T3,S1,S2,M1,M2],(S1,S2)]", "kind" : "implicit def"}, {"label" : "load", "tail" : "(arg0: Load[M1], arg1: Load[M2]): Load[StatefulSeq2[T1, T2, T3, S1, S2, M1, M2]]", "member" : "lamp.nn.StatefulSeq2.load", "link" : "lamp\/nn\/StatefulSeq2$.html#load[T1,T2,T3,S1,S2,M1<:lamp.nn.StatefulModule[T1,T2,S1],M2<:lamp.nn.StatefulModule[T2,T3,S2]](implicitevidence$5:lamp.nn.Load[M1],implicitevidence$6:lamp.nn.Load[M2]):lamp.nn.Load[lamp.nn.StatefulSeq2[T1,T2,T3,S1,S2,M1,M2]]", "kind" : "implicit def"}, {"label" : "trainingMode", "tail" : "(arg0: TrainingMode[M1], arg1: TrainingMode[M2]): TrainingMode[StatefulSeq2[T1, T2, T3, S1, S2, M1, M2]]", "member" : "lamp.nn.StatefulSeq2.trainingMode", "link" : "lamp\/nn\/StatefulSeq2$.html#trainingMode[T1,T2,T3,S1,S2,M1<:lamp.nn.StatefulModule[T1,T2,S1],M2<:lamp.nn.StatefulModule[T2,T3,S2]](implicitevidence$3:lamp.nn.TrainingMode[M1],implicitevidence$4:lamp.nn.TrainingMode[M2]):lamp.nn.TrainingMode[lamp.nn.StatefulSeq2[T1,T2,T3,S1,S2,M1,M2]]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/StatefulSeq2$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/StatefulSeq2$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/StatefulSeq2$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/StatefulSeq2$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/StatefulSeq2$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/StatefulSeq2$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/StatefulSeq2$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/StatefulSeq2$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/StatefulSeq2$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/StatefulSeq2$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/StatefulSeq2$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/StatefulSeq2$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/StatefulSeq2$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/StatefulSeq2$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/StatefulSeq2$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/StatefulSeq2$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/StatefulSeq2$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/StatefulSeq2$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/StatefulSeq2$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "forward1", "tail" : "(x: T1, st: (S1, S2))(arg0: Sc[S]): (T3, (S1, S2))", "member" : "lamp.nn.StatefulSeq2.forward1", "link" : "lamp\/nn\/StatefulSeq2.html#forward1[S](x:T1,st:(S1,S2))(implicitevidence$2:lamp.Sc[S]):(T3,(S1,S2))", "kind" : "def"}, {"label" : "forward", "tail" : "(x: (T1, (S1, S2)))(arg0: Sc[S]): (T3, (S1, S2))", "member" : "lamp.nn.StatefulSeq2.forward", "link" : "lamp\/nn\/StatefulSeq2.html#forward[S](x:(T1,(S1,S2)))(implicitevidence$1:lamp.Sc[S]):(T3,(S1,S2))", "kind" : "def"}, {"label" : "state", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.StatefulSeq2.state", "link" : "lamp\/nn\/StatefulSeq2.html#state:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "def"}, {"member" : "lamp.nn.StatefulSeq2#<init>", "error" : "unsupported entity"}, {"label" : "m2", "tail" : ": M2 with StatefulModule[T2, T3, S2]", "member" : "lamp.nn.StatefulSeq2.m2", "link" : "lamp\/nn\/StatefulSeq2.html#m2:M2withlamp.nn.StatefulModule[T2,T3,S2]", "kind" : "val"}, {"label" : "m1", "tail" : ": M1 with StatefulModule[T1, T2, S1]", "member" : "lamp.nn.StatefulSeq2.m1", "link" : "lamp\/nn\/StatefulSeq2.html#m1:M1withlamp.nn.StatefulModule[T1,T2,S1]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/nn\/StatefulSeq2.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "learnableParameters", "tail" : "(): Long", "member" : "lamp.nn.GenericModule.learnableParameters", "link" : "lamp\/nn\/StatefulSeq2.html#learnableParameters:Long", "kind" : "final def"}, {"label" : "gradients", "tail" : "(loss: Variable, zeroGrad: Boolean): Seq[Option[STen]]", "member" : "lamp.nn.GenericModule.gradients", "link" : "lamp\/nn\/StatefulSeq2.html#gradients(loss:lamp.autograd.Variable,zeroGrad:Boolean):Seq[Option[lamp.STen]]", "kind" : "final def"}, {"label" : "zeroGrad", "tail" : "(): Unit", "member" : "lamp.nn.GenericModule.zeroGrad", "link" : "lamp\/nn\/StatefulSeq2.html#zeroGrad():Unit", "kind" : "final def"}, {"label" : "parameters", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.GenericModule.parameters", "link" : "lamp\/nn\/StatefulSeq2.html#parameters:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "final def"}, {"label" : "apply", "tail" : "(a: (T1, (S1, S2)))(arg0: Sc[S]): (T3, (S1, S2))", "member" : "lamp.nn.GenericModule.apply", "link" : "lamp\/nn\/StatefulSeq2.html#apply[S](a:A)(implicitevidence$17:lamp.Sc[S]):B", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/StatefulSeq2.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/StatefulSeq2.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/StatefulSeq2.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/StatefulSeq2.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/StatefulSeq2.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/StatefulSeq2.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/StatefulSeq2.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/StatefulSeq2.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/StatefulSeq2.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/StatefulSeq2.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/StatefulSeq2.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/StatefulSeq2.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/StatefulSeq2.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/StatefulSeq2.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/StatefulSeq2.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/StatefulSeq2.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/nn\/StatefulSeq2.html", "kind" : "case class"}, {"name" : "lamp.nn.StatefulSeq3", "shortDescription" : "", "object" : "lamp\/nn\/StatefulSeq3$.html", "members_object" : [{"label" : "initState", "tail" : "(is1: InitState[M1, S1], is2: InitState[M2, S2], is3: InitState[M3, S3]): InitState[StatefulSeq3[T1, T2, T3, T4, S1, S2, S3, M1, M2, M3], (S1, S2, S3)]", "member" : "lamp.nn.StatefulSeq3.initState", "link" : "lamp\/nn\/StatefulSeq3$.html#initState[T1,T2,T3,T4,S1,S2,S3,M1<:lamp.nn.StatefulModule[T1,T2,S1],M2<:lamp.nn.StatefulModule[T2,T3,S2],M3<:lamp.nn.StatefulModule[T3,T4,S3]](implicitis1:lamp.nn.InitState[M1,S1],implicitis2:lamp.nn.InitState[M2,S2],implicitis3:lamp.nn.InitState[M3,S3]):lamp.nn.InitState[lamp.nn.StatefulSeq3[T1,T2,T3,T4,S1,S2,S3,M1,M2,M3],(S1,S2,S3)]", "kind" : "implicit def"}, {"label" : "load", "tail" : "(arg0: Load[M1], arg1: Load[M2], arg2: Load[M3]): Load[StatefulSeq3[T1, T2, T3, T4, S1, S2, S3, M1, M2, M3]]", "member" : "lamp.nn.StatefulSeq3.load", "link" : "lamp\/nn\/StatefulSeq3$.html#load[T1,T2,T3,T4,S1,S2,S3,M1<:lamp.nn.StatefulModule[T1,T2,S1],M2<:lamp.nn.StatefulModule[T2,T3,S2],M3<:lamp.nn.StatefulModule[T3,T4,S3]](implicitevidence$12:lamp.nn.Load[M1],implicitevidence$13:lamp.nn.Load[M2],implicitevidence$14:lamp.nn.Load[M3]):lamp.nn.Load[lamp.nn.StatefulSeq3[T1,T2,T3,T4,S1,S2,S3,M1,M2,M3]]", "kind" : "implicit def"}, {"label" : "trainingMode", "tail" : "(arg0: TrainingMode[M1], arg1: TrainingMode[M2], arg2: TrainingMode[M3]): TrainingMode[StatefulSeq3[T1, T2, T3, T4, S1, S2, S3, M1, M2, M3]]", "member" : "lamp.nn.StatefulSeq3.trainingMode", "link" : "lamp\/nn\/StatefulSeq3$.html#trainingMode[T1,T2,T3,T4,S1,S2,S3,M1<:lamp.nn.StatefulModule[T1,T2,S1],M2<:lamp.nn.StatefulModule[T2,T3,S2],M3<:lamp.nn.StatefulModule[T3,T4,S3]](implicitevidence$9:lamp.nn.TrainingMode[M1],implicitevidence$10:lamp.nn.TrainingMode[M2],implicitevidence$11:lamp.nn.TrainingMode[M3]):lamp.nn.TrainingMode[lamp.nn.StatefulSeq3[T1,T2,T3,T4,S1,S2,S3,M1,M2,M3]]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/StatefulSeq3$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/StatefulSeq3$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/StatefulSeq3$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/StatefulSeq3$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/StatefulSeq3$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/StatefulSeq3$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/StatefulSeq3$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/StatefulSeq3$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/StatefulSeq3$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/StatefulSeq3$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/StatefulSeq3$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/StatefulSeq3$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/StatefulSeq3$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/StatefulSeq3$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/StatefulSeq3$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/StatefulSeq3$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/StatefulSeq3$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/StatefulSeq3$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/StatefulSeq3$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "forward1", "tail" : "(x: T1, st: (S1, S2, S3))(arg0: Sc[S]): (T4, (S1, S2, S3))", "member" : "lamp.nn.StatefulSeq3.forward1", "link" : "lamp\/nn\/StatefulSeq3.html#forward1[S](x:T1,st:(S1,S2,S3))(implicitevidence$8:lamp.Sc[S]):(T4,(S1,S2,S3))", "kind" : "def"}, {"label" : "forward", "tail" : "(x: (T1, (S1, S2, S3)))(arg0: Sc[S]): (T4, (S1, S2, S3))", "member" : "lamp.nn.StatefulSeq3.forward", "link" : "lamp\/nn\/StatefulSeq3.html#forward[S](x:(T1,(S1,S2,S3)))(implicitevidence$7:lamp.Sc[S]):(T4,(S1,S2,S3))", "kind" : "def"}, {"label" : "state", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.StatefulSeq3.state", "link" : "lamp\/nn\/StatefulSeq3.html#state:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "def"}, {"member" : "lamp.nn.StatefulSeq3#<init>", "error" : "unsupported entity"}, {"label" : "m3", "tail" : ": M3 with StatefulModule[T3, T4, S3]", "member" : "lamp.nn.StatefulSeq3.m3", "link" : "lamp\/nn\/StatefulSeq3.html#m3:M3withlamp.nn.StatefulModule[T3,T4,S3]", "kind" : "val"}, {"label" : "m2", "tail" : ": M2 with StatefulModule[T2, T3, S2]", "member" : "lamp.nn.StatefulSeq3.m2", "link" : "lamp\/nn\/StatefulSeq3.html#m2:M2withlamp.nn.StatefulModule[T2,T3,S2]", "kind" : "val"}, {"label" : "m1", "tail" : ": M1 with StatefulModule[T1, T2, S1]", "member" : "lamp.nn.StatefulSeq3.m1", "link" : "lamp\/nn\/StatefulSeq3.html#m1:M1withlamp.nn.StatefulModule[T1,T2,S1]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/nn\/StatefulSeq3.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "learnableParameters", "tail" : "(): Long", "member" : "lamp.nn.GenericModule.learnableParameters", "link" : "lamp\/nn\/StatefulSeq3.html#learnableParameters:Long", "kind" : "final def"}, {"label" : "gradients", "tail" : "(loss: Variable, zeroGrad: Boolean): Seq[Option[STen]]", "member" : "lamp.nn.GenericModule.gradients", "link" : "lamp\/nn\/StatefulSeq3.html#gradients(loss:lamp.autograd.Variable,zeroGrad:Boolean):Seq[Option[lamp.STen]]", "kind" : "final def"}, {"label" : "zeroGrad", "tail" : "(): Unit", "member" : "lamp.nn.GenericModule.zeroGrad", "link" : "lamp\/nn\/StatefulSeq3.html#zeroGrad():Unit", "kind" : "final def"}, {"label" : "parameters", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.GenericModule.parameters", "link" : "lamp\/nn\/StatefulSeq3.html#parameters:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "final def"}, {"label" : "apply", "tail" : "(a: (T1, (S1, S2, S3)))(arg0: Sc[S]): (T4, (S1, S2, S3))", "member" : "lamp.nn.GenericModule.apply", "link" : "lamp\/nn\/StatefulSeq3.html#apply[S](a:A)(implicitevidence$17:lamp.Sc[S]):B", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/StatefulSeq3.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/StatefulSeq3.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/StatefulSeq3.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/StatefulSeq3.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/StatefulSeq3.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/StatefulSeq3.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/StatefulSeq3.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/StatefulSeq3.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/StatefulSeq3.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/StatefulSeq3.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/StatefulSeq3.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/StatefulSeq3.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/StatefulSeq3.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/StatefulSeq3.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/StatefulSeq3.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/StatefulSeq3.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/nn\/StatefulSeq3.html", "kind" : "case class"}, {"name" : "lamp.nn.StatefulSeq4", "shortDescription" : "", "object" : "lamp\/nn\/StatefulSeq4$.html", "members_object" : [{"label" : "initState", "tail" : "(is1: InitState[M1, S1], is2: InitState[M2, S2], is3: InitState[M3, S3], is4: InitState[M4, S4]): InitState[StatefulSeq4[T1, T2, T3, T4, T5, S1, S2, S3, S4, M1, M2, M3, M4], (S1, S2, S3, S4)]", "member" : "lamp.nn.StatefulSeq4.initState", "link" : "lamp\/nn\/StatefulSeq4$.html#initState[T1,T2,T3,T4,T5,S1,S2,S3,S4,M1<:lamp.nn.StatefulModule[T1,T2,S1],M2<:lamp.nn.StatefulModule[T2,T3,S2],M3<:lamp.nn.StatefulModule[T3,T4,S3],M4<:lamp.nn.StatefulModule[T4,T5,S4]](implicitis1:lamp.nn.InitState[M1,S1],implicitis2:lamp.nn.InitState[M2,S2],implicitis3:lamp.nn.InitState[M3,S3],implicitis4:lamp.nn.InitState[M4,S4]):lamp.nn.InitState[lamp.nn.StatefulSeq4[T1,T2,T3,T4,T5,S1,S2,S3,S4,M1,M2,M3,M4],(S1,S2,S3,S4)]", "kind" : "implicit def"}, {"label" : "load", "tail" : "(arg0: Load[M1], arg1: Load[M2], arg2: Load[M3], arg3: Load[M4]): Load[StatefulSeq4[T1, T2, T3, T4, T5, S1, S2, S3, S4, M1, M2, M3, M4]]", "member" : "lamp.nn.StatefulSeq4.load", "link" : "lamp\/nn\/StatefulSeq4$.html#load[T1,T2,T3,T4,T5,S1,S2,S3,S4,M1<:lamp.nn.StatefulModule[T1,T2,S1],M2<:lamp.nn.StatefulModule[T2,T3,S2],M3<:lamp.nn.StatefulModule[T3,T4,S3],M4<:lamp.nn.StatefulModule[T4,T5,S4]](implicitevidence$21:lamp.nn.Load[M1],implicitevidence$22:lamp.nn.Load[M2],implicitevidence$23:lamp.nn.Load[M3],implicitevidence$24:lamp.nn.Load[M4]):lamp.nn.Load[lamp.nn.StatefulSeq4[T1,T2,T3,T4,T5,S1,S2,S3,S4,M1,M2,M3,M4]]", "kind" : "implicit def"}, {"label" : "trainingMode", "tail" : "(arg0: TrainingMode[M1], arg1: TrainingMode[M2], arg2: TrainingMode[M3], arg3: TrainingMode[M4]): TrainingMode[StatefulSeq4[T1, T2, T3, T4, T5, S1, S2, S3, S4, M1, M2, M3, M4]]", "member" : "lamp.nn.StatefulSeq4.trainingMode", "link" : "lamp\/nn\/StatefulSeq4$.html#trainingMode[T1,T2,T3,T4,T5,S1,S2,S3,S4,M1<:lamp.nn.StatefulModule[T1,T2,S1],M2<:lamp.nn.StatefulModule[T2,T3,S2],M3<:lamp.nn.StatefulModule[T3,T4,S3],M4<:lamp.nn.StatefulModule[T4,T5,S4]](implicitevidence$17:lamp.nn.TrainingMode[M1],implicitevidence$18:lamp.nn.TrainingMode[M2],implicitevidence$19:lamp.nn.TrainingMode[M3],implicitevidence$20:lamp.nn.TrainingMode[M4]):lamp.nn.TrainingMode[lamp.nn.StatefulSeq4[T1,T2,T3,T4,T5,S1,S2,S3,S4,M1,M2,M3,M4]]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/StatefulSeq4$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/StatefulSeq4$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/StatefulSeq4$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/StatefulSeq4$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/StatefulSeq4$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/StatefulSeq4$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/StatefulSeq4$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/StatefulSeq4$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/StatefulSeq4$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/StatefulSeq4$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/StatefulSeq4$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/StatefulSeq4$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/StatefulSeq4$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/StatefulSeq4$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/StatefulSeq4$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/StatefulSeq4$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/StatefulSeq4$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/StatefulSeq4$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/StatefulSeq4$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "forward1", "tail" : "(x: T1, st: (S1, S2, S3, S4))(arg0: Sc[S]): (T5, (S1, S2, S3, S4))", "member" : "lamp.nn.StatefulSeq4.forward1", "link" : "lamp\/nn\/StatefulSeq4.html#forward1[S](x:T1,st:(S1,S2,S3,S4))(implicitevidence$16:lamp.Sc[S]):(T5,(S1,S2,S3,S4))", "kind" : "def"}, {"label" : "forward", "tail" : "(x: (T1, (S1, S2, S3, S4)))(arg0: Sc[S]): (T5, (S1, S2, S3, S4))", "member" : "lamp.nn.StatefulSeq4.forward", "link" : "lamp\/nn\/StatefulSeq4.html#forward[S](x:(T1,(S1,S2,S3,S4)))(implicitevidence$15:lamp.Sc[S]):(T5,(S1,S2,S3,S4))", "kind" : "def"}, {"label" : "state", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.StatefulSeq4.state", "link" : "lamp\/nn\/StatefulSeq4.html#state:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "def"}, {"member" : "lamp.nn.StatefulSeq4#<init>", "error" : "unsupported entity"}, {"label" : "m4", "tail" : ": M4 with StatefulModule[T4, T5, S4]", "member" : "lamp.nn.StatefulSeq4.m4", "link" : "lamp\/nn\/StatefulSeq4.html#m4:M4withlamp.nn.StatefulModule[T4,T5,S4]", "kind" : "val"}, {"label" : "m3", "tail" : ": M3 with StatefulModule[T3, T4, S3]", "member" : "lamp.nn.StatefulSeq4.m3", "link" : "lamp\/nn\/StatefulSeq4.html#m3:M3withlamp.nn.StatefulModule[T3,T4,S3]", "kind" : "val"}, {"label" : "m2", "tail" : ": M2 with StatefulModule[T2, T3, S2]", "member" : "lamp.nn.StatefulSeq4.m2", "link" : "lamp\/nn\/StatefulSeq4.html#m2:M2withlamp.nn.StatefulModule[T2,T3,S2]", "kind" : "val"}, {"label" : "m1", "tail" : ": M1 with StatefulModule[T1, T2, S1]", "member" : "lamp.nn.StatefulSeq4.m1", "link" : "lamp\/nn\/StatefulSeq4.html#m1:M1withlamp.nn.StatefulModule[T1,T2,S1]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/nn\/StatefulSeq4.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "learnableParameters", "tail" : "(): Long", "member" : "lamp.nn.GenericModule.learnableParameters", "link" : "lamp\/nn\/StatefulSeq4.html#learnableParameters:Long", "kind" : "final def"}, {"label" : "gradients", "tail" : "(loss: Variable, zeroGrad: Boolean): Seq[Option[STen]]", "member" : "lamp.nn.GenericModule.gradients", "link" : "lamp\/nn\/StatefulSeq4.html#gradients(loss:lamp.autograd.Variable,zeroGrad:Boolean):Seq[Option[lamp.STen]]", "kind" : "final def"}, {"label" : "zeroGrad", "tail" : "(): Unit", "member" : "lamp.nn.GenericModule.zeroGrad", "link" : "lamp\/nn\/StatefulSeq4.html#zeroGrad():Unit", "kind" : "final def"}, {"label" : "parameters", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.GenericModule.parameters", "link" : "lamp\/nn\/StatefulSeq4.html#parameters:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "final def"}, {"label" : "apply", "tail" : "(a: (T1, (S1, S2, S3, S4)))(arg0: Sc[S]): (T5, (S1, S2, S3, S4))", "member" : "lamp.nn.GenericModule.apply", "link" : "lamp\/nn\/StatefulSeq4.html#apply[S](a:A)(implicitevidence$17:lamp.Sc[S]):B", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/StatefulSeq4.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/StatefulSeq4.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/StatefulSeq4.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/StatefulSeq4.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/StatefulSeq4.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/StatefulSeq4.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/StatefulSeq4.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/StatefulSeq4.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/StatefulSeq4.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/StatefulSeq4.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/StatefulSeq4.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/StatefulSeq4.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/StatefulSeq4.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/StatefulSeq4.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/StatefulSeq4.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/StatefulSeq4.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/nn\/StatefulSeq4.html", "kind" : "case class"}, {"name" : "lamp.nn.StatefulSeq5", "shortDescription" : "", "object" : "lamp\/nn\/StatefulSeq5$.html", "members_object" : [{"label" : "initState", "tail" : "(is1: InitState[M1, S1], is2: InitState[M2, S2], is3: InitState[M3, S3], is4: InitState[M4, S4], is5: InitState[M5, S5]): InitState[StatefulSeq5[T1, T2, T3, T4, T5, T6, S1, S2, S3, S4, S5, M1, M2, M3, M4, M5], (S1, S2, S3, S4, S5)]", "member" : "lamp.nn.StatefulSeq5.initState", "link" : "lamp\/nn\/StatefulSeq5$.html#initState[T1,T2,T3,T4,T5,T6,S1,S2,S3,S4,S5,M1<:lamp.nn.StatefulModule[T1,T2,S1],M2<:lamp.nn.StatefulModule[T2,T3,S2],M3<:lamp.nn.StatefulModule[T3,T4,S3],M4<:lamp.nn.StatefulModule[T4,T5,S4],M5<:lamp.nn.StatefulModule[T5,T6,S5]](implicitis1:lamp.nn.InitState[M1,S1],implicitis2:lamp.nn.InitState[M2,S2],implicitis3:lamp.nn.InitState[M3,S3],implicitis4:lamp.nn.InitState[M4,S4],implicitis5:lamp.nn.InitState[M5,S5]):lamp.nn.InitState[lamp.nn.StatefulSeq5[T1,T2,T3,T4,T5,T6,S1,S2,S3,S4,S5,M1,M2,M3,M4,M5],(S1,S2,S3,S4,S5)]", "kind" : "implicit def"}, {"label" : "load", "tail" : "(arg0: Load[M1], arg1: Load[M2], arg2: Load[M3], arg3: Load[M4], arg4: Load[M5]): Load[StatefulSeq5[T1, T2, T3, T4, T5, T6, S1, S2, S3, S4, S5, M1, M2, M3, M4, M5]]", "member" : "lamp.nn.StatefulSeq5.load", "link" : "lamp\/nn\/StatefulSeq5$.html#load[T1,T2,T3,T4,T5,T6,S1,S2,S3,S4,S5,M1<:lamp.nn.StatefulModule[T1,T2,S1],M2<:lamp.nn.StatefulModule[T2,T3,S2],M3<:lamp.nn.StatefulModule[T3,T4,S3],M4<:lamp.nn.StatefulModule[T4,T5,S4],M5<:lamp.nn.StatefulModule[T5,T6,S5]](implicitevidence$32:lamp.nn.Load[M1],implicitevidence$33:lamp.nn.Load[M2],implicitevidence$34:lamp.nn.Load[M3],implicitevidence$35:lamp.nn.Load[M4],implicitevidence$36:lamp.nn.Load[M5]):lamp.nn.Load[lamp.nn.StatefulSeq5[T1,T2,T3,T4,T5,T6,S1,S2,S3,S4,S5,M1,M2,M3,M4,M5]]", "kind" : "implicit def"}, {"label" : "trainingMode", "tail" : "(arg0: TrainingMode[M1], arg1: TrainingMode[M2], arg2: TrainingMode[M3], arg3: TrainingMode[M4], arg4: TrainingMode[M5]): TrainingMode[StatefulSeq5[T1, T2, T3, T4, T5, T6, S1, S2, S3, S4, S5, M1, M2, M3, M4, M5]]", "member" : "lamp.nn.StatefulSeq5.trainingMode", "link" : "lamp\/nn\/StatefulSeq5$.html#trainingMode[T1,T2,T3,T4,T5,T6,S1,S2,S3,S4,S5,M1<:lamp.nn.StatefulModule[T1,T2,S1],M2<:lamp.nn.StatefulModule[T2,T3,S2],M3<:lamp.nn.StatefulModule[T3,T4,S3],M4<:lamp.nn.StatefulModule[T4,T5,S4],M5<:lamp.nn.StatefulModule[T5,T6,S5]](implicitevidence$27:lamp.nn.TrainingMode[M1],implicitevidence$28:lamp.nn.TrainingMode[M2],implicitevidence$29:lamp.nn.TrainingMode[M3],implicitevidence$30:lamp.nn.TrainingMode[M4],implicitevidence$31:lamp.nn.TrainingMode[M5]):lamp.nn.TrainingMode[lamp.nn.StatefulSeq5[T1,T2,T3,T4,T5,T6,S1,S2,S3,S4,S5,M1,M2,M3,M4,M5]]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/StatefulSeq5$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/StatefulSeq5$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/StatefulSeq5$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/StatefulSeq5$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/StatefulSeq5$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/StatefulSeq5$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/StatefulSeq5$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/StatefulSeq5$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/StatefulSeq5$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/StatefulSeq5$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/StatefulSeq5$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/StatefulSeq5$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/StatefulSeq5$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/StatefulSeq5$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/StatefulSeq5$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/StatefulSeq5$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/StatefulSeq5$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/StatefulSeq5$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/StatefulSeq5$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "forward1", "tail" : "(x: T1, st: (S1, S2, S3, S4, S5))(arg0: Sc[S]): (T6, (S1, S2, S3, S4, S5))", "member" : "lamp.nn.StatefulSeq5.forward1", "link" : "lamp\/nn\/StatefulSeq5.html#forward1[S](x:T1,st:(S1,S2,S3,S4,S5))(implicitevidence$26:lamp.Sc[S]):(T6,(S1,S2,S3,S4,S5))", "kind" : "def"}, {"label" : "forward", "tail" : "(x: (T1, (S1, S2, S3, S4, S5)))(arg0: Sc[S]): (T6, (S1, S2, S3, S4, S5))", "member" : "lamp.nn.StatefulSeq5.forward", "link" : "lamp\/nn\/StatefulSeq5.html#forward[S](x:(T1,(S1,S2,S3,S4,S5)))(implicitevidence$25:lamp.Sc[S]):(T6,(S1,S2,S3,S4,S5))", "kind" : "def"}, {"label" : "state", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.StatefulSeq5.state", "link" : "lamp\/nn\/StatefulSeq5.html#state:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "def"}, {"member" : "lamp.nn.StatefulSeq5#<init>", "error" : "unsupported entity"}, {"label" : "m5", "tail" : ": M5 with StatefulModule[T5, T6, S5]", "member" : "lamp.nn.StatefulSeq5.m5", "link" : "lamp\/nn\/StatefulSeq5.html#m5:M5withlamp.nn.StatefulModule[T5,T6,S5]", "kind" : "val"}, {"label" : "m4", "tail" : ": M4 with StatefulModule[T4, T5, S4]", "member" : "lamp.nn.StatefulSeq5.m4", "link" : "lamp\/nn\/StatefulSeq5.html#m4:M4withlamp.nn.StatefulModule[T4,T5,S4]", "kind" : "val"}, {"label" : "m3", "tail" : ": M3 with StatefulModule[T3, T4, S3]", "member" : "lamp.nn.StatefulSeq5.m3", "link" : "lamp\/nn\/StatefulSeq5.html#m3:M3withlamp.nn.StatefulModule[T3,T4,S3]", "kind" : "val"}, {"label" : "m2", "tail" : ": M2 with StatefulModule[T2, T3, S2]", "member" : "lamp.nn.StatefulSeq5.m2", "link" : "lamp\/nn\/StatefulSeq5.html#m2:M2withlamp.nn.StatefulModule[T2,T3,S2]", "kind" : "val"}, {"label" : "m1", "tail" : ": M1 with StatefulModule[T1, T2, S1]", "member" : "lamp.nn.StatefulSeq5.m1", "link" : "lamp\/nn\/StatefulSeq5.html#m1:M1withlamp.nn.StatefulModule[T1,T2,S1]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/nn\/StatefulSeq5.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "learnableParameters", "tail" : "(): Long", "member" : "lamp.nn.GenericModule.learnableParameters", "link" : "lamp\/nn\/StatefulSeq5.html#learnableParameters:Long", "kind" : "final def"}, {"label" : "gradients", "tail" : "(loss: Variable, zeroGrad: Boolean): Seq[Option[STen]]", "member" : "lamp.nn.GenericModule.gradients", "link" : "lamp\/nn\/StatefulSeq5.html#gradients(loss:lamp.autograd.Variable,zeroGrad:Boolean):Seq[Option[lamp.STen]]", "kind" : "final def"}, {"label" : "zeroGrad", "tail" : "(): Unit", "member" : "lamp.nn.GenericModule.zeroGrad", "link" : "lamp\/nn\/StatefulSeq5.html#zeroGrad():Unit", "kind" : "final def"}, {"label" : "parameters", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.GenericModule.parameters", "link" : "lamp\/nn\/StatefulSeq5.html#parameters:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "final def"}, {"label" : "apply", "tail" : "(a: (T1, (S1, S2, S3, S4, S5)))(arg0: Sc[S]): (T6, (S1, S2, S3, S4, S5))", "member" : "lamp.nn.GenericModule.apply", "link" : "lamp\/nn\/StatefulSeq5.html#apply[S](a:A)(implicitevidence$17:lamp.Sc[S]):B", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/StatefulSeq5.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/StatefulSeq5.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/StatefulSeq5.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/StatefulSeq5.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/StatefulSeq5.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/StatefulSeq5.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/StatefulSeq5.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/StatefulSeq5.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/StatefulSeq5.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/StatefulSeq5.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/StatefulSeq5.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/StatefulSeq5.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/StatefulSeq5.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/StatefulSeq5.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/StatefulSeq5.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/StatefulSeq5.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/nn\/StatefulSeq5.html", "kind" : "case class"}, {"name" : "lamp.nn.statefulSequence", "shortDescription" : "", "object" : "lamp\/nn\/statefulSequence$.html", "members_object" : [{"label" : "apply", "tail" : "(m1: M1 with StatefulModule[T1, T2, S1], m2: M2 with StatefulModule[T2, T3, S2], m3: M3 with StatefulModule[T3, T4, S3], m4: M4 with StatefulModule[T4, T5, S4], m5: M5 with StatefulModule[T5, T6, S5]): StatefulSeq5[T1, T2, T3, T4, T5, T6, S1, S2, S3, S4, S5, M1 with StatefulModule[T1, T2, S1], M2 with StatefulModule[T2, T3, S2], M3 with StatefulModule[T3, T4, S3], M4 with StatefulModule[T4, T5, S4], M5 with StatefulModule[T5, T6, S5]]", "member" : "lamp.nn.statefulSequence.apply", "link" : "lamp\/nn\/statefulSequence$.html#apply[T1,T2,T3,T4,T5,T6,S1,S2,S3,S4,S5,M1<:lamp.nn.StatefulModule[T1,T2,S1],M2<:lamp.nn.StatefulModule[T2,T3,S2],M3<:lamp.nn.StatefulModule[T3,T4,S3],M4<:lamp.nn.StatefulModule[T4,T5,S4],M5<:lamp.nn.StatefulModule[T5,T6,S5]](m1:M1withlamp.nn.StatefulModule[T1,T2,S1],m2:M2withlamp.nn.StatefulModule[T2,T3,S2],m3:M3withlamp.nn.StatefulModule[T3,T4,S3],m4:M4withlamp.nn.StatefulModule[T4,T5,S4],m5:M5withlamp.nn.StatefulModule[T5,T6,S5]):lamp.nn.StatefulSeq5[T1,T2,T3,T4,T5,T6,S1,S2,S3,S4,S5,M1withlamp.nn.StatefulModule[T1,T2,S1],M2withlamp.nn.StatefulModule[T2,T3,S2],M3withlamp.nn.StatefulModule[T3,T4,S3],M4withlamp.nn.StatefulModule[T4,T5,S4],M5withlamp.nn.StatefulModule[T5,T6,S5]]", "kind" : "def"}, {"label" : "apply", "tail" : "(m1: M1 with StatefulModule[T1, T2, S1], m2: M2 with StatefulModule[T2, T3, S2], m3: M3 with StatefulModule[T3, T4, S3], m4: M4 with StatefulModule[T4, T5, S4]): StatefulSeq4[T1, T2, T3, T4, T5, S1, S2, S3, S4, M1 with StatefulModule[T1, T2, S1], M2 with StatefulModule[T2, T3, S2], M3 with StatefulModule[T3, T4, S3], M4 with StatefulModule[T4, T5, S4]]", "member" : "lamp.nn.statefulSequence.apply", "link" : "lamp\/nn\/statefulSequence$.html#apply[T1,T2,T3,T4,T5,S1,S2,S3,S4,M1<:lamp.nn.StatefulModule[T1,T2,S1],M2<:lamp.nn.StatefulModule[T2,T3,S2],M3<:lamp.nn.StatefulModule[T3,T4,S3],M4<:lamp.nn.StatefulModule[T4,T5,S4]](m1:M1withlamp.nn.StatefulModule[T1,T2,S1],m2:M2withlamp.nn.StatefulModule[T2,T3,S2],m3:M3withlamp.nn.StatefulModule[T3,T4,S3],m4:M4withlamp.nn.StatefulModule[T4,T5,S4]):lamp.nn.StatefulSeq4[T1,T2,T3,T4,T5,S1,S2,S3,S4,M1withlamp.nn.StatefulModule[T1,T2,S1],M2withlamp.nn.StatefulModule[T2,T3,S2],M3withlamp.nn.StatefulModule[T3,T4,S3],M4withlamp.nn.StatefulModule[T4,T5,S4]]", "kind" : "def"}, {"label" : "apply", "tail" : "(m1: M1 with StatefulModule[T1, T2, S1], m2: M2 with StatefulModule[T2, T3, S2], m3: M3 with StatefulModule[T3, T4, S3]): StatefulSeq3[T1, T2, T3, T4, S1, S2, S3, M1 with StatefulModule[T1, T2, S1], M2 with StatefulModule[T2, T3, S2], M3 with StatefulModule[T3, T4, S3]]", "member" : "lamp.nn.statefulSequence.apply", "link" : "lamp\/nn\/statefulSequence$.html#apply[T1,T2,T3,T4,S1,S2,S3,M1<:lamp.nn.StatefulModule[T1,T2,S1],M2<:lamp.nn.StatefulModule[T2,T3,S2],M3<:lamp.nn.StatefulModule[T3,T4,S3]](m1:M1withlamp.nn.StatefulModule[T1,T2,S1],m2:M2withlamp.nn.StatefulModule[T2,T3,S2],m3:M3withlamp.nn.StatefulModule[T3,T4,S3]):lamp.nn.StatefulSeq3[T1,T2,T3,T4,S1,S2,S3,M1withlamp.nn.StatefulModule[T1,T2,S1],M2withlamp.nn.StatefulModule[T2,T3,S2],M3withlamp.nn.StatefulModule[T3,T4,S3]]", "kind" : "def"}, {"label" : "apply", "tail" : "(m1: M1 with StatefulModule[T1, T2, S1], m2: M2 with StatefulModule[T2, T3, S2]): StatefulSeq2[T1, T2, T3, S1, S2, M1 with StatefulModule[T1, T2, S1], M2 with StatefulModule[T2, T3, S2]]", "member" : "lamp.nn.statefulSequence.apply", "link" : "lamp\/nn\/statefulSequence$.html#apply[T1,T2,T3,S1,S2,M1<:lamp.nn.StatefulModule[T1,T2,S1],M2<:lamp.nn.StatefulModule[T2,T3,S2]](m1:M1withlamp.nn.StatefulModule[T1,T2,S1],m2:M2withlamp.nn.StatefulModule[T2,T3,S2]):lamp.nn.StatefulSeq2[T1,T2,T3,S1,S2,M1withlamp.nn.StatefulModule[T1,T2,S1],M2withlamp.nn.StatefulModule[T2,T3,S2]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/statefulSequence$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/statefulSequence$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/statefulSequence$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/statefulSequence$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/statefulSequence$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/statefulSequence$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/statefulSequence$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/statefulSequence$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/statefulSequence$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/statefulSequence$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/statefulSequence$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/statefulSequence$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/statefulSequence$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/statefulSequence$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/statefulSequence$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/statefulSequence$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/statefulSequence$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/statefulSequence$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/statefulSequence$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "lamp.nn.SupervisedModel", "shortDescription" : "", "members_case class" : [{"label" : "zipOptimizer", "tail" : "(optimizerFactory: (Seq[(STen, PTag)]) => Optimizer): ModelWithOptimizer[I, M]", "member" : "lamp.nn.SupervisedModel.zipOptimizer", "link" : "lamp\/nn\/SupervisedModel.html#zipOptimizer(optimizerFactory:Seq[(lamp.STen,lamp.nn.PTag)]=>lamp.nn.Optimizer):lamp.nn.ModelWithOptimizer[I,M]", "kind" : "def"}, {"label" : "addTotalLossAndReturnGradientsAndNumExamples", "tail" : "(samples: I, target: STen, acc: STen, zeroGrad: Boolean): (Long, Seq[Option[STen]])", "member" : "lamp.nn.SupervisedModel.addTotalLossAndReturnGradientsAndNumExamples", "link" : "lamp\/nn\/SupervisedModel.html#addTotalLossAndReturnGradientsAndNumExamples(samples:I,target:lamp.STen,acc:lamp.STen,zeroGrad:Boolean):(Long,Seq[Option[lamp.STen]])", "kind" : "def"}, {"label" : "addTotalLossAndReturnNumExamples", "tail" : "(samples: I, target: STen, acc: STen): Long", "member" : "lamp.nn.SupervisedModel.addTotalLossAndReturnNumExamples", "link" : "lamp\/nn\/SupervisedModel.html#addTotalLossAndReturnNumExamples(samples:I,target:lamp.STen,acc:lamp.STen):Long", "kind" : "def"}, {"label" : "zeroGrad", "tail" : "(): Unit", "member" : "lamp.nn.SupervisedModel.zeroGrad", "link" : "lamp\/nn\/SupervisedModel.html#zeroGrad():Unit", "kind" : "def"}, {"label" : "asTraining", "tail" : "(): SupervisedModel[I, M with GenericModule[I, Variable]]", "member" : "lamp.nn.SupervisedModel.asTraining", "link" : "lamp\/nn\/SupervisedModel.html#asTraining:lamp.nn.SupervisedModel[I,Mwithlamp.nn.GenericModule[I,lamp.autograd.Variable]]", "kind" : "def"}, {"label" : "asEval", "tail" : "(): SupervisedModel[I, M with GenericModule[I, Variable]]", "member" : "lamp.nn.SupervisedModel.asEval", "link" : "lamp\/nn\/SupervisedModel.html#asEval:lamp.nn.SupervisedModel[I,Mwithlamp.nn.GenericModule[I,lamp.autograd.Variable]]", "kind" : "def"}, {"member" : "lamp.nn.SupervisedModel#<init>", "error" : "unsupported entity"}, {"label" : "printMemoryAllocations", "tail" : ": Boolean", "member" : "lamp.nn.SupervisedModel.printMemoryAllocations", "link" : "lamp\/nn\/SupervisedModel.html#printMemoryAllocations:Boolean", "kind" : "val"}, {"label" : "lossCalculation", "tail" : ": LossCalculation[I]", "member" : "lamp.nn.SupervisedModel.lossCalculation", "link" : "lamp\/nn\/SupervisedModel.html#lossCalculation:lamp.nn.LossCalculation[I]", "kind" : "val"}, {"label" : "lossFunction", "tail" : ": LossFunction", "member" : "lamp.nn.SupervisedModel.lossFunction", "link" : "lamp\/nn\/SupervisedModel.html#lossFunction:lamp.nn.LossFunction", "kind" : "val"}, {"label" : "module", "tail" : ": M with GenericModule[I, Variable]", "member" : "lamp.nn.SupervisedModel.module", "link" : "lamp\/nn\/SupervisedModel.html#module:Mwithlamp.nn.GenericModule[I,lamp.autograd.Variable]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/nn\/SupervisedModel.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/SupervisedModel.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/SupervisedModel.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/SupervisedModel.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/SupervisedModel.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/SupervisedModel.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/SupervisedModel.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/SupervisedModel.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/SupervisedModel.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/SupervisedModel.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/SupervisedModel.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/SupervisedModel.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/SupervisedModel.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/SupervisedModel.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/SupervisedModel.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/SupervisedModel.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/SupervisedModel.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/nn\/SupervisedModel.html", "kind" : "case class"}, {"name" : "lamp.nn.ToLift", "shortDescription" : "", "members_class" : [{"label" : "lift", "tail" : "(): LiftedModule[M with Module]", "member" : "lamp.nn.ToLift.lift", "link" : "lamp\/nn\/package$$ToLift.html#lift:lamp.nn.LiftedModule[Mwithlamp.nn.package.Module]", "kind" : "def"}, {"member" : "lamp.nn.ToLift#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/package$$ToLift.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/package$$ToLift.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/package$$ToLift.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/package$$ToLift.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/package$$ToLift.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/package$$ToLift.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/package$$ToLift.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/package$$ToLift.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/package$$ToLift.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/package$$ToLift.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/package$$ToLift.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/package$$ToLift.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/package$$ToLift.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/package$$ToLift.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/package$$ToLift.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/package$$ToLift.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/package$$ToLift.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/package$$ToLift.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/package$$ToLift.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "lamp\/nn\/package$$ToLift.html", "kind" : "class"}, {"name" : "lamp.nn.ToMappedState", "shortDescription" : "", "members_class" : [{"label" : "mapState", "tail" : "(f: (C) => D): MappedState[A, B, C, D, M]", "member" : "lamp.nn.ToMappedState.mapState", "link" : "lamp\/nn\/package$$ToMappedState.html#mapState[D](f:C=>D):lamp.nn.MappedState[A,B,C,D,M]", "kind" : "def"}, {"member" : "lamp.nn.ToMappedState#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/package$$ToMappedState.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/package$$ToMappedState.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/package$$ToMappedState.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/package$$ToMappedState.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/package$$ToMappedState.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/package$$ToMappedState.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/package$$ToMappedState.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/package$$ToMappedState.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/package$$ToMappedState.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/package$$ToMappedState.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/package$$ToMappedState.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/package$$ToMappedState.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/package$$ToMappedState.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/package$$ToMappedState.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/package$$ToMappedState.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/package$$ToMappedState.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/package$$ToMappedState.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/package$$ToMappedState.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/package$$ToMappedState.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "lamp\/nn\/package$$ToMappedState.html", "kind" : "class"}, {"name" : "lamp.nn.ToUnlift", "shortDescription" : "", "members_class" : [{"label" : "unlift", "tail" : "(): UnliftedModule[A, B, C, D, M with StatefulModule2[A, B, C, D]]", "member" : "lamp.nn.ToUnlift.unlift", "link" : "lamp\/nn\/package$$ToUnlift.html#unlift:lamp.nn.UnliftedModule[A,B,C,D,Mwithlamp.nn.package.StatefulModule2[A,B,C,D]]", "kind" : "def"}, {"member" : "lamp.nn.ToUnlift#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/package$$ToUnlift.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/package$$ToUnlift.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/package$$ToUnlift.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/package$$ToUnlift.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/package$$ToUnlift.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/package$$ToUnlift.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/package$$ToUnlift.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/package$$ToUnlift.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/package$$ToUnlift.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/package$$ToUnlift.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/package$$ToUnlift.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/package$$ToUnlift.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/package$$ToUnlift.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/package$$ToUnlift.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/package$$ToUnlift.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/package$$ToUnlift.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/package$$ToUnlift.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/package$$ToUnlift.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/package$$ToUnlift.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "lamp\/nn\/package$$ToUnlift.html", "kind" : "class"}, {"name" : "lamp.nn.ToWithInit", "shortDescription" : "", "members_class" : [{"label" : "withInit", "tail" : "(c: C): WithInit[A, B, C, M]", "member" : "lamp.nn.ToWithInit.withInit", "link" : "lamp\/nn\/package$$ToWithInit.html#withInit(c:C):lamp.nn.WithInit[A,B,C,M]", "kind" : "def"}, {"member" : "lamp.nn.ToWithInit#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/package$$ToWithInit.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/package$$ToWithInit.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/package$$ToWithInit.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/package$$ToWithInit.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/package$$ToWithInit.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/package$$ToWithInit.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/package$$ToWithInit.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/package$$ToWithInit.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/package$$ToWithInit.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/package$$ToWithInit.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/package$$ToWithInit.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/package$$ToWithInit.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/package$$ToWithInit.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/package$$ToWithInit.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/package$$ToWithInit.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/package$$ToWithInit.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/package$$ToWithInit.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/package$$ToWithInit.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/package$$ToWithInit.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "lamp\/nn\/package$$ToWithInit.html", "kind" : "class"}, {"name" : "lamp.nn.TrainingMode", "object" : "lamp\/nn\/TrainingMode$.html", "members_object" : [{"label" : "identity", "tail" : "(): TrainingMode[M]", "member" : "lamp.nn.TrainingMode.identity", "link" : "lamp\/nn\/TrainingMode$.html#identity[M]:lamp.nn.TrainingMode[M]", "kind" : "def"}, {"label" : "make", "tail" : "(asEval1: (M) => M, asTraining1: (M) => M): TrainingMode[M]", "member" : "lamp.nn.TrainingMode.make", "link" : "lamp\/nn\/TrainingMode$.html#make[M](asEval1:M=>M,asTraining1:M=>M):lamp.nn.TrainingMode[M]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/TrainingMode$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/TrainingMode$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/TrainingMode$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/TrainingMode$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/TrainingMode$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/TrainingMode$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/TrainingMode$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/TrainingMode$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/TrainingMode$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/TrainingMode$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/TrainingMode$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/TrainingMode$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/TrainingMode$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/TrainingMode$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/TrainingMode$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/TrainingMode$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/TrainingMode$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/TrainingMode$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/TrainingMode$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "lamp\/nn\/TrainingMode.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/TrainingMode.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/TrainingMode.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/TrainingMode.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/TrainingMode.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/TrainingMode.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/TrainingMode.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/TrainingMode.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/TrainingMode.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/TrainingMode.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/TrainingMode.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/TrainingMode.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/TrainingMode.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/TrainingMode.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/TrainingMode.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/TrainingMode.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/TrainingMode.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/TrainingMode.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/TrainingMode.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/TrainingMode.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "asTraining", "tail" : "(m: M): M", "member" : "lamp.nn.TrainingMode.asTraining", "link" : "lamp\/nn\/TrainingMode.html#asTraining(m:M):M", "kind" : "abstract def"}, {"label" : "asEval", "tail" : "(m: M): M", "member" : "lamp.nn.TrainingMode.asEval", "link" : "lamp\/nn\/TrainingMode.html#asEval(m:M):M", "kind" : "abstract def"}], "shortDescription" : "Type class about how to switch a module into training or evaluation mode"}, {"name" : "lamp.nn.TrainingModeSyntax", "shortDescription" : "", "members_class" : [{"label" : "asTraining", "tail" : "(): M", "member" : "lamp.nn.TrainingModeSyntax.asTraining", "link" : "lamp\/nn\/package$$TrainingModeSyntax.html#asTraining:M", "kind" : "def"}, {"label" : "asEval", "tail" : "(): M", "member" : "lamp.nn.TrainingModeSyntax.asEval", "link" : "lamp\/nn\/package$$TrainingModeSyntax.html#asEval:M", "kind" : "def"}, {"member" : "lamp.nn.TrainingModeSyntax#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/package$$TrainingModeSyntax.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/package$$TrainingModeSyntax.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/package$$TrainingModeSyntax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/package$$TrainingModeSyntax.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/package$$TrainingModeSyntax.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/package$$TrainingModeSyntax.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/package$$TrainingModeSyntax.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/package$$TrainingModeSyntax.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/package$$TrainingModeSyntax.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/package$$TrainingModeSyntax.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/package$$TrainingModeSyntax.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/package$$TrainingModeSyntax.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/package$$TrainingModeSyntax.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/package$$TrainingModeSyntax.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/package$$TrainingModeSyntax.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/package$$TrainingModeSyntax.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/package$$TrainingModeSyntax.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/package$$TrainingModeSyntax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/package$$TrainingModeSyntax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "lamp\/nn\/package$$TrainingModeSyntax.html", "kind" : "class"}, {"name" : "lamp.nn.TransformerEmbedding", "shortDescription" : "Gradients are not computed for positionalEmbedding", "object" : "lamp\/nn\/TransformerEmbedding$.html", "members_object" : [{"label" : "load", "tail" : ": Load[TransformerEmbedding]", "member" : "lamp.nn.TransformerEmbedding.load", "link" : "lamp\/nn\/TransformerEmbedding$.html#load:lamp.nn.Load[lamp.nn.TransformerEmbedding]", "kind" : "implicit val"}, {"label" : "trainingMode", "tail" : ": TrainingMode[TransformerEmbedding]", "member" : "lamp.nn.TransformerEmbedding.trainingMode", "link" : "lamp\/nn\/TransformerEmbedding$.html#trainingMode:lamp.nn.TrainingMode[lamp.nn.TransformerEmbedding]", "kind" : "implicit val"}, {"label" : "Embedding", "tail" : "", "member" : "lamp.nn.TransformerEmbedding.Embedding", "link" : "lamp\/nn\/TransformerEmbedding$.html#Embedding", "kind" : "case object"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/TransformerEmbedding$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/TransformerEmbedding$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/TransformerEmbedding$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/TransformerEmbedding$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/TransformerEmbedding$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/TransformerEmbedding$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/TransformerEmbedding$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/TransformerEmbedding$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/TransformerEmbedding$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/TransformerEmbedding$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/TransformerEmbedding$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/TransformerEmbedding$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/TransformerEmbedding$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/TransformerEmbedding$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/TransformerEmbedding$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/TransformerEmbedding$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/TransformerEmbedding$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/TransformerEmbedding$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/TransformerEmbedding$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "forward", "tail" : "(x: Variable)(arg0: Sc[S]): (Variable, STen)", "member" : "lamp.nn.TransformerEmbedding.forward", "link" : "lamp\/nn\/TransformerEmbedding.html#forward[S](x:lamp.autograd.Variable)(implicitevidence$13:lamp.Sc[S]):(lamp.autograd.Variable,lamp.STen)", "kind" : "def"}, {"label" : "state", "tail" : "(): List[(Constant, LeafTag with Product with Serializable)]", "member" : "lamp.nn.TransformerEmbedding.state", "link" : "lamp\/nn\/TransformerEmbedding.html#state:List[(lamp.autograd.Constant,lamp.nn.LeafTagwithProductwithjava.io.Serializable)]", "kind" : "def"}, {"member" : "lamp.nn.TransformerEmbedding#<init>", "error" : "unsupported entity"}, {"label" : "positionalEmbedding", "tail" : ": Constant", "member" : "lamp.nn.TransformerEmbedding.positionalEmbedding", "link" : "lamp\/nn\/TransformerEmbedding.html#positionalEmbedding:lamp.autograd.Constant", "kind" : "val"}, {"label" : "addPositionalEmbedding", "tail" : ": Boolean", "member" : "lamp.nn.TransformerEmbedding.addPositionalEmbedding", "link" : "lamp\/nn\/TransformerEmbedding.html#addPositionalEmbedding:Boolean", "kind" : "val"}, {"label" : "embedding", "tail" : ": Embedding", "member" : "lamp.nn.TransformerEmbedding.embedding", "link" : "lamp\/nn\/TransformerEmbedding.html#embedding:lamp.nn.Embedding", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/nn\/TransformerEmbedding.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "learnableParameters", "tail" : "(): Long", "member" : "lamp.nn.GenericModule.learnableParameters", "link" : "lamp\/nn\/TransformerEmbedding.html#learnableParameters:Long", "kind" : "final def"}, {"label" : "gradients", "tail" : "(loss: Variable, zeroGrad: Boolean): Seq[Option[STen]]", "member" : "lamp.nn.GenericModule.gradients", "link" : "lamp\/nn\/TransformerEmbedding.html#gradients(loss:lamp.autograd.Variable,zeroGrad:Boolean):Seq[Option[lamp.STen]]", "kind" : "final def"}, {"label" : "zeroGrad", "tail" : "(): Unit", "member" : "lamp.nn.GenericModule.zeroGrad", "link" : "lamp\/nn\/TransformerEmbedding.html#zeroGrad():Unit", "kind" : "final def"}, {"label" : "parameters", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.GenericModule.parameters", "link" : "lamp\/nn\/TransformerEmbedding.html#parameters:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "final def"}, {"label" : "apply", "tail" : "(a: Variable)(arg0: Sc[S]): (Variable, STen)", "member" : "lamp.nn.GenericModule.apply", "link" : "lamp\/nn\/TransformerEmbedding.html#apply[S](a:A)(implicitevidence$17:lamp.Sc[S]):B", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/TransformerEmbedding.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/TransformerEmbedding.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/TransformerEmbedding.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/TransformerEmbedding.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/TransformerEmbedding.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/TransformerEmbedding.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/TransformerEmbedding.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/TransformerEmbedding.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/TransformerEmbedding.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/TransformerEmbedding.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/TransformerEmbedding.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/TransformerEmbedding.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/TransformerEmbedding.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/TransformerEmbedding.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/TransformerEmbedding.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/TransformerEmbedding.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/nn\/TransformerEmbedding.html", "kind" : "case class"}, {"name" : "lamp.nn.TransformerEncoder", "shortDescription" : "TransformerEncoder module", "object" : "lamp\/nn\/TransformerEncoder$.html", "members_object" : [{"label" : "apply", "tail" : "(numBlocks: Int, in: Int, attentionHiddenPerHeadDim: Int, attentionNumHeads: Int, mlpHiddenDim: Int, dropout: Double, padToken: Long, tOpt: STenOptions, linearized: Boolean)(arg0: Sc[S]): TransformerEncoder", "member" : "lamp.nn.TransformerEncoder.apply", "link" : "lamp\/nn\/TransformerEncoder$.html#apply[S](numBlocks:Int,in:Int,attentionHiddenPerHeadDim:Int,attentionNumHeads:Int,mlpHiddenDim:Int,dropout:Double,padToken:Long,tOpt:lamp.STenOptions,linearized:Boolean)(implicitevidence$2:lamp.Sc[S]):lamp.nn.TransformerEncoder", "kind" : "def"}, {"label" : "load", "tail" : ": Load[TransformerEncoder]", "member" : "lamp.nn.TransformerEncoder.load", "link" : "lamp\/nn\/TransformerEncoder$.html#load:lamp.nn.Load[lamp.nn.TransformerEncoder]", "kind" : "implicit val"}, {"label" : "trainingMode", "tail" : ": TrainingMode[TransformerEncoder]", "member" : "lamp.nn.TransformerEncoder.trainingMode", "link" : "lamp\/nn\/TransformerEncoder$.html#trainingMode:lamp.nn.TrainingMode[lamp.nn.TransformerEncoder]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/TransformerEncoder$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/TransformerEncoder$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/TransformerEncoder$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/TransformerEncoder$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/TransformerEncoder$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/TransformerEncoder$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/TransformerEncoder$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/TransformerEncoder$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/TransformerEncoder$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/TransformerEncoder$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/TransformerEncoder$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/TransformerEncoder$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/TransformerEncoder$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/TransformerEncoder$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/TransformerEncoder$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/TransformerEncoder$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/TransformerEncoder$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/TransformerEncoder$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/TransformerEncoder$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "forward", "tail" : "(x: (Variable, STen))(arg0: Sc[S]): Variable", "member" : "lamp.nn.TransformerEncoder.forward", "link" : "lamp\/nn\/TransformerEncoder.html#forward[S](x:(lamp.autograd.Variable,lamp.STen))(implicitevidence$1:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "state", "tail" : "(): List[(Constant, PTag)]", "member" : "lamp.nn.TransformerEncoder.state", "link" : "lamp\/nn\/TransformerEncoder.html#state:List[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "def"}, {"member" : "lamp.nn.TransformerEncoder#<init>", "error" : "unsupported entity"}, {"label" : "blocks", "tail" : ": Seq[TransformerEncoderBlock]", "member" : "lamp.nn.TransformerEncoder.blocks", "link" : "lamp\/nn\/TransformerEncoder.html#blocks:Seq[lamp.nn.TransformerEncoderBlock]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/nn\/TransformerEncoder.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "learnableParameters", "tail" : "(): Long", "member" : "lamp.nn.GenericModule.learnableParameters", "link" : "lamp\/nn\/TransformerEncoder.html#learnableParameters:Long", "kind" : "final def"}, {"label" : "gradients", "tail" : "(loss: Variable, zeroGrad: Boolean): Seq[Option[STen]]", "member" : "lamp.nn.GenericModule.gradients", "link" : "lamp\/nn\/TransformerEncoder.html#gradients(loss:lamp.autograd.Variable,zeroGrad:Boolean):Seq[Option[lamp.STen]]", "kind" : "final def"}, {"label" : "zeroGrad", "tail" : "(): Unit", "member" : "lamp.nn.GenericModule.zeroGrad", "link" : "lamp\/nn\/TransformerEncoder.html#zeroGrad():Unit", "kind" : "final def"}, {"label" : "parameters", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.GenericModule.parameters", "link" : "lamp\/nn\/TransformerEncoder.html#parameters:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "final def"}, {"label" : "apply", "tail" : "(a: (Variable, STen))(arg0: Sc[S]): Variable", "member" : "lamp.nn.GenericModule.apply", "link" : "lamp\/nn\/TransformerEncoder.html#apply[S](a:A)(implicitevidence$17:lamp.Sc[S]):B", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/TransformerEncoder.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/TransformerEncoder.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/TransformerEncoder.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/TransformerEncoder.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/TransformerEncoder.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/TransformerEncoder.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/TransformerEncoder.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/TransformerEncoder.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/TransformerEncoder.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/TransformerEncoder.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/TransformerEncoder.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/TransformerEncoder.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/TransformerEncoder.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/TransformerEncoder.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/TransformerEncoder.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/TransformerEncoder.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/nn\/TransformerEncoder.html", "kind" : "case class"}, {"name" : "lamp.nn.TransformerEncoderBlock", "shortDescription" : "A single block of the transformer encoder as defined in Fig 10.7.1 in d2l v0.16", "object" : "lamp\/nn\/TransformerEncoderBlock$.html", "members_object" : [{"label" : "load", "tail" : ": Load[TransformerEncoderBlock]", "member" : "lamp.nn.TransformerEncoderBlock.load", "link" : "lamp\/nn\/TransformerEncoderBlock$.html#load:lamp.nn.Load[lamp.nn.TransformerEncoderBlock]", "kind" : "implicit val"}, {"label" : "trainingMode", "tail" : ": TrainingMode[TransformerEncoderBlock]", "member" : "lamp.nn.TransformerEncoderBlock.trainingMode", "link" : "lamp\/nn\/TransformerEncoderBlock$.html#trainingMode:lamp.nn.TrainingMode[lamp.nn.TransformerEncoderBlock]", "kind" : "implicit val"}, {"label" : "Bias2", "tail" : "", "member" : "lamp.nn.TransformerEncoderBlock.Bias2", "link" : "lamp\/nn\/TransformerEncoderBlock$.html#Bias2", "kind" : "object"}, {"label" : "Bias1", "tail" : "", "member" : "lamp.nn.TransformerEncoderBlock.Bias1", "link" : "lamp\/nn\/TransformerEncoderBlock$.html#Bias1", "kind" : "object"}, {"label" : "Weights2", "tail" : "", "member" : "lamp.nn.TransformerEncoderBlock.Weights2", "link" : "lamp\/nn\/TransformerEncoderBlock$.html#Weights2", "kind" : "object"}, {"label" : "Weights1", "tail" : "", "member" : "lamp.nn.TransformerEncoderBlock.Weights1", "link" : "lamp\/nn\/TransformerEncoderBlock$.html#Weights1", "kind" : "object"}, {"label" : "apply", "tail" : "(in: Int, attentionHiddenPerHeadDim: Int, attentionNumHeads: Int, mlpHiddenDim: Int, out: Int, dropout: Double, padToken: Long, tOpt: STenOptions, linearized: Boolean)(arg0: Sc[S]): TransformerEncoderBlock", "member" : "lamp.nn.TransformerEncoderBlock.apply", "link" : "lamp\/nn\/TransformerEncoderBlock$.html#apply[S](in:Int,attentionHiddenPerHeadDim:Int,attentionNumHeads:Int,mlpHiddenDim:Int,out:Int,dropout:Double,padToken:Long,tOpt:lamp.STenOptions,linearized:Boolean)(implicitevidence$4:lamp.Sc[S]):lamp.nn.TransformerEncoderBlock", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/TransformerEncoderBlock$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/TransformerEncoderBlock$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/TransformerEncoderBlock$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/TransformerEncoderBlock$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/TransformerEncoderBlock$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/TransformerEncoderBlock$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/TransformerEncoderBlock$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/TransformerEncoderBlock$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/TransformerEncoderBlock$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/TransformerEncoderBlock$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/TransformerEncoderBlock$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/TransformerEncoderBlock$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/TransformerEncoderBlock$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/TransformerEncoderBlock$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/TransformerEncoderBlock$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/TransformerEncoderBlock$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/TransformerEncoderBlock$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/TransformerEncoderBlock$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/TransformerEncoderBlock$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "forward", "tail" : "(x: (Variable, STen))(arg0: Sc[S]): Variable", "member" : "lamp.nn.TransformerEncoderBlock.forward", "link" : "lamp\/nn\/TransformerEncoderBlock.html#forward[S](x:(lamp.autograd.Variable,lamp.STen))(implicitevidence$3:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "state", "tail" : "(): List[(Constant, LeafTag)]", "member" : "lamp.nn.TransformerEncoderBlock.state", "link" : "lamp\/nn\/TransformerEncoderBlock.html#state:List[(lamp.autograd.Constant,lamp.nn.LeafTag)]", "kind" : "def"}, {"member" : "lamp.nn.TransformerEncoderBlock#<init>", "error" : "unsupported entity"}, {"label" : "train", "tail" : ": Boolean", "member" : "lamp.nn.TransformerEncoderBlock.train", "link" : "lamp\/nn\/TransformerEncoderBlock.html#train:Boolean", "kind" : "val"}, {"label" : "dropout", "tail" : ": Double", "member" : "lamp.nn.TransformerEncoderBlock.dropout", "link" : "lamp\/nn\/TransformerEncoderBlock.html#dropout:Double", "kind" : "val"}, {"label" : "b2", "tail" : ": Constant", "member" : "lamp.nn.TransformerEncoderBlock.b2", "link" : "lamp\/nn\/TransformerEncoderBlock.html#b2:lamp.autograd.Constant", "kind" : "val"}, {"label" : "w2", "tail" : ": Constant", "member" : "lamp.nn.TransformerEncoderBlock.w2", "link" : "lamp\/nn\/TransformerEncoderBlock.html#w2:lamp.autograd.Constant", "kind" : "val"}, {"label" : "b1", "tail" : ": Constant", "member" : "lamp.nn.TransformerEncoderBlock.b1", "link" : "lamp\/nn\/TransformerEncoderBlock.html#b1:lamp.autograd.Constant", "kind" : "val"}, {"label" : "w1", "tail" : ": Constant", "member" : "lamp.nn.TransformerEncoderBlock.w1", "link" : "lamp\/nn\/TransformerEncoderBlock.html#w1:lamp.autograd.Constant", "kind" : "val"}, {"label" : "layerNorm2", "tail" : ": LayerNorm", "member" : "lamp.nn.TransformerEncoderBlock.layerNorm2", "link" : "lamp\/nn\/TransformerEncoderBlock.html#layerNorm2:lamp.nn.LayerNorm", "kind" : "val"}, {"label" : "layerNorm1", "tail" : ": LayerNorm", "member" : "lamp.nn.TransformerEncoderBlock.layerNorm1", "link" : "lamp\/nn\/TransformerEncoderBlock.html#layerNorm1:lamp.nn.LayerNorm", "kind" : "val"}, {"label" : "attention", "tail" : ": MultiheadAttention", "member" : "lamp.nn.TransformerEncoderBlock.attention", "link" : "lamp\/nn\/TransformerEncoderBlock.html#attention:lamp.nn.MultiheadAttention", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/nn\/TransformerEncoderBlock.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "learnableParameters", "tail" : "(): Long", "member" : "lamp.nn.GenericModule.learnableParameters", "link" : "lamp\/nn\/TransformerEncoderBlock.html#learnableParameters:Long", "kind" : "final def"}, {"label" : "gradients", "tail" : "(loss: Variable, zeroGrad: Boolean): Seq[Option[STen]]", "member" : "lamp.nn.GenericModule.gradients", "link" : "lamp\/nn\/TransformerEncoderBlock.html#gradients(loss:lamp.autograd.Variable,zeroGrad:Boolean):Seq[Option[lamp.STen]]", "kind" : "final def"}, {"label" : "zeroGrad", "tail" : "(): Unit", "member" : "lamp.nn.GenericModule.zeroGrad", "link" : "lamp\/nn\/TransformerEncoderBlock.html#zeroGrad():Unit", "kind" : "final def"}, {"label" : "parameters", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.GenericModule.parameters", "link" : "lamp\/nn\/TransformerEncoderBlock.html#parameters:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "final def"}, {"label" : "apply", "tail" : "(a: (Variable, STen))(arg0: Sc[S]): Variable", "member" : "lamp.nn.GenericModule.apply", "link" : "lamp\/nn\/TransformerEncoderBlock.html#apply[S](a:A)(implicitevidence$17:lamp.Sc[S]):B", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/TransformerEncoderBlock.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/TransformerEncoderBlock.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/TransformerEncoderBlock.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/TransformerEncoderBlock.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/TransformerEncoderBlock.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/TransformerEncoderBlock.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/TransformerEncoderBlock.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/TransformerEncoderBlock.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/TransformerEncoderBlock.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/TransformerEncoderBlock.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/TransformerEncoderBlock.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/TransformerEncoderBlock.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/TransformerEncoderBlock.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/TransformerEncoderBlock.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/TransformerEncoderBlock.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/TransformerEncoderBlock.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/nn\/TransformerEncoderBlock.html", "kind" : "case class"}, {"name" : "lamp.nn.UnliftedModule", "shortDescription" : "", "object" : "lamp\/nn\/UnliftedModule$.html", "members_object" : [{"label" : "initState", "tail" : "(is: InitState[M, C]): InitState[UnliftedModule[A, B, C, D, M], Unit]", "member" : "lamp.nn.UnliftedModule.initState", "link" : "lamp\/nn\/UnliftedModule$.html#initState[A,B,C,D,M<:lamp.nn.StatefulModule2[A,B,C,D]](implicitis:lamp.nn.InitState[M,C]):lamp.nn.InitState[lamp.nn.UnliftedModule[A,B,C,D,M],Unit]", "kind" : "implicit def"}, {"label" : "load", "tail" : "(arg0: Load[M]): Load[UnliftedModule[A, B, C, D, M]]", "member" : "lamp.nn.UnliftedModule.load", "link" : "lamp\/nn\/UnliftedModule$.html#load[A,B,C,D,M<:lamp.nn.StatefulModule2[A,B,C,D]](implicitevidence$15:lamp.nn.Load[M]):lamp.nn.Load[lamp.nn.UnliftedModule[A,B,C,D,M]]", "kind" : "implicit def"}, {"label" : "trainingMode", "tail" : "(t: TrainingMode[M], is: InitState[M, C]): TrainingMode[UnliftedModule[A, B, C, D, M]]", "member" : "lamp.nn.UnliftedModule.trainingMode", "link" : "lamp\/nn\/UnliftedModule$.html#trainingMode[A,B,C,D,M<:lamp.nn.StatefulModule2[A,B,C,D]](implicitt:lamp.nn.TrainingMode[M],implicitis:lamp.nn.InitState[M,C]):lamp.nn.TrainingMode[lamp.nn.UnliftedModule[A,B,C,D,M]]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/UnliftedModule$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/UnliftedModule$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/UnliftedModule$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/UnliftedModule$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/UnliftedModule$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/UnliftedModule$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/UnliftedModule$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/UnliftedModule$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/UnliftedModule$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/UnliftedModule$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/UnliftedModule$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/UnliftedModule$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/UnliftedModule$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/UnliftedModule$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/UnliftedModule$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/UnliftedModule$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/UnliftedModule$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/UnliftedModule$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/UnliftedModule$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "forward", "tail" : "(x: A)(arg0: Sc[S]): B", "member" : "lamp.nn.UnliftedModule.forward", "link" : "lamp\/nn\/UnliftedModule.html#forward[S](x:A)(implicitevidence$14:lamp.Sc[S]):B", "kind" : "def"}, {"label" : "state", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.UnliftedModule.state", "link" : "lamp\/nn\/UnliftedModule.html#state:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "def"}, {"member" : "lamp.nn.UnliftedModule#<init>", "error" : "unsupported entity"}, {"label" : "statefulModule", "tail" : ": M with StatefulModule2[A, B, C, D]", "member" : "lamp.nn.UnliftedModule.statefulModule", "link" : "lamp\/nn\/UnliftedModule.html#statefulModule:Mwithlamp.nn.StatefulModule2[A,B,C,D]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/nn\/UnliftedModule.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "learnableParameters", "tail" : "(): Long", "member" : "lamp.nn.GenericModule.learnableParameters", "link" : "lamp\/nn\/UnliftedModule.html#learnableParameters:Long", "kind" : "final def"}, {"label" : "gradients", "tail" : "(loss: Variable, zeroGrad: Boolean): Seq[Option[STen]]", "member" : "lamp.nn.GenericModule.gradients", "link" : "lamp\/nn\/UnliftedModule.html#gradients(loss:lamp.autograd.Variable,zeroGrad:Boolean):Seq[Option[lamp.STen]]", "kind" : "final def"}, {"label" : "zeroGrad", "tail" : "(): Unit", "member" : "lamp.nn.GenericModule.zeroGrad", "link" : "lamp\/nn\/UnliftedModule.html#zeroGrad():Unit", "kind" : "final def"}, {"label" : "parameters", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.GenericModule.parameters", "link" : "lamp\/nn\/UnliftedModule.html#parameters:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "final def"}, {"label" : "apply", "tail" : "(a: A)(arg0: Sc[S]): B", "member" : "lamp.nn.GenericModule.apply", "link" : "lamp\/nn\/UnliftedModule.html#apply[S](a:A)(implicitevidence$17:lamp.Sc[S]):B", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/UnliftedModule.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/UnliftedModule.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/UnliftedModule.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/UnliftedModule.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/UnliftedModule.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/UnliftedModule.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/UnliftedModule.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/UnliftedModule.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/UnliftedModule.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/UnliftedModule.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/UnliftedModule.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/UnliftedModule.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/UnliftedModule.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/UnliftedModule.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/UnliftedModule.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/UnliftedModule.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/nn\/UnliftedModule.html", "kind" : "case class"}, {"name" : "lamp.nn.WeightNormLinear", "shortDescription" : "", "object" : "lamp\/nn\/WeightNormLinear$.html", "members_object" : [{"label" : "apply", "tail" : "(in: Int, out: Int, tOpt: STenOptions, bias: Boolean)(arg0: Sc[S]): WeightNormLinear", "member" : "lamp.nn.WeightNormLinear.apply", "link" : "lamp\/nn\/WeightNormLinear$.html#apply[S](in:Int,out:Int,tOpt:lamp.STenOptions,bias:Boolean)(implicitevidence$2:lamp.Sc[S]):lamp.nn.WeightNormLinear", "kind" : "def"}, {"label" : "Bias", "tail" : "", "member" : "lamp.nn.WeightNormLinear.Bias", "link" : "lamp\/nn\/WeightNormLinear$.html#Bias", "kind" : "case object"}, {"label" : "WeightsG", "tail" : "", "member" : "lamp.nn.WeightNormLinear.WeightsG", "link" : "lamp\/nn\/WeightNormLinear$.html#WeightsG", "kind" : "case object"}, {"label" : "WeightsV", "tail" : "", "member" : "lamp.nn.WeightNormLinear.WeightsV", "link" : "lamp\/nn\/WeightNormLinear$.html#WeightsV", "kind" : "case object"}, {"label" : "load", "tail" : ": Load[WeightNormLinear]", "member" : "lamp.nn.WeightNormLinear.load", "link" : "lamp\/nn\/WeightNormLinear$.html#load:lamp.nn.Load[lamp.nn.WeightNormLinear]", "kind" : "implicit val"}, {"label" : "trainingMode", "tail" : ": TrainingMode[WeightNormLinear]", "member" : "lamp.nn.WeightNormLinear.trainingMode", "link" : "lamp\/nn\/WeightNormLinear$.html#trainingMode:lamp.nn.TrainingMode[lamp.nn.WeightNormLinear]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/WeightNormLinear$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/WeightNormLinear$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/WeightNormLinear$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/WeightNormLinear$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/WeightNormLinear$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/WeightNormLinear$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/WeightNormLinear$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/WeightNormLinear$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/WeightNormLinear$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/WeightNormLinear$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/WeightNormLinear$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/WeightNormLinear$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/WeightNormLinear$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/WeightNormLinear$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/WeightNormLinear$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/WeightNormLinear$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/WeightNormLinear$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/WeightNormLinear$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/WeightNormLinear$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "forward", "tail" : "(x: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.nn.WeightNormLinear.forward", "link" : "lamp\/nn\/WeightNormLinear.html#forward[S](x:lamp.autograd.Variable)(implicitevidence$1:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "state", "tail" : ": List[(Constant, LeafTag with Product with Serializable)]", "member" : "lamp.nn.WeightNormLinear.state", "link" : "lamp\/nn\/WeightNormLinear.html#state:List[(lamp.autograd.Constant,lamp.nn.LeafTagwithProductwithjava.io.Serializable)]", "kind" : "val"}, {"member" : "lamp.nn.WeightNormLinear#<init>", "error" : "unsupported entity"}, {"label" : "bias", "tail" : ": Option[Constant]", "member" : "lamp.nn.WeightNormLinear.bias", "link" : "lamp\/nn\/WeightNormLinear.html#bias:Option[lamp.autograd.Constant]", "kind" : "val"}, {"label" : "weightsG", "tail" : ": Constant", "member" : "lamp.nn.WeightNormLinear.weightsG", "link" : "lamp\/nn\/WeightNormLinear.html#weightsG:lamp.autograd.Constant", "kind" : "val"}, {"label" : "weightsV", "tail" : ": Constant", "member" : "lamp.nn.WeightNormLinear.weightsV", "link" : "lamp\/nn\/WeightNormLinear.html#weightsV:lamp.autograd.Constant", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/nn\/WeightNormLinear.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "learnableParameters", "tail" : "(): Long", "member" : "lamp.nn.GenericModule.learnableParameters", "link" : "lamp\/nn\/WeightNormLinear.html#learnableParameters:Long", "kind" : "final def"}, {"label" : "gradients", "tail" : "(loss: Variable, zeroGrad: Boolean): Seq[Option[STen]]", "member" : "lamp.nn.GenericModule.gradients", "link" : "lamp\/nn\/WeightNormLinear.html#gradients(loss:lamp.autograd.Variable,zeroGrad:Boolean):Seq[Option[lamp.STen]]", "kind" : "final def"}, {"label" : "zeroGrad", "tail" : "(): Unit", "member" : "lamp.nn.GenericModule.zeroGrad", "link" : "lamp\/nn\/WeightNormLinear.html#zeroGrad():Unit", "kind" : "final def"}, {"label" : "parameters", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.GenericModule.parameters", "link" : "lamp\/nn\/WeightNormLinear.html#parameters:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "final def"}, {"label" : "apply", "tail" : "(a: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.nn.GenericModule.apply", "link" : "lamp\/nn\/WeightNormLinear.html#apply[S](a:A)(implicitevidence$17:lamp.Sc[S]):B", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/WeightNormLinear.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/WeightNormLinear.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/WeightNormLinear.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/WeightNormLinear.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/WeightNormLinear.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/WeightNormLinear.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/WeightNormLinear.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/WeightNormLinear.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/WeightNormLinear.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/WeightNormLinear.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/WeightNormLinear.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/WeightNormLinear.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/WeightNormLinear.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/WeightNormLinear.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/WeightNormLinear.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/WeightNormLinear.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/nn\/WeightNormLinear.html", "kind" : "case class"}, {"name" : "lamp.nn.WithInit", "shortDescription" : "", "object" : "lamp\/nn\/WithInit$.html", "members_object" : [{"label" : "initState", "tail" : "(): InitState[WithInit[A, B, C, M], C]", "member" : "lamp.nn.WithInit.initState", "link" : "lamp\/nn\/WithInit$.html#initState[A,B,C,M<:lamp.nn.StatefulModule[A,B,C]]:lamp.nn.InitState[lamp.nn.WithInit[A,B,C,M],C]", "kind" : "implicit def"}, {"label" : "load", "tail" : "(arg0: Load[M]): Load[WithInit[A, B, C, M]]", "member" : "lamp.nn.WithInit.load", "link" : "lamp\/nn\/WithInit$.html#load[A,B,C,M<:lamp.nn.StatefulModule[A,B,C]](implicitevidence$8:lamp.nn.Load[M]):lamp.nn.Load[lamp.nn.WithInit[A,B,C,M]]", "kind" : "implicit def"}, {"label" : "trainingMode", "tail" : "(arg0: TrainingMode[M]): TrainingMode[WithInit[A, B, C, M]]", "member" : "lamp.nn.WithInit.trainingMode", "link" : "lamp\/nn\/WithInit$.html#trainingMode[A,B,C,M<:lamp.nn.StatefulModule[A,B,C]](implicitevidence$7:lamp.nn.TrainingMode[M]):lamp.nn.TrainingMode[lamp.nn.WithInit[A,B,C,M]]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/WithInit$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/WithInit$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/WithInit$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/WithInit$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/WithInit$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/WithInit$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/WithInit$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/WithInit$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/WithInit$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/WithInit$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/WithInit$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/WithInit$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/WithInit$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/WithInit$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/WithInit$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/WithInit$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/WithInit$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/WithInit$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/WithInit$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "state", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.WithInit.state", "link" : "lamp\/nn\/WithInit.html#state:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "def"}, {"label" : "forward", "tail" : "(x: (A, C))(arg0: Sc[S]): (B, C)", "member" : "lamp.nn.WithInit.forward", "link" : "lamp\/nn\/WithInit.html#forward[S](x:(A,C))(implicitevidence$6:lamp.Sc[S]):(B,C)", "kind" : "def"}, {"member" : "lamp.nn.WithInit#<init>", "error" : "unsupported entity"}, {"label" : "init", "tail" : ": C", "member" : "lamp.nn.WithInit.init", "link" : "lamp\/nn\/WithInit.html#init:C", "kind" : "val"}, {"label" : "module", "tail" : ": M with StatefulModule[A, B, C]", "member" : "lamp.nn.WithInit.module", "link" : "lamp\/nn\/WithInit.html#module:Mwithlamp.nn.StatefulModule[A,B,C]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/nn\/WithInit.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "learnableParameters", "tail" : "(): Long", "member" : "lamp.nn.GenericModule.learnableParameters", "link" : "lamp\/nn\/WithInit.html#learnableParameters:Long", "kind" : "final def"}, {"label" : "gradients", "tail" : "(loss: Variable, zeroGrad: Boolean): Seq[Option[STen]]", "member" : "lamp.nn.GenericModule.gradients", "link" : "lamp\/nn\/WithInit.html#gradients(loss:lamp.autograd.Variable,zeroGrad:Boolean):Seq[Option[lamp.STen]]", "kind" : "final def"}, {"label" : "zeroGrad", "tail" : "(): Unit", "member" : "lamp.nn.GenericModule.zeroGrad", "link" : "lamp\/nn\/WithInit.html#zeroGrad():Unit", "kind" : "final def"}, {"label" : "parameters", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.GenericModule.parameters", "link" : "lamp\/nn\/WithInit.html#parameters:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "final def"}, {"label" : "apply", "tail" : "(a: (A, C))(arg0: Sc[S]): (B, C)", "member" : "lamp.nn.GenericModule.apply", "link" : "lamp\/nn\/WithInit.html#apply[S](a:A)(implicitevidence$17:lamp.Sc[S]):B", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/WithInit.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/WithInit.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/WithInit.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/WithInit.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/WithInit.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/WithInit.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/WithInit.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/WithInit.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/WithInit.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/WithInit.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/WithInit.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/WithInit.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/WithInit.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/WithInit.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/WithInit.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/WithInit.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/nn\/WithInit.html", "kind" : "case class"}, {"name" : "lamp.nn.Yogi", "shortDescription" : "The Yogi optimizer algorithmI added the decoupled weight decay term following https:\/\/arxiv.org\/pdf\/1711.05101.pdf", "object" : "lamp\/nn\/Yogi$.html", "members_object" : [{"label" : "factory", "tail" : "(weightDecay: OptimizerHyperparameter, learningRate: OptimizerHyperparameter, beta1: OptimizerHyperparameter, beta2: OptimizerHyperparameter, eps: Double, clip: Option[Double], debias: Boolean): (Seq[(STen, PTag)]) => Yogi", "member" : "lamp.nn.Yogi.factory", "link" : "lamp\/nn\/Yogi$.html#factory(weightDecay:lamp.nn.OptimizerHyperparameter,learningRate:lamp.nn.OptimizerHyperparameter,beta1:lamp.nn.OptimizerHyperparameter,beta2:lamp.nn.OptimizerHyperparameter,eps:Double,clip:Option[Double],debias:Boolean):Seq[(lamp.STen,lamp.nn.PTag)]=>lamp.nn.Yogi", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/Yogi$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/Yogi$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/Yogi$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/Yogi$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/Yogi$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/Yogi$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/Yogi$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Yogi$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Yogi$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Yogi$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/Yogi$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/Yogi$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/Yogi$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/Yogi$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/Yogi$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/Yogi$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/Yogi$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/Yogi$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/Yogi$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "step", "tail" : "(gradients: Seq[Option[STen]], scheduleFactor: Double): Unit", "member" : "lamp.nn.Yogi.step", "link" : "lamp\/nn\/Yogi.html#step(gradients:Seq[Option[lamp.STen]],scheduleFactor:Double):Unit", "kind" : "def"}, {"label" : "release", "tail" : "(): Unit", "member" : "lamp.nn.Yogi.release", "link" : "lamp\/nn\/Yogi.html#release():Unit", "kind" : "def"}, {"label" : "load", "tail" : "(tensors: Seq[STen]): Unit", "member" : "lamp.nn.Yogi.load", "link" : "lamp\/nn\/Yogi.html#load(tensors:Seq[lamp.STen]):Unit", "kind" : "def"}, {"label" : "state", "tail" : "(): List[STen]", "member" : "lamp.nn.Yogi.state", "link" : "lamp\/nn\/Yogi.html#state:List[lamp.STen]", "kind" : "def"}, {"label" : "stepCountSTen", "tail" : ": STen", "member" : "lamp.nn.Yogi.stepCountSTen", "link" : "lamp\/nn\/Yogi.html#stepCountSTen:lamp.STen", "kind" : "val"}, {"label" : "stepCount", "tail" : ": Long", "member" : "lamp.nn.Yogi.stepCount", "link" : "lamp\/nn\/Yogi.html#stepCount:Long", "kind" : "var"}, {"label" : "vt", "tail" : ": List[STen]", "member" : "lamp.nn.Yogi.vt", "link" : "lamp\/nn\/Yogi.html#vt:List[lamp.STen]", "kind" : "val"}, {"label" : "mt", "tail" : ": List[STen]", "member" : "lamp.nn.Yogi.mt", "link" : "lamp\/nn\/Yogi.html#mt:List[lamp.STen]", "kind" : "val"}, {"label" : "scope", "tail" : ": Scope", "member" : "lamp.nn.Yogi.scope", "link" : "lamp\/nn\/Yogi.html#scope:lamp.Scope", "kind" : "val"}, {"member" : "lamp.nn.Yogi#<init>", "error" : "unsupported entity"}, {"label" : "debias", "tail" : ": Boolean", "member" : "lamp.nn.Yogi.debias", "link" : "lamp\/nn\/Yogi.html#debias:Boolean", "kind" : "val"}, {"label" : "clip", "tail" : ": Option[Double]", "member" : "lamp.nn.Yogi.clip", "link" : "lamp\/nn\/Yogi.html#clip:Option[Double]", "kind" : "val"}, {"label" : "eps", "tail" : ": Double", "member" : "lamp.nn.Yogi.eps", "link" : "lamp\/nn\/Yogi.html#eps:Double", "kind" : "val"}, {"label" : "beta2", "tail" : ": OptimizerHyperparameter", "member" : "lamp.nn.Yogi.beta2", "link" : "lamp\/nn\/Yogi.html#beta2:lamp.nn.OptimizerHyperparameter", "kind" : "val"}, {"label" : "beta1", "tail" : ": OptimizerHyperparameter", "member" : "lamp.nn.Yogi.beta1", "link" : "lamp\/nn\/Yogi.html#beta1:lamp.nn.OptimizerHyperparameter", "kind" : "val"}, {"label" : "learningRate", "tail" : ": OptimizerHyperparameter", "member" : "lamp.nn.Yogi.learningRate", "link" : "lamp\/nn\/Yogi.html#learningRate:lamp.nn.OptimizerHyperparameter", "kind" : "val"}, {"label" : "weightDecay", "tail" : ": OptimizerHyperparameter", "member" : "lamp.nn.Yogi.weightDecay", "link" : "lamp\/nn\/Yogi.html#weightDecay:lamp.nn.OptimizerHyperparameter", "kind" : "val"}, {"label" : "parameters", "tail" : ": Seq[(STen, PTag)]", "member" : "lamp.nn.Yogi.parameters", "link" : "lamp\/nn\/Yogi.html#parameters:Seq[(lamp.STen,lamp.nn.PTag)]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/nn\/Yogi.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/Yogi.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/Yogi.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/Yogi.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/Yogi.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/Yogi.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/Yogi.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/Yogi.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Yogi.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Yogi.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Yogi.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/Yogi.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/Yogi.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/Yogi.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/Yogi.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/Yogi.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/Yogi.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/nn\/Yogi.html", "kind" : "case class"}], "onnx.onnx" : [{"name" : "onnx.onnx.AttributeProto", "shortDescription" : "Attributes", "object" : "onnx\/onnx\/AttributeProto$.html", "members_object" : [{"label" : "of", "tail" : "(name: Option[String], refAttrName: Option[String], docString: Option[String], type: Option[AttributeType], f: Option[Float], i: Option[Long], s: Option[ByteString], t: Option[TensorProto], g: Option[GraphProto], sparseTensor: Option[SparseTensorProto], floats: Seq[Float], ints: Seq[Long], strings: Seq[ByteString], tensors: Seq[TensorProto], graphs: Seq[GraphProto], sparseTensors: Seq[SparseTensorProto]): AttributeProto", "member" : "onnx.onnx.AttributeProto.of", "link" : "onnx\/onnx\/AttributeProto$.html#of(name:Option[String],refAttrName:Option[String],docString:Option[String],type:Option[onnx.onnx.AttributeProto.AttributeType],f:Option[Float],i:Option[Long],s:Option[com.google.protobuf.ByteString],t:Option[onnx.onnx.TensorProto],g:Option[onnx.onnx.GraphProto],sparseTensor:Option[onnx.onnx.SparseTensorProto],floats:Seq[Float],ints:Seq[Long],strings:Seq[com.google.protobuf.ByteString],tensors:Seq[onnx.onnx.TensorProto],graphs:Seq[onnx.onnx.GraphProto],sparseTensors:Seq[onnx.onnx.SparseTensorProto]):onnx.onnx.AttributeProto", "kind" : "def"}, {"label" : "SPARSE_TENSORS_FIELD_NUMBER", "tail" : ": Int(23)", "member" : "onnx.onnx.AttributeProto.SPARSE_TENSORS_FIELD_NUMBER", "link" : "onnx\/onnx\/AttributeProto$.html#SPARSE_TENSORS_FIELD_NUMBER:Int(23)", "kind" : "final val"}, {"label" : "GRAPHS_FIELD_NUMBER", "tail" : ": Int(11)", "member" : "onnx.onnx.AttributeProto.GRAPHS_FIELD_NUMBER", "link" : "onnx\/onnx\/AttributeProto$.html#GRAPHS_FIELD_NUMBER:Int(11)", "kind" : "final val"}, {"label" : "TENSORS_FIELD_NUMBER", "tail" : ": Int(10)", "member" : "onnx.onnx.AttributeProto.TENSORS_FIELD_NUMBER", "link" : "onnx\/onnx\/AttributeProto$.html#TENSORS_FIELD_NUMBER:Int(10)", "kind" : "final val"}, {"label" : "STRINGS_FIELD_NUMBER", "tail" : ": Int(9)", "member" : "onnx.onnx.AttributeProto.STRINGS_FIELD_NUMBER", "link" : "onnx\/onnx\/AttributeProto$.html#STRINGS_FIELD_NUMBER:Int(9)", "kind" : "final val"}, {"label" : "INTS_FIELD_NUMBER", "tail" : ": Int(8)", "member" : "onnx.onnx.AttributeProto.INTS_FIELD_NUMBER", "link" : "onnx\/onnx\/AttributeProto$.html#INTS_FIELD_NUMBER:Int(8)", "kind" : "final val"}, {"label" : "FLOATS_FIELD_NUMBER", "tail" : ": Int(7)", "member" : "onnx.onnx.AttributeProto.FLOATS_FIELD_NUMBER", "link" : "onnx\/onnx\/AttributeProto$.html#FLOATS_FIELD_NUMBER:Int(7)", "kind" : "final val"}, {"label" : "SPARSE_TENSOR_FIELD_NUMBER", "tail" : ": Int(22)", "member" : "onnx.onnx.AttributeProto.SPARSE_TENSOR_FIELD_NUMBER", "link" : "onnx\/onnx\/AttributeProto$.html#SPARSE_TENSOR_FIELD_NUMBER:Int(22)", "kind" : "final val"}, {"label" : "G_FIELD_NUMBER", "tail" : ": Int(6)", "member" : "onnx.onnx.AttributeProto.G_FIELD_NUMBER", "link" : "onnx\/onnx\/AttributeProto$.html#G_FIELD_NUMBER:Int(6)", "kind" : "final val"}, {"label" : "T_FIELD_NUMBER", "tail" : ": Int(5)", "member" : "onnx.onnx.AttributeProto.T_FIELD_NUMBER", "link" : "onnx\/onnx\/AttributeProto$.html#T_FIELD_NUMBER:Int(5)", "kind" : "final val"}, {"label" : "S_FIELD_NUMBER", "tail" : ": Int(4)", "member" : "onnx.onnx.AttributeProto.S_FIELD_NUMBER", "link" : "onnx\/onnx\/AttributeProto$.html#S_FIELD_NUMBER:Int(4)", "kind" : "final val"}, {"label" : "I_FIELD_NUMBER", "tail" : ": Int(3)", "member" : "onnx.onnx.AttributeProto.I_FIELD_NUMBER", "link" : "onnx\/onnx\/AttributeProto$.html#I_FIELD_NUMBER:Int(3)", "kind" : "final val"}, {"label" : "F_FIELD_NUMBER", "tail" : ": Int(2)", "member" : "onnx.onnx.AttributeProto.F_FIELD_NUMBER", "link" : "onnx\/onnx\/AttributeProto$.html#F_FIELD_NUMBER:Int(2)", "kind" : "final val"}, {"label" : "TYPE_FIELD_NUMBER", "tail" : ": Int(20)", "member" : "onnx.onnx.AttributeProto.TYPE_FIELD_NUMBER", "link" : "onnx\/onnx\/AttributeProto$.html#TYPE_FIELD_NUMBER:Int(20)", "kind" : "final val"}, {"label" : "DOC_STRING_FIELD_NUMBER", "tail" : ": Int(13)", "member" : "onnx.onnx.AttributeProto.DOC_STRING_FIELD_NUMBER", "link" : "onnx\/onnx\/AttributeProto$.html#DOC_STRING_FIELD_NUMBER:Int(13)", "kind" : "final val"}, {"label" : "REF_ATTR_NAME_FIELD_NUMBER", "tail" : ": Int(21)", "member" : "onnx.onnx.AttributeProto.REF_ATTR_NAME_FIELD_NUMBER", "link" : "onnx\/onnx\/AttributeProto$.html#REF_ATTR_NAME_FIELD_NUMBER:Int(21)", "kind" : "final val"}, {"label" : "NAME_FIELD_NUMBER", "tail" : ": Int(1)", "member" : "onnx.onnx.AttributeProto.NAME_FIELD_NUMBER", "link" : "onnx\/onnx\/AttributeProto$.html#NAME_FIELD_NUMBER:Int(1)", "kind" : "final val"}, {"label" : "AttributeProtoLens", "tail" : "", "member" : "onnx.onnx.AttributeProto.AttributeProtoLens", "link" : "onnx\/onnx\/AttributeProto$.html#AttributeProtoLens[UpperPB]extendsObjectLens[UpperPB,onnx.onnx.AttributeProto]", "kind" : "implicit class"}, {"label" : "AttributeType", "tail" : "", "member" : "onnx.onnx.AttributeProto.AttributeType", "link" : "onnx\/onnx\/AttributeProto$.html#AttributeType", "kind" : "object"}, {"label" : "AttributeType", "tail" : "", "member" : "onnx.onnx.AttributeProto.AttributeType", "link" : "onnx\/onnx\/AttributeProto$.html#AttributeTypeextendsGeneratedEnum", "kind" : "sealed abstract class"}, {"label" : "defaultInstance", "tail" : ": AttributeProto", "member" : "onnx.onnx.AttributeProto.defaultInstance", "link" : "onnx\/onnx\/AttributeProto$.html#defaultInstance:onnx.onnx.AttributeProto", "kind" : "lazy val"}, {"label" : "enumCompanionForFieldNumber", "tail" : "(__fieldNumber: Int): GeneratedEnumCompanion[_]", "member" : "onnx.onnx.AttributeProto.enumCompanionForFieldNumber", "link" : "onnx\/onnx\/AttributeProto$.html#enumCompanionForFieldNumber(__fieldNumber:Int):scalapb.GeneratedEnumCompanion[_]", "kind" : "def"}, {"label" : "nestedMessagesCompanions", "tail" : ": Seq[GeneratedMessageCompanion[_ <: GeneratedMessage]]", "member" : "onnx.onnx.AttributeProto.nestedMessagesCompanions", "link" : "onnx\/onnx\/AttributeProto$.html#nestedMessagesCompanions:Seq[scalapb.GeneratedMessageCompanion[_<:scalapb.GeneratedMessage]]", "kind" : "lazy val"}, {"label" : "messageCompanionForFieldNumber", "tail" : "(__number: Int): GeneratedMessageCompanion[_]", "member" : "onnx.onnx.AttributeProto.messageCompanionForFieldNumber", "link" : "onnx\/onnx\/AttributeProto$.html#messageCompanionForFieldNumber(__number:Int):scalapb.GeneratedMessageCompanion[_]", "kind" : "def"}, {"label" : "scalaDescriptor", "tail" : "(): Descriptor", "member" : "onnx.onnx.AttributeProto.scalaDescriptor", "link" : "onnx\/onnx\/AttributeProto$.html#scalaDescriptor:scalapb.descriptors.Descriptor", "kind" : "def"}, {"label" : "javaDescriptor", "tail" : "(): Descriptor", "member" : "onnx.onnx.AttributeProto.javaDescriptor", "link" : "onnx\/onnx\/AttributeProto$.html#javaDescriptor:com.google.protobuf.Descriptors.Descriptor", "kind" : "def"}, {"label" : "messageReads", "tail" : "(): Reads[AttributeProto]", "member" : "onnx.onnx.AttributeProto.messageReads", "link" : "onnx\/onnx\/AttributeProto$.html#messageReads:scalapb.descriptors.Reads[onnx.onnx.AttributeProto]", "kind" : "implicit def"}, {"label" : "parseFrom", "tail" : "(_input__: CodedInputStream): AttributeProto", "member" : "onnx.onnx.AttributeProto.parseFrom", "link" : "onnx\/onnx\/AttributeProto$.html#parseFrom(_input__:com.google.protobuf.CodedInputStream):onnx.onnx.AttributeProto", "kind" : "def"}, {"label" : "messageCompanion", "tail" : "(): GeneratedMessageCompanion[AttributeProto]", "member" : "onnx.onnx.AttributeProto.messageCompanion", "link" : "onnx\/onnx\/AttributeProto$.html#messageCompanion:scalapb.GeneratedMessageCompanion[onnx.onnx.AttributeProto]", "kind" : "implicit def"}, {"label" : "fromAscii", "tail" : "(s: String): AttributeProto", "member" : "scalapb.GeneratedMessageCompanion.fromAscii", "link" : "onnx\/onnx\/AttributeProto$.html#fromAscii(s:String):A", "kind" : "def"}, {"label" : "validateAscii", "tail" : "(s: String): Either[TextFormatError, AttributeProto]", "member" : "scalapb.GeneratedMessageCompanion.validateAscii", "link" : "onnx\/onnx\/AttributeProto$.html#validateAscii(s:String):Either[scalapb.TextFormatError,A]", "kind" : "def"}, {"label" : "enumCompanionForField", "tail" : "(field: FieldDescriptor): GeneratedEnumCompanion[_]", "member" : "scalapb.GeneratedMessageCompanion.enumCompanionForField", "link" : "onnx\/onnx\/AttributeProto$.html#enumCompanionForField(field:com.google.protobuf.Descriptors.FieldDescriptor):scalapb.GeneratedEnumCompanion[_]", "kind" : "def"}, {"label" : "messageCompanionForField", "tail" : "(field: FieldDescriptor): GeneratedMessageCompanion[_]", "member" : "scalapb.GeneratedMessageCompanion.messageCompanionForField", "link" : "onnx\/onnx\/AttributeProto$.html#messageCompanionForField(field:com.google.protobuf.Descriptors.FieldDescriptor):scalapb.GeneratedMessageCompanion[_]", "kind" : "def"}, {"label" : "toByteArray", "tail" : "(a: AttributeProto): Array[Byte]", "member" : "scalapb.GeneratedMessageCompanion.toByteArray", "link" : "onnx\/onnx\/AttributeProto$.html#toByteArray(a:A):Array[Byte]", "kind" : "def"}, {"label" : "validate", "tail" : "(s: Array[Byte]): Try[AttributeProto]", "member" : "scalapb.GeneratedMessageCompanion.validate", "link" : "onnx\/onnx\/AttributeProto$.html#validate(s:Array[Byte]):scala.util.Try[A]", "kind" : "def"}, {"label" : "merge", "tail" : "(a: AttributeProto, input: CodedInputStream): AttributeProto", "member" : "scalapb.GeneratedMessageCompanion.merge", "link" : "onnx\/onnx\/AttributeProto$.html#merge(a:A,input:com.google.protobuf.CodedInputStream):A", "kind" : "def"}, {"label" : "parseFrom", "tail" : "(s: Array[Byte]): AttributeProto", "member" : "scalapb.GeneratedMessageCompanion.parseFrom", "link" : "onnx\/onnx\/AttributeProto$.html#parseFrom(s:Array[Byte]):A", "kind" : "def"}, {"label" : "streamFromDelimitedInput", "tail" : "(input: InputStream): Stream[AttributeProto]", "member" : "scalapb.GeneratedMessageCompanion.streamFromDelimitedInput", "link" : "onnx\/onnx\/AttributeProto$.html#streamFromDelimitedInput(input:java.io.InputStream):Stream[A]", "kind" : "def"}, {"label" : "parseDelimitedFrom", "tail" : "(input: InputStream): Option[AttributeProto]", "member" : "scalapb.GeneratedMessageCompanion.parseDelimitedFrom", "link" : "onnx\/onnx\/AttributeProto$.html#parseDelimitedFrom(input:java.io.InputStream):Option[A]", "kind" : "def"}, {"label" : "parseDelimitedFrom", "tail" : "(input: CodedInputStream): Option[AttributeProto]", "member" : "scalapb.GeneratedMessageCompanion.parseDelimitedFrom", "link" : "onnx\/onnx\/AttributeProto$.html#parseDelimitedFrom(input:com.google.protobuf.CodedInputStream):Option[A]", "kind" : "def"}, {"label" : "parseFrom", "tail" : "(input: InputStream): AttributeProto", "member" : "scalapb.GeneratedMessageCompanion.parseFrom", "link" : "onnx\/onnx\/AttributeProto$.html#parseFrom(input:java.io.InputStream):A", "kind" : "def"}, {"label" : "ValueType", "tail" : "", "member" : "scalapb.GeneratedMessageCompanion.ValueType", "link" : "onnx\/onnx\/AttributeProto$.html#ValueType=A", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "onnx\/onnx\/AttributeProto$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "onnx\/onnx\/AttributeProto$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "onnx\/onnx\/AttributeProto$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "onnx\/onnx\/AttributeProto$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "onnx\/onnx\/AttributeProto$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "onnx\/onnx\/AttributeProto$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "onnx\/onnx\/AttributeProto$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "onnx\/onnx\/AttributeProto$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "onnx\/onnx\/AttributeProto$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "onnx\/onnx\/AttributeProto$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "onnx\/onnx\/AttributeProto$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "onnx\/onnx\/AttributeProto$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "onnx\/onnx\/AttributeProto$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "onnx\/onnx\/AttributeProto$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "onnx\/onnx\/AttributeProto$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "onnx\/onnx\/AttributeProto$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "onnx\/onnx\/AttributeProto$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "onnx\/onnx\/AttributeProto$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "onnx\/onnx\/AttributeProto$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "companion", "tail" : "(): AttributeProto.type", "member" : "onnx.onnx.AttributeProto.companion", "link" : "onnx\/onnx\/AttributeProto.html#companion:onnx.onnx.AttributeProto.type", "kind" : "def"}, {"label" : "toProtoString", "tail" : "(): String", "member" : "onnx.onnx.AttributeProto.toProtoString", "link" : "onnx\/onnx\/AttributeProto.html#toProtoString:String", "kind" : "def"}, {"label" : "getField", "tail" : "(__field: FieldDescriptor): PValue", "member" : "onnx.onnx.AttributeProto.getField", "link" : "onnx\/onnx\/AttributeProto.html#getField(__field:scalapb.descriptors.FieldDescriptor):scalapb.descriptors.PValue", "kind" : "def"}, {"label" : "getFieldByNumber", "tail" : "(__fieldNumber: Int): Any", "member" : "onnx.onnx.AttributeProto.getFieldByNumber", "link" : "onnx\/onnx\/AttributeProto.html#getFieldByNumber(__fieldNumber:Int):Any", "kind" : "def"}, {"label" : "discardUnknownFields", "tail" : "(): AttributeProto", "member" : "onnx.onnx.AttributeProto.discardUnknownFields", "link" : "onnx\/onnx\/AttributeProto.html#discardUnknownFields:onnx.onnx.AttributeProto", "kind" : "def"}, {"label" : "withUnknownFields", "tail" : "(__v: UnknownFieldSet): AttributeProto", "member" : "onnx.onnx.AttributeProto.withUnknownFields", "link" : "onnx\/onnx\/AttributeProto.html#withUnknownFields(__v:scalapb.UnknownFieldSet):onnx.onnx.AttributeProto", "kind" : "def"}, {"label" : "withSparseTensors", "tail" : "(__v: Seq[SparseTensorProto]): AttributeProto", "member" : "onnx.onnx.AttributeProto.withSparseTensors", "link" : "onnx\/onnx\/AttributeProto.html#withSparseTensors(__v:Seq[onnx.onnx.SparseTensorProto]):onnx.onnx.AttributeProto", "kind" : "def"}, {"label" : "addAllSparseTensors", "tail" : "(__vs: Iterable[SparseTensorProto]): AttributeProto", "member" : "onnx.onnx.AttributeProto.addAllSparseTensors", "link" : "onnx\/onnx\/AttributeProto.html#addAllSparseTensors(__vs:Iterable[onnx.onnx.SparseTensorProto]):onnx.onnx.AttributeProto", "kind" : "def"}, {"label" : "addSparseTensors", "tail" : "(__vs: SparseTensorProto*): AttributeProto", "member" : "onnx.onnx.AttributeProto.addSparseTensors", "link" : "onnx\/onnx\/AttributeProto.html#addSparseTensors(__vs:onnx.onnx.SparseTensorProto*):onnx.onnx.AttributeProto", "kind" : "def"}, {"label" : "clearSparseTensors", "tail" : "(): AttributeProto", "member" : "onnx.onnx.AttributeProto.clearSparseTensors", "link" : "onnx\/onnx\/AttributeProto.html#clearSparseTensors:onnx.onnx.AttributeProto", "kind" : "def"}, {"label" : "withGraphs", "tail" : "(__v: Seq[GraphProto]): AttributeProto", "member" : "onnx.onnx.AttributeProto.withGraphs", "link" : "onnx\/onnx\/AttributeProto.html#withGraphs(__v:Seq[onnx.onnx.GraphProto]):onnx.onnx.AttributeProto", "kind" : "def"}, {"label" : "addAllGraphs", "tail" : "(__vs: Iterable[GraphProto]): AttributeProto", "member" : "onnx.onnx.AttributeProto.addAllGraphs", "link" : "onnx\/onnx\/AttributeProto.html#addAllGraphs(__vs:Iterable[onnx.onnx.GraphProto]):onnx.onnx.AttributeProto", "kind" : "def"}, {"label" : "addGraphs", "tail" : "(__vs: GraphProto*): AttributeProto", "member" : "onnx.onnx.AttributeProto.addGraphs", "link" : "onnx\/onnx\/AttributeProto.html#addGraphs(__vs:onnx.onnx.GraphProto*):onnx.onnx.AttributeProto", "kind" : "def"}, {"label" : "clearGraphs", "tail" : "(): AttributeProto", "member" : "onnx.onnx.AttributeProto.clearGraphs", "link" : "onnx\/onnx\/AttributeProto.html#clearGraphs:onnx.onnx.AttributeProto", "kind" : "def"}, {"label" : "withTensors", "tail" : "(__v: Seq[TensorProto]): AttributeProto", "member" : "onnx.onnx.AttributeProto.withTensors", "link" : "onnx\/onnx\/AttributeProto.html#withTensors(__v:Seq[onnx.onnx.TensorProto]):onnx.onnx.AttributeProto", "kind" : "def"}, {"label" : "addAllTensors", "tail" : "(__vs: Iterable[TensorProto]): AttributeProto", "member" : "onnx.onnx.AttributeProto.addAllTensors", "link" : "onnx\/onnx\/AttributeProto.html#addAllTensors(__vs:Iterable[onnx.onnx.TensorProto]):onnx.onnx.AttributeProto", "kind" : "def"}, {"label" : "addTensors", "tail" : "(__vs: TensorProto*): AttributeProto", "member" : "onnx.onnx.AttributeProto.addTensors", "link" : "onnx\/onnx\/AttributeProto.html#addTensors(__vs:onnx.onnx.TensorProto*):onnx.onnx.AttributeProto", "kind" : "def"}, {"label" : "clearTensors", "tail" : "(): AttributeProto", "member" : "onnx.onnx.AttributeProto.clearTensors", "link" : "onnx\/onnx\/AttributeProto.html#clearTensors:onnx.onnx.AttributeProto", "kind" : "def"}, {"label" : "withStrings", "tail" : "(__v: Seq[ByteString]): AttributeProto", "member" : "onnx.onnx.AttributeProto.withStrings", "link" : "onnx\/onnx\/AttributeProto.html#withStrings(__v:Seq[com.google.protobuf.ByteString]):onnx.onnx.AttributeProto", "kind" : "def"}, {"label" : "addAllStrings", "tail" : "(__vs: Iterable[ByteString]): AttributeProto", "member" : "onnx.onnx.AttributeProto.addAllStrings", "link" : "onnx\/onnx\/AttributeProto.html#addAllStrings(__vs:Iterable[com.google.protobuf.ByteString]):onnx.onnx.AttributeProto", "kind" : "def"}, {"label" : "addStrings", "tail" : "(__vs: ByteString*): AttributeProto", "member" : "onnx.onnx.AttributeProto.addStrings", "link" : "onnx\/onnx\/AttributeProto.html#addStrings(__vs:com.google.protobuf.ByteString*):onnx.onnx.AttributeProto", "kind" : "def"}, {"label" : "clearStrings", "tail" : "(): AttributeProto", "member" : "onnx.onnx.AttributeProto.clearStrings", "link" : "onnx\/onnx\/AttributeProto.html#clearStrings:onnx.onnx.AttributeProto", "kind" : "def"}, {"label" : "withInts", "tail" : "(__v: Seq[Long]): AttributeProto", "member" : "onnx.onnx.AttributeProto.withInts", "link" : "onnx\/onnx\/AttributeProto.html#withInts(__v:Seq[Long]):onnx.onnx.AttributeProto", "kind" : "def"}, {"label" : "addAllInts", "tail" : "(__vs: Iterable[Long]): AttributeProto", "member" : "onnx.onnx.AttributeProto.addAllInts", "link" : "onnx\/onnx\/AttributeProto.html#addAllInts(__vs:Iterable[Long]):onnx.onnx.AttributeProto", "kind" : "def"}, {"label" : "addInts", "tail" : "(__vs: Long*): AttributeProto", "member" : "onnx.onnx.AttributeProto.addInts", "link" : "onnx\/onnx\/AttributeProto.html#addInts(__vs:Long*):onnx.onnx.AttributeProto", "kind" : "def"}, {"label" : "clearInts", "tail" : "(): AttributeProto", "member" : "onnx.onnx.AttributeProto.clearInts", "link" : "onnx\/onnx\/AttributeProto.html#clearInts:onnx.onnx.AttributeProto", "kind" : "def"}, {"label" : "withFloats", "tail" : "(__v: Seq[Float]): AttributeProto", "member" : "onnx.onnx.AttributeProto.withFloats", "link" : "onnx\/onnx\/AttributeProto.html#withFloats(__v:Seq[Float]):onnx.onnx.AttributeProto", "kind" : "def"}, {"label" : "addAllFloats", "tail" : "(__vs: Iterable[Float]): AttributeProto", "member" : "onnx.onnx.AttributeProto.addAllFloats", "link" : "onnx\/onnx\/AttributeProto.html#addAllFloats(__vs:Iterable[Float]):onnx.onnx.AttributeProto", "kind" : "def"}, {"label" : "addFloats", "tail" : "(__vs: Float*): AttributeProto", "member" : "onnx.onnx.AttributeProto.addFloats", "link" : "onnx\/onnx\/AttributeProto.html#addFloats(__vs:Float*):onnx.onnx.AttributeProto", "kind" : "def"}, {"label" : "clearFloats", "tail" : "(): AttributeProto", "member" : "onnx.onnx.AttributeProto.clearFloats", "link" : "onnx\/onnx\/AttributeProto.html#clearFloats:onnx.onnx.AttributeProto", "kind" : "def"}, {"label" : "withSparseTensor", "tail" : "(__v: SparseTensorProto): AttributeProto", "member" : "onnx.onnx.AttributeProto.withSparseTensor", "link" : "onnx\/onnx\/AttributeProto.html#withSparseTensor(__v:onnx.onnx.SparseTensorProto):onnx.onnx.AttributeProto", "kind" : "def"}, {"label" : "clearSparseTensor", "tail" : "(): AttributeProto", "member" : "onnx.onnx.AttributeProto.clearSparseTensor", "link" : "onnx\/onnx\/AttributeProto.html#clearSparseTensor:onnx.onnx.AttributeProto", "kind" : "def"}, {"label" : "getSparseTensor", "tail" : "(): SparseTensorProto", "member" : "onnx.onnx.AttributeProto.getSparseTensor", "link" : "onnx\/onnx\/AttributeProto.html#getSparseTensor:onnx.onnx.SparseTensorProto", "kind" : "def"}, {"label" : "withG", "tail" : "(__v: GraphProto): AttributeProto", "member" : "onnx.onnx.AttributeProto.withG", "link" : "onnx\/onnx\/AttributeProto.html#withG(__v:onnx.onnx.GraphProto):onnx.onnx.AttributeProto", "kind" : "def"}, {"label" : "clearG", "tail" : "(): AttributeProto", "member" : "onnx.onnx.AttributeProto.clearG", "link" : "onnx\/onnx\/AttributeProto.html#clearG:onnx.onnx.AttributeProto", "kind" : "def"}, {"label" : "getG", "tail" : "(): GraphProto", "member" : "onnx.onnx.AttributeProto.getG", "link" : "onnx\/onnx\/AttributeProto.html#getG:onnx.onnx.GraphProto", "kind" : "def"}, {"label" : "withT", "tail" : "(__v: TensorProto): AttributeProto", "member" : "onnx.onnx.AttributeProto.withT", "link" : "onnx\/onnx\/AttributeProto.html#withT(__v:onnx.onnx.TensorProto):onnx.onnx.AttributeProto", "kind" : "def"}, {"label" : "clearT", "tail" : "(): AttributeProto", "member" : "onnx.onnx.AttributeProto.clearT", "link" : "onnx\/onnx\/AttributeProto.html#clearT:onnx.onnx.AttributeProto", "kind" : "def"}, {"label" : "getT", "tail" : "(): TensorProto", "member" : "onnx.onnx.AttributeProto.getT", "link" : "onnx\/onnx\/AttributeProto.html#getT:onnx.onnx.TensorProto", "kind" : "def"}, {"label" : "withS", "tail" : "(__v: ByteString): AttributeProto", "member" : "onnx.onnx.AttributeProto.withS", "link" : "onnx\/onnx\/AttributeProto.html#withS(__v:com.google.protobuf.ByteString):onnx.onnx.AttributeProto", "kind" : "def"}, {"label" : "clearS", "tail" : "(): AttributeProto", "member" : "onnx.onnx.AttributeProto.clearS", "link" : "onnx\/onnx\/AttributeProto.html#clearS:onnx.onnx.AttributeProto", "kind" : "def"}, {"label" : "getS", "tail" : "(): ByteString", "member" : "onnx.onnx.AttributeProto.getS", "link" : "onnx\/onnx\/AttributeProto.html#getS:com.google.protobuf.ByteString", "kind" : "def"}, {"label" : "withI", "tail" : "(__v: Long): AttributeProto", "member" : "onnx.onnx.AttributeProto.withI", "link" : "onnx\/onnx\/AttributeProto.html#withI(__v:Long):onnx.onnx.AttributeProto", "kind" : "def"}, {"label" : "clearI", "tail" : "(): AttributeProto", "member" : "onnx.onnx.AttributeProto.clearI", "link" : "onnx\/onnx\/AttributeProto.html#clearI:onnx.onnx.AttributeProto", "kind" : "def"}, {"label" : "getI", "tail" : "(): Long", "member" : "onnx.onnx.AttributeProto.getI", "link" : "onnx\/onnx\/AttributeProto.html#getI:Long", "kind" : "def"}, {"label" : "withF", "tail" : "(__v: Float): AttributeProto", "member" : "onnx.onnx.AttributeProto.withF", "link" : "onnx\/onnx\/AttributeProto.html#withF(__v:Float):onnx.onnx.AttributeProto", "kind" : "def"}, {"label" : "clearF", "tail" : "(): AttributeProto", "member" : "onnx.onnx.AttributeProto.clearF", "link" : "onnx\/onnx\/AttributeProto.html#clearF:onnx.onnx.AttributeProto", "kind" : "def"}, {"label" : "getF", "tail" : "(): Float", "member" : "onnx.onnx.AttributeProto.getF", "link" : "onnx\/onnx\/AttributeProto.html#getF:Float", "kind" : "def"}, {"label" : "withType", "tail" : "(__v: AttributeType): AttributeProto", "member" : "onnx.onnx.AttributeProto.withType", "link" : "onnx\/onnx\/AttributeProto.html#withType(__v:onnx.onnx.AttributeProto.AttributeType):onnx.onnx.AttributeProto", "kind" : "def"}, {"label" : "clearType", "tail" : "(): AttributeProto", "member" : "onnx.onnx.AttributeProto.clearType", "link" : "onnx\/onnx\/AttributeProto.html#clearType:onnx.onnx.AttributeProto", "kind" : "def"}, {"label" : "getType", "tail" : "(): AttributeType", "member" : "onnx.onnx.AttributeProto.getType", "link" : "onnx\/onnx\/AttributeProto.html#getType:onnx.onnx.AttributeProto.AttributeType", "kind" : "def"}, {"label" : "withDocString", "tail" : "(__v: String): AttributeProto", "member" : "onnx.onnx.AttributeProto.withDocString", "link" : "onnx\/onnx\/AttributeProto.html#withDocString(__v:String):onnx.onnx.AttributeProto", "kind" : "def"}, {"label" : "clearDocString", "tail" : "(): AttributeProto", "member" : "onnx.onnx.AttributeProto.clearDocString", "link" : "onnx\/onnx\/AttributeProto.html#clearDocString:onnx.onnx.AttributeProto", "kind" : "def"}, {"label" : "getDocString", "tail" : "(): String", "member" : "onnx.onnx.AttributeProto.getDocString", "link" : "onnx\/onnx\/AttributeProto.html#getDocString:String", "kind" : "def"}, {"label" : "withRefAttrName", "tail" : "(__v: String): AttributeProto", "member" : "onnx.onnx.AttributeProto.withRefAttrName", "link" : "onnx\/onnx\/AttributeProto.html#withRefAttrName(__v:String):onnx.onnx.AttributeProto", "kind" : "def"}, {"label" : "clearRefAttrName", "tail" : "(): AttributeProto", "member" : "onnx.onnx.AttributeProto.clearRefAttrName", "link" : "onnx\/onnx\/AttributeProto.html#clearRefAttrName:onnx.onnx.AttributeProto", "kind" : "def"}, {"label" : "getRefAttrName", "tail" : "(): String", "member" : "onnx.onnx.AttributeProto.getRefAttrName", "link" : "onnx\/onnx\/AttributeProto.html#getRefAttrName:String", "kind" : "def"}, {"label" : "withName", "tail" : "(__v: String): AttributeProto", "member" : "onnx.onnx.AttributeProto.withName", "link" : "onnx\/onnx\/AttributeProto.html#withName(__v:String):onnx.onnx.AttributeProto", "kind" : "def"}, {"label" : "clearName", "tail" : "(): AttributeProto", "member" : "onnx.onnx.AttributeProto.clearName", "link" : "onnx\/onnx\/AttributeProto.html#clearName:onnx.onnx.AttributeProto", "kind" : "def"}, {"label" : "getName", "tail" : "(): String", "member" : "onnx.onnx.AttributeProto.getName", "link" : "onnx\/onnx\/AttributeProto.html#getName:String", "kind" : "def"}, {"label" : "writeTo", "tail" : "(_output__: CodedOutputStream): Unit", "member" : "onnx.onnx.AttributeProto.writeTo", "link" : "onnx\/onnx\/AttributeProto.html#writeTo(_output__:com.google.protobuf.CodedOutputStream):Unit", "kind" : "def"}, {"label" : "serializedSize", "tail" : "(): Int", "member" : "onnx.onnx.AttributeProto.serializedSize", "link" : "onnx\/onnx\/AttributeProto.html#serializedSize:Int", "kind" : "def"}, {"member" : "onnx.onnx.AttributeProto#<init>", "error" : "unsupported entity"}, {"label" : "unknownFields", "tail" : ": UnknownFieldSet", "member" : "onnx.onnx.AttributeProto.unknownFields", "link" : "onnx\/onnx\/AttributeProto.html#unknownFields:scalapb.UnknownFieldSet", "kind" : "val"}, {"label" : "sparseTensors", "tail" : ": Seq[SparseTensorProto]", "member" : "onnx.onnx.AttributeProto.sparseTensors", "link" : "onnx\/onnx\/AttributeProto.html#sparseTensors:Seq[onnx.onnx.SparseTensorProto]", "kind" : "val"}, {"label" : "graphs", "tail" : ": Seq[GraphProto]", "member" : "onnx.onnx.AttributeProto.graphs", "link" : "onnx\/onnx\/AttributeProto.html#graphs:Seq[onnx.onnx.GraphProto]", "kind" : "val"}, {"label" : "tensors", "tail" : ": Seq[TensorProto]", "member" : "onnx.onnx.AttributeProto.tensors", "link" : "onnx\/onnx\/AttributeProto.html#tensors:Seq[onnx.onnx.TensorProto]", "kind" : "val"}, {"label" : "strings", "tail" : ": Seq[ByteString]", "member" : "onnx.onnx.AttributeProto.strings", "link" : "onnx\/onnx\/AttributeProto.html#strings:Seq[com.google.protobuf.ByteString]", "kind" : "val"}, {"label" : "ints", "tail" : ": Seq[Long]", "member" : "onnx.onnx.AttributeProto.ints", "link" : "onnx\/onnx\/AttributeProto.html#ints:Seq[Long]", "kind" : "val"}, {"label" : "floats", "tail" : ": Seq[Float]", "member" : "onnx.onnx.AttributeProto.floats", "link" : "onnx\/onnx\/AttributeProto.html#floats:Seq[Float]", "kind" : "val"}, {"label" : "sparseTensor", "tail" : ": Option[SparseTensorProto]", "member" : "onnx.onnx.AttributeProto.sparseTensor", "link" : "onnx\/onnx\/AttributeProto.html#sparseTensor:Option[onnx.onnx.SparseTensorProto]", "kind" : "val"}, {"label" : "g", "tail" : ": Option[GraphProto]", "member" : "onnx.onnx.AttributeProto.g", "link" : "onnx\/onnx\/AttributeProto.html#g:Option[onnx.onnx.GraphProto]", "kind" : "val"}, {"label" : "t", "tail" : ": Option[TensorProto]", "member" : "onnx.onnx.AttributeProto.t", "link" : "onnx\/onnx\/AttributeProto.html#t:Option[onnx.onnx.TensorProto]", "kind" : "val"}, {"label" : "s", "tail" : ": Option[ByteString]", "member" : "onnx.onnx.AttributeProto.s", "link" : "onnx\/onnx\/AttributeProto.html#s:Option[com.google.protobuf.ByteString]", "kind" : "val"}, {"label" : "i", "tail" : ": Option[Long]", "member" : "onnx.onnx.AttributeProto.i", "link" : "onnx\/onnx\/AttributeProto.html#i:Option[Long]", "kind" : "val"}, {"label" : "f", "tail" : ": Option[Float]", "member" : "onnx.onnx.AttributeProto.f", "link" : "onnx\/onnx\/AttributeProto.html#f:Option[Float]", "kind" : "val"}, {"label" : "type", "tail" : ": Option[AttributeType]", "member" : "onnx.onnx.AttributeProto.type", "link" : "onnx\/onnx\/AttributeProto.html#type:Option[onnx.onnx.AttributeProto.AttributeType]", "kind" : "val"}, {"label" : "docString", "tail" : ": Option[String]", "member" : "onnx.onnx.AttributeProto.docString", "link" : "onnx\/onnx\/AttributeProto.html#docString:Option[String]", "kind" : "val"}, {"label" : "refAttrName", "tail" : ": Option[String]", "member" : "onnx.onnx.AttributeProto.refAttrName", "link" : "onnx\/onnx\/AttributeProto.html#refAttrName:Option[String]", "kind" : "val"}, {"label" : "name", "tail" : ": Option[String]", "member" : "onnx.onnx.AttributeProto.name", "link" : "onnx\/onnx\/AttributeProto.html#name:Option[String]", "kind" : "val"}, {"label" : "update", "tail" : "(ms: (Lens[AttributeProto, AttributeProto]) => Mutation[AttributeProto]*): AttributeProto", "member" : "scalapb.lenses.Updatable.update", "link" : "onnx\/onnx\/AttributeProto.html#update(ms:scalapb.lenses.Lens[A,A]=>scalapb.lenses.Mutation[A]*):A", "kind" : "def"}, {"label" : "toByteString", "tail" : "(): ByteString", "member" : "scalapb.GeneratedMessage.toByteString", "link" : "onnx\/onnx\/AttributeProto.html#toByteString:com.google.protobuf.ByteString", "kind" : "final def"}, {"label" : "toByteArray", "tail" : "(): Array[Byte]", "member" : "scalapb.GeneratedMessage.toByteArray", "link" : "onnx\/onnx\/AttributeProto.html#toByteArray:Array[Byte]", "kind" : "final def"}, {"label" : "toPMessage", "tail" : "(): PMessage", "member" : "scalapb.GeneratedMessage.toPMessage", "link" : "onnx\/onnx\/AttributeProto.html#toPMessage:scalapb.descriptors.PMessage", "kind" : "final def"}, {"label" : "writeDelimitedTo", "tail" : "(output: OutputStream): Unit", "member" : "scalapb.GeneratedMessage.writeDelimitedTo", "link" : "onnx\/onnx\/AttributeProto.html#writeDelimitedTo(output:java.io.OutputStream):Unit", "kind" : "final def"}, {"label" : "writeTo", "tail" : "(output: OutputStream): Unit", "member" : "scalapb.GeneratedMessage.writeTo", "link" : "onnx\/onnx\/AttributeProto.html#writeTo(output:java.io.OutputStream):Unit", "kind" : "final def"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "onnx\/onnx\/AttributeProto.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "onnx\/onnx\/AttributeProto.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "onnx\/onnx\/AttributeProto.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "onnx\/onnx\/AttributeProto.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "onnx\/onnx\/AttributeProto.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "onnx\/onnx\/AttributeProto.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "onnx\/onnx\/AttributeProto.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "onnx\/onnx\/AttributeProto.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "onnx\/onnx\/AttributeProto.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "onnx\/onnx\/AttributeProto.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "onnx\/onnx\/AttributeProto.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "onnx\/onnx\/AttributeProto.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "onnx\/onnx\/AttributeProto.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "onnx\/onnx\/AttributeProto.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "onnx\/onnx\/AttributeProto.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "onnx\/onnx\/AttributeProto.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "onnx\/onnx\/AttributeProto.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "onnx\/onnx\/AttributeProto.html", "kind" : "case class"}, {"name" : "onnx.onnx.GraphProto", "shortDescription" : "Graphs", "object" : "onnx\/onnx\/GraphProto$.html", "members_object" : [{"label" : "of", "tail" : "(node: Seq[NodeProto], name: Option[String], initializer: Seq[TensorProto], sparseInitializer: Seq[SparseTensorProto], docString: Option[String], input: Seq[ValueInfoProto], output: Seq[ValueInfoProto], valueInfo: Seq[ValueInfoProto], quantizationAnnotation: Seq[TensorAnnotation]): GraphProto", "member" : "onnx.onnx.GraphProto.of", "link" : "onnx\/onnx\/GraphProto$.html#of(node:Seq[onnx.onnx.NodeProto],name:Option[String],initializer:Seq[onnx.onnx.TensorProto],sparseInitializer:Seq[onnx.onnx.SparseTensorProto],docString:Option[String],input:Seq[onnx.onnx.ValueInfoProto],output:Seq[onnx.onnx.ValueInfoProto],valueInfo:Seq[onnx.onnx.ValueInfoProto],quantizationAnnotation:Seq[onnx.onnx.TensorAnnotation]):onnx.onnx.GraphProto", "kind" : "def"}, {"label" : "QUANTIZATION_ANNOTATION_FIELD_NUMBER", "tail" : ": Int(14)", "member" : "onnx.onnx.GraphProto.QUANTIZATION_ANNOTATION_FIELD_NUMBER", "link" : "onnx\/onnx\/GraphProto$.html#QUANTIZATION_ANNOTATION_FIELD_NUMBER:Int(14)", "kind" : "final val"}, {"label" : "VALUE_INFO_FIELD_NUMBER", "tail" : ": Int(13)", "member" : "onnx.onnx.GraphProto.VALUE_INFO_FIELD_NUMBER", "link" : "onnx\/onnx\/GraphProto$.html#VALUE_INFO_FIELD_NUMBER:Int(13)", "kind" : "final val"}, {"label" : "OUTPUT_FIELD_NUMBER", "tail" : ": Int(12)", "member" : "onnx.onnx.GraphProto.OUTPUT_FIELD_NUMBER", "link" : "onnx\/onnx\/GraphProto$.html#OUTPUT_FIELD_NUMBER:Int(12)", "kind" : "final val"}, {"label" : "INPUT_FIELD_NUMBER", "tail" : ": Int(11)", "member" : "onnx.onnx.GraphProto.INPUT_FIELD_NUMBER", "link" : "onnx\/onnx\/GraphProto$.html#INPUT_FIELD_NUMBER:Int(11)", "kind" : "final val"}, {"label" : "DOC_STRING_FIELD_NUMBER", "tail" : ": Int(10)", "member" : "onnx.onnx.GraphProto.DOC_STRING_FIELD_NUMBER", "link" : "onnx\/onnx\/GraphProto$.html#DOC_STRING_FIELD_NUMBER:Int(10)", "kind" : "final val"}, {"label" : "SPARSE_INITIALIZER_FIELD_NUMBER", "tail" : ": Int(15)", "member" : "onnx.onnx.GraphProto.SPARSE_INITIALIZER_FIELD_NUMBER", "link" : "onnx\/onnx\/GraphProto$.html#SPARSE_INITIALIZER_FIELD_NUMBER:Int(15)", "kind" : "final val"}, {"label" : "INITIALIZER_FIELD_NUMBER", "tail" : ": Int(5)", "member" : "onnx.onnx.GraphProto.INITIALIZER_FIELD_NUMBER", "link" : "onnx\/onnx\/GraphProto$.html#INITIALIZER_FIELD_NUMBER:Int(5)", "kind" : "final val"}, {"label" : "NAME_FIELD_NUMBER", "tail" : ": Int(2)", "member" : "onnx.onnx.GraphProto.NAME_FIELD_NUMBER", "link" : "onnx\/onnx\/GraphProto$.html#NAME_FIELD_NUMBER:Int(2)", "kind" : "final val"}, {"label" : "NODE_FIELD_NUMBER", "tail" : ": Int(1)", "member" : "onnx.onnx.GraphProto.NODE_FIELD_NUMBER", "link" : "onnx\/onnx\/GraphProto$.html#NODE_FIELD_NUMBER:Int(1)", "kind" : "final val"}, {"label" : "GraphProtoLens", "tail" : "", "member" : "onnx.onnx.GraphProto.GraphProtoLens", "link" : "onnx\/onnx\/GraphProto$.html#GraphProtoLens[UpperPB]extendsObjectLens[UpperPB,onnx.onnx.GraphProto]", "kind" : "implicit class"}, {"label" : "defaultInstance", "tail" : ": GraphProto", "member" : "onnx.onnx.GraphProto.defaultInstance", "link" : "onnx\/onnx\/GraphProto$.html#defaultInstance:onnx.onnx.GraphProto", "kind" : "lazy val"}, {"label" : "enumCompanionForFieldNumber", "tail" : "(__fieldNumber: Int): GeneratedEnumCompanion[_]", "member" : "onnx.onnx.GraphProto.enumCompanionForFieldNumber", "link" : "onnx\/onnx\/GraphProto$.html#enumCompanionForFieldNumber(__fieldNumber:Int):scalapb.GeneratedEnumCompanion[_]", "kind" : "def"}, {"label" : "nestedMessagesCompanions", "tail" : ": Seq[GeneratedMessageCompanion[_ <: GeneratedMessage]]", "member" : "onnx.onnx.GraphProto.nestedMessagesCompanions", "link" : "onnx\/onnx\/GraphProto$.html#nestedMessagesCompanions:Seq[scalapb.GeneratedMessageCompanion[_<:scalapb.GeneratedMessage]]", "kind" : "lazy val"}, {"label" : "messageCompanionForFieldNumber", "tail" : "(__number: Int): GeneratedMessageCompanion[_]", "member" : "onnx.onnx.GraphProto.messageCompanionForFieldNumber", "link" : "onnx\/onnx\/GraphProto$.html#messageCompanionForFieldNumber(__number:Int):scalapb.GeneratedMessageCompanion[_]", "kind" : "def"}, {"label" : "scalaDescriptor", "tail" : "(): Descriptor", "member" : "onnx.onnx.GraphProto.scalaDescriptor", "link" : "onnx\/onnx\/GraphProto$.html#scalaDescriptor:scalapb.descriptors.Descriptor", "kind" : "def"}, {"label" : "javaDescriptor", "tail" : "(): Descriptor", "member" : "onnx.onnx.GraphProto.javaDescriptor", "link" : "onnx\/onnx\/GraphProto$.html#javaDescriptor:com.google.protobuf.Descriptors.Descriptor", "kind" : "def"}, {"label" : "messageReads", "tail" : "(): Reads[GraphProto]", "member" : "onnx.onnx.GraphProto.messageReads", "link" : "onnx\/onnx\/GraphProto$.html#messageReads:scalapb.descriptors.Reads[onnx.onnx.GraphProto]", "kind" : "implicit def"}, {"label" : "parseFrom", "tail" : "(_input__: CodedInputStream): GraphProto", "member" : "onnx.onnx.GraphProto.parseFrom", "link" : "onnx\/onnx\/GraphProto$.html#parseFrom(_input__:com.google.protobuf.CodedInputStream):onnx.onnx.GraphProto", "kind" : "def"}, {"label" : "messageCompanion", "tail" : "(): GeneratedMessageCompanion[GraphProto]", "member" : "onnx.onnx.GraphProto.messageCompanion", "link" : "onnx\/onnx\/GraphProto$.html#messageCompanion:scalapb.GeneratedMessageCompanion[onnx.onnx.GraphProto]", "kind" : "implicit def"}, {"label" : "fromAscii", "tail" : "(s: String): GraphProto", "member" : "scalapb.GeneratedMessageCompanion.fromAscii", "link" : "onnx\/onnx\/GraphProto$.html#fromAscii(s:String):A", "kind" : "def"}, {"label" : "validateAscii", "tail" : "(s: String): Either[TextFormatError, GraphProto]", "member" : "scalapb.GeneratedMessageCompanion.validateAscii", "link" : "onnx\/onnx\/GraphProto$.html#validateAscii(s:String):Either[scalapb.TextFormatError,A]", "kind" : "def"}, {"label" : "enumCompanionForField", "tail" : "(field: FieldDescriptor): GeneratedEnumCompanion[_]", "member" : "scalapb.GeneratedMessageCompanion.enumCompanionForField", "link" : "onnx\/onnx\/GraphProto$.html#enumCompanionForField(field:com.google.protobuf.Descriptors.FieldDescriptor):scalapb.GeneratedEnumCompanion[_]", "kind" : "def"}, {"label" : "messageCompanionForField", "tail" : "(field: FieldDescriptor): GeneratedMessageCompanion[_]", "member" : "scalapb.GeneratedMessageCompanion.messageCompanionForField", "link" : "onnx\/onnx\/GraphProto$.html#messageCompanionForField(field:com.google.protobuf.Descriptors.FieldDescriptor):scalapb.GeneratedMessageCompanion[_]", "kind" : "def"}, {"label" : "toByteArray", "tail" : "(a: GraphProto): Array[Byte]", "member" : "scalapb.GeneratedMessageCompanion.toByteArray", "link" : "onnx\/onnx\/GraphProto$.html#toByteArray(a:A):Array[Byte]", "kind" : "def"}, {"label" : "validate", "tail" : "(s: Array[Byte]): Try[GraphProto]", "member" : "scalapb.GeneratedMessageCompanion.validate", "link" : "onnx\/onnx\/GraphProto$.html#validate(s:Array[Byte]):scala.util.Try[A]", "kind" : "def"}, {"label" : "merge", "tail" : "(a: GraphProto, input: CodedInputStream): GraphProto", "member" : "scalapb.GeneratedMessageCompanion.merge", "link" : "onnx\/onnx\/GraphProto$.html#merge(a:A,input:com.google.protobuf.CodedInputStream):A", "kind" : "def"}, {"label" : "parseFrom", "tail" : "(s: Array[Byte]): GraphProto", "member" : "scalapb.GeneratedMessageCompanion.parseFrom", "link" : "onnx\/onnx\/GraphProto$.html#parseFrom(s:Array[Byte]):A", "kind" : "def"}, {"label" : "streamFromDelimitedInput", "tail" : "(input: InputStream): Stream[GraphProto]", "member" : "scalapb.GeneratedMessageCompanion.streamFromDelimitedInput", "link" : "onnx\/onnx\/GraphProto$.html#streamFromDelimitedInput(input:java.io.InputStream):Stream[A]", "kind" : "def"}, {"label" : "parseDelimitedFrom", "tail" : "(input: InputStream): Option[GraphProto]", "member" : "scalapb.GeneratedMessageCompanion.parseDelimitedFrom", "link" : "onnx\/onnx\/GraphProto$.html#parseDelimitedFrom(input:java.io.InputStream):Option[A]", "kind" : "def"}, {"label" : "parseDelimitedFrom", "tail" : "(input: CodedInputStream): Option[GraphProto]", "member" : "scalapb.GeneratedMessageCompanion.parseDelimitedFrom", "link" : "onnx\/onnx\/GraphProto$.html#parseDelimitedFrom(input:com.google.protobuf.CodedInputStream):Option[A]", "kind" : "def"}, {"label" : "parseFrom", "tail" : "(input: InputStream): GraphProto", "member" : "scalapb.GeneratedMessageCompanion.parseFrom", "link" : "onnx\/onnx\/GraphProto$.html#parseFrom(input:java.io.InputStream):A", "kind" : "def"}, {"label" : "ValueType", "tail" : "", "member" : "scalapb.GeneratedMessageCompanion.ValueType", "link" : "onnx\/onnx\/GraphProto$.html#ValueType=A", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "onnx\/onnx\/GraphProto$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "onnx\/onnx\/GraphProto$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "onnx\/onnx\/GraphProto$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "onnx\/onnx\/GraphProto$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "onnx\/onnx\/GraphProto$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "onnx\/onnx\/GraphProto$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "onnx\/onnx\/GraphProto$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "onnx\/onnx\/GraphProto$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "onnx\/onnx\/GraphProto$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "onnx\/onnx\/GraphProto$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "onnx\/onnx\/GraphProto$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "onnx\/onnx\/GraphProto$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "onnx\/onnx\/GraphProto$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "onnx\/onnx\/GraphProto$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "onnx\/onnx\/GraphProto$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "onnx\/onnx\/GraphProto$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "onnx\/onnx\/GraphProto$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "onnx\/onnx\/GraphProto$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "onnx\/onnx\/GraphProto$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "companion", "tail" : "(): GraphProto.type", "member" : "onnx.onnx.GraphProto.companion", "link" : "onnx\/onnx\/GraphProto.html#companion:onnx.onnx.GraphProto.type", "kind" : "def"}, {"label" : "toProtoString", "tail" : "(): String", "member" : "onnx.onnx.GraphProto.toProtoString", "link" : "onnx\/onnx\/GraphProto.html#toProtoString:String", "kind" : "def"}, {"label" : "getField", "tail" : "(__field: FieldDescriptor): PValue", "member" : "onnx.onnx.GraphProto.getField", "link" : "onnx\/onnx\/GraphProto.html#getField(__field:scalapb.descriptors.FieldDescriptor):scalapb.descriptors.PValue", "kind" : "def"}, {"label" : "getFieldByNumber", "tail" : "(__fieldNumber: Int): Any", "member" : "onnx.onnx.GraphProto.getFieldByNumber", "link" : "onnx\/onnx\/GraphProto.html#getFieldByNumber(__fieldNumber:Int):Any", "kind" : "def"}, {"label" : "discardUnknownFields", "tail" : "(): GraphProto", "member" : "onnx.onnx.GraphProto.discardUnknownFields", "link" : "onnx\/onnx\/GraphProto.html#discardUnknownFields:onnx.onnx.GraphProto", "kind" : "def"}, {"label" : "withUnknownFields", "tail" : "(__v: UnknownFieldSet): GraphProto", "member" : "onnx.onnx.GraphProto.withUnknownFields", "link" : "onnx\/onnx\/GraphProto.html#withUnknownFields(__v:scalapb.UnknownFieldSet):onnx.onnx.GraphProto", "kind" : "def"}, {"label" : "withQuantizationAnnotation", "tail" : "(__v: Seq[TensorAnnotation]): GraphProto", "member" : "onnx.onnx.GraphProto.withQuantizationAnnotation", "link" : "onnx\/onnx\/GraphProto.html#withQuantizationAnnotation(__v:Seq[onnx.onnx.TensorAnnotation]):onnx.onnx.GraphProto", "kind" : "def"}, {"label" : "addAllQuantizationAnnotation", "tail" : "(__vs: Iterable[TensorAnnotation]): GraphProto", "member" : "onnx.onnx.GraphProto.addAllQuantizationAnnotation", "link" : "onnx\/onnx\/GraphProto.html#addAllQuantizationAnnotation(__vs:Iterable[onnx.onnx.TensorAnnotation]):onnx.onnx.GraphProto", "kind" : "def"}, {"label" : "addQuantizationAnnotation", "tail" : "(__vs: TensorAnnotation*): GraphProto", "member" : "onnx.onnx.GraphProto.addQuantizationAnnotation", "link" : "onnx\/onnx\/GraphProto.html#addQuantizationAnnotation(__vs:onnx.onnx.TensorAnnotation*):onnx.onnx.GraphProto", "kind" : "def"}, {"label" : "clearQuantizationAnnotation", "tail" : "(): GraphProto", "member" : "onnx.onnx.GraphProto.clearQuantizationAnnotation", "link" : "onnx\/onnx\/GraphProto.html#clearQuantizationAnnotation:onnx.onnx.GraphProto", "kind" : "def"}, {"label" : "withValueInfo", "tail" : "(__v: Seq[ValueInfoProto]): GraphProto", "member" : "onnx.onnx.GraphProto.withValueInfo", "link" : "onnx\/onnx\/GraphProto.html#withValueInfo(__v:Seq[onnx.onnx.ValueInfoProto]):onnx.onnx.GraphProto", "kind" : "def"}, {"label" : "addAllValueInfo", "tail" : "(__vs: Iterable[ValueInfoProto]): GraphProto", "member" : "onnx.onnx.GraphProto.addAllValueInfo", "link" : "onnx\/onnx\/GraphProto.html#addAllValueInfo(__vs:Iterable[onnx.onnx.ValueInfoProto]):onnx.onnx.GraphProto", "kind" : "def"}, {"label" : "addValueInfo", "tail" : "(__vs: ValueInfoProto*): GraphProto", "member" : "onnx.onnx.GraphProto.addValueInfo", "link" : "onnx\/onnx\/GraphProto.html#addValueInfo(__vs:onnx.onnx.ValueInfoProto*):onnx.onnx.GraphProto", "kind" : "def"}, {"label" : "clearValueInfo", "tail" : "(): GraphProto", "member" : "onnx.onnx.GraphProto.clearValueInfo", "link" : "onnx\/onnx\/GraphProto.html#clearValueInfo:onnx.onnx.GraphProto", "kind" : "def"}, {"label" : "withOutput", "tail" : "(__v: Seq[ValueInfoProto]): GraphProto", "member" : "onnx.onnx.GraphProto.withOutput", "link" : "onnx\/onnx\/GraphProto.html#withOutput(__v:Seq[onnx.onnx.ValueInfoProto]):onnx.onnx.GraphProto", "kind" : "def"}, {"label" : "addAllOutput", "tail" : "(__vs: Iterable[ValueInfoProto]): GraphProto", "member" : "onnx.onnx.GraphProto.addAllOutput", "link" : "onnx\/onnx\/GraphProto.html#addAllOutput(__vs:Iterable[onnx.onnx.ValueInfoProto]):onnx.onnx.GraphProto", "kind" : "def"}, {"label" : "addOutput", "tail" : "(__vs: ValueInfoProto*): GraphProto", "member" : "onnx.onnx.GraphProto.addOutput", "link" : "onnx\/onnx\/GraphProto.html#addOutput(__vs:onnx.onnx.ValueInfoProto*):onnx.onnx.GraphProto", "kind" : "def"}, {"label" : "clearOutput", "tail" : "(): GraphProto", "member" : "onnx.onnx.GraphProto.clearOutput", "link" : "onnx\/onnx\/GraphProto.html#clearOutput:onnx.onnx.GraphProto", "kind" : "def"}, {"label" : "withInput", "tail" : "(__v: Seq[ValueInfoProto]): GraphProto", "member" : "onnx.onnx.GraphProto.withInput", "link" : "onnx\/onnx\/GraphProto.html#withInput(__v:Seq[onnx.onnx.ValueInfoProto]):onnx.onnx.GraphProto", "kind" : "def"}, {"label" : "addAllInput", "tail" : "(__vs: Iterable[ValueInfoProto]): GraphProto", "member" : "onnx.onnx.GraphProto.addAllInput", "link" : "onnx\/onnx\/GraphProto.html#addAllInput(__vs:Iterable[onnx.onnx.ValueInfoProto]):onnx.onnx.GraphProto", "kind" : "def"}, {"label" : "addInput", "tail" : "(__vs: ValueInfoProto*): GraphProto", "member" : "onnx.onnx.GraphProto.addInput", "link" : "onnx\/onnx\/GraphProto.html#addInput(__vs:onnx.onnx.ValueInfoProto*):onnx.onnx.GraphProto", "kind" : "def"}, {"label" : "clearInput", "tail" : "(): GraphProto", "member" : "onnx.onnx.GraphProto.clearInput", "link" : "onnx\/onnx\/GraphProto.html#clearInput:onnx.onnx.GraphProto", "kind" : "def"}, {"label" : "withDocString", "tail" : "(__v: String): GraphProto", "member" : "onnx.onnx.GraphProto.withDocString", "link" : "onnx\/onnx\/GraphProto.html#withDocString(__v:String):onnx.onnx.GraphProto", "kind" : "def"}, {"label" : "clearDocString", "tail" : "(): GraphProto", "member" : "onnx.onnx.GraphProto.clearDocString", "link" : "onnx\/onnx\/GraphProto.html#clearDocString:onnx.onnx.GraphProto", "kind" : "def"}, {"label" : "getDocString", "tail" : "(): String", "member" : "onnx.onnx.GraphProto.getDocString", "link" : "onnx\/onnx\/GraphProto.html#getDocString:String", "kind" : "def"}, {"label" : "withSparseInitializer", "tail" : "(__v: Seq[SparseTensorProto]): GraphProto", "member" : "onnx.onnx.GraphProto.withSparseInitializer", "link" : "onnx\/onnx\/GraphProto.html#withSparseInitializer(__v:Seq[onnx.onnx.SparseTensorProto]):onnx.onnx.GraphProto", "kind" : "def"}, {"label" : "addAllSparseInitializer", "tail" : "(__vs: Iterable[SparseTensorProto]): GraphProto", "member" : "onnx.onnx.GraphProto.addAllSparseInitializer", "link" : "onnx\/onnx\/GraphProto.html#addAllSparseInitializer(__vs:Iterable[onnx.onnx.SparseTensorProto]):onnx.onnx.GraphProto", "kind" : "def"}, {"label" : "addSparseInitializer", "tail" : "(__vs: SparseTensorProto*): GraphProto", "member" : "onnx.onnx.GraphProto.addSparseInitializer", "link" : "onnx\/onnx\/GraphProto.html#addSparseInitializer(__vs:onnx.onnx.SparseTensorProto*):onnx.onnx.GraphProto", "kind" : "def"}, {"label" : "clearSparseInitializer", "tail" : "(): GraphProto", "member" : "onnx.onnx.GraphProto.clearSparseInitializer", "link" : "onnx\/onnx\/GraphProto.html#clearSparseInitializer:onnx.onnx.GraphProto", "kind" : "def"}, {"label" : "withInitializer", "tail" : "(__v: Seq[TensorProto]): GraphProto", "member" : "onnx.onnx.GraphProto.withInitializer", "link" : "onnx\/onnx\/GraphProto.html#withInitializer(__v:Seq[onnx.onnx.TensorProto]):onnx.onnx.GraphProto", "kind" : "def"}, {"label" : "addAllInitializer", "tail" : "(__vs: Iterable[TensorProto]): GraphProto", "member" : "onnx.onnx.GraphProto.addAllInitializer", "link" : "onnx\/onnx\/GraphProto.html#addAllInitializer(__vs:Iterable[onnx.onnx.TensorProto]):onnx.onnx.GraphProto", "kind" : "def"}, {"label" : "addInitializer", "tail" : "(__vs: TensorProto*): GraphProto", "member" : "onnx.onnx.GraphProto.addInitializer", "link" : "onnx\/onnx\/GraphProto.html#addInitializer(__vs:onnx.onnx.TensorProto*):onnx.onnx.GraphProto", "kind" : "def"}, {"label" : "clearInitializer", "tail" : "(): GraphProto", "member" : "onnx.onnx.GraphProto.clearInitializer", "link" : "onnx\/onnx\/GraphProto.html#clearInitializer:onnx.onnx.GraphProto", "kind" : "def"}, {"label" : "withName", "tail" : "(__v: String): GraphProto", "member" : "onnx.onnx.GraphProto.withName", "link" : "onnx\/onnx\/GraphProto.html#withName(__v:String):onnx.onnx.GraphProto", "kind" : "def"}, {"label" : "clearName", "tail" : "(): GraphProto", "member" : "onnx.onnx.GraphProto.clearName", "link" : "onnx\/onnx\/GraphProto.html#clearName:onnx.onnx.GraphProto", "kind" : "def"}, {"label" : "getName", "tail" : "(): String", "member" : "onnx.onnx.GraphProto.getName", "link" : "onnx\/onnx\/GraphProto.html#getName:String", "kind" : "def"}, {"label" : "withNode", "tail" : "(__v: Seq[NodeProto]): GraphProto", "member" : "onnx.onnx.GraphProto.withNode", "link" : "onnx\/onnx\/GraphProto.html#withNode(__v:Seq[onnx.onnx.NodeProto]):onnx.onnx.GraphProto", "kind" : "def"}, {"label" : "addAllNode", "tail" : "(__vs: Iterable[NodeProto]): GraphProto", "member" : "onnx.onnx.GraphProto.addAllNode", "link" : "onnx\/onnx\/GraphProto.html#addAllNode(__vs:Iterable[onnx.onnx.NodeProto]):onnx.onnx.GraphProto", "kind" : "def"}, {"label" : "addNode", "tail" : "(__vs: NodeProto*): GraphProto", "member" : "onnx.onnx.GraphProto.addNode", "link" : "onnx\/onnx\/GraphProto.html#addNode(__vs:onnx.onnx.NodeProto*):onnx.onnx.GraphProto", "kind" : "def"}, {"label" : "clearNode", "tail" : "(): GraphProto", "member" : "onnx.onnx.GraphProto.clearNode", "link" : "onnx\/onnx\/GraphProto.html#clearNode:onnx.onnx.GraphProto", "kind" : "def"}, {"label" : "writeTo", "tail" : "(_output__: CodedOutputStream): Unit", "member" : "onnx.onnx.GraphProto.writeTo", "link" : "onnx\/onnx\/GraphProto.html#writeTo(_output__:com.google.protobuf.CodedOutputStream):Unit", "kind" : "def"}, {"label" : "serializedSize", "tail" : "(): Int", "member" : "onnx.onnx.GraphProto.serializedSize", "link" : "onnx\/onnx\/GraphProto.html#serializedSize:Int", "kind" : "def"}, {"member" : "onnx.onnx.GraphProto#<init>", "error" : "unsupported entity"}, {"label" : "unknownFields", "tail" : ": UnknownFieldSet", "member" : "onnx.onnx.GraphProto.unknownFields", "link" : "onnx\/onnx\/GraphProto.html#unknownFields:scalapb.UnknownFieldSet", "kind" : "val"}, {"label" : "quantizationAnnotation", "tail" : ": Seq[TensorAnnotation]", "member" : "onnx.onnx.GraphProto.quantizationAnnotation", "link" : "onnx\/onnx\/GraphProto.html#quantizationAnnotation:Seq[onnx.onnx.TensorAnnotation]", "kind" : "val"}, {"label" : "valueInfo", "tail" : ": Seq[ValueInfoProto]", "member" : "onnx.onnx.GraphProto.valueInfo", "link" : "onnx\/onnx\/GraphProto.html#valueInfo:Seq[onnx.onnx.ValueInfoProto]", "kind" : "val"}, {"label" : "output", "tail" : ": Seq[ValueInfoProto]", "member" : "onnx.onnx.GraphProto.output", "link" : "onnx\/onnx\/GraphProto.html#output:Seq[onnx.onnx.ValueInfoProto]", "kind" : "val"}, {"label" : "input", "tail" : ": Seq[ValueInfoProto]", "member" : "onnx.onnx.GraphProto.input", "link" : "onnx\/onnx\/GraphProto.html#input:Seq[onnx.onnx.ValueInfoProto]", "kind" : "val"}, {"label" : "docString", "tail" : ": Option[String]", "member" : "onnx.onnx.GraphProto.docString", "link" : "onnx\/onnx\/GraphProto.html#docString:Option[String]", "kind" : "val"}, {"label" : "sparseInitializer", "tail" : ": Seq[SparseTensorProto]", "member" : "onnx.onnx.GraphProto.sparseInitializer", "link" : "onnx\/onnx\/GraphProto.html#sparseInitializer:Seq[onnx.onnx.SparseTensorProto]", "kind" : "val"}, {"label" : "initializer", "tail" : ": Seq[TensorProto]", "member" : "onnx.onnx.GraphProto.initializer", "link" : "onnx\/onnx\/GraphProto.html#initializer:Seq[onnx.onnx.TensorProto]", "kind" : "val"}, {"label" : "name", "tail" : ": Option[String]", "member" : "onnx.onnx.GraphProto.name", "link" : "onnx\/onnx\/GraphProto.html#name:Option[String]", "kind" : "val"}, {"label" : "node", "tail" : ": Seq[NodeProto]", "member" : "onnx.onnx.GraphProto.node", "link" : "onnx\/onnx\/GraphProto.html#node:Seq[onnx.onnx.NodeProto]", "kind" : "val"}, {"label" : "update", "tail" : "(ms: (Lens[GraphProto, GraphProto]) => Mutation[GraphProto]*): GraphProto", "member" : "scalapb.lenses.Updatable.update", "link" : "onnx\/onnx\/GraphProto.html#update(ms:scalapb.lenses.Lens[A,A]=>scalapb.lenses.Mutation[A]*):A", "kind" : "def"}, {"label" : "toByteString", "tail" : "(): ByteString", "member" : "scalapb.GeneratedMessage.toByteString", "link" : "onnx\/onnx\/GraphProto.html#toByteString:com.google.protobuf.ByteString", "kind" : "final def"}, {"label" : "toByteArray", "tail" : "(): Array[Byte]", "member" : "scalapb.GeneratedMessage.toByteArray", "link" : "onnx\/onnx\/GraphProto.html#toByteArray:Array[Byte]", "kind" : "final def"}, {"label" : "toPMessage", "tail" : "(): PMessage", "member" : "scalapb.GeneratedMessage.toPMessage", "link" : "onnx\/onnx\/GraphProto.html#toPMessage:scalapb.descriptors.PMessage", "kind" : "final def"}, {"label" : "writeDelimitedTo", "tail" : "(output: OutputStream): Unit", "member" : "scalapb.GeneratedMessage.writeDelimitedTo", "link" : "onnx\/onnx\/GraphProto.html#writeDelimitedTo(output:java.io.OutputStream):Unit", "kind" : "final def"}, {"label" : "writeTo", "tail" : "(output: OutputStream): Unit", "member" : "scalapb.GeneratedMessage.writeTo", "link" : "onnx\/onnx\/GraphProto.html#writeTo(output:java.io.OutputStream):Unit", "kind" : "final def"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "onnx\/onnx\/GraphProto.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "onnx\/onnx\/GraphProto.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "onnx\/onnx\/GraphProto.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "onnx\/onnx\/GraphProto.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "onnx\/onnx\/GraphProto.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "onnx\/onnx\/GraphProto.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "onnx\/onnx\/GraphProto.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "onnx\/onnx\/GraphProto.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "onnx\/onnx\/GraphProto.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "onnx\/onnx\/GraphProto.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "onnx\/onnx\/GraphProto.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "onnx\/onnx\/GraphProto.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "onnx\/onnx\/GraphProto.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "onnx\/onnx\/GraphProto.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "onnx\/onnx\/GraphProto.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "onnx\/onnx\/GraphProto.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "onnx\/onnx\/GraphProto.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "onnx\/onnx\/GraphProto.html", "kind" : "case class"}, {"name" : "onnx.onnx.ModelProto", "shortDescription" : "Models", "object" : "onnx\/onnx\/ModelProto$.html", "members_object" : [{"label" : "of", "tail" : "(irVersion: Option[Long], opsetImport: Seq[OperatorSetIdProto], producerName: Option[String], producerVersion: Option[String], domain: Option[String], modelVersion: Option[Long], docString: Option[String], graph: Option[GraphProto], metadataProps: Seq[StringStringEntryProto], trainingInfo: Seq[TrainingInfoProto]): ModelProto", "member" : "onnx.onnx.ModelProto.of", "link" : "onnx\/onnx\/ModelProto$.html#of(irVersion:Option[Long],opsetImport:Seq[onnx.onnx.OperatorSetIdProto],producerName:Option[String],producerVersion:Option[String],domain:Option[String],modelVersion:Option[Long],docString:Option[String],graph:Option[onnx.onnx.GraphProto],metadataProps:Seq[onnx.onnx.StringStringEntryProto],trainingInfo:Seq[onnx.onnx.TrainingInfoProto]):onnx.onnx.ModelProto", "kind" : "def"}, {"label" : "TRAINING_INFO_FIELD_NUMBER", "tail" : ": Int(20)", "member" : "onnx.onnx.ModelProto.TRAINING_INFO_FIELD_NUMBER", "link" : "onnx\/onnx\/ModelProto$.html#TRAINING_INFO_FIELD_NUMBER:Int(20)", "kind" : "final val"}, {"label" : "METADATA_PROPS_FIELD_NUMBER", "tail" : ": Int(14)", "member" : "onnx.onnx.ModelProto.METADATA_PROPS_FIELD_NUMBER", "link" : "onnx\/onnx\/ModelProto$.html#METADATA_PROPS_FIELD_NUMBER:Int(14)", "kind" : "final val"}, {"label" : "GRAPH_FIELD_NUMBER", "tail" : ": Int(7)", "member" : "onnx.onnx.ModelProto.GRAPH_FIELD_NUMBER", "link" : "onnx\/onnx\/ModelProto$.html#GRAPH_FIELD_NUMBER:Int(7)", "kind" : "final val"}, {"label" : "DOC_STRING_FIELD_NUMBER", "tail" : ": Int(6)", "member" : "onnx.onnx.ModelProto.DOC_STRING_FIELD_NUMBER", "link" : "onnx\/onnx\/ModelProto$.html#DOC_STRING_FIELD_NUMBER:Int(6)", "kind" : "final val"}, {"label" : "MODEL_VERSION_FIELD_NUMBER", "tail" : ": Int(5)", "member" : "onnx.onnx.ModelProto.MODEL_VERSION_FIELD_NUMBER", "link" : "onnx\/onnx\/ModelProto$.html#MODEL_VERSION_FIELD_NUMBER:Int(5)", "kind" : "final val"}, {"label" : "DOMAIN_FIELD_NUMBER", "tail" : ": Int(4)", "member" : "onnx.onnx.ModelProto.DOMAIN_FIELD_NUMBER", "link" : "onnx\/onnx\/ModelProto$.html#DOMAIN_FIELD_NUMBER:Int(4)", "kind" : "final val"}, {"label" : "PRODUCER_VERSION_FIELD_NUMBER", "tail" : ": Int(3)", "member" : "onnx.onnx.ModelProto.PRODUCER_VERSION_FIELD_NUMBER", "link" : "onnx\/onnx\/ModelProto$.html#PRODUCER_VERSION_FIELD_NUMBER:Int(3)", "kind" : "final val"}, {"label" : "PRODUCER_NAME_FIELD_NUMBER", "tail" : ": Int(2)", "member" : "onnx.onnx.ModelProto.PRODUCER_NAME_FIELD_NUMBER", "link" : "onnx\/onnx\/ModelProto$.html#PRODUCER_NAME_FIELD_NUMBER:Int(2)", "kind" : "final val"}, {"label" : "OPSET_IMPORT_FIELD_NUMBER", "tail" : ": Int(8)", "member" : "onnx.onnx.ModelProto.OPSET_IMPORT_FIELD_NUMBER", "link" : "onnx\/onnx\/ModelProto$.html#OPSET_IMPORT_FIELD_NUMBER:Int(8)", "kind" : "final val"}, {"label" : "IR_VERSION_FIELD_NUMBER", "tail" : ": Int(1)", "member" : "onnx.onnx.ModelProto.IR_VERSION_FIELD_NUMBER", "link" : "onnx\/onnx\/ModelProto$.html#IR_VERSION_FIELD_NUMBER:Int(1)", "kind" : "final val"}, {"label" : "ModelProtoLens", "tail" : "", "member" : "onnx.onnx.ModelProto.ModelProtoLens", "link" : "onnx\/onnx\/ModelProto$.html#ModelProtoLens[UpperPB]extendsObjectLens[UpperPB,onnx.onnx.ModelProto]", "kind" : "implicit class"}, {"label" : "defaultInstance", "tail" : ": ModelProto", "member" : "onnx.onnx.ModelProto.defaultInstance", "link" : "onnx\/onnx\/ModelProto$.html#defaultInstance:onnx.onnx.ModelProto", "kind" : "lazy val"}, {"label" : "enumCompanionForFieldNumber", "tail" : "(__fieldNumber: Int): GeneratedEnumCompanion[_]", "member" : "onnx.onnx.ModelProto.enumCompanionForFieldNumber", "link" : "onnx\/onnx\/ModelProto$.html#enumCompanionForFieldNumber(__fieldNumber:Int):scalapb.GeneratedEnumCompanion[_]", "kind" : "def"}, {"label" : "nestedMessagesCompanions", "tail" : ": Seq[GeneratedMessageCompanion[_ <: GeneratedMessage]]", "member" : "onnx.onnx.ModelProto.nestedMessagesCompanions", "link" : "onnx\/onnx\/ModelProto$.html#nestedMessagesCompanions:Seq[scalapb.GeneratedMessageCompanion[_<:scalapb.GeneratedMessage]]", "kind" : "lazy val"}, {"label" : "messageCompanionForFieldNumber", "tail" : "(__number: Int): GeneratedMessageCompanion[_]", "member" : "onnx.onnx.ModelProto.messageCompanionForFieldNumber", "link" : "onnx\/onnx\/ModelProto$.html#messageCompanionForFieldNumber(__number:Int):scalapb.GeneratedMessageCompanion[_]", "kind" : "def"}, {"label" : "scalaDescriptor", "tail" : "(): Descriptor", "member" : "onnx.onnx.ModelProto.scalaDescriptor", "link" : "onnx\/onnx\/ModelProto$.html#scalaDescriptor:scalapb.descriptors.Descriptor", "kind" : "def"}, {"label" : "javaDescriptor", "tail" : "(): Descriptor", "member" : "onnx.onnx.ModelProto.javaDescriptor", "link" : "onnx\/onnx\/ModelProto$.html#javaDescriptor:com.google.protobuf.Descriptors.Descriptor", "kind" : "def"}, {"label" : "messageReads", "tail" : "(): Reads[ModelProto]", "member" : "onnx.onnx.ModelProto.messageReads", "link" : "onnx\/onnx\/ModelProto$.html#messageReads:scalapb.descriptors.Reads[onnx.onnx.ModelProto]", "kind" : "implicit def"}, {"label" : "parseFrom", "tail" : "(_input__: CodedInputStream): ModelProto", "member" : "onnx.onnx.ModelProto.parseFrom", "link" : "onnx\/onnx\/ModelProto$.html#parseFrom(_input__:com.google.protobuf.CodedInputStream):onnx.onnx.ModelProto", "kind" : "def"}, {"label" : "messageCompanion", "tail" : "(): GeneratedMessageCompanion[ModelProto]", "member" : "onnx.onnx.ModelProto.messageCompanion", "link" : "onnx\/onnx\/ModelProto$.html#messageCompanion:scalapb.GeneratedMessageCompanion[onnx.onnx.ModelProto]", "kind" : "implicit def"}, {"label" : "fromAscii", "tail" : "(s: String): ModelProto", "member" : "scalapb.GeneratedMessageCompanion.fromAscii", "link" : "onnx\/onnx\/ModelProto$.html#fromAscii(s:String):A", "kind" : "def"}, {"label" : "validateAscii", "tail" : "(s: String): Either[TextFormatError, ModelProto]", "member" : "scalapb.GeneratedMessageCompanion.validateAscii", "link" : "onnx\/onnx\/ModelProto$.html#validateAscii(s:String):Either[scalapb.TextFormatError,A]", "kind" : "def"}, {"label" : "enumCompanionForField", "tail" : "(field: FieldDescriptor): GeneratedEnumCompanion[_]", "member" : "scalapb.GeneratedMessageCompanion.enumCompanionForField", "link" : "onnx\/onnx\/ModelProto$.html#enumCompanionForField(field:com.google.protobuf.Descriptors.FieldDescriptor):scalapb.GeneratedEnumCompanion[_]", "kind" : "def"}, {"label" : "messageCompanionForField", "tail" : "(field: FieldDescriptor): GeneratedMessageCompanion[_]", "member" : "scalapb.GeneratedMessageCompanion.messageCompanionForField", "link" : "onnx\/onnx\/ModelProto$.html#messageCompanionForField(field:com.google.protobuf.Descriptors.FieldDescriptor):scalapb.GeneratedMessageCompanion[_]", "kind" : "def"}, {"label" : "toByteArray", "tail" : "(a: ModelProto): Array[Byte]", "member" : "scalapb.GeneratedMessageCompanion.toByteArray", "link" : "onnx\/onnx\/ModelProto$.html#toByteArray(a:A):Array[Byte]", "kind" : "def"}, {"label" : "validate", "tail" : "(s: Array[Byte]): Try[ModelProto]", "member" : "scalapb.GeneratedMessageCompanion.validate", "link" : "onnx\/onnx\/ModelProto$.html#validate(s:Array[Byte]):scala.util.Try[A]", "kind" : "def"}, {"label" : "merge", "tail" : "(a: ModelProto, input: CodedInputStream): ModelProto", "member" : "scalapb.GeneratedMessageCompanion.merge", "link" : "onnx\/onnx\/ModelProto$.html#merge(a:A,input:com.google.protobuf.CodedInputStream):A", "kind" : "def"}, {"label" : "parseFrom", "tail" : "(s: Array[Byte]): ModelProto", "member" : "scalapb.GeneratedMessageCompanion.parseFrom", "link" : "onnx\/onnx\/ModelProto$.html#parseFrom(s:Array[Byte]):A", "kind" : "def"}, {"label" : "streamFromDelimitedInput", "tail" : "(input: InputStream): Stream[ModelProto]", "member" : "scalapb.GeneratedMessageCompanion.streamFromDelimitedInput", "link" : "onnx\/onnx\/ModelProto$.html#streamFromDelimitedInput(input:java.io.InputStream):Stream[A]", "kind" : "def"}, {"label" : "parseDelimitedFrom", "tail" : "(input: InputStream): Option[ModelProto]", "member" : "scalapb.GeneratedMessageCompanion.parseDelimitedFrom", "link" : "onnx\/onnx\/ModelProto$.html#parseDelimitedFrom(input:java.io.InputStream):Option[A]", "kind" : "def"}, {"label" : "parseDelimitedFrom", "tail" : "(input: CodedInputStream): Option[ModelProto]", "member" : "scalapb.GeneratedMessageCompanion.parseDelimitedFrom", "link" : "onnx\/onnx\/ModelProto$.html#parseDelimitedFrom(input:com.google.protobuf.CodedInputStream):Option[A]", "kind" : "def"}, {"label" : "parseFrom", "tail" : "(input: InputStream): ModelProto", "member" : "scalapb.GeneratedMessageCompanion.parseFrom", "link" : "onnx\/onnx\/ModelProto$.html#parseFrom(input:java.io.InputStream):A", "kind" : "def"}, {"label" : "ValueType", "tail" : "", "member" : "scalapb.GeneratedMessageCompanion.ValueType", "link" : "onnx\/onnx\/ModelProto$.html#ValueType=A", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "onnx\/onnx\/ModelProto$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "onnx\/onnx\/ModelProto$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "onnx\/onnx\/ModelProto$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "onnx\/onnx\/ModelProto$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "onnx\/onnx\/ModelProto$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "onnx\/onnx\/ModelProto$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "onnx\/onnx\/ModelProto$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "onnx\/onnx\/ModelProto$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "onnx\/onnx\/ModelProto$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "onnx\/onnx\/ModelProto$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "onnx\/onnx\/ModelProto$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "onnx\/onnx\/ModelProto$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "onnx\/onnx\/ModelProto$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "onnx\/onnx\/ModelProto$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "onnx\/onnx\/ModelProto$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "onnx\/onnx\/ModelProto$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "onnx\/onnx\/ModelProto$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "onnx\/onnx\/ModelProto$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "onnx\/onnx\/ModelProto$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "companion", "tail" : "(): ModelProto.type", "member" : "onnx.onnx.ModelProto.companion", "link" : "onnx\/onnx\/ModelProto.html#companion:onnx.onnx.ModelProto.type", "kind" : "def"}, {"label" : "toProtoString", "tail" : "(): String", "member" : "onnx.onnx.ModelProto.toProtoString", "link" : "onnx\/onnx\/ModelProto.html#toProtoString:String", "kind" : "def"}, {"label" : "getField", "tail" : "(__field: FieldDescriptor): PValue", "member" : "onnx.onnx.ModelProto.getField", "link" : "onnx\/onnx\/ModelProto.html#getField(__field:scalapb.descriptors.FieldDescriptor):scalapb.descriptors.PValue", "kind" : "def"}, {"label" : "getFieldByNumber", "tail" : "(__fieldNumber: Int): Any", "member" : "onnx.onnx.ModelProto.getFieldByNumber", "link" : "onnx\/onnx\/ModelProto.html#getFieldByNumber(__fieldNumber:Int):Any", "kind" : "def"}, {"label" : "discardUnknownFields", "tail" : "(): ModelProto", "member" : "onnx.onnx.ModelProto.discardUnknownFields", "link" : "onnx\/onnx\/ModelProto.html#discardUnknownFields:onnx.onnx.ModelProto", "kind" : "def"}, {"label" : "withUnknownFields", "tail" : "(__v: UnknownFieldSet): ModelProto", "member" : "onnx.onnx.ModelProto.withUnknownFields", "link" : "onnx\/onnx\/ModelProto.html#withUnknownFields(__v:scalapb.UnknownFieldSet):onnx.onnx.ModelProto", "kind" : "def"}, {"label" : "withTrainingInfo", "tail" : "(__v: Seq[TrainingInfoProto]): ModelProto", "member" : "onnx.onnx.ModelProto.withTrainingInfo", "link" : "onnx\/onnx\/ModelProto.html#withTrainingInfo(__v:Seq[onnx.onnx.TrainingInfoProto]):onnx.onnx.ModelProto", "kind" : "def"}, {"label" : "addAllTrainingInfo", "tail" : "(__vs: Iterable[TrainingInfoProto]): ModelProto", "member" : "onnx.onnx.ModelProto.addAllTrainingInfo", "link" : "onnx\/onnx\/ModelProto.html#addAllTrainingInfo(__vs:Iterable[onnx.onnx.TrainingInfoProto]):onnx.onnx.ModelProto", "kind" : "def"}, {"label" : "addTrainingInfo", "tail" : "(__vs: TrainingInfoProto*): ModelProto", "member" : "onnx.onnx.ModelProto.addTrainingInfo", "link" : "onnx\/onnx\/ModelProto.html#addTrainingInfo(__vs:onnx.onnx.TrainingInfoProto*):onnx.onnx.ModelProto", "kind" : "def"}, {"label" : "clearTrainingInfo", "tail" : "(): ModelProto", "member" : "onnx.onnx.ModelProto.clearTrainingInfo", "link" : "onnx\/onnx\/ModelProto.html#clearTrainingInfo:onnx.onnx.ModelProto", "kind" : "def"}, {"label" : "withMetadataProps", "tail" : "(__v: Seq[StringStringEntryProto]): ModelProto", "member" : "onnx.onnx.ModelProto.withMetadataProps", "link" : "onnx\/onnx\/ModelProto.html#withMetadataProps(__v:Seq[onnx.onnx.StringStringEntryProto]):onnx.onnx.ModelProto", "kind" : "def"}, {"label" : "addAllMetadataProps", "tail" : "(__vs: Iterable[StringStringEntryProto]): ModelProto", "member" : "onnx.onnx.ModelProto.addAllMetadataProps", "link" : "onnx\/onnx\/ModelProto.html#addAllMetadataProps(__vs:Iterable[onnx.onnx.StringStringEntryProto]):onnx.onnx.ModelProto", "kind" : "def"}, {"label" : "addMetadataProps", "tail" : "(__vs: StringStringEntryProto*): ModelProto", "member" : "onnx.onnx.ModelProto.addMetadataProps", "link" : "onnx\/onnx\/ModelProto.html#addMetadataProps(__vs:onnx.onnx.StringStringEntryProto*):onnx.onnx.ModelProto", "kind" : "def"}, {"label" : "clearMetadataProps", "tail" : "(): ModelProto", "member" : "onnx.onnx.ModelProto.clearMetadataProps", "link" : "onnx\/onnx\/ModelProto.html#clearMetadataProps:onnx.onnx.ModelProto", "kind" : "def"}, {"label" : "withGraph", "tail" : "(__v: GraphProto): ModelProto", "member" : "onnx.onnx.ModelProto.withGraph", "link" : "onnx\/onnx\/ModelProto.html#withGraph(__v:onnx.onnx.GraphProto):onnx.onnx.ModelProto", "kind" : "def"}, {"label" : "clearGraph", "tail" : "(): ModelProto", "member" : "onnx.onnx.ModelProto.clearGraph", "link" : "onnx\/onnx\/ModelProto.html#clearGraph:onnx.onnx.ModelProto", "kind" : "def"}, {"label" : "getGraph", "tail" : "(): GraphProto", "member" : "onnx.onnx.ModelProto.getGraph", "link" : "onnx\/onnx\/ModelProto.html#getGraph:onnx.onnx.GraphProto", "kind" : "def"}, {"label" : "withDocString", "tail" : "(__v: String): ModelProto", "member" : "onnx.onnx.ModelProto.withDocString", "link" : "onnx\/onnx\/ModelProto.html#withDocString(__v:String):onnx.onnx.ModelProto", "kind" : "def"}, {"label" : "clearDocString", "tail" : "(): ModelProto", "member" : "onnx.onnx.ModelProto.clearDocString", "link" : "onnx\/onnx\/ModelProto.html#clearDocString:onnx.onnx.ModelProto", "kind" : "def"}, {"label" : "getDocString", "tail" : "(): String", "member" : "onnx.onnx.ModelProto.getDocString", "link" : "onnx\/onnx\/ModelProto.html#getDocString:String", "kind" : "def"}, {"label" : "withModelVersion", "tail" : "(__v: Long): ModelProto", "member" : "onnx.onnx.ModelProto.withModelVersion", "link" : "onnx\/onnx\/ModelProto.html#withModelVersion(__v:Long):onnx.onnx.ModelProto", "kind" : "def"}, {"label" : "clearModelVersion", "tail" : "(): ModelProto", "member" : "onnx.onnx.ModelProto.clearModelVersion", "link" : "onnx\/onnx\/ModelProto.html#clearModelVersion:onnx.onnx.ModelProto", "kind" : "def"}, {"label" : "getModelVersion", "tail" : "(): Long", "member" : "onnx.onnx.ModelProto.getModelVersion", "link" : "onnx\/onnx\/ModelProto.html#getModelVersion:Long", "kind" : "def"}, {"label" : "withDomain", "tail" : "(__v: String): ModelProto", "member" : "onnx.onnx.ModelProto.withDomain", "link" : "onnx\/onnx\/ModelProto.html#withDomain(__v:String):onnx.onnx.ModelProto", "kind" : "def"}, {"label" : "clearDomain", "tail" : "(): ModelProto", "member" : "onnx.onnx.ModelProto.clearDomain", "link" : "onnx\/onnx\/ModelProto.html#clearDomain:onnx.onnx.ModelProto", "kind" : "def"}, {"label" : "getDomain", "tail" : "(): String", "member" : "onnx.onnx.ModelProto.getDomain", "link" : "onnx\/onnx\/ModelProto.html#getDomain:String", "kind" : "def"}, {"label" : "withProducerVersion", "tail" : "(__v: String): ModelProto", "member" : "onnx.onnx.ModelProto.withProducerVersion", "link" : "onnx\/onnx\/ModelProto.html#withProducerVersion(__v:String):onnx.onnx.ModelProto", "kind" : "def"}, {"label" : "clearProducerVersion", "tail" : "(): ModelProto", "member" : "onnx.onnx.ModelProto.clearProducerVersion", "link" : "onnx\/onnx\/ModelProto.html#clearProducerVersion:onnx.onnx.ModelProto", "kind" : "def"}, {"label" : "getProducerVersion", "tail" : "(): String", "member" : "onnx.onnx.ModelProto.getProducerVersion", "link" : "onnx\/onnx\/ModelProto.html#getProducerVersion:String", "kind" : "def"}, {"label" : "withProducerName", "tail" : "(__v: String): ModelProto", "member" : "onnx.onnx.ModelProto.withProducerName", "link" : "onnx\/onnx\/ModelProto.html#withProducerName(__v:String):onnx.onnx.ModelProto", "kind" : "def"}, {"label" : "clearProducerName", "tail" : "(): ModelProto", "member" : "onnx.onnx.ModelProto.clearProducerName", "link" : "onnx\/onnx\/ModelProto.html#clearProducerName:onnx.onnx.ModelProto", "kind" : "def"}, {"label" : "getProducerName", "tail" : "(): String", "member" : "onnx.onnx.ModelProto.getProducerName", "link" : "onnx\/onnx\/ModelProto.html#getProducerName:String", "kind" : "def"}, {"label" : "withOpsetImport", "tail" : "(__v: Seq[OperatorSetIdProto]): ModelProto", "member" : "onnx.onnx.ModelProto.withOpsetImport", "link" : "onnx\/onnx\/ModelProto.html#withOpsetImport(__v:Seq[onnx.onnx.OperatorSetIdProto]):onnx.onnx.ModelProto", "kind" : "def"}, {"label" : "addAllOpsetImport", "tail" : "(__vs: Iterable[OperatorSetIdProto]): ModelProto", "member" : "onnx.onnx.ModelProto.addAllOpsetImport", "link" : "onnx\/onnx\/ModelProto.html#addAllOpsetImport(__vs:Iterable[onnx.onnx.OperatorSetIdProto]):onnx.onnx.ModelProto", "kind" : "def"}, {"label" : "addOpsetImport", "tail" : "(__vs: OperatorSetIdProto*): ModelProto", "member" : "onnx.onnx.ModelProto.addOpsetImport", "link" : "onnx\/onnx\/ModelProto.html#addOpsetImport(__vs:onnx.onnx.OperatorSetIdProto*):onnx.onnx.ModelProto", "kind" : "def"}, {"label" : "clearOpsetImport", "tail" : "(): ModelProto", "member" : "onnx.onnx.ModelProto.clearOpsetImport", "link" : "onnx\/onnx\/ModelProto.html#clearOpsetImport:onnx.onnx.ModelProto", "kind" : "def"}, {"label" : "withIrVersion", "tail" : "(__v: Long): ModelProto", "member" : "onnx.onnx.ModelProto.withIrVersion", "link" : "onnx\/onnx\/ModelProto.html#withIrVersion(__v:Long):onnx.onnx.ModelProto", "kind" : "def"}, {"label" : "clearIrVersion", "tail" : "(): ModelProto", "member" : "onnx.onnx.ModelProto.clearIrVersion", "link" : "onnx\/onnx\/ModelProto.html#clearIrVersion:onnx.onnx.ModelProto", "kind" : "def"}, {"label" : "getIrVersion", "tail" : "(): Long", "member" : "onnx.onnx.ModelProto.getIrVersion", "link" : "onnx\/onnx\/ModelProto.html#getIrVersion:Long", "kind" : "def"}, {"label" : "writeTo", "tail" : "(_output__: CodedOutputStream): Unit", "member" : "onnx.onnx.ModelProto.writeTo", "link" : "onnx\/onnx\/ModelProto.html#writeTo(_output__:com.google.protobuf.CodedOutputStream):Unit", "kind" : "def"}, {"label" : "serializedSize", "tail" : "(): Int", "member" : "onnx.onnx.ModelProto.serializedSize", "link" : "onnx\/onnx\/ModelProto.html#serializedSize:Int", "kind" : "def"}, {"member" : "onnx.onnx.ModelProto#<init>", "error" : "unsupported entity"}, {"label" : "unknownFields", "tail" : ": UnknownFieldSet", "member" : "onnx.onnx.ModelProto.unknownFields", "link" : "onnx\/onnx\/ModelProto.html#unknownFields:scalapb.UnknownFieldSet", "kind" : "val"}, {"label" : "trainingInfo", "tail" : ": Seq[TrainingInfoProto]", "member" : "onnx.onnx.ModelProto.trainingInfo", "link" : "onnx\/onnx\/ModelProto.html#trainingInfo:Seq[onnx.onnx.TrainingInfoProto]", "kind" : "val"}, {"label" : "metadataProps", "tail" : ": Seq[StringStringEntryProto]", "member" : "onnx.onnx.ModelProto.metadataProps", "link" : "onnx\/onnx\/ModelProto.html#metadataProps:Seq[onnx.onnx.StringStringEntryProto]", "kind" : "val"}, {"label" : "graph", "tail" : ": Option[GraphProto]", "member" : "onnx.onnx.ModelProto.graph", "link" : "onnx\/onnx\/ModelProto.html#graph:Option[onnx.onnx.GraphProto]", "kind" : "val"}, {"label" : "docString", "tail" : ": Option[String]", "member" : "onnx.onnx.ModelProto.docString", "link" : "onnx\/onnx\/ModelProto.html#docString:Option[String]", "kind" : "val"}, {"label" : "modelVersion", "tail" : ": Option[Long]", "member" : "onnx.onnx.ModelProto.modelVersion", "link" : "onnx\/onnx\/ModelProto.html#modelVersion:Option[Long]", "kind" : "val"}, {"label" : "domain", "tail" : ": Option[String]", "member" : "onnx.onnx.ModelProto.domain", "link" : "onnx\/onnx\/ModelProto.html#domain:Option[String]", "kind" : "val"}, {"label" : "producerVersion", "tail" : ": Option[String]", "member" : "onnx.onnx.ModelProto.producerVersion", "link" : "onnx\/onnx\/ModelProto.html#producerVersion:Option[String]", "kind" : "val"}, {"label" : "producerName", "tail" : ": Option[String]", "member" : "onnx.onnx.ModelProto.producerName", "link" : "onnx\/onnx\/ModelProto.html#producerName:Option[String]", "kind" : "val"}, {"label" : "opsetImport", "tail" : ": Seq[OperatorSetIdProto]", "member" : "onnx.onnx.ModelProto.opsetImport", "link" : "onnx\/onnx\/ModelProto.html#opsetImport:Seq[onnx.onnx.OperatorSetIdProto]", "kind" : "val"}, {"label" : "irVersion", "tail" : ": Option[Long]", "member" : "onnx.onnx.ModelProto.irVersion", "link" : "onnx\/onnx\/ModelProto.html#irVersion:Option[Long]", "kind" : "val"}, {"label" : "update", "tail" : "(ms: (Lens[ModelProto, ModelProto]) => Mutation[ModelProto]*): ModelProto", "member" : "scalapb.lenses.Updatable.update", "link" : "onnx\/onnx\/ModelProto.html#update(ms:scalapb.lenses.Lens[A,A]=>scalapb.lenses.Mutation[A]*):A", "kind" : "def"}, {"label" : "toByteString", "tail" : "(): ByteString", "member" : "scalapb.GeneratedMessage.toByteString", "link" : "onnx\/onnx\/ModelProto.html#toByteString:com.google.protobuf.ByteString", "kind" : "final def"}, {"label" : "toByteArray", "tail" : "(): Array[Byte]", "member" : "scalapb.GeneratedMessage.toByteArray", "link" : "onnx\/onnx\/ModelProto.html#toByteArray:Array[Byte]", "kind" : "final def"}, {"label" : "toPMessage", "tail" : "(): PMessage", "member" : "scalapb.GeneratedMessage.toPMessage", "link" : "onnx\/onnx\/ModelProto.html#toPMessage:scalapb.descriptors.PMessage", "kind" : "final def"}, {"label" : "writeDelimitedTo", "tail" : "(output: OutputStream): Unit", "member" : "scalapb.GeneratedMessage.writeDelimitedTo", "link" : "onnx\/onnx\/ModelProto.html#writeDelimitedTo(output:java.io.OutputStream):Unit", "kind" : "final def"}, {"label" : "writeTo", "tail" : "(output: OutputStream): Unit", "member" : "scalapb.GeneratedMessage.writeTo", "link" : "onnx\/onnx\/ModelProto.html#writeTo(output:java.io.OutputStream):Unit", "kind" : "final def"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "onnx\/onnx\/ModelProto.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "onnx\/onnx\/ModelProto.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "onnx\/onnx\/ModelProto.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "onnx\/onnx\/ModelProto.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "onnx\/onnx\/ModelProto.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "onnx\/onnx\/ModelProto.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "onnx\/onnx\/ModelProto.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "onnx\/onnx\/ModelProto.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "onnx\/onnx\/ModelProto.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "onnx\/onnx\/ModelProto.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "onnx\/onnx\/ModelProto.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "onnx\/onnx\/ModelProto.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "onnx\/onnx\/ModelProto.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "onnx\/onnx\/ModelProto.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "onnx\/onnx\/ModelProto.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "onnx\/onnx\/ModelProto.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "onnx\/onnx\/ModelProto.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "onnx\/onnx\/ModelProto.html", "kind" : "case class"}, {"name" : "onnx.onnx.NodeProto", "shortDescription" : "Nodes", "object" : "onnx\/onnx\/NodeProto$.html", "members_object" : [{"label" : "of", "tail" : "(input: Seq[String], output: Seq[String], name: Option[String], opType: Option[String], domain: Option[String], attribute: Seq[AttributeProto], docString: Option[String]): NodeProto", "member" : "onnx.onnx.NodeProto.of", "link" : "onnx\/onnx\/NodeProto$.html#of(input:Seq[String],output:Seq[String],name:Option[String],opType:Option[String],domain:Option[String],attribute:Seq[onnx.onnx.AttributeProto],docString:Option[String]):onnx.onnx.NodeProto", "kind" : "def"}, {"label" : "DOC_STRING_FIELD_NUMBER", "tail" : ": Int(6)", "member" : "onnx.onnx.NodeProto.DOC_STRING_FIELD_NUMBER", "link" : "onnx\/onnx\/NodeProto$.html#DOC_STRING_FIELD_NUMBER:Int(6)", "kind" : "final val"}, {"label" : "ATTRIBUTE_FIELD_NUMBER", "tail" : ": Int(5)", "member" : "onnx.onnx.NodeProto.ATTRIBUTE_FIELD_NUMBER", "link" : "onnx\/onnx\/NodeProto$.html#ATTRIBUTE_FIELD_NUMBER:Int(5)", "kind" : "final val"}, {"label" : "DOMAIN_FIELD_NUMBER", "tail" : ": Int(7)", "member" : "onnx.onnx.NodeProto.DOMAIN_FIELD_NUMBER", "link" : "onnx\/onnx\/NodeProto$.html#DOMAIN_FIELD_NUMBER:Int(7)", "kind" : "final val"}, {"label" : "OP_TYPE_FIELD_NUMBER", "tail" : ": Int(4)", "member" : "onnx.onnx.NodeProto.OP_TYPE_FIELD_NUMBER", "link" : "onnx\/onnx\/NodeProto$.html#OP_TYPE_FIELD_NUMBER:Int(4)", "kind" : "final val"}, {"label" : "NAME_FIELD_NUMBER", "tail" : ": Int(3)", "member" : "onnx.onnx.NodeProto.NAME_FIELD_NUMBER", "link" : "onnx\/onnx\/NodeProto$.html#NAME_FIELD_NUMBER:Int(3)", "kind" : "final val"}, {"label" : "OUTPUT_FIELD_NUMBER", "tail" : ": Int(2)", "member" : "onnx.onnx.NodeProto.OUTPUT_FIELD_NUMBER", "link" : "onnx\/onnx\/NodeProto$.html#OUTPUT_FIELD_NUMBER:Int(2)", "kind" : "final val"}, {"label" : "INPUT_FIELD_NUMBER", "tail" : ": Int(1)", "member" : "onnx.onnx.NodeProto.INPUT_FIELD_NUMBER", "link" : "onnx\/onnx\/NodeProto$.html#INPUT_FIELD_NUMBER:Int(1)", "kind" : "final val"}, {"label" : "NodeProtoLens", "tail" : "", "member" : "onnx.onnx.NodeProto.NodeProtoLens", "link" : "onnx\/onnx\/NodeProto$.html#NodeProtoLens[UpperPB]extendsObjectLens[UpperPB,onnx.onnx.NodeProto]", "kind" : "implicit class"}, {"label" : "defaultInstance", "tail" : ": NodeProto", "member" : "onnx.onnx.NodeProto.defaultInstance", "link" : "onnx\/onnx\/NodeProto$.html#defaultInstance:onnx.onnx.NodeProto", "kind" : "lazy val"}, {"label" : "enumCompanionForFieldNumber", "tail" : "(__fieldNumber: Int): GeneratedEnumCompanion[_]", "member" : "onnx.onnx.NodeProto.enumCompanionForFieldNumber", "link" : "onnx\/onnx\/NodeProto$.html#enumCompanionForFieldNumber(__fieldNumber:Int):scalapb.GeneratedEnumCompanion[_]", "kind" : "def"}, {"label" : "nestedMessagesCompanions", "tail" : ": Seq[GeneratedMessageCompanion[_ <: GeneratedMessage]]", "member" : "onnx.onnx.NodeProto.nestedMessagesCompanions", "link" : "onnx\/onnx\/NodeProto$.html#nestedMessagesCompanions:Seq[scalapb.GeneratedMessageCompanion[_<:scalapb.GeneratedMessage]]", "kind" : "lazy val"}, {"label" : "messageCompanionForFieldNumber", "tail" : "(__number: Int): GeneratedMessageCompanion[_]", "member" : "onnx.onnx.NodeProto.messageCompanionForFieldNumber", "link" : "onnx\/onnx\/NodeProto$.html#messageCompanionForFieldNumber(__number:Int):scalapb.GeneratedMessageCompanion[_]", "kind" : "def"}, {"label" : "scalaDescriptor", "tail" : "(): Descriptor", "member" : "onnx.onnx.NodeProto.scalaDescriptor", "link" : "onnx\/onnx\/NodeProto$.html#scalaDescriptor:scalapb.descriptors.Descriptor", "kind" : "def"}, {"label" : "javaDescriptor", "tail" : "(): Descriptor", "member" : "onnx.onnx.NodeProto.javaDescriptor", "link" : "onnx\/onnx\/NodeProto$.html#javaDescriptor:com.google.protobuf.Descriptors.Descriptor", "kind" : "def"}, {"label" : "messageReads", "tail" : "(): Reads[NodeProto]", "member" : "onnx.onnx.NodeProto.messageReads", "link" : "onnx\/onnx\/NodeProto$.html#messageReads:scalapb.descriptors.Reads[onnx.onnx.NodeProto]", "kind" : "implicit def"}, {"label" : "parseFrom", "tail" : "(_input__: CodedInputStream): NodeProto", "member" : "onnx.onnx.NodeProto.parseFrom", "link" : "onnx\/onnx\/NodeProto$.html#parseFrom(_input__:com.google.protobuf.CodedInputStream):onnx.onnx.NodeProto", "kind" : "def"}, {"label" : "messageCompanion", "tail" : "(): GeneratedMessageCompanion[NodeProto]", "member" : "onnx.onnx.NodeProto.messageCompanion", "link" : "onnx\/onnx\/NodeProto$.html#messageCompanion:scalapb.GeneratedMessageCompanion[onnx.onnx.NodeProto]", "kind" : "implicit def"}, {"label" : "fromAscii", "tail" : "(s: String): NodeProto", "member" : "scalapb.GeneratedMessageCompanion.fromAscii", "link" : "onnx\/onnx\/NodeProto$.html#fromAscii(s:String):A", "kind" : "def"}, {"label" : "validateAscii", "tail" : "(s: String): Either[TextFormatError, NodeProto]", "member" : "scalapb.GeneratedMessageCompanion.validateAscii", "link" : "onnx\/onnx\/NodeProto$.html#validateAscii(s:String):Either[scalapb.TextFormatError,A]", "kind" : "def"}, {"label" : "enumCompanionForField", "tail" : "(field: FieldDescriptor): GeneratedEnumCompanion[_]", "member" : "scalapb.GeneratedMessageCompanion.enumCompanionForField", "link" : "onnx\/onnx\/NodeProto$.html#enumCompanionForField(field:com.google.protobuf.Descriptors.FieldDescriptor):scalapb.GeneratedEnumCompanion[_]", "kind" : "def"}, {"label" : "messageCompanionForField", "tail" : "(field: FieldDescriptor): GeneratedMessageCompanion[_]", "member" : "scalapb.GeneratedMessageCompanion.messageCompanionForField", "link" : "onnx\/onnx\/NodeProto$.html#messageCompanionForField(field:com.google.protobuf.Descriptors.FieldDescriptor):scalapb.GeneratedMessageCompanion[_]", "kind" : "def"}, {"label" : "toByteArray", "tail" : "(a: NodeProto): Array[Byte]", "member" : "scalapb.GeneratedMessageCompanion.toByteArray", "link" : "onnx\/onnx\/NodeProto$.html#toByteArray(a:A):Array[Byte]", "kind" : "def"}, {"label" : "validate", "tail" : "(s: Array[Byte]): Try[NodeProto]", "member" : "scalapb.GeneratedMessageCompanion.validate", "link" : "onnx\/onnx\/NodeProto$.html#validate(s:Array[Byte]):scala.util.Try[A]", "kind" : "def"}, {"label" : "merge", "tail" : "(a: NodeProto, input: CodedInputStream): NodeProto", "member" : "scalapb.GeneratedMessageCompanion.merge", "link" : "onnx\/onnx\/NodeProto$.html#merge(a:A,input:com.google.protobuf.CodedInputStream):A", "kind" : "def"}, {"label" : "parseFrom", "tail" : "(s: Array[Byte]): NodeProto", "member" : "scalapb.GeneratedMessageCompanion.parseFrom", "link" : "onnx\/onnx\/NodeProto$.html#parseFrom(s:Array[Byte]):A", "kind" : "def"}, {"label" : "streamFromDelimitedInput", "tail" : "(input: InputStream): Stream[NodeProto]", "member" : "scalapb.GeneratedMessageCompanion.streamFromDelimitedInput", "link" : "onnx\/onnx\/NodeProto$.html#streamFromDelimitedInput(input:java.io.InputStream):Stream[A]", "kind" : "def"}, {"label" : "parseDelimitedFrom", "tail" : "(input: InputStream): Option[NodeProto]", "member" : "scalapb.GeneratedMessageCompanion.parseDelimitedFrom", "link" : "onnx\/onnx\/NodeProto$.html#parseDelimitedFrom(input:java.io.InputStream):Option[A]", "kind" : "def"}, {"label" : "parseDelimitedFrom", "tail" : "(input: CodedInputStream): Option[NodeProto]", "member" : "scalapb.GeneratedMessageCompanion.parseDelimitedFrom", "link" : "onnx\/onnx\/NodeProto$.html#parseDelimitedFrom(input:com.google.protobuf.CodedInputStream):Option[A]", "kind" : "def"}, {"label" : "parseFrom", "tail" : "(input: InputStream): NodeProto", "member" : "scalapb.GeneratedMessageCompanion.parseFrom", "link" : "onnx\/onnx\/NodeProto$.html#parseFrom(input:java.io.InputStream):A", "kind" : "def"}, {"label" : "ValueType", "tail" : "", "member" : "scalapb.GeneratedMessageCompanion.ValueType", "link" : "onnx\/onnx\/NodeProto$.html#ValueType=A", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "onnx\/onnx\/NodeProto$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "onnx\/onnx\/NodeProto$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "onnx\/onnx\/NodeProto$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "onnx\/onnx\/NodeProto$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "onnx\/onnx\/NodeProto$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "onnx\/onnx\/NodeProto$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "onnx\/onnx\/NodeProto$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "onnx\/onnx\/NodeProto$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "onnx\/onnx\/NodeProto$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "onnx\/onnx\/NodeProto$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "onnx\/onnx\/NodeProto$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "onnx\/onnx\/NodeProto$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "onnx\/onnx\/NodeProto$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "onnx\/onnx\/NodeProto$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "onnx\/onnx\/NodeProto$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "onnx\/onnx\/NodeProto$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "onnx\/onnx\/NodeProto$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "onnx\/onnx\/NodeProto$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "onnx\/onnx\/NodeProto$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "companion", "tail" : "(): NodeProto.type", "member" : "onnx.onnx.NodeProto.companion", "link" : "onnx\/onnx\/NodeProto.html#companion:onnx.onnx.NodeProto.type", "kind" : "def"}, {"label" : "toProtoString", "tail" : "(): String", "member" : "onnx.onnx.NodeProto.toProtoString", "link" : "onnx\/onnx\/NodeProto.html#toProtoString:String", "kind" : "def"}, {"label" : "getField", "tail" : "(__field: FieldDescriptor): PValue", "member" : "onnx.onnx.NodeProto.getField", "link" : "onnx\/onnx\/NodeProto.html#getField(__field:scalapb.descriptors.FieldDescriptor):scalapb.descriptors.PValue", "kind" : "def"}, {"label" : "getFieldByNumber", "tail" : "(__fieldNumber: Int): Any", "member" : "onnx.onnx.NodeProto.getFieldByNumber", "link" : "onnx\/onnx\/NodeProto.html#getFieldByNumber(__fieldNumber:Int):Any", "kind" : "def"}, {"label" : "discardUnknownFields", "tail" : "(): NodeProto", "member" : "onnx.onnx.NodeProto.discardUnknownFields", "link" : "onnx\/onnx\/NodeProto.html#discardUnknownFields:onnx.onnx.NodeProto", "kind" : "def"}, {"label" : "withUnknownFields", "tail" : "(__v: UnknownFieldSet): NodeProto", "member" : "onnx.onnx.NodeProto.withUnknownFields", "link" : "onnx\/onnx\/NodeProto.html#withUnknownFields(__v:scalapb.UnknownFieldSet):onnx.onnx.NodeProto", "kind" : "def"}, {"label" : "withDocString", "tail" : "(__v: String): NodeProto", "member" : "onnx.onnx.NodeProto.withDocString", "link" : "onnx\/onnx\/NodeProto.html#withDocString(__v:String):onnx.onnx.NodeProto", "kind" : "def"}, {"label" : "clearDocString", "tail" : "(): NodeProto", "member" : "onnx.onnx.NodeProto.clearDocString", "link" : "onnx\/onnx\/NodeProto.html#clearDocString:onnx.onnx.NodeProto", "kind" : "def"}, {"label" : "getDocString", "tail" : "(): String", "member" : "onnx.onnx.NodeProto.getDocString", "link" : "onnx\/onnx\/NodeProto.html#getDocString:String", "kind" : "def"}, {"label" : "withAttribute", "tail" : "(__v: Seq[AttributeProto]): NodeProto", "member" : "onnx.onnx.NodeProto.withAttribute", "link" : "onnx\/onnx\/NodeProto.html#withAttribute(__v:Seq[onnx.onnx.AttributeProto]):onnx.onnx.NodeProto", "kind" : "def"}, {"label" : "addAllAttribute", "tail" : "(__vs: Iterable[AttributeProto]): NodeProto", "member" : "onnx.onnx.NodeProto.addAllAttribute", "link" : "onnx\/onnx\/NodeProto.html#addAllAttribute(__vs:Iterable[onnx.onnx.AttributeProto]):onnx.onnx.NodeProto", "kind" : "def"}, {"label" : "addAttribute", "tail" : "(__vs: AttributeProto*): NodeProto", "member" : "onnx.onnx.NodeProto.addAttribute", "link" : "onnx\/onnx\/NodeProto.html#addAttribute(__vs:onnx.onnx.AttributeProto*):onnx.onnx.NodeProto", "kind" : "def"}, {"label" : "clearAttribute", "tail" : "(): NodeProto", "member" : "onnx.onnx.NodeProto.clearAttribute", "link" : "onnx\/onnx\/NodeProto.html#clearAttribute:onnx.onnx.NodeProto", "kind" : "def"}, {"label" : "withDomain", "tail" : "(__v: String): NodeProto", "member" : "onnx.onnx.NodeProto.withDomain", "link" : "onnx\/onnx\/NodeProto.html#withDomain(__v:String):onnx.onnx.NodeProto", "kind" : "def"}, {"label" : "clearDomain", "tail" : "(): NodeProto", "member" : "onnx.onnx.NodeProto.clearDomain", "link" : "onnx\/onnx\/NodeProto.html#clearDomain:onnx.onnx.NodeProto", "kind" : "def"}, {"label" : "getDomain", "tail" : "(): String", "member" : "onnx.onnx.NodeProto.getDomain", "link" : "onnx\/onnx\/NodeProto.html#getDomain:String", "kind" : "def"}, {"label" : "withOpType", "tail" : "(__v: String): NodeProto", "member" : "onnx.onnx.NodeProto.withOpType", "link" : "onnx\/onnx\/NodeProto.html#withOpType(__v:String):onnx.onnx.NodeProto", "kind" : "def"}, {"label" : "clearOpType", "tail" : "(): NodeProto", "member" : "onnx.onnx.NodeProto.clearOpType", "link" : "onnx\/onnx\/NodeProto.html#clearOpType:onnx.onnx.NodeProto", "kind" : "def"}, {"label" : "getOpType", "tail" : "(): String", "member" : "onnx.onnx.NodeProto.getOpType", "link" : "onnx\/onnx\/NodeProto.html#getOpType:String", "kind" : "def"}, {"label" : "withName", "tail" : "(__v: String): NodeProto", "member" : "onnx.onnx.NodeProto.withName", "link" : "onnx\/onnx\/NodeProto.html#withName(__v:String):onnx.onnx.NodeProto", "kind" : "def"}, {"label" : "clearName", "tail" : "(): NodeProto", "member" : "onnx.onnx.NodeProto.clearName", "link" : "onnx\/onnx\/NodeProto.html#clearName:onnx.onnx.NodeProto", "kind" : "def"}, {"label" : "getName", "tail" : "(): String", "member" : "onnx.onnx.NodeProto.getName", "link" : "onnx\/onnx\/NodeProto.html#getName:String", "kind" : "def"}, {"label" : "withOutput", "tail" : "(__v: Seq[String]): NodeProto", "member" : "onnx.onnx.NodeProto.withOutput", "link" : "onnx\/onnx\/NodeProto.html#withOutput(__v:Seq[String]):onnx.onnx.NodeProto", "kind" : "def"}, {"label" : "addAllOutput", "tail" : "(__vs: Iterable[String]): NodeProto", "member" : "onnx.onnx.NodeProto.addAllOutput", "link" : "onnx\/onnx\/NodeProto.html#addAllOutput(__vs:Iterable[String]):onnx.onnx.NodeProto", "kind" : "def"}, {"label" : "addOutput", "tail" : "(__vs: String*): NodeProto", "member" : "onnx.onnx.NodeProto.addOutput", "link" : "onnx\/onnx\/NodeProto.html#addOutput(__vs:String*):onnx.onnx.NodeProto", "kind" : "def"}, {"label" : "clearOutput", "tail" : "(): NodeProto", "member" : "onnx.onnx.NodeProto.clearOutput", "link" : "onnx\/onnx\/NodeProto.html#clearOutput:onnx.onnx.NodeProto", "kind" : "def"}, {"label" : "withInput", "tail" : "(__v: Seq[String]): NodeProto", "member" : "onnx.onnx.NodeProto.withInput", "link" : "onnx\/onnx\/NodeProto.html#withInput(__v:Seq[String]):onnx.onnx.NodeProto", "kind" : "def"}, {"label" : "addAllInput", "tail" : "(__vs: Iterable[String]): NodeProto", "member" : "onnx.onnx.NodeProto.addAllInput", "link" : "onnx\/onnx\/NodeProto.html#addAllInput(__vs:Iterable[String]):onnx.onnx.NodeProto", "kind" : "def"}, {"label" : "addInput", "tail" : "(__vs: String*): NodeProto", "member" : "onnx.onnx.NodeProto.addInput", "link" : "onnx\/onnx\/NodeProto.html#addInput(__vs:String*):onnx.onnx.NodeProto", "kind" : "def"}, {"label" : "clearInput", "tail" : "(): NodeProto", "member" : "onnx.onnx.NodeProto.clearInput", "link" : "onnx\/onnx\/NodeProto.html#clearInput:onnx.onnx.NodeProto", "kind" : "def"}, {"label" : "writeTo", "tail" : "(_output__: CodedOutputStream): Unit", "member" : "onnx.onnx.NodeProto.writeTo", "link" : "onnx\/onnx\/NodeProto.html#writeTo(_output__:com.google.protobuf.CodedOutputStream):Unit", "kind" : "def"}, {"label" : "serializedSize", "tail" : "(): Int", "member" : "onnx.onnx.NodeProto.serializedSize", "link" : "onnx\/onnx\/NodeProto.html#serializedSize:Int", "kind" : "def"}, {"member" : "onnx.onnx.NodeProto#<init>", "error" : "unsupported entity"}, {"label" : "unknownFields", "tail" : ": UnknownFieldSet", "member" : "onnx.onnx.NodeProto.unknownFields", "link" : "onnx\/onnx\/NodeProto.html#unknownFields:scalapb.UnknownFieldSet", "kind" : "val"}, {"label" : "docString", "tail" : ": Option[String]", "member" : "onnx.onnx.NodeProto.docString", "link" : "onnx\/onnx\/NodeProto.html#docString:Option[String]", "kind" : "val"}, {"label" : "attribute", "tail" : ": Seq[AttributeProto]", "member" : "onnx.onnx.NodeProto.attribute", "link" : "onnx\/onnx\/NodeProto.html#attribute:Seq[onnx.onnx.AttributeProto]", "kind" : "val"}, {"label" : "domain", "tail" : ": Option[String]", "member" : "onnx.onnx.NodeProto.domain", "link" : "onnx\/onnx\/NodeProto.html#domain:Option[String]", "kind" : "val"}, {"label" : "opType", "tail" : ": Option[String]", "member" : "onnx.onnx.NodeProto.opType", "link" : "onnx\/onnx\/NodeProto.html#opType:Option[String]", "kind" : "val"}, {"label" : "name", "tail" : ": Option[String]", "member" : "onnx.onnx.NodeProto.name", "link" : "onnx\/onnx\/NodeProto.html#name:Option[String]", "kind" : "val"}, {"label" : "output", "tail" : ": Seq[String]", "member" : "onnx.onnx.NodeProto.output", "link" : "onnx\/onnx\/NodeProto.html#output:Seq[String]", "kind" : "val"}, {"label" : "input", "tail" : ": Seq[String]", "member" : "onnx.onnx.NodeProto.input", "link" : "onnx\/onnx\/NodeProto.html#input:Seq[String]", "kind" : "val"}, {"label" : "update", "tail" : "(ms: (Lens[NodeProto, NodeProto]) => Mutation[NodeProto]*): NodeProto", "member" : "scalapb.lenses.Updatable.update", "link" : "onnx\/onnx\/NodeProto.html#update(ms:scalapb.lenses.Lens[A,A]=>scalapb.lenses.Mutation[A]*):A", "kind" : "def"}, {"label" : "toByteString", "tail" : "(): ByteString", "member" : "scalapb.GeneratedMessage.toByteString", "link" : "onnx\/onnx\/NodeProto.html#toByteString:com.google.protobuf.ByteString", "kind" : "final def"}, {"label" : "toByteArray", "tail" : "(): Array[Byte]", "member" : "scalapb.GeneratedMessage.toByteArray", "link" : "onnx\/onnx\/NodeProto.html#toByteArray:Array[Byte]", "kind" : "final def"}, {"label" : "toPMessage", "tail" : "(): PMessage", "member" : "scalapb.GeneratedMessage.toPMessage", "link" : "onnx\/onnx\/NodeProto.html#toPMessage:scalapb.descriptors.PMessage", "kind" : "final def"}, {"label" : "writeDelimitedTo", "tail" : "(output: OutputStream): Unit", "member" : "scalapb.GeneratedMessage.writeDelimitedTo", "link" : "onnx\/onnx\/NodeProto.html#writeDelimitedTo(output:java.io.OutputStream):Unit", "kind" : "final def"}, {"label" : "writeTo", "tail" : "(output: OutputStream): Unit", "member" : "scalapb.GeneratedMessage.writeTo", "link" : "onnx\/onnx\/NodeProto.html#writeTo(output:java.io.OutputStream):Unit", "kind" : "final def"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "onnx\/onnx\/NodeProto.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "onnx\/onnx\/NodeProto.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "onnx\/onnx\/NodeProto.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "onnx\/onnx\/NodeProto.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "onnx\/onnx\/NodeProto.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "onnx\/onnx\/NodeProto.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "onnx\/onnx\/NodeProto.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "onnx\/onnx\/NodeProto.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "onnx\/onnx\/NodeProto.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "onnx\/onnx\/NodeProto.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "onnx\/onnx\/NodeProto.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "onnx\/onnx\/NodeProto.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "onnx\/onnx\/NodeProto.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "onnx\/onnx\/NodeProto.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "onnx\/onnx\/NodeProto.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "onnx\/onnx\/NodeProto.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "onnx\/onnx\/NodeProto.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "onnx\/onnx\/NodeProto.html", "kind" : "case class"}, {"name" : "onnx.onnx.OnnxProto", "shortDescription" : "", "object" : "onnx\/onnx\/OnnxProto$.html", "members_object" : [{"label" : "descriptor", "tail" : "(): FileDescriptor", "member" : "onnx.onnx.OnnxProto.descriptor", "link" : "onnx\/onnx\/OnnxProto$.html#descriptor:com.google.protobuf.Descriptors.FileDescriptor", "kind" : "def"}, {"label" : "javaDescriptor", "tail" : ": FileDescriptor", "member" : "onnx.onnx.OnnxProto.javaDescriptor", "link" : "onnx\/onnx\/OnnxProto$.html#javaDescriptor:com.google.protobuf.Descriptors.FileDescriptor", "kind" : "lazy val"}, {"label" : "scalaDescriptor", "tail" : ": FileDescriptor", "member" : "onnx.onnx.OnnxProto.scalaDescriptor", "link" : "onnx\/onnx\/OnnxProto$.html#scalaDescriptor:scalapb.descriptors.FileDescriptor", "kind" : "lazy val"}, {"label" : "messagesCompanions", "tail" : ": Seq[GeneratedMessageCompanion[_ <: GeneratedMessage]]", "member" : "onnx.onnx.OnnxProto.messagesCompanions", "link" : "onnx\/onnx\/OnnxProto$.html#messagesCompanions:Seq[scalapb.GeneratedMessageCompanion[_<:scalapb.GeneratedMessage]]", "kind" : "lazy val"}, {"label" : "dependencies", "tail" : ": Seq[GeneratedFileObject]", "member" : "onnx.onnx.OnnxProto.dependencies", "link" : "onnx\/onnx\/OnnxProto$.html#dependencies:Seq[scalapb.GeneratedFileObject]", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "onnx\/onnx\/OnnxProto$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "onnx\/onnx\/OnnxProto$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "onnx\/onnx\/OnnxProto$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "onnx\/onnx\/OnnxProto$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "onnx\/onnx\/OnnxProto$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "onnx\/onnx\/OnnxProto$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "onnx\/onnx\/OnnxProto$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "onnx\/onnx\/OnnxProto$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "onnx\/onnx\/OnnxProto$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "onnx\/onnx\/OnnxProto$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "onnx\/onnx\/OnnxProto$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "onnx\/onnx\/OnnxProto$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "onnx\/onnx\/OnnxProto$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "onnx\/onnx\/OnnxProto$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "onnx\/onnx\/OnnxProto$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "onnx\/onnx\/OnnxProto$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "onnx\/onnx\/OnnxProto$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "onnx\/onnx\/OnnxProto$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "onnx\/onnx\/OnnxProto$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "onnx.onnx.OperatorSetIdProto", "shortDescription" : "Operator Sets", "object" : "onnx\/onnx\/OperatorSetIdProto$.html", "members_object" : [{"label" : "of", "tail" : "(domain: Option[String], version: Option[Long]): OperatorSetIdProto", "member" : "onnx.onnx.OperatorSetIdProto.of", "link" : "onnx\/onnx\/OperatorSetIdProto$.html#of(domain:Option[String],version:Option[Long]):onnx.onnx.OperatorSetIdProto", "kind" : "def"}, {"label" : "VERSION_FIELD_NUMBER", "tail" : ": Int(2)", "member" : "onnx.onnx.OperatorSetIdProto.VERSION_FIELD_NUMBER", "link" : "onnx\/onnx\/OperatorSetIdProto$.html#VERSION_FIELD_NUMBER:Int(2)", "kind" : "final val"}, {"label" : "DOMAIN_FIELD_NUMBER", "tail" : ": Int(1)", "member" : "onnx.onnx.OperatorSetIdProto.DOMAIN_FIELD_NUMBER", "link" : "onnx\/onnx\/OperatorSetIdProto$.html#DOMAIN_FIELD_NUMBER:Int(1)", "kind" : "final val"}, {"label" : "OperatorSetIdProtoLens", "tail" : "", "member" : "onnx.onnx.OperatorSetIdProto.OperatorSetIdProtoLens", "link" : "onnx\/onnx\/OperatorSetIdProto$.html#OperatorSetIdProtoLens[UpperPB]extendsObjectLens[UpperPB,onnx.onnx.OperatorSetIdProto]", "kind" : "implicit class"}, {"label" : "defaultInstance", "tail" : ": OperatorSetIdProto", "member" : "onnx.onnx.OperatorSetIdProto.defaultInstance", "link" : "onnx\/onnx\/OperatorSetIdProto$.html#defaultInstance:onnx.onnx.OperatorSetIdProto", "kind" : "lazy val"}, {"label" : "enumCompanionForFieldNumber", "tail" : "(__fieldNumber: Int): GeneratedEnumCompanion[_]", "member" : "onnx.onnx.OperatorSetIdProto.enumCompanionForFieldNumber", "link" : "onnx\/onnx\/OperatorSetIdProto$.html#enumCompanionForFieldNumber(__fieldNumber:Int):scalapb.GeneratedEnumCompanion[_]", "kind" : "def"}, {"label" : "nestedMessagesCompanions", "tail" : ": Seq[GeneratedMessageCompanion[_ <: GeneratedMessage]]", "member" : "onnx.onnx.OperatorSetIdProto.nestedMessagesCompanions", "link" : "onnx\/onnx\/OperatorSetIdProto$.html#nestedMessagesCompanions:Seq[scalapb.GeneratedMessageCompanion[_<:scalapb.GeneratedMessage]]", "kind" : "lazy val"}, {"label" : "messageCompanionForFieldNumber", "tail" : "(__number: Int): GeneratedMessageCompanion[_]", "member" : "onnx.onnx.OperatorSetIdProto.messageCompanionForFieldNumber", "link" : "onnx\/onnx\/OperatorSetIdProto$.html#messageCompanionForFieldNumber(__number:Int):scalapb.GeneratedMessageCompanion[_]", "kind" : "def"}, {"label" : "scalaDescriptor", "tail" : "(): Descriptor", "member" : "onnx.onnx.OperatorSetIdProto.scalaDescriptor", "link" : "onnx\/onnx\/OperatorSetIdProto$.html#scalaDescriptor:scalapb.descriptors.Descriptor", "kind" : "def"}, {"label" : "javaDescriptor", "tail" : "(): Descriptor", "member" : "onnx.onnx.OperatorSetIdProto.javaDescriptor", "link" : "onnx\/onnx\/OperatorSetIdProto$.html#javaDescriptor:com.google.protobuf.Descriptors.Descriptor", "kind" : "def"}, {"label" : "messageReads", "tail" : "(): Reads[OperatorSetIdProto]", "member" : "onnx.onnx.OperatorSetIdProto.messageReads", "link" : "onnx\/onnx\/OperatorSetIdProto$.html#messageReads:scalapb.descriptors.Reads[onnx.onnx.OperatorSetIdProto]", "kind" : "implicit def"}, {"label" : "parseFrom", "tail" : "(_input__: CodedInputStream): OperatorSetIdProto", "member" : "onnx.onnx.OperatorSetIdProto.parseFrom", "link" : "onnx\/onnx\/OperatorSetIdProto$.html#parseFrom(_input__:com.google.protobuf.CodedInputStream):onnx.onnx.OperatorSetIdProto", "kind" : "def"}, {"label" : "messageCompanion", "tail" : "(): GeneratedMessageCompanion[OperatorSetIdProto]", "member" : "onnx.onnx.OperatorSetIdProto.messageCompanion", "link" : "onnx\/onnx\/OperatorSetIdProto$.html#messageCompanion:scalapb.GeneratedMessageCompanion[onnx.onnx.OperatorSetIdProto]", "kind" : "implicit def"}, {"label" : "fromAscii", "tail" : "(s: String): OperatorSetIdProto", "member" : "scalapb.GeneratedMessageCompanion.fromAscii", "link" : "onnx\/onnx\/OperatorSetIdProto$.html#fromAscii(s:String):A", "kind" : "def"}, {"label" : "validateAscii", "tail" : "(s: String): Either[TextFormatError, OperatorSetIdProto]", "member" : "scalapb.GeneratedMessageCompanion.validateAscii", "link" : "onnx\/onnx\/OperatorSetIdProto$.html#validateAscii(s:String):Either[scalapb.TextFormatError,A]", "kind" : "def"}, {"label" : "enumCompanionForField", "tail" : "(field: FieldDescriptor): GeneratedEnumCompanion[_]", "member" : "scalapb.GeneratedMessageCompanion.enumCompanionForField", "link" : "onnx\/onnx\/OperatorSetIdProto$.html#enumCompanionForField(field:com.google.protobuf.Descriptors.FieldDescriptor):scalapb.GeneratedEnumCompanion[_]", "kind" : "def"}, {"label" : "messageCompanionForField", "tail" : "(field: FieldDescriptor): GeneratedMessageCompanion[_]", "member" : "scalapb.GeneratedMessageCompanion.messageCompanionForField", "link" : "onnx\/onnx\/OperatorSetIdProto$.html#messageCompanionForField(field:com.google.protobuf.Descriptors.FieldDescriptor):scalapb.GeneratedMessageCompanion[_]", "kind" : "def"}, {"label" : "toByteArray", "tail" : "(a: OperatorSetIdProto): Array[Byte]", "member" : "scalapb.GeneratedMessageCompanion.toByteArray", "link" : "onnx\/onnx\/OperatorSetIdProto$.html#toByteArray(a:A):Array[Byte]", "kind" : "def"}, {"label" : "validate", "tail" : "(s: Array[Byte]): Try[OperatorSetIdProto]", "member" : "scalapb.GeneratedMessageCompanion.validate", "link" : "onnx\/onnx\/OperatorSetIdProto$.html#validate(s:Array[Byte]):scala.util.Try[A]", "kind" : "def"}, {"label" : "merge", "tail" : "(a: OperatorSetIdProto, input: CodedInputStream): OperatorSetIdProto", "member" : "scalapb.GeneratedMessageCompanion.merge", "link" : "onnx\/onnx\/OperatorSetIdProto$.html#merge(a:A,input:com.google.protobuf.CodedInputStream):A", "kind" : "def"}, {"label" : "parseFrom", "tail" : "(s: Array[Byte]): OperatorSetIdProto", "member" : "scalapb.GeneratedMessageCompanion.parseFrom", "link" : "onnx\/onnx\/OperatorSetIdProto$.html#parseFrom(s:Array[Byte]):A", "kind" : "def"}, {"label" : "streamFromDelimitedInput", "tail" : "(input: InputStream): Stream[OperatorSetIdProto]", "member" : "scalapb.GeneratedMessageCompanion.streamFromDelimitedInput", "link" : "onnx\/onnx\/OperatorSetIdProto$.html#streamFromDelimitedInput(input:java.io.InputStream):Stream[A]", "kind" : "def"}, {"label" : "parseDelimitedFrom", "tail" : "(input: InputStream): Option[OperatorSetIdProto]", "member" : "scalapb.GeneratedMessageCompanion.parseDelimitedFrom", "link" : "onnx\/onnx\/OperatorSetIdProto$.html#parseDelimitedFrom(input:java.io.InputStream):Option[A]", "kind" : "def"}, {"label" : "parseDelimitedFrom", "tail" : "(input: CodedInputStream): Option[OperatorSetIdProto]", "member" : "scalapb.GeneratedMessageCompanion.parseDelimitedFrom", "link" : "onnx\/onnx\/OperatorSetIdProto$.html#parseDelimitedFrom(input:com.google.protobuf.CodedInputStream):Option[A]", "kind" : "def"}, {"label" : "parseFrom", "tail" : "(input: InputStream): OperatorSetIdProto", "member" : "scalapb.GeneratedMessageCompanion.parseFrom", "link" : "onnx\/onnx\/OperatorSetIdProto$.html#parseFrom(input:java.io.InputStream):A", "kind" : "def"}, {"label" : "ValueType", "tail" : "", "member" : "scalapb.GeneratedMessageCompanion.ValueType", "link" : "onnx\/onnx\/OperatorSetIdProto$.html#ValueType=A", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "onnx\/onnx\/OperatorSetIdProto$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "onnx\/onnx\/OperatorSetIdProto$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "onnx\/onnx\/OperatorSetIdProto$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "onnx\/onnx\/OperatorSetIdProto$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "onnx\/onnx\/OperatorSetIdProto$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "onnx\/onnx\/OperatorSetIdProto$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "onnx\/onnx\/OperatorSetIdProto$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "onnx\/onnx\/OperatorSetIdProto$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "onnx\/onnx\/OperatorSetIdProto$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "onnx\/onnx\/OperatorSetIdProto$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "onnx\/onnx\/OperatorSetIdProto$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "onnx\/onnx\/OperatorSetIdProto$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "onnx\/onnx\/OperatorSetIdProto$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "onnx\/onnx\/OperatorSetIdProto$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "onnx\/onnx\/OperatorSetIdProto$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "onnx\/onnx\/OperatorSetIdProto$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "onnx\/onnx\/OperatorSetIdProto$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "onnx\/onnx\/OperatorSetIdProto$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "onnx\/onnx\/OperatorSetIdProto$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "companion", "tail" : "(): OperatorSetIdProto.type", "member" : "onnx.onnx.OperatorSetIdProto.companion", "link" : "onnx\/onnx\/OperatorSetIdProto.html#companion:onnx.onnx.OperatorSetIdProto.type", "kind" : "def"}, {"label" : "toProtoString", "tail" : "(): String", "member" : "onnx.onnx.OperatorSetIdProto.toProtoString", "link" : "onnx\/onnx\/OperatorSetIdProto.html#toProtoString:String", "kind" : "def"}, {"label" : "getField", "tail" : "(__field: FieldDescriptor): PValue", "member" : "onnx.onnx.OperatorSetIdProto.getField", "link" : "onnx\/onnx\/OperatorSetIdProto.html#getField(__field:scalapb.descriptors.FieldDescriptor):scalapb.descriptors.PValue", "kind" : "def"}, {"label" : "getFieldByNumber", "tail" : "(__fieldNumber: Int): Any", "member" : "onnx.onnx.OperatorSetIdProto.getFieldByNumber", "link" : "onnx\/onnx\/OperatorSetIdProto.html#getFieldByNumber(__fieldNumber:Int):Any", "kind" : "def"}, {"label" : "discardUnknownFields", "tail" : "(): OperatorSetIdProto", "member" : "onnx.onnx.OperatorSetIdProto.discardUnknownFields", "link" : "onnx\/onnx\/OperatorSetIdProto.html#discardUnknownFields:onnx.onnx.OperatorSetIdProto", "kind" : "def"}, {"label" : "withUnknownFields", "tail" : "(__v: UnknownFieldSet): OperatorSetIdProto", "member" : "onnx.onnx.OperatorSetIdProto.withUnknownFields", "link" : "onnx\/onnx\/OperatorSetIdProto.html#withUnknownFields(__v:scalapb.UnknownFieldSet):onnx.onnx.OperatorSetIdProto", "kind" : "def"}, {"label" : "withVersion", "tail" : "(__v: Long): OperatorSetIdProto", "member" : "onnx.onnx.OperatorSetIdProto.withVersion", "link" : "onnx\/onnx\/OperatorSetIdProto.html#withVersion(__v:Long):onnx.onnx.OperatorSetIdProto", "kind" : "def"}, {"label" : "clearVersion", "tail" : "(): OperatorSetIdProto", "member" : "onnx.onnx.OperatorSetIdProto.clearVersion", "link" : "onnx\/onnx\/OperatorSetIdProto.html#clearVersion:onnx.onnx.OperatorSetIdProto", "kind" : "def"}, {"label" : "getVersion", "tail" : "(): Long", "member" : "onnx.onnx.OperatorSetIdProto.getVersion", "link" : "onnx\/onnx\/OperatorSetIdProto.html#getVersion:Long", "kind" : "def"}, {"label" : "withDomain", "tail" : "(__v: String): OperatorSetIdProto", "member" : "onnx.onnx.OperatorSetIdProto.withDomain", "link" : "onnx\/onnx\/OperatorSetIdProto.html#withDomain(__v:String):onnx.onnx.OperatorSetIdProto", "kind" : "def"}, {"label" : "clearDomain", "tail" : "(): OperatorSetIdProto", "member" : "onnx.onnx.OperatorSetIdProto.clearDomain", "link" : "onnx\/onnx\/OperatorSetIdProto.html#clearDomain:onnx.onnx.OperatorSetIdProto", "kind" : "def"}, {"label" : "getDomain", "tail" : "(): String", "member" : "onnx.onnx.OperatorSetIdProto.getDomain", "link" : "onnx\/onnx\/OperatorSetIdProto.html#getDomain:String", "kind" : "def"}, {"label" : "writeTo", "tail" : "(_output__: CodedOutputStream): Unit", "member" : "onnx.onnx.OperatorSetIdProto.writeTo", "link" : "onnx\/onnx\/OperatorSetIdProto.html#writeTo(_output__:com.google.protobuf.CodedOutputStream):Unit", "kind" : "def"}, {"label" : "serializedSize", "tail" : "(): Int", "member" : "onnx.onnx.OperatorSetIdProto.serializedSize", "link" : "onnx\/onnx\/OperatorSetIdProto.html#serializedSize:Int", "kind" : "def"}, {"member" : "onnx.onnx.OperatorSetIdProto#<init>", "error" : "unsupported entity"}, {"label" : "unknownFields", "tail" : ": UnknownFieldSet", "member" : "onnx.onnx.OperatorSetIdProto.unknownFields", "link" : "onnx\/onnx\/OperatorSetIdProto.html#unknownFields:scalapb.UnknownFieldSet", "kind" : "val"}, {"label" : "version", "tail" : ": Option[Long]", "member" : "onnx.onnx.OperatorSetIdProto.version", "link" : "onnx\/onnx\/OperatorSetIdProto.html#version:Option[Long]", "kind" : "val"}, {"label" : "domain", "tail" : ": Option[String]", "member" : "onnx.onnx.OperatorSetIdProto.domain", "link" : "onnx\/onnx\/OperatorSetIdProto.html#domain:Option[String]", "kind" : "val"}, {"label" : "update", "tail" : "(ms: (Lens[OperatorSetIdProto, OperatorSetIdProto]) => Mutation[OperatorSetIdProto]*): OperatorSetIdProto", "member" : "scalapb.lenses.Updatable.update", "link" : "onnx\/onnx\/OperatorSetIdProto.html#update(ms:scalapb.lenses.Lens[A,A]=>scalapb.lenses.Mutation[A]*):A", "kind" : "def"}, {"label" : "toByteString", "tail" : "(): ByteString", "member" : "scalapb.GeneratedMessage.toByteString", "link" : "onnx\/onnx\/OperatorSetIdProto.html#toByteString:com.google.protobuf.ByteString", "kind" : "final def"}, {"label" : "toByteArray", "tail" : "(): Array[Byte]", "member" : "scalapb.GeneratedMessage.toByteArray", "link" : "onnx\/onnx\/OperatorSetIdProto.html#toByteArray:Array[Byte]", "kind" : "final def"}, {"label" : "toPMessage", "tail" : "(): PMessage", "member" : "scalapb.GeneratedMessage.toPMessage", "link" : "onnx\/onnx\/OperatorSetIdProto.html#toPMessage:scalapb.descriptors.PMessage", "kind" : "final def"}, {"label" : "writeDelimitedTo", "tail" : "(output: OutputStream): Unit", "member" : "scalapb.GeneratedMessage.writeDelimitedTo", "link" : "onnx\/onnx\/OperatorSetIdProto.html#writeDelimitedTo(output:java.io.OutputStream):Unit", "kind" : "final def"}, {"label" : "writeTo", "tail" : "(output: OutputStream): Unit", "member" : "scalapb.GeneratedMessage.writeTo", "link" : "onnx\/onnx\/OperatorSetIdProto.html#writeTo(output:java.io.OutputStream):Unit", "kind" : "final def"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "onnx\/onnx\/OperatorSetIdProto.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "onnx\/onnx\/OperatorSetIdProto.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "onnx\/onnx\/OperatorSetIdProto.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "onnx\/onnx\/OperatorSetIdProto.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "onnx\/onnx\/OperatorSetIdProto.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "onnx\/onnx\/OperatorSetIdProto.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "onnx\/onnx\/OperatorSetIdProto.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "onnx\/onnx\/OperatorSetIdProto.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "onnx\/onnx\/OperatorSetIdProto.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "onnx\/onnx\/OperatorSetIdProto.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "onnx\/onnx\/OperatorSetIdProto.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "onnx\/onnx\/OperatorSetIdProto.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "onnx\/onnx\/OperatorSetIdProto.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "onnx\/onnx\/OperatorSetIdProto.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "onnx\/onnx\/OperatorSetIdProto.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "onnx\/onnx\/OperatorSetIdProto.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "onnx\/onnx\/OperatorSetIdProto.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "onnx\/onnx\/OperatorSetIdProto.html", "kind" : "case class"}, {"name" : "onnx.onnx.SparseTensorProto", "shortDescription" : "A serialized sparse-tensor value", "object" : "onnx\/onnx\/SparseTensorProto$.html", "members_object" : [{"label" : "of", "tail" : "(values: Option[TensorProto], indices: Option[TensorProto], dims: Seq[Long]): SparseTensorProto", "member" : "onnx.onnx.SparseTensorProto.of", "link" : "onnx\/onnx\/SparseTensorProto$.html#of(values:Option[onnx.onnx.TensorProto],indices:Option[onnx.onnx.TensorProto],dims:Seq[Long]):onnx.onnx.SparseTensorProto", "kind" : "def"}, {"label" : "DIMS_FIELD_NUMBER", "tail" : ": Int(3)", "member" : "onnx.onnx.SparseTensorProto.DIMS_FIELD_NUMBER", "link" : "onnx\/onnx\/SparseTensorProto$.html#DIMS_FIELD_NUMBER:Int(3)", "kind" : "final val"}, {"label" : "INDICES_FIELD_NUMBER", "tail" : ": Int(2)", "member" : "onnx.onnx.SparseTensorProto.INDICES_FIELD_NUMBER", "link" : "onnx\/onnx\/SparseTensorProto$.html#INDICES_FIELD_NUMBER:Int(2)", "kind" : "final val"}, {"label" : "VALUES_FIELD_NUMBER", "tail" : ": Int(1)", "member" : "onnx.onnx.SparseTensorProto.VALUES_FIELD_NUMBER", "link" : "onnx\/onnx\/SparseTensorProto$.html#VALUES_FIELD_NUMBER:Int(1)", "kind" : "final val"}, {"label" : "SparseTensorProtoLens", "tail" : "", "member" : "onnx.onnx.SparseTensorProto.SparseTensorProtoLens", "link" : "onnx\/onnx\/SparseTensorProto$.html#SparseTensorProtoLens[UpperPB]extendsObjectLens[UpperPB,onnx.onnx.SparseTensorProto]", "kind" : "implicit class"}, {"label" : "defaultInstance", "tail" : ": SparseTensorProto", "member" : "onnx.onnx.SparseTensorProto.defaultInstance", "link" : "onnx\/onnx\/SparseTensorProto$.html#defaultInstance:onnx.onnx.SparseTensorProto", "kind" : "lazy val"}, {"label" : "enumCompanionForFieldNumber", "tail" : "(__fieldNumber: Int): GeneratedEnumCompanion[_]", "member" : "onnx.onnx.SparseTensorProto.enumCompanionForFieldNumber", "link" : "onnx\/onnx\/SparseTensorProto$.html#enumCompanionForFieldNumber(__fieldNumber:Int):scalapb.GeneratedEnumCompanion[_]", "kind" : "def"}, {"label" : "nestedMessagesCompanions", "tail" : ": Seq[GeneratedMessageCompanion[_ <: GeneratedMessage]]", "member" : "onnx.onnx.SparseTensorProto.nestedMessagesCompanions", "link" : "onnx\/onnx\/SparseTensorProto$.html#nestedMessagesCompanions:Seq[scalapb.GeneratedMessageCompanion[_<:scalapb.GeneratedMessage]]", "kind" : "lazy val"}, {"label" : "messageCompanionForFieldNumber", "tail" : "(__number: Int): GeneratedMessageCompanion[_]", "member" : "onnx.onnx.SparseTensorProto.messageCompanionForFieldNumber", "link" : "onnx\/onnx\/SparseTensorProto$.html#messageCompanionForFieldNumber(__number:Int):scalapb.GeneratedMessageCompanion[_]", "kind" : "def"}, {"label" : "scalaDescriptor", "tail" : "(): Descriptor", "member" : "onnx.onnx.SparseTensorProto.scalaDescriptor", "link" : "onnx\/onnx\/SparseTensorProto$.html#scalaDescriptor:scalapb.descriptors.Descriptor", "kind" : "def"}, {"label" : "javaDescriptor", "tail" : "(): Descriptor", "member" : "onnx.onnx.SparseTensorProto.javaDescriptor", "link" : "onnx\/onnx\/SparseTensorProto$.html#javaDescriptor:com.google.protobuf.Descriptors.Descriptor", "kind" : "def"}, {"label" : "messageReads", "tail" : "(): Reads[SparseTensorProto]", "member" : "onnx.onnx.SparseTensorProto.messageReads", "link" : "onnx\/onnx\/SparseTensorProto$.html#messageReads:scalapb.descriptors.Reads[onnx.onnx.SparseTensorProto]", "kind" : "implicit def"}, {"label" : "parseFrom", "tail" : "(_input__: CodedInputStream): SparseTensorProto", "member" : "onnx.onnx.SparseTensorProto.parseFrom", "link" : "onnx\/onnx\/SparseTensorProto$.html#parseFrom(_input__:com.google.protobuf.CodedInputStream):onnx.onnx.SparseTensorProto", "kind" : "def"}, {"label" : "messageCompanion", "tail" : "(): GeneratedMessageCompanion[SparseTensorProto]", "member" : "onnx.onnx.SparseTensorProto.messageCompanion", "link" : "onnx\/onnx\/SparseTensorProto$.html#messageCompanion:scalapb.GeneratedMessageCompanion[onnx.onnx.SparseTensorProto]", "kind" : "implicit def"}, {"label" : "fromAscii", "tail" : "(s: String): SparseTensorProto", "member" : "scalapb.GeneratedMessageCompanion.fromAscii", "link" : "onnx\/onnx\/SparseTensorProto$.html#fromAscii(s:String):A", "kind" : "def"}, {"label" : "validateAscii", "tail" : "(s: String): Either[TextFormatError, SparseTensorProto]", "member" : "scalapb.GeneratedMessageCompanion.validateAscii", "link" : "onnx\/onnx\/SparseTensorProto$.html#validateAscii(s:String):Either[scalapb.TextFormatError,A]", "kind" : "def"}, {"label" : "enumCompanionForField", "tail" : "(field: FieldDescriptor): GeneratedEnumCompanion[_]", "member" : "scalapb.GeneratedMessageCompanion.enumCompanionForField", "link" : "onnx\/onnx\/SparseTensorProto$.html#enumCompanionForField(field:com.google.protobuf.Descriptors.FieldDescriptor):scalapb.GeneratedEnumCompanion[_]", "kind" : "def"}, {"label" : "messageCompanionForField", "tail" : "(field: FieldDescriptor): GeneratedMessageCompanion[_]", "member" : "scalapb.GeneratedMessageCompanion.messageCompanionForField", "link" : "onnx\/onnx\/SparseTensorProto$.html#messageCompanionForField(field:com.google.protobuf.Descriptors.FieldDescriptor):scalapb.GeneratedMessageCompanion[_]", "kind" : "def"}, {"label" : "toByteArray", "tail" : "(a: SparseTensorProto): Array[Byte]", "member" : "scalapb.GeneratedMessageCompanion.toByteArray", "link" : "onnx\/onnx\/SparseTensorProto$.html#toByteArray(a:A):Array[Byte]", "kind" : "def"}, {"label" : "validate", "tail" : "(s: Array[Byte]): Try[SparseTensorProto]", "member" : "scalapb.GeneratedMessageCompanion.validate", "link" : "onnx\/onnx\/SparseTensorProto$.html#validate(s:Array[Byte]):scala.util.Try[A]", "kind" : "def"}, {"label" : "merge", "tail" : "(a: SparseTensorProto, input: CodedInputStream): SparseTensorProto", "member" : "scalapb.GeneratedMessageCompanion.merge", "link" : "onnx\/onnx\/SparseTensorProto$.html#merge(a:A,input:com.google.protobuf.CodedInputStream):A", "kind" : "def"}, {"label" : "parseFrom", "tail" : "(s: Array[Byte]): SparseTensorProto", "member" : "scalapb.GeneratedMessageCompanion.parseFrom", "link" : "onnx\/onnx\/SparseTensorProto$.html#parseFrom(s:Array[Byte]):A", "kind" : "def"}, {"label" : "streamFromDelimitedInput", "tail" : "(input: InputStream): Stream[SparseTensorProto]", "member" : "scalapb.GeneratedMessageCompanion.streamFromDelimitedInput", "link" : "onnx\/onnx\/SparseTensorProto$.html#streamFromDelimitedInput(input:java.io.InputStream):Stream[A]", "kind" : "def"}, {"label" : "parseDelimitedFrom", "tail" : "(input: InputStream): Option[SparseTensorProto]", "member" : "scalapb.GeneratedMessageCompanion.parseDelimitedFrom", "link" : "onnx\/onnx\/SparseTensorProto$.html#parseDelimitedFrom(input:java.io.InputStream):Option[A]", "kind" : "def"}, {"label" : "parseDelimitedFrom", "tail" : "(input: CodedInputStream): Option[SparseTensorProto]", "member" : "scalapb.GeneratedMessageCompanion.parseDelimitedFrom", "link" : "onnx\/onnx\/SparseTensorProto$.html#parseDelimitedFrom(input:com.google.protobuf.CodedInputStream):Option[A]", "kind" : "def"}, {"label" : "parseFrom", "tail" : "(input: InputStream): SparseTensorProto", "member" : "scalapb.GeneratedMessageCompanion.parseFrom", "link" : "onnx\/onnx\/SparseTensorProto$.html#parseFrom(input:java.io.InputStream):A", "kind" : "def"}, {"label" : "ValueType", "tail" : "", "member" : "scalapb.GeneratedMessageCompanion.ValueType", "link" : "onnx\/onnx\/SparseTensorProto$.html#ValueType=A", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "onnx\/onnx\/SparseTensorProto$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "onnx\/onnx\/SparseTensorProto$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "onnx\/onnx\/SparseTensorProto$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "onnx\/onnx\/SparseTensorProto$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "onnx\/onnx\/SparseTensorProto$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "onnx\/onnx\/SparseTensorProto$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "onnx\/onnx\/SparseTensorProto$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "onnx\/onnx\/SparseTensorProto$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "onnx\/onnx\/SparseTensorProto$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "onnx\/onnx\/SparseTensorProto$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "onnx\/onnx\/SparseTensorProto$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "onnx\/onnx\/SparseTensorProto$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "onnx\/onnx\/SparseTensorProto$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "onnx\/onnx\/SparseTensorProto$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "onnx\/onnx\/SparseTensorProto$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "onnx\/onnx\/SparseTensorProto$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "onnx\/onnx\/SparseTensorProto$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "onnx\/onnx\/SparseTensorProto$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "onnx\/onnx\/SparseTensorProto$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "companion", "tail" : "(): SparseTensorProto.type", "member" : "onnx.onnx.SparseTensorProto.companion", "link" : "onnx\/onnx\/SparseTensorProto.html#companion:onnx.onnx.SparseTensorProto.type", "kind" : "def"}, {"label" : "toProtoString", "tail" : "(): String", "member" : "onnx.onnx.SparseTensorProto.toProtoString", "link" : "onnx\/onnx\/SparseTensorProto.html#toProtoString:String", "kind" : "def"}, {"label" : "getField", "tail" : "(__field: FieldDescriptor): PValue", "member" : "onnx.onnx.SparseTensorProto.getField", "link" : "onnx\/onnx\/SparseTensorProto.html#getField(__field:scalapb.descriptors.FieldDescriptor):scalapb.descriptors.PValue", "kind" : "def"}, {"label" : "getFieldByNumber", "tail" : "(__fieldNumber: Int): Any", "member" : "onnx.onnx.SparseTensorProto.getFieldByNumber", "link" : "onnx\/onnx\/SparseTensorProto.html#getFieldByNumber(__fieldNumber:Int):Any", "kind" : "def"}, {"label" : "discardUnknownFields", "tail" : "(): SparseTensorProto", "member" : "onnx.onnx.SparseTensorProto.discardUnknownFields", "link" : "onnx\/onnx\/SparseTensorProto.html#discardUnknownFields:onnx.onnx.SparseTensorProto", "kind" : "def"}, {"label" : "withUnknownFields", "tail" : "(__v: UnknownFieldSet): SparseTensorProto", "member" : "onnx.onnx.SparseTensorProto.withUnknownFields", "link" : "onnx\/onnx\/SparseTensorProto.html#withUnknownFields(__v:scalapb.UnknownFieldSet):onnx.onnx.SparseTensorProto", "kind" : "def"}, {"label" : "withDims", "tail" : "(__v: Seq[Long]): SparseTensorProto", "member" : "onnx.onnx.SparseTensorProto.withDims", "link" : "onnx\/onnx\/SparseTensorProto.html#withDims(__v:Seq[Long]):onnx.onnx.SparseTensorProto", "kind" : "def"}, {"label" : "addAllDims", "tail" : "(__vs: Iterable[Long]): SparseTensorProto", "member" : "onnx.onnx.SparseTensorProto.addAllDims", "link" : "onnx\/onnx\/SparseTensorProto.html#addAllDims(__vs:Iterable[Long]):onnx.onnx.SparseTensorProto", "kind" : "def"}, {"label" : "addDims", "tail" : "(__vs: Long*): SparseTensorProto", "member" : "onnx.onnx.SparseTensorProto.addDims", "link" : "onnx\/onnx\/SparseTensorProto.html#addDims(__vs:Long*):onnx.onnx.SparseTensorProto", "kind" : "def"}, {"label" : "clearDims", "tail" : "(): SparseTensorProto", "member" : "onnx.onnx.SparseTensorProto.clearDims", "link" : "onnx\/onnx\/SparseTensorProto.html#clearDims:onnx.onnx.SparseTensorProto", "kind" : "def"}, {"label" : "withIndices", "tail" : "(__v: TensorProto): SparseTensorProto", "member" : "onnx.onnx.SparseTensorProto.withIndices", "link" : "onnx\/onnx\/SparseTensorProto.html#withIndices(__v:onnx.onnx.TensorProto):onnx.onnx.SparseTensorProto", "kind" : "def"}, {"label" : "clearIndices", "tail" : "(): SparseTensorProto", "member" : "onnx.onnx.SparseTensorProto.clearIndices", "link" : "onnx\/onnx\/SparseTensorProto.html#clearIndices:onnx.onnx.SparseTensorProto", "kind" : "def"}, {"label" : "getIndices", "tail" : "(): TensorProto", "member" : "onnx.onnx.SparseTensorProto.getIndices", "link" : "onnx\/onnx\/SparseTensorProto.html#getIndices:onnx.onnx.TensorProto", "kind" : "def"}, {"label" : "withValues", "tail" : "(__v: TensorProto): SparseTensorProto", "member" : "onnx.onnx.SparseTensorProto.withValues", "link" : "onnx\/onnx\/SparseTensorProto.html#withValues(__v:onnx.onnx.TensorProto):onnx.onnx.SparseTensorProto", "kind" : "def"}, {"label" : "clearValues", "tail" : "(): SparseTensorProto", "member" : "onnx.onnx.SparseTensorProto.clearValues", "link" : "onnx\/onnx\/SparseTensorProto.html#clearValues:onnx.onnx.SparseTensorProto", "kind" : "def"}, {"label" : "getValues", "tail" : "(): TensorProto", "member" : "onnx.onnx.SparseTensorProto.getValues", "link" : "onnx\/onnx\/SparseTensorProto.html#getValues:onnx.onnx.TensorProto", "kind" : "def"}, {"label" : "writeTo", "tail" : "(_output__: CodedOutputStream): Unit", "member" : "onnx.onnx.SparseTensorProto.writeTo", "link" : "onnx\/onnx\/SparseTensorProto.html#writeTo(_output__:com.google.protobuf.CodedOutputStream):Unit", "kind" : "def"}, {"label" : "serializedSize", "tail" : "(): Int", "member" : "onnx.onnx.SparseTensorProto.serializedSize", "link" : "onnx\/onnx\/SparseTensorProto.html#serializedSize:Int", "kind" : "def"}, {"member" : "onnx.onnx.SparseTensorProto#<init>", "error" : "unsupported entity"}, {"label" : "unknownFields", "tail" : ": UnknownFieldSet", "member" : "onnx.onnx.SparseTensorProto.unknownFields", "link" : "onnx\/onnx\/SparseTensorProto.html#unknownFields:scalapb.UnknownFieldSet", "kind" : "val"}, {"label" : "dims", "tail" : ": Seq[Long]", "member" : "onnx.onnx.SparseTensorProto.dims", "link" : "onnx\/onnx\/SparseTensorProto.html#dims:Seq[Long]", "kind" : "val"}, {"label" : "indices", "tail" : ": Option[TensorProto]", "member" : "onnx.onnx.SparseTensorProto.indices", "link" : "onnx\/onnx\/SparseTensorProto.html#indices:Option[onnx.onnx.TensorProto]", "kind" : "val"}, {"label" : "values", "tail" : ": Option[TensorProto]", "member" : "onnx.onnx.SparseTensorProto.values", "link" : "onnx\/onnx\/SparseTensorProto.html#values:Option[onnx.onnx.TensorProto]", "kind" : "val"}, {"label" : "update", "tail" : "(ms: (Lens[SparseTensorProto, SparseTensorProto]) => Mutation[SparseTensorProto]*): SparseTensorProto", "member" : "scalapb.lenses.Updatable.update", "link" : "onnx\/onnx\/SparseTensorProto.html#update(ms:scalapb.lenses.Lens[A,A]=>scalapb.lenses.Mutation[A]*):A", "kind" : "def"}, {"label" : "toByteString", "tail" : "(): ByteString", "member" : "scalapb.GeneratedMessage.toByteString", "link" : "onnx\/onnx\/SparseTensorProto.html#toByteString:com.google.protobuf.ByteString", "kind" : "final def"}, {"label" : "toByteArray", "tail" : "(): Array[Byte]", "member" : "scalapb.GeneratedMessage.toByteArray", "link" : "onnx\/onnx\/SparseTensorProto.html#toByteArray:Array[Byte]", "kind" : "final def"}, {"label" : "toPMessage", "tail" : "(): PMessage", "member" : "scalapb.GeneratedMessage.toPMessage", "link" : "onnx\/onnx\/SparseTensorProto.html#toPMessage:scalapb.descriptors.PMessage", "kind" : "final def"}, {"label" : "writeDelimitedTo", "tail" : "(output: OutputStream): Unit", "member" : "scalapb.GeneratedMessage.writeDelimitedTo", "link" : "onnx\/onnx\/SparseTensorProto.html#writeDelimitedTo(output:java.io.OutputStream):Unit", "kind" : "final def"}, {"label" : "writeTo", "tail" : "(output: OutputStream): Unit", "member" : "scalapb.GeneratedMessage.writeTo", "link" : "onnx\/onnx\/SparseTensorProto.html#writeTo(output:java.io.OutputStream):Unit", "kind" : "final def"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "onnx\/onnx\/SparseTensorProto.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "onnx\/onnx\/SparseTensorProto.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "onnx\/onnx\/SparseTensorProto.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "onnx\/onnx\/SparseTensorProto.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "onnx\/onnx\/SparseTensorProto.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "onnx\/onnx\/SparseTensorProto.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "onnx\/onnx\/SparseTensorProto.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "onnx\/onnx\/SparseTensorProto.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "onnx\/onnx\/SparseTensorProto.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "onnx\/onnx\/SparseTensorProto.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "onnx\/onnx\/SparseTensorProto.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "onnx\/onnx\/SparseTensorProto.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "onnx\/onnx\/SparseTensorProto.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "onnx\/onnx\/SparseTensorProto.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "onnx\/onnx\/SparseTensorProto.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "onnx\/onnx\/SparseTensorProto.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "onnx\/onnx\/SparseTensorProto.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "onnx\/onnx\/SparseTensorProto.html", "kind" : "case class"}, {"name" : "onnx.onnx.StringStringEntryProto", "shortDescription" : "StringStringEntryProto follows the pattern for cross-proto-version maps.", "object" : "onnx\/onnx\/StringStringEntryProto$.html", "members_object" : [{"label" : "of", "tail" : "(key: Option[String], value: Option[String]): StringStringEntryProto", "member" : "onnx.onnx.StringStringEntryProto.of", "link" : "onnx\/onnx\/StringStringEntryProto$.html#of(key:Option[String],value:Option[String]):onnx.onnx.StringStringEntryProto", "kind" : "def"}, {"label" : "VALUE_FIELD_NUMBER", "tail" : ": Int(2)", "member" : "onnx.onnx.StringStringEntryProto.VALUE_FIELD_NUMBER", "link" : "onnx\/onnx\/StringStringEntryProto$.html#VALUE_FIELD_NUMBER:Int(2)", "kind" : "final val"}, {"label" : "KEY_FIELD_NUMBER", "tail" : ": Int(1)", "member" : "onnx.onnx.StringStringEntryProto.KEY_FIELD_NUMBER", "link" : "onnx\/onnx\/StringStringEntryProto$.html#KEY_FIELD_NUMBER:Int(1)", "kind" : "final val"}, {"label" : "StringStringEntryProtoLens", "tail" : "", "member" : "onnx.onnx.StringStringEntryProto.StringStringEntryProtoLens", "link" : "onnx\/onnx\/StringStringEntryProto$.html#StringStringEntryProtoLens[UpperPB]extendsObjectLens[UpperPB,onnx.onnx.StringStringEntryProto]", "kind" : "implicit class"}, {"label" : "defaultInstance", "tail" : ": StringStringEntryProto", "member" : "onnx.onnx.StringStringEntryProto.defaultInstance", "link" : "onnx\/onnx\/StringStringEntryProto$.html#defaultInstance:onnx.onnx.StringStringEntryProto", "kind" : "lazy val"}, {"label" : "enumCompanionForFieldNumber", "tail" : "(__fieldNumber: Int): GeneratedEnumCompanion[_]", "member" : "onnx.onnx.StringStringEntryProto.enumCompanionForFieldNumber", "link" : "onnx\/onnx\/StringStringEntryProto$.html#enumCompanionForFieldNumber(__fieldNumber:Int):scalapb.GeneratedEnumCompanion[_]", "kind" : "def"}, {"label" : "nestedMessagesCompanions", "tail" : ": Seq[GeneratedMessageCompanion[_ <: GeneratedMessage]]", "member" : "onnx.onnx.StringStringEntryProto.nestedMessagesCompanions", "link" : "onnx\/onnx\/StringStringEntryProto$.html#nestedMessagesCompanions:Seq[scalapb.GeneratedMessageCompanion[_<:scalapb.GeneratedMessage]]", "kind" : "lazy val"}, {"label" : "messageCompanionForFieldNumber", "tail" : "(__number: Int): GeneratedMessageCompanion[_]", "member" : "onnx.onnx.StringStringEntryProto.messageCompanionForFieldNumber", "link" : "onnx\/onnx\/StringStringEntryProto$.html#messageCompanionForFieldNumber(__number:Int):scalapb.GeneratedMessageCompanion[_]", "kind" : "def"}, {"label" : "scalaDescriptor", "tail" : "(): Descriptor", "member" : "onnx.onnx.StringStringEntryProto.scalaDescriptor", "link" : "onnx\/onnx\/StringStringEntryProto$.html#scalaDescriptor:scalapb.descriptors.Descriptor", "kind" : "def"}, {"label" : "javaDescriptor", "tail" : "(): Descriptor", "member" : "onnx.onnx.StringStringEntryProto.javaDescriptor", "link" : "onnx\/onnx\/StringStringEntryProto$.html#javaDescriptor:com.google.protobuf.Descriptors.Descriptor", "kind" : "def"}, {"label" : "messageReads", "tail" : "(): Reads[StringStringEntryProto]", "member" : "onnx.onnx.StringStringEntryProto.messageReads", "link" : "onnx\/onnx\/StringStringEntryProto$.html#messageReads:scalapb.descriptors.Reads[onnx.onnx.StringStringEntryProto]", "kind" : "implicit def"}, {"label" : "parseFrom", "tail" : "(_input__: CodedInputStream): StringStringEntryProto", "member" : "onnx.onnx.StringStringEntryProto.parseFrom", "link" : "onnx\/onnx\/StringStringEntryProto$.html#parseFrom(_input__:com.google.protobuf.CodedInputStream):onnx.onnx.StringStringEntryProto", "kind" : "def"}, {"label" : "messageCompanion", "tail" : "(): GeneratedMessageCompanion[StringStringEntryProto]", "member" : "onnx.onnx.StringStringEntryProto.messageCompanion", "link" : "onnx\/onnx\/StringStringEntryProto$.html#messageCompanion:scalapb.GeneratedMessageCompanion[onnx.onnx.StringStringEntryProto]", "kind" : "implicit def"}, {"label" : "fromAscii", "tail" : "(s: String): StringStringEntryProto", "member" : "scalapb.GeneratedMessageCompanion.fromAscii", "link" : "onnx\/onnx\/StringStringEntryProto$.html#fromAscii(s:String):A", "kind" : "def"}, {"label" : "validateAscii", "tail" : "(s: String): Either[TextFormatError, StringStringEntryProto]", "member" : "scalapb.GeneratedMessageCompanion.validateAscii", "link" : "onnx\/onnx\/StringStringEntryProto$.html#validateAscii(s:String):Either[scalapb.TextFormatError,A]", "kind" : "def"}, {"label" : "enumCompanionForField", "tail" : "(field: FieldDescriptor): GeneratedEnumCompanion[_]", "member" : "scalapb.GeneratedMessageCompanion.enumCompanionForField", "link" : "onnx\/onnx\/StringStringEntryProto$.html#enumCompanionForField(field:com.google.protobuf.Descriptors.FieldDescriptor):scalapb.GeneratedEnumCompanion[_]", "kind" : "def"}, {"label" : "messageCompanionForField", "tail" : "(field: FieldDescriptor): GeneratedMessageCompanion[_]", "member" : "scalapb.GeneratedMessageCompanion.messageCompanionForField", "link" : "onnx\/onnx\/StringStringEntryProto$.html#messageCompanionForField(field:com.google.protobuf.Descriptors.FieldDescriptor):scalapb.GeneratedMessageCompanion[_]", "kind" : "def"}, {"label" : "toByteArray", "tail" : "(a: StringStringEntryProto): Array[Byte]", "member" : "scalapb.GeneratedMessageCompanion.toByteArray", "link" : "onnx\/onnx\/StringStringEntryProto$.html#toByteArray(a:A):Array[Byte]", "kind" : "def"}, {"label" : "validate", "tail" : "(s: Array[Byte]): Try[StringStringEntryProto]", "member" : "scalapb.GeneratedMessageCompanion.validate", "link" : "onnx\/onnx\/StringStringEntryProto$.html#validate(s:Array[Byte]):scala.util.Try[A]", "kind" : "def"}, {"label" : "merge", "tail" : "(a: StringStringEntryProto, input: CodedInputStream): StringStringEntryProto", "member" : "scalapb.GeneratedMessageCompanion.merge", "link" : "onnx\/onnx\/StringStringEntryProto$.html#merge(a:A,input:com.google.protobuf.CodedInputStream):A", "kind" : "def"}, {"label" : "parseFrom", "tail" : "(s: Array[Byte]): StringStringEntryProto", "member" : "scalapb.GeneratedMessageCompanion.parseFrom", "link" : "onnx\/onnx\/StringStringEntryProto$.html#parseFrom(s:Array[Byte]):A", "kind" : "def"}, {"label" : "streamFromDelimitedInput", "tail" : "(input: InputStream): Stream[StringStringEntryProto]", "member" : "scalapb.GeneratedMessageCompanion.streamFromDelimitedInput", "link" : "onnx\/onnx\/StringStringEntryProto$.html#streamFromDelimitedInput(input:java.io.InputStream):Stream[A]", "kind" : "def"}, {"label" : "parseDelimitedFrom", "tail" : "(input: InputStream): Option[StringStringEntryProto]", "member" : "scalapb.GeneratedMessageCompanion.parseDelimitedFrom", "link" : "onnx\/onnx\/StringStringEntryProto$.html#parseDelimitedFrom(input:java.io.InputStream):Option[A]", "kind" : "def"}, {"label" : "parseDelimitedFrom", "tail" : "(input: CodedInputStream): Option[StringStringEntryProto]", "member" : "scalapb.GeneratedMessageCompanion.parseDelimitedFrom", "link" : "onnx\/onnx\/StringStringEntryProto$.html#parseDelimitedFrom(input:com.google.protobuf.CodedInputStream):Option[A]", "kind" : "def"}, {"label" : "parseFrom", "tail" : "(input: InputStream): StringStringEntryProto", "member" : "scalapb.GeneratedMessageCompanion.parseFrom", "link" : "onnx\/onnx\/StringStringEntryProto$.html#parseFrom(input:java.io.InputStream):A", "kind" : "def"}, {"label" : "ValueType", "tail" : "", "member" : "scalapb.GeneratedMessageCompanion.ValueType", "link" : "onnx\/onnx\/StringStringEntryProto$.html#ValueType=A", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "onnx\/onnx\/StringStringEntryProto$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "onnx\/onnx\/StringStringEntryProto$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "onnx\/onnx\/StringStringEntryProto$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "onnx\/onnx\/StringStringEntryProto$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "onnx\/onnx\/StringStringEntryProto$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "onnx\/onnx\/StringStringEntryProto$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "onnx\/onnx\/StringStringEntryProto$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "onnx\/onnx\/StringStringEntryProto$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "onnx\/onnx\/StringStringEntryProto$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "onnx\/onnx\/StringStringEntryProto$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "onnx\/onnx\/StringStringEntryProto$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "onnx\/onnx\/StringStringEntryProto$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "onnx\/onnx\/StringStringEntryProto$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "onnx\/onnx\/StringStringEntryProto$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "onnx\/onnx\/StringStringEntryProto$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "onnx\/onnx\/StringStringEntryProto$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "onnx\/onnx\/StringStringEntryProto$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "onnx\/onnx\/StringStringEntryProto$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "onnx\/onnx\/StringStringEntryProto$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "companion", "tail" : "(): StringStringEntryProto.type", "member" : "onnx.onnx.StringStringEntryProto.companion", "link" : "onnx\/onnx\/StringStringEntryProto.html#companion:onnx.onnx.StringStringEntryProto.type", "kind" : "def"}, {"label" : "toProtoString", "tail" : "(): String", "member" : "onnx.onnx.StringStringEntryProto.toProtoString", "link" : "onnx\/onnx\/StringStringEntryProto.html#toProtoString:String", "kind" : "def"}, {"label" : "getField", "tail" : "(__field: FieldDescriptor): PValue", "member" : "onnx.onnx.StringStringEntryProto.getField", "link" : "onnx\/onnx\/StringStringEntryProto.html#getField(__field:scalapb.descriptors.FieldDescriptor):scalapb.descriptors.PValue", "kind" : "def"}, {"label" : "getFieldByNumber", "tail" : "(__fieldNumber: Int): Any", "member" : "onnx.onnx.StringStringEntryProto.getFieldByNumber", "link" : "onnx\/onnx\/StringStringEntryProto.html#getFieldByNumber(__fieldNumber:Int):Any", "kind" : "def"}, {"label" : "discardUnknownFields", "tail" : "(): StringStringEntryProto", "member" : "onnx.onnx.StringStringEntryProto.discardUnknownFields", "link" : "onnx\/onnx\/StringStringEntryProto.html#discardUnknownFields:onnx.onnx.StringStringEntryProto", "kind" : "def"}, {"label" : "withUnknownFields", "tail" : "(__v: UnknownFieldSet): StringStringEntryProto", "member" : "onnx.onnx.StringStringEntryProto.withUnknownFields", "link" : "onnx\/onnx\/StringStringEntryProto.html#withUnknownFields(__v:scalapb.UnknownFieldSet):onnx.onnx.StringStringEntryProto", "kind" : "def"}, {"label" : "withValue", "tail" : "(__v: String): StringStringEntryProto", "member" : "onnx.onnx.StringStringEntryProto.withValue", "link" : "onnx\/onnx\/StringStringEntryProto.html#withValue(__v:String):onnx.onnx.StringStringEntryProto", "kind" : "def"}, {"label" : "clearValue", "tail" : "(): StringStringEntryProto", "member" : "onnx.onnx.StringStringEntryProto.clearValue", "link" : "onnx\/onnx\/StringStringEntryProto.html#clearValue:onnx.onnx.StringStringEntryProto", "kind" : "def"}, {"label" : "getValue", "tail" : "(): String", "member" : "onnx.onnx.StringStringEntryProto.getValue", "link" : "onnx\/onnx\/StringStringEntryProto.html#getValue:String", "kind" : "def"}, {"label" : "withKey", "tail" : "(__v: String): StringStringEntryProto", "member" : "onnx.onnx.StringStringEntryProto.withKey", "link" : "onnx\/onnx\/StringStringEntryProto.html#withKey(__v:String):onnx.onnx.StringStringEntryProto", "kind" : "def"}, {"label" : "clearKey", "tail" : "(): StringStringEntryProto", "member" : "onnx.onnx.StringStringEntryProto.clearKey", "link" : "onnx\/onnx\/StringStringEntryProto.html#clearKey:onnx.onnx.StringStringEntryProto", "kind" : "def"}, {"label" : "getKey", "tail" : "(): String", "member" : "onnx.onnx.StringStringEntryProto.getKey", "link" : "onnx\/onnx\/StringStringEntryProto.html#getKey:String", "kind" : "def"}, {"label" : "writeTo", "tail" : "(_output__: CodedOutputStream): Unit", "member" : "onnx.onnx.StringStringEntryProto.writeTo", "link" : "onnx\/onnx\/StringStringEntryProto.html#writeTo(_output__:com.google.protobuf.CodedOutputStream):Unit", "kind" : "def"}, {"label" : "serializedSize", "tail" : "(): Int", "member" : "onnx.onnx.StringStringEntryProto.serializedSize", "link" : "onnx\/onnx\/StringStringEntryProto.html#serializedSize:Int", "kind" : "def"}, {"member" : "onnx.onnx.StringStringEntryProto#<init>", "error" : "unsupported entity"}, {"label" : "unknownFields", "tail" : ": UnknownFieldSet", "member" : "onnx.onnx.StringStringEntryProto.unknownFields", "link" : "onnx\/onnx\/StringStringEntryProto.html#unknownFields:scalapb.UnknownFieldSet", "kind" : "val"}, {"label" : "value", "tail" : ": Option[String]", "member" : "onnx.onnx.StringStringEntryProto.value", "link" : "onnx\/onnx\/StringStringEntryProto.html#value:Option[String]", "kind" : "val"}, {"label" : "key", "tail" : ": Option[String]", "member" : "onnx.onnx.StringStringEntryProto.key", "link" : "onnx\/onnx\/StringStringEntryProto.html#key:Option[String]", "kind" : "val"}, {"label" : "update", "tail" : "(ms: (Lens[StringStringEntryProto, StringStringEntryProto]) => Mutation[StringStringEntryProto]*): StringStringEntryProto", "member" : "scalapb.lenses.Updatable.update", "link" : "onnx\/onnx\/StringStringEntryProto.html#update(ms:scalapb.lenses.Lens[A,A]=>scalapb.lenses.Mutation[A]*):A", "kind" : "def"}, {"label" : "toByteString", "tail" : "(): ByteString", "member" : "scalapb.GeneratedMessage.toByteString", "link" : "onnx\/onnx\/StringStringEntryProto.html#toByteString:com.google.protobuf.ByteString", "kind" : "final def"}, {"label" : "toByteArray", "tail" : "(): Array[Byte]", "member" : "scalapb.GeneratedMessage.toByteArray", "link" : "onnx\/onnx\/StringStringEntryProto.html#toByteArray:Array[Byte]", "kind" : "final def"}, {"label" : "toPMessage", "tail" : "(): PMessage", "member" : "scalapb.GeneratedMessage.toPMessage", "link" : "onnx\/onnx\/StringStringEntryProto.html#toPMessage:scalapb.descriptors.PMessage", "kind" : "final def"}, {"label" : "writeDelimitedTo", "tail" : "(output: OutputStream): Unit", "member" : "scalapb.GeneratedMessage.writeDelimitedTo", "link" : "onnx\/onnx\/StringStringEntryProto.html#writeDelimitedTo(output:java.io.OutputStream):Unit", "kind" : "final def"}, {"label" : "writeTo", "tail" : "(output: OutputStream): Unit", "member" : "scalapb.GeneratedMessage.writeTo", "link" : "onnx\/onnx\/StringStringEntryProto.html#writeTo(output:java.io.OutputStream):Unit", "kind" : "final def"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "onnx\/onnx\/StringStringEntryProto.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "onnx\/onnx\/StringStringEntryProto.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "onnx\/onnx\/StringStringEntryProto.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "onnx\/onnx\/StringStringEntryProto.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "onnx\/onnx\/StringStringEntryProto.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "onnx\/onnx\/StringStringEntryProto.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "onnx\/onnx\/StringStringEntryProto.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "onnx\/onnx\/StringStringEntryProto.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "onnx\/onnx\/StringStringEntryProto.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "onnx\/onnx\/StringStringEntryProto.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "onnx\/onnx\/StringStringEntryProto.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "onnx\/onnx\/StringStringEntryProto.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "onnx\/onnx\/StringStringEntryProto.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "onnx\/onnx\/StringStringEntryProto.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "onnx\/onnx\/StringStringEntryProto.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "onnx\/onnx\/StringStringEntryProto.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "onnx\/onnx\/StringStringEntryProto.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "onnx\/onnx\/StringStringEntryProto.html", "kind" : "case class"}, {"name" : "onnx.onnx.TensorAnnotation", "shortDescription" : "", "object" : "onnx\/onnx\/TensorAnnotation$.html", "members_object" : [{"label" : "of", "tail" : "(tensorName: Option[String], quantParameterTensorNames: Seq[StringStringEntryProto]): TensorAnnotation", "member" : "onnx.onnx.TensorAnnotation.of", "link" : "onnx\/onnx\/TensorAnnotation$.html#of(tensorName:Option[String],quantParameterTensorNames:Seq[onnx.onnx.StringStringEntryProto]):onnx.onnx.TensorAnnotation", "kind" : "def"}, {"label" : "QUANT_PARAMETER_TENSOR_NAMES_FIELD_NUMBER", "tail" : ": Int(2)", "member" : "onnx.onnx.TensorAnnotation.QUANT_PARAMETER_TENSOR_NAMES_FIELD_NUMBER", "link" : "onnx\/onnx\/TensorAnnotation$.html#QUANT_PARAMETER_TENSOR_NAMES_FIELD_NUMBER:Int(2)", "kind" : "final val"}, {"label" : "TENSOR_NAME_FIELD_NUMBER", "tail" : ": Int(1)", "member" : "onnx.onnx.TensorAnnotation.TENSOR_NAME_FIELD_NUMBER", "link" : "onnx\/onnx\/TensorAnnotation$.html#TENSOR_NAME_FIELD_NUMBER:Int(1)", "kind" : "final val"}, {"label" : "TensorAnnotationLens", "tail" : "", "member" : "onnx.onnx.TensorAnnotation.TensorAnnotationLens", "link" : "onnx\/onnx\/TensorAnnotation$.html#TensorAnnotationLens[UpperPB]extendsObjectLens[UpperPB,onnx.onnx.TensorAnnotation]", "kind" : "implicit class"}, {"label" : "defaultInstance", "tail" : ": TensorAnnotation", "member" : "onnx.onnx.TensorAnnotation.defaultInstance", "link" : "onnx\/onnx\/TensorAnnotation$.html#defaultInstance:onnx.onnx.TensorAnnotation", "kind" : "lazy val"}, {"label" : "enumCompanionForFieldNumber", "tail" : "(__fieldNumber: Int): GeneratedEnumCompanion[_]", "member" : "onnx.onnx.TensorAnnotation.enumCompanionForFieldNumber", "link" : "onnx\/onnx\/TensorAnnotation$.html#enumCompanionForFieldNumber(__fieldNumber:Int):scalapb.GeneratedEnumCompanion[_]", "kind" : "def"}, {"label" : "nestedMessagesCompanions", "tail" : ": Seq[GeneratedMessageCompanion[_ <: GeneratedMessage]]", "member" : "onnx.onnx.TensorAnnotation.nestedMessagesCompanions", "link" : "onnx\/onnx\/TensorAnnotation$.html#nestedMessagesCompanions:Seq[scalapb.GeneratedMessageCompanion[_<:scalapb.GeneratedMessage]]", "kind" : "lazy val"}, {"label" : "messageCompanionForFieldNumber", "tail" : "(__number: Int): GeneratedMessageCompanion[_]", "member" : "onnx.onnx.TensorAnnotation.messageCompanionForFieldNumber", "link" : "onnx\/onnx\/TensorAnnotation$.html#messageCompanionForFieldNumber(__number:Int):scalapb.GeneratedMessageCompanion[_]", "kind" : "def"}, {"label" : "scalaDescriptor", "tail" : "(): Descriptor", "member" : "onnx.onnx.TensorAnnotation.scalaDescriptor", "link" : "onnx\/onnx\/TensorAnnotation$.html#scalaDescriptor:scalapb.descriptors.Descriptor", "kind" : "def"}, {"label" : "javaDescriptor", "tail" : "(): Descriptor", "member" : "onnx.onnx.TensorAnnotation.javaDescriptor", "link" : "onnx\/onnx\/TensorAnnotation$.html#javaDescriptor:com.google.protobuf.Descriptors.Descriptor", "kind" : "def"}, {"label" : "messageReads", "tail" : "(): Reads[TensorAnnotation]", "member" : "onnx.onnx.TensorAnnotation.messageReads", "link" : "onnx\/onnx\/TensorAnnotation$.html#messageReads:scalapb.descriptors.Reads[onnx.onnx.TensorAnnotation]", "kind" : "implicit def"}, {"label" : "parseFrom", "tail" : "(_input__: CodedInputStream): TensorAnnotation", "member" : "onnx.onnx.TensorAnnotation.parseFrom", "link" : "onnx\/onnx\/TensorAnnotation$.html#parseFrom(_input__:com.google.protobuf.CodedInputStream):onnx.onnx.TensorAnnotation", "kind" : "def"}, {"label" : "messageCompanion", "tail" : "(): GeneratedMessageCompanion[TensorAnnotation]", "member" : "onnx.onnx.TensorAnnotation.messageCompanion", "link" : "onnx\/onnx\/TensorAnnotation$.html#messageCompanion:scalapb.GeneratedMessageCompanion[onnx.onnx.TensorAnnotation]", "kind" : "implicit def"}, {"label" : "fromAscii", "tail" : "(s: String): TensorAnnotation", "member" : "scalapb.GeneratedMessageCompanion.fromAscii", "link" : "onnx\/onnx\/TensorAnnotation$.html#fromAscii(s:String):A", "kind" : "def"}, {"label" : "validateAscii", "tail" : "(s: String): Either[TextFormatError, TensorAnnotation]", "member" : "scalapb.GeneratedMessageCompanion.validateAscii", "link" : "onnx\/onnx\/TensorAnnotation$.html#validateAscii(s:String):Either[scalapb.TextFormatError,A]", "kind" : "def"}, {"label" : "enumCompanionForField", "tail" : "(field: FieldDescriptor): GeneratedEnumCompanion[_]", "member" : "scalapb.GeneratedMessageCompanion.enumCompanionForField", "link" : "onnx\/onnx\/TensorAnnotation$.html#enumCompanionForField(field:com.google.protobuf.Descriptors.FieldDescriptor):scalapb.GeneratedEnumCompanion[_]", "kind" : "def"}, {"label" : "messageCompanionForField", "tail" : "(field: FieldDescriptor): GeneratedMessageCompanion[_]", "member" : "scalapb.GeneratedMessageCompanion.messageCompanionForField", "link" : "onnx\/onnx\/TensorAnnotation$.html#messageCompanionForField(field:com.google.protobuf.Descriptors.FieldDescriptor):scalapb.GeneratedMessageCompanion[_]", "kind" : "def"}, {"label" : "toByteArray", "tail" : "(a: TensorAnnotation): Array[Byte]", "member" : "scalapb.GeneratedMessageCompanion.toByteArray", "link" : "onnx\/onnx\/TensorAnnotation$.html#toByteArray(a:A):Array[Byte]", "kind" : "def"}, {"label" : "validate", "tail" : "(s: Array[Byte]): Try[TensorAnnotation]", "member" : "scalapb.GeneratedMessageCompanion.validate", "link" : "onnx\/onnx\/TensorAnnotation$.html#validate(s:Array[Byte]):scala.util.Try[A]", "kind" : "def"}, {"label" : "merge", "tail" : "(a: TensorAnnotation, input: CodedInputStream): TensorAnnotation", "member" : "scalapb.GeneratedMessageCompanion.merge", "link" : "onnx\/onnx\/TensorAnnotation$.html#merge(a:A,input:com.google.protobuf.CodedInputStream):A", "kind" : "def"}, {"label" : "parseFrom", "tail" : "(s: Array[Byte]): TensorAnnotation", "member" : "scalapb.GeneratedMessageCompanion.parseFrom", "link" : "onnx\/onnx\/TensorAnnotation$.html#parseFrom(s:Array[Byte]):A", "kind" : "def"}, {"label" : "streamFromDelimitedInput", "tail" : "(input: InputStream): Stream[TensorAnnotation]", "member" : "scalapb.GeneratedMessageCompanion.streamFromDelimitedInput", "link" : "onnx\/onnx\/TensorAnnotation$.html#streamFromDelimitedInput(input:java.io.InputStream):Stream[A]", "kind" : "def"}, {"label" : "parseDelimitedFrom", "tail" : "(input: InputStream): Option[TensorAnnotation]", "member" : "scalapb.GeneratedMessageCompanion.parseDelimitedFrom", "link" : "onnx\/onnx\/TensorAnnotation$.html#parseDelimitedFrom(input:java.io.InputStream):Option[A]", "kind" : "def"}, {"label" : "parseDelimitedFrom", "tail" : "(input: CodedInputStream): Option[TensorAnnotation]", "member" : "scalapb.GeneratedMessageCompanion.parseDelimitedFrom", "link" : "onnx\/onnx\/TensorAnnotation$.html#parseDelimitedFrom(input:com.google.protobuf.CodedInputStream):Option[A]", "kind" : "def"}, {"label" : "parseFrom", "tail" : "(input: InputStream): TensorAnnotation", "member" : "scalapb.GeneratedMessageCompanion.parseFrom", "link" : "onnx\/onnx\/TensorAnnotation$.html#parseFrom(input:java.io.InputStream):A", "kind" : "def"}, {"label" : "ValueType", "tail" : "", "member" : "scalapb.GeneratedMessageCompanion.ValueType", "link" : "onnx\/onnx\/TensorAnnotation$.html#ValueType=A", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "onnx\/onnx\/TensorAnnotation$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "onnx\/onnx\/TensorAnnotation$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "onnx\/onnx\/TensorAnnotation$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "onnx\/onnx\/TensorAnnotation$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "onnx\/onnx\/TensorAnnotation$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "onnx\/onnx\/TensorAnnotation$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "onnx\/onnx\/TensorAnnotation$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "onnx\/onnx\/TensorAnnotation$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "onnx\/onnx\/TensorAnnotation$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "onnx\/onnx\/TensorAnnotation$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "onnx\/onnx\/TensorAnnotation$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "onnx\/onnx\/TensorAnnotation$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "onnx\/onnx\/TensorAnnotation$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "onnx\/onnx\/TensorAnnotation$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "onnx\/onnx\/TensorAnnotation$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "onnx\/onnx\/TensorAnnotation$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "onnx\/onnx\/TensorAnnotation$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "onnx\/onnx\/TensorAnnotation$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "onnx\/onnx\/TensorAnnotation$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "companion", "tail" : "(): TensorAnnotation.type", "member" : "onnx.onnx.TensorAnnotation.companion", "link" : "onnx\/onnx\/TensorAnnotation.html#companion:onnx.onnx.TensorAnnotation.type", "kind" : "def"}, {"label" : "toProtoString", "tail" : "(): String", "member" : "onnx.onnx.TensorAnnotation.toProtoString", "link" : "onnx\/onnx\/TensorAnnotation.html#toProtoString:String", "kind" : "def"}, {"label" : "getField", "tail" : "(__field: FieldDescriptor): PValue", "member" : "onnx.onnx.TensorAnnotation.getField", "link" : "onnx\/onnx\/TensorAnnotation.html#getField(__field:scalapb.descriptors.FieldDescriptor):scalapb.descriptors.PValue", "kind" : "def"}, {"label" : "getFieldByNumber", "tail" : "(__fieldNumber: Int): Any", "member" : "onnx.onnx.TensorAnnotation.getFieldByNumber", "link" : "onnx\/onnx\/TensorAnnotation.html#getFieldByNumber(__fieldNumber:Int):Any", "kind" : "def"}, {"label" : "discardUnknownFields", "tail" : "(): TensorAnnotation", "member" : "onnx.onnx.TensorAnnotation.discardUnknownFields", "link" : "onnx\/onnx\/TensorAnnotation.html#discardUnknownFields:onnx.onnx.TensorAnnotation", "kind" : "def"}, {"label" : "withUnknownFields", "tail" : "(__v: UnknownFieldSet): TensorAnnotation", "member" : "onnx.onnx.TensorAnnotation.withUnknownFields", "link" : "onnx\/onnx\/TensorAnnotation.html#withUnknownFields(__v:scalapb.UnknownFieldSet):onnx.onnx.TensorAnnotation", "kind" : "def"}, {"label" : "withQuantParameterTensorNames", "tail" : "(__v: Seq[StringStringEntryProto]): TensorAnnotation", "member" : "onnx.onnx.TensorAnnotation.withQuantParameterTensorNames", "link" : "onnx\/onnx\/TensorAnnotation.html#withQuantParameterTensorNames(__v:Seq[onnx.onnx.StringStringEntryProto]):onnx.onnx.TensorAnnotation", "kind" : "def"}, {"label" : "addAllQuantParameterTensorNames", "tail" : "(__vs: Iterable[StringStringEntryProto]): TensorAnnotation", "member" : "onnx.onnx.TensorAnnotation.addAllQuantParameterTensorNames", "link" : "onnx\/onnx\/TensorAnnotation.html#addAllQuantParameterTensorNames(__vs:Iterable[onnx.onnx.StringStringEntryProto]):onnx.onnx.TensorAnnotation", "kind" : "def"}, {"label" : "addQuantParameterTensorNames", "tail" : "(__vs: StringStringEntryProto*): TensorAnnotation", "member" : "onnx.onnx.TensorAnnotation.addQuantParameterTensorNames", "link" : "onnx\/onnx\/TensorAnnotation.html#addQuantParameterTensorNames(__vs:onnx.onnx.StringStringEntryProto*):onnx.onnx.TensorAnnotation", "kind" : "def"}, {"label" : "clearQuantParameterTensorNames", "tail" : "(): TensorAnnotation", "member" : "onnx.onnx.TensorAnnotation.clearQuantParameterTensorNames", "link" : "onnx\/onnx\/TensorAnnotation.html#clearQuantParameterTensorNames:onnx.onnx.TensorAnnotation", "kind" : "def"}, {"label" : "withTensorName", "tail" : "(__v: String): TensorAnnotation", "member" : "onnx.onnx.TensorAnnotation.withTensorName", "link" : "onnx\/onnx\/TensorAnnotation.html#withTensorName(__v:String):onnx.onnx.TensorAnnotation", "kind" : "def"}, {"label" : "clearTensorName", "tail" : "(): TensorAnnotation", "member" : "onnx.onnx.TensorAnnotation.clearTensorName", "link" : "onnx\/onnx\/TensorAnnotation.html#clearTensorName:onnx.onnx.TensorAnnotation", "kind" : "def"}, {"label" : "getTensorName", "tail" : "(): String", "member" : "onnx.onnx.TensorAnnotation.getTensorName", "link" : "onnx\/onnx\/TensorAnnotation.html#getTensorName:String", "kind" : "def"}, {"label" : "writeTo", "tail" : "(_output__: CodedOutputStream): Unit", "member" : "onnx.onnx.TensorAnnotation.writeTo", "link" : "onnx\/onnx\/TensorAnnotation.html#writeTo(_output__:com.google.protobuf.CodedOutputStream):Unit", "kind" : "def"}, {"label" : "serializedSize", "tail" : "(): Int", "member" : "onnx.onnx.TensorAnnotation.serializedSize", "link" : "onnx\/onnx\/TensorAnnotation.html#serializedSize:Int", "kind" : "def"}, {"member" : "onnx.onnx.TensorAnnotation#<init>", "error" : "unsupported entity"}, {"label" : "unknownFields", "tail" : ": UnknownFieldSet", "member" : "onnx.onnx.TensorAnnotation.unknownFields", "link" : "onnx\/onnx\/TensorAnnotation.html#unknownFields:scalapb.UnknownFieldSet", "kind" : "val"}, {"label" : "quantParameterTensorNames", "tail" : ": Seq[StringStringEntryProto]", "member" : "onnx.onnx.TensorAnnotation.quantParameterTensorNames", "link" : "onnx\/onnx\/TensorAnnotation.html#quantParameterTensorNames:Seq[onnx.onnx.StringStringEntryProto]", "kind" : "val"}, {"label" : "tensorName", "tail" : ": Option[String]", "member" : "onnx.onnx.TensorAnnotation.tensorName", "link" : "onnx\/onnx\/TensorAnnotation.html#tensorName:Option[String]", "kind" : "val"}, {"label" : "update", "tail" : "(ms: (Lens[TensorAnnotation, TensorAnnotation]) => Mutation[TensorAnnotation]*): TensorAnnotation", "member" : "scalapb.lenses.Updatable.update", "link" : "onnx\/onnx\/TensorAnnotation.html#update(ms:scalapb.lenses.Lens[A,A]=>scalapb.lenses.Mutation[A]*):A", "kind" : "def"}, {"label" : "toByteString", "tail" : "(): ByteString", "member" : "scalapb.GeneratedMessage.toByteString", "link" : "onnx\/onnx\/TensorAnnotation.html#toByteString:com.google.protobuf.ByteString", "kind" : "final def"}, {"label" : "toByteArray", "tail" : "(): Array[Byte]", "member" : "scalapb.GeneratedMessage.toByteArray", "link" : "onnx\/onnx\/TensorAnnotation.html#toByteArray:Array[Byte]", "kind" : "final def"}, {"label" : "toPMessage", "tail" : "(): PMessage", "member" : "scalapb.GeneratedMessage.toPMessage", "link" : "onnx\/onnx\/TensorAnnotation.html#toPMessage:scalapb.descriptors.PMessage", "kind" : "final def"}, {"label" : "writeDelimitedTo", "tail" : "(output: OutputStream): Unit", "member" : "scalapb.GeneratedMessage.writeDelimitedTo", "link" : "onnx\/onnx\/TensorAnnotation.html#writeDelimitedTo(output:java.io.OutputStream):Unit", "kind" : "final def"}, {"label" : "writeTo", "tail" : "(output: OutputStream): Unit", "member" : "scalapb.GeneratedMessage.writeTo", "link" : "onnx\/onnx\/TensorAnnotation.html#writeTo(output:java.io.OutputStream):Unit", "kind" : "final def"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "onnx\/onnx\/TensorAnnotation.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "onnx\/onnx\/TensorAnnotation.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "onnx\/onnx\/TensorAnnotation.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "onnx\/onnx\/TensorAnnotation.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "onnx\/onnx\/TensorAnnotation.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "onnx\/onnx\/TensorAnnotation.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "onnx\/onnx\/TensorAnnotation.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "onnx\/onnx\/TensorAnnotation.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "onnx\/onnx\/TensorAnnotation.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "onnx\/onnx\/TensorAnnotation.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "onnx\/onnx\/TensorAnnotation.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "onnx\/onnx\/TensorAnnotation.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "onnx\/onnx\/TensorAnnotation.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "onnx\/onnx\/TensorAnnotation.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "onnx\/onnx\/TensorAnnotation.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "onnx\/onnx\/TensorAnnotation.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "onnx\/onnx\/TensorAnnotation.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "onnx\/onnx\/TensorAnnotation.html", "kind" : "case class"}, {"name" : "onnx.onnx.TensorProto", "shortDescription" : "Tensors", "object" : "onnx\/onnx\/TensorProto$.html", "members_object" : [{"label" : "of", "tail" : "(dims: Seq[Long], dataType: Option[Int], segment: Option[Segment], floatData: Seq[Float], int32Data: Seq[Int], stringData: Seq[ByteString], int64Data: Seq[Long], name: Option[String], docString: Option[String], rawData: Option[ByteString], externalData: Seq[StringStringEntryProto], dataLocation: Option[DataLocation], doubleData: Seq[Double], uint64Data: Seq[Long]): TensorProto", "member" : "onnx.onnx.TensorProto.of", "link" : "onnx\/onnx\/TensorProto$.html#of(dims:Seq[Long],dataType:Option[Int],segment:Option[onnx.onnx.TensorProto.Segment],floatData:Seq[Float],int32Data:Seq[Int],stringData:Seq[com.google.protobuf.ByteString],int64Data:Seq[Long],name:Option[String],docString:Option[String],rawData:Option[com.google.protobuf.ByteString],externalData:Seq[onnx.onnx.StringStringEntryProto],dataLocation:Option[onnx.onnx.TensorProto.DataLocation],doubleData:Seq[Double],uint64Data:Seq[Long]):onnx.onnx.TensorProto", "kind" : "def"}, {"label" : "UINT64_DATA_FIELD_NUMBER", "tail" : ": Int(11)", "member" : "onnx.onnx.TensorProto.UINT64_DATA_FIELD_NUMBER", "link" : "onnx\/onnx\/TensorProto$.html#UINT64_DATA_FIELD_NUMBER:Int(11)", "kind" : "final val"}, {"label" : "DOUBLE_DATA_FIELD_NUMBER", "tail" : ": Int(10)", "member" : "onnx.onnx.TensorProto.DOUBLE_DATA_FIELD_NUMBER", "link" : "onnx\/onnx\/TensorProto$.html#DOUBLE_DATA_FIELD_NUMBER:Int(10)", "kind" : "final val"}, {"label" : "DATA_LOCATION_FIELD_NUMBER", "tail" : ": Int(14)", "member" : "onnx.onnx.TensorProto.DATA_LOCATION_FIELD_NUMBER", "link" : "onnx\/onnx\/TensorProto$.html#DATA_LOCATION_FIELD_NUMBER:Int(14)", "kind" : "final val"}, {"label" : "EXTERNAL_DATA_FIELD_NUMBER", "tail" : ": Int(13)", "member" : "onnx.onnx.TensorProto.EXTERNAL_DATA_FIELD_NUMBER", "link" : "onnx\/onnx\/TensorProto$.html#EXTERNAL_DATA_FIELD_NUMBER:Int(13)", "kind" : "final val"}, {"label" : "RAW_DATA_FIELD_NUMBER", "tail" : ": Int(9)", "member" : "onnx.onnx.TensorProto.RAW_DATA_FIELD_NUMBER", "link" : "onnx\/onnx\/TensorProto$.html#RAW_DATA_FIELD_NUMBER:Int(9)", "kind" : "final val"}, {"label" : "DOC_STRING_FIELD_NUMBER", "tail" : ": Int(12)", "member" : "onnx.onnx.TensorProto.DOC_STRING_FIELD_NUMBER", "link" : "onnx\/onnx\/TensorProto$.html#DOC_STRING_FIELD_NUMBER:Int(12)", "kind" : "final val"}, {"label" : "NAME_FIELD_NUMBER", "tail" : ": Int(8)", "member" : "onnx.onnx.TensorProto.NAME_FIELD_NUMBER", "link" : "onnx\/onnx\/TensorProto$.html#NAME_FIELD_NUMBER:Int(8)", "kind" : "final val"}, {"label" : "INT64_DATA_FIELD_NUMBER", "tail" : ": Int(7)", "member" : "onnx.onnx.TensorProto.INT64_DATA_FIELD_NUMBER", "link" : "onnx\/onnx\/TensorProto$.html#INT64_DATA_FIELD_NUMBER:Int(7)", "kind" : "final val"}, {"label" : "STRING_DATA_FIELD_NUMBER", "tail" : ": Int(6)", "member" : "onnx.onnx.TensorProto.STRING_DATA_FIELD_NUMBER", "link" : "onnx\/onnx\/TensorProto$.html#STRING_DATA_FIELD_NUMBER:Int(6)", "kind" : "final val"}, {"label" : "INT32_DATA_FIELD_NUMBER", "tail" : ": Int(5)", "member" : "onnx.onnx.TensorProto.INT32_DATA_FIELD_NUMBER", "link" : "onnx\/onnx\/TensorProto$.html#INT32_DATA_FIELD_NUMBER:Int(5)", "kind" : "final val"}, {"label" : "FLOAT_DATA_FIELD_NUMBER", "tail" : ": Int(4)", "member" : "onnx.onnx.TensorProto.FLOAT_DATA_FIELD_NUMBER", "link" : "onnx\/onnx\/TensorProto$.html#FLOAT_DATA_FIELD_NUMBER:Int(4)", "kind" : "final val"}, {"label" : "SEGMENT_FIELD_NUMBER", "tail" : ": Int(3)", "member" : "onnx.onnx.TensorProto.SEGMENT_FIELD_NUMBER", "link" : "onnx\/onnx\/TensorProto$.html#SEGMENT_FIELD_NUMBER:Int(3)", "kind" : "final val"}, {"label" : "DATA_TYPE_FIELD_NUMBER", "tail" : ": Int(2)", "member" : "onnx.onnx.TensorProto.DATA_TYPE_FIELD_NUMBER", "link" : "onnx\/onnx\/TensorProto$.html#DATA_TYPE_FIELD_NUMBER:Int(2)", "kind" : "final val"}, {"label" : "DIMS_FIELD_NUMBER", "tail" : ": Int(1)", "member" : "onnx.onnx.TensorProto.DIMS_FIELD_NUMBER", "link" : "onnx\/onnx\/TensorProto$.html#DIMS_FIELD_NUMBER:Int(1)", "kind" : "final val"}, {"label" : "TensorProtoLens", "tail" : "", "member" : "onnx.onnx.TensorProto.TensorProtoLens", "link" : "onnx\/onnx\/TensorProto$.html#TensorProtoLens[UpperPB]extendsObjectLens[UpperPB,onnx.onnx.TensorProto]", "kind" : "implicit class"}, {"label" : "Segment", "tail" : "", "member" : "onnx.onnx.TensorProto.Segment", "link" : "onnx\/onnx\/TensorProto$.html#Segment", "kind" : "object"}, {"label" : "Segment", "tail" : "", "member" : "onnx.onnx.TensorProto.Segment", "link" : "onnx\/onnx\/TensorProto$.html#SegmentextendsGeneratedMessagewithUpdatable[onnx.onnx.TensorProto.Segment]withProductwithSerializable", "kind" : "final case class"}, {"label" : "DataLocation", "tail" : "", "member" : "onnx.onnx.TensorProto.DataLocation", "link" : "onnx\/onnx\/TensorProto$.html#DataLocation", "kind" : "object"}, {"label" : "DataLocation", "tail" : "", "member" : "onnx.onnx.TensorProto.DataLocation", "link" : "onnx\/onnx\/TensorProto$.html#DataLocationextendsGeneratedEnum", "kind" : "sealed abstract class"}, {"label" : "DataType", "tail" : "", "member" : "onnx.onnx.TensorProto.DataType", "link" : "onnx\/onnx\/TensorProto$.html#DataType", "kind" : "object"}, {"label" : "DataType", "tail" : "", "member" : "onnx.onnx.TensorProto.DataType", "link" : "onnx\/onnx\/TensorProto$.html#DataTypeextendsGeneratedEnum", "kind" : "sealed abstract class"}, {"label" : "defaultInstance", "tail" : ": TensorProto", "member" : "onnx.onnx.TensorProto.defaultInstance", "link" : "onnx\/onnx\/TensorProto$.html#defaultInstance:onnx.onnx.TensorProto", "kind" : "lazy val"}, {"label" : "enumCompanionForFieldNumber", "tail" : "(__fieldNumber: Int): GeneratedEnumCompanion[_]", "member" : "onnx.onnx.TensorProto.enumCompanionForFieldNumber", "link" : "onnx\/onnx\/TensorProto$.html#enumCompanionForFieldNumber(__fieldNumber:Int):scalapb.GeneratedEnumCompanion[_]", "kind" : "def"}, {"label" : "nestedMessagesCompanions", "tail" : ": Seq[GeneratedMessageCompanion[_ <: GeneratedMessage]]", "member" : "onnx.onnx.TensorProto.nestedMessagesCompanions", "link" : "onnx\/onnx\/TensorProto$.html#nestedMessagesCompanions:Seq[scalapb.GeneratedMessageCompanion[_<:scalapb.GeneratedMessage]]", "kind" : "lazy val"}, {"label" : "messageCompanionForFieldNumber", "tail" : "(__number: Int): GeneratedMessageCompanion[_]", "member" : "onnx.onnx.TensorProto.messageCompanionForFieldNumber", "link" : "onnx\/onnx\/TensorProto$.html#messageCompanionForFieldNumber(__number:Int):scalapb.GeneratedMessageCompanion[_]", "kind" : "def"}, {"label" : "scalaDescriptor", "tail" : "(): Descriptor", "member" : "onnx.onnx.TensorProto.scalaDescriptor", "link" : "onnx\/onnx\/TensorProto$.html#scalaDescriptor:scalapb.descriptors.Descriptor", "kind" : "def"}, {"label" : "javaDescriptor", "tail" : "(): Descriptor", "member" : "onnx.onnx.TensorProto.javaDescriptor", "link" : "onnx\/onnx\/TensorProto$.html#javaDescriptor:com.google.protobuf.Descriptors.Descriptor", "kind" : "def"}, {"label" : "messageReads", "tail" : "(): Reads[TensorProto]", "member" : "onnx.onnx.TensorProto.messageReads", "link" : "onnx\/onnx\/TensorProto$.html#messageReads:scalapb.descriptors.Reads[onnx.onnx.TensorProto]", "kind" : "implicit def"}, {"label" : "parseFrom", "tail" : "(_input__: CodedInputStream): TensorProto", "member" : "onnx.onnx.TensorProto.parseFrom", "link" : "onnx\/onnx\/TensorProto$.html#parseFrom(_input__:com.google.protobuf.CodedInputStream):onnx.onnx.TensorProto", "kind" : "def"}, {"label" : "messageCompanion", "tail" : "(): GeneratedMessageCompanion[TensorProto]", "member" : "onnx.onnx.TensorProto.messageCompanion", "link" : "onnx\/onnx\/TensorProto$.html#messageCompanion:scalapb.GeneratedMessageCompanion[onnx.onnx.TensorProto]", "kind" : "implicit def"}, {"label" : "fromAscii", "tail" : "(s: String): TensorProto", "member" : "scalapb.GeneratedMessageCompanion.fromAscii", "link" : "onnx\/onnx\/TensorProto$.html#fromAscii(s:String):A", "kind" : "def"}, {"label" : "validateAscii", "tail" : "(s: String): Either[TextFormatError, TensorProto]", "member" : "scalapb.GeneratedMessageCompanion.validateAscii", "link" : "onnx\/onnx\/TensorProto$.html#validateAscii(s:String):Either[scalapb.TextFormatError,A]", "kind" : "def"}, {"label" : "enumCompanionForField", "tail" : "(field: FieldDescriptor): GeneratedEnumCompanion[_]", "member" : "scalapb.GeneratedMessageCompanion.enumCompanionForField", "link" : "onnx\/onnx\/TensorProto$.html#enumCompanionForField(field:com.google.protobuf.Descriptors.FieldDescriptor):scalapb.GeneratedEnumCompanion[_]", "kind" : "def"}, {"label" : "messageCompanionForField", "tail" : "(field: FieldDescriptor): GeneratedMessageCompanion[_]", "member" : "scalapb.GeneratedMessageCompanion.messageCompanionForField", "link" : "onnx\/onnx\/TensorProto$.html#messageCompanionForField(field:com.google.protobuf.Descriptors.FieldDescriptor):scalapb.GeneratedMessageCompanion[_]", "kind" : "def"}, {"label" : "toByteArray", "tail" : "(a: TensorProto): Array[Byte]", "member" : "scalapb.GeneratedMessageCompanion.toByteArray", "link" : "onnx\/onnx\/TensorProto$.html#toByteArray(a:A):Array[Byte]", "kind" : "def"}, {"label" : "validate", "tail" : "(s: Array[Byte]): Try[TensorProto]", "member" : "scalapb.GeneratedMessageCompanion.validate", "link" : "onnx\/onnx\/TensorProto$.html#validate(s:Array[Byte]):scala.util.Try[A]", "kind" : "def"}, {"label" : "merge", "tail" : "(a: TensorProto, input: CodedInputStream): TensorProto", "member" : "scalapb.GeneratedMessageCompanion.merge", "link" : "onnx\/onnx\/TensorProto$.html#merge(a:A,input:com.google.protobuf.CodedInputStream):A", "kind" : "def"}, {"label" : "parseFrom", "tail" : "(s: Array[Byte]): TensorProto", "member" : "scalapb.GeneratedMessageCompanion.parseFrom", "link" : "onnx\/onnx\/TensorProto$.html#parseFrom(s:Array[Byte]):A", "kind" : "def"}, {"label" : "streamFromDelimitedInput", "tail" : "(input: InputStream): Stream[TensorProto]", "member" : "scalapb.GeneratedMessageCompanion.streamFromDelimitedInput", "link" : "onnx\/onnx\/TensorProto$.html#streamFromDelimitedInput(input:java.io.InputStream):Stream[A]", "kind" : "def"}, {"label" : "parseDelimitedFrom", "tail" : "(input: InputStream): Option[TensorProto]", "member" : "scalapb.GeneratedMessageCompanion.parseDelimitedFrom", "link" : "onnx\/onnx\/TensorProto$.html#parseDelimitedFrom(input:java.io.InputStream):Option[A]", "kind" : "def"}, {"label" : "parseDelimitedFrom", "tail" : "(input: CodedInputStream): Option[TensorProto]", "member" : "scalapb.GeneratedMessageCompanion.parseDelimitedFrom", "link" : "onnx\/onnx\/TensorProto$.html#parseDelimitedFrom(input:com.google.protobuf.CodedInputStream):Option[A]", "kind" : "def"}, {"label" : "parseFrom", "tail" : "(input: InputStream): TensorProto", "member" : "scalapb.GeneratedMessageCompanion.parseFrom", "link" : "onnx\/onnx\/TensorProto$.html#parseFrom(input:java.io.InputStream):A", "kind" : "def"}, {"label" : "ValueType", "tail" : "", "member" : "scalapb.GeneratedMessageCompanion.ValueType", "link" : "onnx\/onnx\/TensorProto$.html#ValueType=A", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "onnx\/onnx\/TensorProto$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "onnx\/onnx\/TensorProto$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "onnx\/onnx\/TensorProto$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "onnx\/onnx\/TensorProto$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "onnx\/onnx\/TensorProto$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "onnx\/onnx\/TensorProto$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "onnx\/onnx\/TensorProto$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "onnx\/onnx\/TensorProto$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "onnx\/onnx\/TensorProto$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "onnx\/onnx\/TensorProto$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "onnx\/onnx\/TensorProto$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "onnx\/onnx\/TensorProto$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "onnx\/onnx\/TensorProto$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "onnx\/onnx\/TensorProto$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "onnx\/onnx\/TensorProto$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "onnx\/onnx\/TensorProto$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "onnx\/onnx\/TensorProto$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "onnx\/onnx\/TensorProto$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "onnx\/onnx\/TensorProto$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "companion", "tail" : "(): TensorProto.type", "member" : "onnx.onnx.TensorProto.companion", "link" : "onnx\/onnx\/TensorProto.html#companion:onnx.onnx.TensorProto.type", "kind" : "def"}, {"label" : "toProtoString", "tail" : "(): String", "member" : "onnx.onnx.TensorProto.toProtoString", "link" : "onnx\/onnx\/TensorProto.html#toProtoString:String", "kind" : "def"}, {"label" : "getField", "tail" : "(__field: FieldDescriptor): PValue", "member" : "onnx.onnx.TensorProto.getField", "link" : "onnx\/onnx\/TensorProto.html#getField(__field:scalapb.descriptors.FieldDescriptor):scalapb.descriptors.PValue", "kind" : "def"}, {"label" : "getFieldByNumber", "tail" : "(__fieldNumber: Int): Any", "member" : "onnx.onnx.TensorProto.getFieldByNumber", "link" : "onnx\/onnx\/TensorProto.html#getFieldByNumber(__fieldNumber:Int):Any", "kind" : "def"}, {"label" : "discardUnknownFields", "tail" : "(): TensorProto", "member" : "onnx.onnx.TensorProto.discardUnknownFields", "link" : "onnx\/onnx\/TensorProto.html#discardUnknownFields:onnx.onnx.TensorProto", "kind" : "def"}, {"label" : "withUnknownFields", "tail" : "(__v: UnknownFieldSet): TensorProto", "member" : "onnx.onnx.TensorProto.withUnknownFields", "link" : "onnx\/onnx\/TensorProto.html#withUnknownFields(__v:scalapb.UnknownFieldSet):onnx.onnx.TensorProto", "kind" : "def"}, {"label" : "withUint64Data", "tail" : "(__v: Seq[Long]): TensorProto", "member" : "onnx.onnx.TensorProto.withUint64Data", "link" : "onnx\/onnx\/TensorProto.html#withUint64Data(__v:Seq[Long]):onnx.onnx.TensorProto", "kind" : "def"}, {"label" : "addAllUint64Data", "tail" : "(__vs: Iterable[Long]): TensorProto", "member" : "onnx.onnx.TensorProto.addAllUint64Data", "link" : "onnx\/onnx\/TensorProto.html#addAllUint64Data(__vs:Iterable[Long]):onnx.onnx.TensorProto", "kind" : "def"}, {"label" : "addUint64Data", "tail" : "(__vs: Long*): TensorProto", "member" : "onnx.onnx.TensorProto.addUint64Data", "link" : "onnx\/onnx\/TensorProto.html#addUint64Data(__vs:Long*):onnx.onnx.TensorProto", "kind" : "def"}, {"label" : "clearUint64Data", "tail" : "(): TensorProto", "member" : "onnx.onnx.TensorProto.clearUint64Data", "link" : "onnx\/onnx\/TensorProto.html#clearUint64Data:onnx.onnx.TensorProto", "kind" : "def"}, {"label" : "withDoubleData", "tail" : "(__v: Seq[Double]): TensorProto", "member" : "onnx.onnx.TensorProto.withDoubleData", "link" : "onnx\/onnx\/TensorProto.html#withDoubleData(__v:Seq[Double]):onnx.onnx.TensorProto", "kind" : "def"}, {"label" : "addAllDoubleData", "tail" : "(__vs: Iterable[Double]): TensorProto", "member" : "onnx.onnx.TensorProto.addAllDoubleData", "link" : "onnx\/onnx\/TensorProto.html#addAllDoubleData(__vs:Iterable[Double]):onnx.onnx.TensorProto", "kind" : "def"}, {"label" : "addDoubleData", "tail" : "(__vs: Double*): TensorProto", "member" : "onnx.onnx.TensorProto.addDoubleData", "link" : "onnx\/onnx\/TensorProto.html#addDoubleData(__vs:Double*):onnx.onnx.TensorProto", "kind" : "def"}, {"label" : "clearDoubleData", "tail" : "(): TensorProto", "member" : "onnx.onnx.TensorProto.clearDoubleData", "link" : "onnx\/onnx\/TensorProto.html#clearDoubleData:onnx.onnx.TensorProto", "kind" : "def"}, {"label" : "withDataLocation", "tail" : "(__v: DataLocation): TensorProto", "member" : "onnx.onnx.TensorProto.withDataLocation", "link" : "onnx\/onnx\/TensorProto.html#withDataLocation(__v:onnx.onnx.TensorProto.DataLocation):onnx.onnx.TensorProto", "kind" : "def"}, {"label" : "clearDataLocation", "tail" : "(): TensorProto", "member" : "onnx.onnx.TensorProto.clearDataLocation", "link" : "onnx\/onnx\/TensorProto.html#clearDataLocation:onnx.onnx.TensorProto", "kind" : "def"}, {"label" : "getDataLocation", "tail" : "(): DataLocation", "member" : "onnx.onnx.TensorProto.getDataLocation", "link" : "onnx\/onnx\/TensorProto.html#getDataLocation:onnx.onnx.TensorProto.DataLocation", "kind" : "def"}, {"label" : "withExternalData", "tail" : "(__v: Seq[StringStringEntryProto]): TensorProto", "member" : "onnx.onnx.TensorProto.withExternalData", "link" : "onnx\/onnx\/TensorProto.html#withExternalData(__v:Seq[onnx.onnx.StringStringEntryProto]):onnx.onnx.TensorProto", "kind" : "def"}, {"label" : "addAllExternalData", "tail" : "(__vs: Iterable[StringStringEntryProto]): TensorProto", "member" : "onnx.onnx.TensorProto.addAllExternalData", "link" : "onnx\/onnx\/TensorProto.html#addAllExternalData(__vs:Iterable[onnx.onnx.StringStringEntryProto]):onnx.onnx.TensorProto", "kind" : "def"}, {"label" : "addExternalData", "tail" : "(__vs: StringStringEntryProto*): TensorProto", "member" : "onnx.onnx.TensorProto.addExternalData", "link" : "onnx\/onnx\/TensorProto.html#addExternalData(__vs:onnx.onnx.StringStringEntryProto*):onnx.onnx.TensorProto", "kind" : "def"}, {"label" : "clearExternalData", "tail" : "(): TensorProto", "member" : "onnx.onnx.TensorProto.clearExternalData", "link" : "onnx\/onnx\/TensorProto.html#clearExternalData:onnx.onnx.TensorProto", "kind" : "def"}, {"label" : "withRawData", "tail" : "(__v: ByteString): TensorProto", "member" : "onnx.onnx.TensorProto.withRawData", "link" : "onnx\/onnx\/TensorProto.html#withRawData(__v:com.google.protobuf.ByteString):onnx.onnx.TensorProto", "kind" : "def"}, {"label" : "clearRawData", "tail" : "(): TensorProto", "member" : "onnx.onnx.TensorProto.clearRawData", "link" : "onnx\/onnx\/TensorProto.html#clearRawData:onnx.onnx.TensorProto", "kind" : "def"}, {"label" : "getRawData", "tail" : "(): ByteString", "member" : "onnx.onnx.TensorProto.getRawData", "link" : "onnx\/onnx\/TensorProto.html#getRawData:com.google.protobuf.ByteString", "kind" : "def"}, {"label" : "withDocString", "tail" : "(__v: String): TensorProto", "member" : "onnx.onnx.TensorProto.withDocString", "link" : "onnx\/onnx\/TensorProto.html#withDocString(__v:String):onnx.onnx.TensorProto", "kind" : "def"}, {"label" : "clearDocString", "tail" : "(): TensorProto", "member" : "onnx.onnx.TensorProto.clearDocString", "link" : "onnx\/onnx\/TensorProto.html#clearDocString:onnx.onnx.TensorProto", "kind" : "def"}, {"label" : "getDocString", "tail" : "(): String", "member" : "onnx.onnx.TensorProto.getDocString", "link" : "onnx\/onnx\/TensorProto.html#getDocString:String", "kind" : "def"}, {"label" : "withName", "tail" : "(__v: String): TensorProto", "member" : "onnx.onnx.TensorProto.withName", "link" : "onnx\/onnx\/TensorProto.html#withName(__v:String):onnx.onnx.TensorProto", "kind" : "def"}, {"label" : "clearName", "tail" : "(): TensorProto", "member" : "onnx.onnx.TensorProto.clearName", "link" : "onnx\/onnx\/TensorProto.html#clearName:onnx.onnx.TensorProto", "kind" : "def"}, {"label" : "getName", "tail" : "(): String", "member" : "onnx.onnx.TensorProto.getName", "link" : "onnx\/onnx\/TensorProto.html#getName:String", "kind" : "def"}, {"label" : "withInt64Data", "tail" : "(__v: Seq[Long]): TensorProto", "member" : "onnx.onnx.TensorProto.withInt64Data", "link" : "onnx\/onnx\/TensorProto.html#withInt64Data(__v:Seq[Long]):onnx.onnx.TensorProto", "kind" : "def"}, {"label" : "addAllInt64Data", "tail" : "(__vs: Iterable[Long]): TensorProto", "member" : "onnx.onnx.TensorProto.addAllInt64Data", "link" : "onnx\/onnx\/TensorProto.html#addAllInt64Data(__vs:Iterable[Long]):onnx.onnx.TensorProto", "kind" : "def"}, {"label" : "addInt64Data", "tail" : "(__vs: Long*): TensorProto", "member" : "onnx.onnx.TensorProto.addInt64Data", "link" : "onnx\/onnx\/TensorProto.html#addInt64Data(__vs:Long*):onnx.onnx.TensorProto", "kind" : "def"}, {"label" : "clearInt64Data", "tail" : "(): TensorProto", "member" : "onnx.onnx.TensorProto.clearInt64Data", "link" : "onnx\/onnx\/TensorProto.html#clearInt64Data:onnx.onnx.TensorProto", "kind" : "def"}, {"label" : "withStringData", "tail" : "(__v: Seq[ByteString]): TensorProto", "member" : "onnx.onnx.TensorProto.withStringData", "link" : "onnx\/onnx\/TensorProto.html#withStringData(__v:Seq[com.google.protobuf.ByteString]):onnx.onnx.TensorProto", "kind" : "def"}, {"label" : "addAllStringData", "tail" : "(__vs: Iterable[ByteString]): TensorProto", "member" : "onnx.onnx.TensorProto.addAllStringData", "link" : "onnx\/onnx\/TensorProto.html#addAllStringData(__vs:Iterable[com.google.protobuf.ByteString]):onnx.onnx.TensorProto", "kind" : "def"}, {"label" : "addStringData", "tail" : "(__vs: ByteString*): TensorProto", "member" : "onnx.onnx.TensorProto.addStringData", "link" : "onnx\/onnx\/TensorProto.html#addStringData(__vs:com.google.protobuf.ByteString*):onnx.onnx.TensorProto", "kind" : "def"}, {"label" : "clearStringData", "tail" : "(): TensorProto", "member" : "onnx.onnx.TensorProto.clearStringData", "link" : "onnx\/onnx\/TensorProto.html#clearStringData:onnx.onnx.TensorProto", "kind" : "def"}, {"label" : "withInt32Data", "tail" : "(__v: Seq[Int]): TensorProto", "member" : "onnx.onnx.TensorProto.withInt32Data", "link" : "onnx\/onnx\/TensorProto.html#withInt32Data(__v:Seq[Int]):onnx.onnx.TensorProto", "kind" : "def"}, {"label" : "addAllInt32Data", "tail" : "(__vs: Iterable[Int]): TensorProto", "member" : "onnx.onnx.TensorProto.addAllInt32Data", "link" : "onnx\/onnx\/TensorProto.html#addAllInt32Data(__vs:Iterable[Int]):onnx.onnx.TensorProto", "kind" : "def"}, {"label" : "addInt32Data", "tail" : "(__vs: Int*): TensorProto", "member" : "onnx.onnx.TensorProto.addInt32Data", "link" : "onnx\/onnx\/TensorProto.html#addInt32Data(__vs:Int*):onnx.onnx.TensorProto", "kind" : "def"}, {"label" : "clearInt32Data", "tail" : "(): TensorProto", "member" : "onnx.onnx.TensorProto.clearInt32Data", "link" : "onnx\/onnx\/TensorProto.html#clearInt32Data:onnx.onnx.TensorProto", "kind" : "def"}, {"label" : "withFloatData", "tail" : "(__v: Seq[Float]): TensorProto", "member" : "onnx.onnx.TensorProto.withFloatData", "link" : "onnx\/onnx\/TensorProto.html#withFloatData(__v:Seq[Float]):onnx.onnx.TensorProto", "kind" : "def"}, {"label" : "addAllFloatData", "tail" : "(__vs: Iterable[Float]): TensorProto", "member" : "onnx.onnx.TensorProto.addAllFloatData", "link" : "onnx\/onnx\/TensorProto.html#addAllFloatData(__vs:Iterable[Float]):onnx.onnx.TensorProto", "kind" : "def"}, {"label" : "addFloatData", "tail" : "(__vs: Float*): TensorProto", "member" : "onnx.onnx.TensorProto.addFloatData", "link" : "onnx\/onnx\/TensorProto.html#addFloatData(__vs:Float*):onnx.onnx.TensorProto", "kind" : "def"}, {"label" : "clearFloatData", "tail" : "(): TensorProto", "member" : "onnx.onnx.TensorProto.clearFloatData", "link" : "onnx\/onnx\/TensorProto.html#clearFloatData:onnx.onnx.TensorProto", "kind" : "def"}, {"label" : "withSegment", "tail" : "(__v: Segment): TensorProto", "member" : "onnx.onnx.TensorProto.withSegment", "link" : "onnx\/onnx\/TensorProto.html#withSegment(__v:onnx.onnx.TensorProto.Segment):onnx.onnx.TensorProto", "kind" : "def"}, {"label" : "clearSegment", "tail" : "(): TensorProto", "member" : "onnx.onnx.TensorProto.clearSegment", "link" : "onnx\/onnx\/TensorProto.html#clearSegment:onnx.onnx.TensorProto", "kind" : "def"}, {"label" : "getSegment", "tail" : "(): Segment", "member" : "onnx.onnx.TensorProto.getSegment", "link" : "onnx\/onnx\/TensorProto.html#getSegment:onnx.onnx.TensorProto.Segment", "kind" : "def"}, {"label" : "withDataType", "tail" : "(__v: Int): TensorProto", "member" : "onnx.onnx.TensorProto.withDataType", "link" : "onnx\/onnx\/TensorProto.html#withDataType(__v:Int):onnx.onnx.TensorProto", "kind" : "def"}, {"label" : "clearDataType", "tail" : "(): TensorProto", "member" : "onnx.onnx.TensorProto.clearDataType", "link" : "onnx\/onnx\/TensorProto.html#clearDataType:onnx.onnx.TensorProto", "kind" : "def"}, {"label" : "getDataType", "tail" : "(): Int", "member" : "onnx.onnx.TensorProto.getDataType", "link" : "onnx\/onnx\/TensorProto.html#getDataType:Int", "kind" : "def"}, {"label" : "withDims", "tail" : "(__v: Seq[Long]): TensorProto", "member" : "onnx.onnx.TensorProto.withDims", "link" : "onnx\/onnx\/TensorProto.html#withDims(__v:Seq[Long]):onnx.onnx.TensorProto", "kind" : "def"}, {"label" : "addAllDims", "tail" : "(__vs: Iterable[Long]): TensorProto", "member" : "onnx.onnx.TensorProto.addAllDims", "link" : "onnx\/onnx\/TensorProto.html#addAllDims(__vs:Iterable[Long]):onnx.onnx.TensorProto", "kind" : "def"}, {"label" : "addDims", "tail" : "(__vs: Long*): TensorProto", "member" : "onnx.onnx.TensorProto.addDims", "link" : "onnx\/onnx\/TensorProto.html#addDims(__vs:Long*):onnx.onnx.TensorProto", "kind" : "def"}, {"label" : "clearDims", "tail" : "(): TensorProto", "member" : "onnx.onnx.TensorProto.clearDims", "link" : "onnx\/onnx\/TensorProto.html#clearDims:onnx.onnx.TensorProto", "kind" : "def"}, {"label" : "writeTo", "tail" : "(_output__: CodedOutputStream): Unit", "member" : "onnx.onnx.TensorProto.writeTo", "link" : "onnx\/onnx\/TensorProto.html#writeTo(_output__:com.google.protobuf.CodedOutputStream):Unit", "kind" : "def"}, {"label" : "serializedSize", "tail" : "(): Int", "member" : "onnx.onnx.TensorProto.serializedSize", "link" : "onnx\/onnx\/TensorProto.html#serializedSize:Int", "kind" : "def"}, {"member" : "onnx.onnx.TensorProto#<init>", "error" : "unsupported entity"}, {"label" : "unknownFields", "tail" : ": UnknownFieldSet", "member" : "onnx.onnx.TensorProto.unknownFields", "link" : "onnx\/onnx\/TensorProto.html#unknownFields:scalapb.UnknownFieldSet", "kind" : "val"}, {"label" : "uint64Data", "tail" : ": Seq[Long]", "member" : "onnx.onnx.TensorProto.uint64Data", "link" : "onnx\/onnx\/TensorProto.html#uint64Data:Seq[Long]", "kind" : "val"}, {"label" : "doubleData", "tail" : ": Seq[Double]", "member" : "onnx.onnx.TensorProto.doubleData", "link" : "onnx\/onnx\/TensorProto.html#doubleData:Seq[Double]", "kind" : "val"}, {"label" : "dataLocation", "tail" : ": Option[DataLocation]", "member" : "onnx.onnx.TensorProto.dataLocation", "link" : "onnx\/onnx\/TensorProto.html#dataLocation:Option[onnx.onnx.TensorProto.DataLocation]", "kind" : "val"}, {"label" : "externalData", "tail" : ": Seq[StringStringEntryProto]", "member" : "onnx.onnx.TensorProto.externalData", "link" : "onnx\/onnx\/TensorProto.html#externalData:Seq[onnx.onnx.StringStringEntryProto]", "kind" : "val"}, {"label" : "rawData", "tail" : ": Option[ByteString]", "member" : "onnx.onnx.TensorProto.rawData", "link" : "onnx\/onnx\/TensorProto.html#rawData:Option[com.google.protobuf.ByteString]", "kind" : "val"}, {"label" : "docString", "tail" : ": Option[String]", "member" : "onnx.onnx.TensorProto.docString", "link" : "onnx\/onnx\/TensorProto.html#docString:Option[String]", "kind" : "val"}, {"label" : "name", "tail" : ": Option[String]", "member" : "onnx.onnx.TensorProto.name", "link" : "onnx\/onnx\/TensorProto.html#name:Option[String]", "kind" : "val"}, {"label" : "int64Data", "tail" : ": Seq[Long]", "member" : "onnx.onnx.TensorProto.int64Data", "link" : "onnx\/onnx\/TensorProto.html#int64Data:Seq[Long]", "kind" : "val"}, {"label" : "stringData", "tail" : ": Seq[ByteString]", "member" : "onnx.onnx.TensorProto.stringData", "link" : "onnx\/onnx\/TensorProto.html#stringData:Seq[com.google.protobuf.ByteString]", "kind" : "val"}, {"label" : "int32Data", "tail" : ": Seq[Int]", "member" : "onnx.onnx.TensorProto.int32Data", "link" : "onnx\/onnx\/TensorProto.html#int32Data:Seq[Int]", "kind" : "val"}, {"label" : "floatData", "tail" : ": Seq[Float]", "member" : "onnx.onnx.TensorProto.floatData", "link" : "onnx\/onnx\/TensorProto.html#floatData:Seq[Float]", "kind" : "val"}, {"label" : "segment", "tail" : ": Option[Segment]", "member" : "onnx.onnx.TensorProto.segment", "link" : "onnx\/onnx\/TensorProto.html#segment:Option[onnx.onnx.TensorProto.Segment]", "kind" : "val"}, {"label" : "dataType", "tail" : ": Option[Int]", "member" : "onnx.onnx.TensorProto.dataType", "link" : "onnx\/onnx\/TensorProto.html#dataType:Option[Int]", "kind" : "val"}, {"label" : "dims", "tail" : ": Seq[Long]", "member" : "onnx.onnx.TensorProto.dims", "link" : "onnx\/onnx\/TensorProto.html#dims:Seq[Long]", "kind" : "val"}, {"label" : "update", "tail" : "(ms: (Lens[TensorProto, TensorProto]) => Mutation[TensorProto]*): TensorProto", "member" : "scalapb.lenses.Updatable.update", "link" : "onnx\/onnx\/TensorProto.html#update(ms:scalapb.lenses.Lens[A,A]=>scalapb.lenses.Mutation[A]*):A", "kind" : "def"}, {"label" : "toByteString", "tail" : "(): ByteString", "member" : "scalapb.GeneratedMessage.toByteString", "link" : "onnx\/onnx\/TensorProto.html#toByteString:com.google.protobuf.ByteString", "kind" : "final def"}, {"label" : "toByteArray", "tail" : "(): Array[Byte]", "member" : "scalapb.GeneratedMessage.toByteArray", "link" : "onnx\/onnx\/TensorProto.html#toByteArray:Array[Byte]", "kind" : "final def"}, {"label" : "toPMessage", "tail" : "(): PMessage", "member" : "scalapb.GeneratedMessage.toPMessage", "link" : "onnx\/onnx\/TensorProto.html#toPMessage:scalapb.descriptors.PMessage", "kind" : "final def"}, {"label" : "writeDelimitedTo", "tail" : "(output: OutputStream): Unit", "member" : "scalapb.GeneratedMessage.writeDelimitedTo", "link" : "onnx\/onnx\/TensorProto.html#writeDelimitedTo(output:java.io.OutputStream):Unit", "kind" : "final def"}, {"label" : "writeTo", "tail" : "(output: OutputStream): Unit", "member" : "scalapb.GeneratedMessage.writeTo", "link" : "onnx\/onnx\/TensorProto.html#writeTo(output:java.io.OutputStream):Unit", "kind" : "final def"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "onnx\/onnx\/TensorProto.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "onnx\/onnx\/TensorProto.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "onnx\/onnx\/TensorProto.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "onnx\/onnx\/TensorProto.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "onnx\/onnx\/TensorProto.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "onnx\/onnx\/TensorProto.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "onnx\/onnx\/TensorProto.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "onnx\/onnx\/TensorProto.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "onnx\/onnx\/TensorProto.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "onnx\/onnx\/TensorProto.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "onnx\/onnx\/TensorProto.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "onnx\/onnx\/TensorProto.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "onnx\/onnx\/TensorProto.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "onnx\/onnx\/TensorProto.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "onnx\/onnx\/TensorProto.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "onnx\/onnx\/TensorProto.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "onnx\/onnx\/TensorProto.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "onnx\/onnx\/TensorProto.html", "kind" : "case class"}, {"name" : "onnx.onnx.TensorShapeProto", "shortDescription" : "Defines a tensor shape.", "object" : "onnx\/onnx\/TensorShapeProto$.html", "members_object" : [{"label" : "of", "tail" : "(dim: Seq[Dimension]): TensorShapeProto", "member" : "onnx.onnx.TensorShapeProto.of", "link" : "onnx\/onnx\/TensorShapeProto$.html#of(dim:Seq[onnx.onnx.TensorShapeProto.Dimension]):onnx.onnx.TensorShapeProto", "kind" : "def"}, {"label" : "DIM_FIELD_NUMBER", "tail" : ": Int(1)", "member" : "onnx.onnx.TensorShapeProto.DIM_FIELD_NUMBER", "link" : "onnx\/onnx\/TensorShapeProto$.html#DIM_FIELD_NUMBER:Int(1)", "kind" : "final val"}, {"label" : "TensorShapeProtoLens", "tail" : "", "member" : "onnx.onnx.TensorShapeProto.TensorShapeProtoLens", "link" : "onnx\/onnx\/TensorShapeProto$.html#TensorShapeProtoLens[UpperPB]extendsObjectLens[UpperPB,onnx.onnx.TensorShapeProto]", "kind" : "implicit class"}, {"label" : "Dimension", "tail" : "", "member" : "onnx.onnx.TensorShapeProto.Dimension", "link" : "onnx\/onnx\/TensorShapeProto$.html#Dimension", "kind" : "object"}, {"label" : "Dimension", "tail" : "", "member" : "onnx.onnx.TensorShapeProto.Dimension", "link" : "onnx\/onnx\/TensorShapeProto$.html#DimensionextendsGeneratedMessagewithUpdatable[onnx.onnx.TensorShapeProto.Dimension]withProductwithSerializable", "kind" : "final case class"}, {"label" : "defaultInstance", "tail" : ": TensorShapeProto", "member" : "onnx.onnx.TensorShapeProto.defaultInstance", "link" : "onnx\/onnx\/TensorShapeProto$.html#defaultInstance:onnx.onnx.TensorShapeProto", "kind" : "lazy val"}, {"label" : "enumCompanionForFieldNumber", "tail" : "(__fieldNumber: Int): GeneratedEnumCompanion[_]", "member" : "onnx.onnx.TensorShapeProto.enumCompanionForFieldNumber", "link" : "onnx\/onnx\/TensorShapeProto$.html#enumCompanionForFieldNumber(__fieldNumber:Int):scalapb.GeneratedEnumCompanion[_]", "kind" : "def"}, {"label" : "nestedMessagesCompanions", "tail" : ": Seq[GeneratedMessageCompanion[_ <: GeneratedMessage]]", "member" : "onnx.onnx.TensorShapeProto.nestedMessagesCompanions", "link" : "onnx\/onnx\/TensorShapeProto$.html#nestedMessagesCompanions:Seq[scalapb.GeneratedMessageCompanion[_<:scalapb.GeneratedMessage]]", "kind" : "lazy val"}, {"label" : "messageCompanionForFieldNumber", "tail" : "(__number: Int): GeneratedMessageCompanion[_]", "member" : "onnx.onnx.TensorShapeProto.messageCompanionForFieldNumber", "link" : "onnx\/onnx\/TensorShapeProto$.html#messageCompanionForFieldNumber(__number:Int):scalapb.GeneratedMessageCompanion[_]", "kind" : "def"}, {"label" : "scalaDescriptor", "tail" : "(): Descriptor", "member" : "onnx.onnx.TensorShapeProto.scalaDescriptor", "link" : "onnx\/onnx\/TensorShapeProto$.html#scalaDescriptor:scalapb.descriptors.Descriptor", "kind" : "def"}, {"label" : "javaDescriptor", "tail" : "(): Descriptor", "member" : "onnx.onnx.TensorShapeProto.javaDescriptor", "link" : "onnx\/onnx\/TensorShapeProto$.html#javaDescriptor:com.google.protobuf.Descriptors.Descriptor", "kind" : "def"}, {"label" : "messageReads", "tail" : "(): Reads[TensorShapeProto]", "member" : "onnx.onnx.TensorShapeProto.messageReads", "link" : "onnx\/onnx\/TensorShapeProto$.html#messageReads:scalapb.descriptors.Reads[onnx.onnx.TensorShapeProto]", "kind" : "implicit def"}, {"label" : "parseFrom", "tail" : "(_input__: CodedInputStream): TensorShapeProto", "member" : "onnx.onnx.TensorShapeProto.parseFrom", "link" : "onnx\/onnx\/TensorShapeProto$.html#parseFrom(_input__:com.google.protobuf.CodedInputStream):onnx.onnx.TensorShapeProto", "kind" : "def"}, {"label" : "messageCompanion", "tail" : "(): GeneratedMessageCompanion[TensorShapeProto]", "member" : "onnx.onnx.TensorShapeProto.messageCompanion", "link" : "onnx\/onnx\/TensorShapeProto$.html#messageCompanion:scalapb.GeneratedMessageCompanion[onnx.onnx.TensorShapeProto]", "kind" : "implicit def"}, {"label" : "fromAscii", "tail" : "(s: String): TensorShapeProto", "member" : "scalapb.GeneratedMessageCompanion.fromAscii", "link" : "onnx\/onnx\/TensorShapeProto$.html#fromAscii(s:String):A", "kind" : "def"}, {"label" : "validateAscii", "tail" : "(s: String): Either[TextFormatError, TensorShapeProto]", "member" : "scalapb.GeneratedMessageCompanion.validateAscii", "link" : "onnx\/onnx\/TensorShapeProto$.html#validateAscii(s:String):Either[scalapb.TextFormatError,A]", "kind" : "def"}, {"label" : "enumCompanionForField", "tail" : "(field: FieldDescriptor): GeneratedEnumCompanion[_]", "member" : "scalapb.GeneratedMessageCompanion.enumCompanionForField", "link" : "onnx\/onnx\/TensorShapeProto$.html#enumCompanionForField(field:com.google.protobuf.Descriptors.FieldDescriptor):scalapb.GeneratedEnumCompanion[_]", "kind" : "def"}, {"label" : "messageCompanionForField", "tail" : "(field: FieldDescriptor): GeneratedMessageCompanion[_]", "member" : "scalapb.GeneratedMessageCompanion.messageCompanionForField", "link" : "onnx\/onnx\/TensorShapeProto$.html#messageCompanionForField(field:com.google.protobuf.Descriptors.FieldDescriptor):scalapb.GeneratedMessageCompanion[_]", "kind" : "def"}, {"label" : "toByteArray", "tail" : "(a: TensorShapeProto): Array[Byte]", "member" : "scalapb.GeneratedMessageCompanion.toByteArray", "link" : "onnx\/onnx\/TensorShapeProto$.html#toByteArray(a:A):Array[Byte]", "kind" : "def"}, {"label" : "validate", "tail" : "(s: Array[Byte]): Try[TensorShapeProto]", "member" : "scalapb.GeneratedMessageCompanion.validate", "link" : "onnx\/onnx\/TensorShapeProto$.html#validate(s:Array[Byte]):scala.util.Try[A]", "kind" : "def"}, {"label" : "merge", "tail" : "(a: TensorShapeProto, input: CodedInputStream): TensorShapeProto", "member" : "scalapb.GeneratedMessageCompanion.merge", "link" : "onnx\/onnx\/TensorShapeProto$.html#merge(a:A,input:com.google.protobuf.CodedInputStream):A", "kind" : "def"}, {"label" : "parseFrom", "tail" : "(s: Array[Byte]): TensorShapeProto", "member" : "scalapb.GeneratedMessageCompanion.parseFrom", "link" : "onnx\/onnx\/TensorShapeProto$.html#parseFrom(s:Array[Byte]):A", "kind" : "def"}, {"label" : "streamFromDelimitedInput", "tail" : "(input: InputStream): Stream[TensorShapeProto]", "member" : "scalapb.GeneratedMessageCompanion.streamFromDelimitedInput", "link" : "onnx\/onnx\/TensorShapeProto$.html#streamFromDelimitedInput(input:java.io.InputStream):Stream[A]", "kind" : "def"}, {"label" : "parseDelimitedFrom", "tail" : "(input: InputStream): Option[TensorShapeProto]", "member" : "scalapb.GeneratedMessageCompanion.parseDelimitedFrom", "link" : "onnx\/onnx\/TensorShapeProto$.html#parseDelimitedFrom(input:java.io.InputStream):Option[A]", "kind" : "def"}, {"label" : "parseDelimitedFrom", "tail" : "(input: CodedInputStream): Option[TensorShapeProto]", "member" : "scalapb.GeneratedMessageCompanion.parseDelimitedFrom", "link" : "onnx\/onnx\/TensorShapeProto$.html#parseDelimitedFrom(input:com.google.protobuf.CodedInputStream):Option[A]", "kind" : "def"}, {"label" : "parseFrom", "tail" : "(input: InputStream): TensorShapeProto", "member" : "scalapb.GeneratedMessageCompanion.parseFrom", "link" : "onnx\/onnx\/TensorShapeProto$.html#parseFrom(input:java.io.InputStream):A", "kind" : "def"}, {"label" : "ValueType", "tail" : "", "member" : "scalapb.GeneratedMessageCompanion.ValueType", "link" : "onnx\/onnx\/TensorShapeProto$.html#ValueType=A", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "onnx\/onnx\/TensorShapeProto$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "onnx\/onnx\/TensorShapeProto$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "onnx\/onnx\/TensorShapeProto$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "onnx\/onnx\/TensorShapeProto$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "onnx\/onnx\/TensorShapeProto$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "onnx\/onnx\/TensorShapeProto$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "onnx\/onnx\/TensorShapeProto$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "onnx\/onnx\/TensorShapeProto$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "onnx\/onnx\/TensorShapeProto$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "onnx\/onnx\/TensorShapeProto$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "onnx\/onnx\/TensorShapeProto$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "onnx\/onnx\/TensorShapeProto$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "onnx\/onnx\/TensorShapeProto$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "onnx\/onnx\/TensorShapeProto$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "onnx\/onnx\/TensorShapeProto$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "onnx\/onnx\/TensorShapeProto$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "onnx\/onnx\/TensorShapeProto$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "onnx\/onnx\/TensorShapeProto$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "onnx\/onnx\/TensorShapeProto$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "companion", "tail" : "(): TensorShapeProto.type", "member" : "onnx.onnx.TensorShapeProto.companion", "link" : "onnx\/onnx\/TensorShapeProto.html#companion:onnx.onnx.TensorShapeProto.type", "kind" : "def"}, {"label" : "toProtoString", "tail" : "(): String", "member" : "onnx.onnx.TensorShapeProto.toProtoString", "link" : "onnx\/onnx\/TensorShapeProto.html#toProtoString:String", "kind" : "def"}, {"label" : "getField", "tail" : "(__field: FieldDescriptor): PValue", "member" : "onnx.onnx.TensorShapeProto.getField", "link" : "onnx\/onnx\/TensorShapeProto.html#getField(__field:scalapb.descriptors.FieldDescriptor):scalapb.descriptors.PValue", "kind" : "def"}, {"label" : "getFieldByNumber", "tail" : "(__fieldNumber: Int): Any", "member" : "onnx.onnx.TensorShapeProto.getFieldByNumber", "link" : "onnx\/onnx\/TensorShapeProto.html#getFieldByNumber(__fieldNumber:Int):Any", "kind" : "def"}, {"label" : "discardUnknownFields", "tail" : "(): TensorShapeProto", "member" : "onnx.onnx.TensorShapeProto.discardUnknownFields", "link" : "onnx\/onnx\/TensorShapeProto.html#discardUnknownFields:onnx.onnx.TensorShapeProto", "kind" : "def"}, {"label" : "withUnknownFields", "tail" : "(__v: UnknownFieldSet): TensorShapeProto", "member" : "onnx.onnx.TensorShapeProto.withUnknownFields", "link" : "onnx\/onnx\/TensorShapeProto.html#withUnknownFields(__v:scalapb.UnknownFieldSet):onnx.onnx.TensorShapeProto", "kind" : "def"}, {"label" : "withDim", "tail" : "(__v: Seq[Dimension]): TensorShapeProto", "member" : "onnx.onnx.TensorShapeProto.withDim", "link" : "onnx\/onnx\/TensorShapeProto.html#withDim(__v:Seq[onnx.onnx.TensorShapeProto.Dimension]):onnx.onnx.TensorShapeProto", "kind" : "def"}, {"label" : "addAllDim", "tail" : "(__vs: Iterable[Dimension]): TensorShapeProto", "member" : "onnx.onnx.TensorShapeProto.addAllDim", "link" : "onnx\/onnx\/TensorShapeProto.html#addAllDim(__vs:Iterable[onnx.onnx.TensorShapeProto.Dimension]):onnx.onnx.TensorShapeProto", "kind" : "def"}, {"label" : "addDim", "tail" : "(__vs: Dimension*): TensorShapeProto", "member" : "onnx.onnx.TensorShapeProto.addDim", "link" : "onnx\/onnx\/TensorShapeProto.html#addDim(__vs:onnx.onnx.TensorShapeProto.Dimension*):onnx.onnx.TensorShapeProto", "kind" : "def"}, {"label" : "clearDim", "tail" : "(): TensorShapeProto", "member" : "onnx.onnx.TensorShapeProto.clearDim", "link" : "onnx\/onnx\/TensorShapeProto.html#clearDim:onnx.onnx.TensorShapeProto", "kind" : "def"}, {"label" : "writeTo", "tail" : "(_output__: CodedOutputStream): Unit", "member" : "onnx.onnx.TensorShapeProto.writeTo", "link" : "onnx\/onnx\/TensorShapeProto.html#writeTo(_output__:com.google.protobuf.CodedOutputStream):Unit", "kind" : "def"}, {"label" : "serializedSize", "tail" : "(): Int", "member" : "onnx.onnx.TensorShapeProto.serializedSize", "link" : "onnx\/onnx\/TensorShapeProto.html#serializedSize:Int", "kind" : "def"}, {"member" : "onnx.onnx.TensorShapeProto#<init>", "error" : "unsupported entity"}, {"label" : "unknownFields", "tail" : ": UnknownFieldSet", "member" : "onnx.onnx.TensorShapeProto.unknownFields", "link" : "onnx\/onnx\/TensorShapeProto.html#unknownFields:scalapb.UnknownFieldSet", "kind" : "val"}, {"label" : "dim", "tail" : ": Seq[Dimension]", "member" : "onnx.onnx.TensorShapeProto.dim", "link" : "onnx\/onnx\/TensorShapeProto.html#dim:Seq[onnx.onnx.TensorShapeProto.Dimension]", "kind" : "val"}, {"label" : "update", "tail" : "(ms: (Lens[TensorShapeProto, TensorShapeProto]) => Mutation[TensorShapeProto]*): TensorShapeProto", "member" : "scalapb.lenses.Updatable.update", "link" : "onnx\/onnx\/TensorShapeProto.html#update(ms:scalapb.lenses.Lens[A,A]=>scalapb.lenses.Mutation[A]*):A", "kind" : "def"}, {"label" : "toByteString", "tail" : "(): ByteString", "member" : "scalapb.GeneratedMessage.toByteString", "link" : "onnx\/onnx\/TensorShapeProto.html#toByteString:com.google.protobuf.ByteString", "kind" : "final def"}, {"label" : "toByteArray", "tail" : "(): Array[Byte]", "member" : "scalapb.GeneratedMessage.toByteArray", "link" : "onnx\/onnx\/TensorShapeProto.html#toByteArray:Array[Byte]", "kind" : "final def"}, {"label" : "toPMessage", "tail" : "(): PMessage", "member" : "scalapb.GeneratedMessage.toPMessage", "link" : "onnx\/onnx\/TensorShapeProto.html#toPMessage:scalapb.descriptors.PMessage", "kind" : "final def"}, {"label" : "writeDelimitedTo", "tail" : "(output: OutputStream): Unit", "member" : "scalapb.GeneratedMessage.writeDelimitedTo", "link" : "onnx\/onnx\/TensorShapeProto.html#writeDelimitedTo(output:java.io.OutputStream):Unit", "kind" : "final def"}, {"label" : "writeTo", "tail" : "(output: OutputStream): Unit", "member" : "scalapb.GeneratedMessage.writeTo", "link" : "onnx\/onnx\/TensorShapeProto.html#writeTo(output:java.io.OutputStream):Unit", "kind" : "final def"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "onnx\/onnx\/TensorShapeProto.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "onnx\/onnx\/TensorShapeProto.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "onnx\/onnx\/TensorShapeProto.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "onnx\/onnx\/TensorShapeProto.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "onnx\/onnx\/TensorShapeProto.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "onnx\/onnx\/TensorShapeProto.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "onnx\/onnx\/TensorShapeProto.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "onnx\/onnx\/TensorShapeProto.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "onnx\/onnx\/TensorShapeProto.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "onnx\/onnx\/TensorShapeProto.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "onnx\/onnx\/TensorShapeProto.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "onnx\/onnx\/TensorShapeProto.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "onnx\/onnx\/TensorShapeProto.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "onnx\/onnx\/TensorShapeProto.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "onnx\/onnx\/TensorShapeProto.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "onnx\/onnx\/TensorShapeProto.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "onnx\/onnx\/TensorShapeProto.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "onnx\/onnx\/TensorShapeProto.html", "kind" : "case class"}, {"name" : "onnx.onnx.TrainingInfoProto", "shortDescription" : "Training informationTrainingInfoProto stores information for training a model.", "object" : "onnx\/onnx\/TrainingInfoProto$.html", "members_object" : [{"label" : "of", "tail" : "(initialization: Option[GraphProto], algorithm: Option[GraphProto], initializationBinding: Seq[StringStringEntryProto], updateBinding: Seq[StringStringEntryProto]): TrainingInfoProto", "member" : "onnx.onnx.TrainingInfoProto.of", "link" : "onnx\/onnx\/TrainingInfoProto$.html#of(initialization:Option[onnx.onnx.GraphProto],algorithm:Option[onnx.onnx.GraphProto],initializationBinding:Seq[onnx.onnx.StringStringEntryProto],updateBinding:Seq[onnx.onnx.StringStringEntryProto]):onnx.onnx.TrainingInfoProto", "kind" : "def"}, {"label" : "UPDATE_BINDING_FIELD_NUMBER", "tail" : ": Int(4)", "member" : "onnx.onnx.TrainingInfoProto.UPDATE_BINDING_FIELD_NUMBER", "link" : "onnx\/onnx\/TrainingInfoProto$.html#UPDATE_BINDING_FIELD_NUMBER:Int(4)", "kind" : "final val"}, {"label" : "INITIALIZATION_BINDING_FIELD_NUMBER", "tail" : ": Int(3)", "member" : "onnx.onnx.TrainingInfoProto.INITIALIZATION_BINDING_FIELD_NUMBER", "link" : "onnx\/onnx\/TrainingInfoProto$.html#INITIALIZATION_BINDING_FIELD_NUMBER:Int(3)", "kind" : "final val"}, {"label" : "ALGORITHM_FIELD_NUMBER", "tail" : ": Int(2)", "member" : "onnx.onnx.TrainingInfoProto.ALGORITHM_FIELD_NUMBER", "link" : "onnx\/onnx\/TrainingInfoProto$.html#ALGORITHM_FIELD_NUMBER:Int(2)", "kind" : "final val"}, {"label" : "INITIALIZATION_FIELD_NUMBER", "tail" : ": Int(1)", "member" : "onnx.onnx.TrainingInfoProto.INITIALIZATION_FIELD_NUMBER", "link" : "onnx\/onnx\/TrainingInfoProto$.html#INITIALIZATION_FIELD_NUMBER:Int(1)", "kind" : "final val"}, {"label" : "TrainingInfoProtoLens", "tail" : "", "member" : "onnx.onnx.TrainingInfoProto.TrainingInfoProtoLens", "link" : "onnx\/onnx\/TrainingInfoProto$.html#TrainingInfoProtoLens[UpperPB]extendsObjectLens[UpperPB,onnx.onnx.TrainingInfoProto]", "kind" : "implicit class"}, {"label" : "defaultInstance", "tail" : ": TrainingInfoProto", "member" : "onnx.onnx.TrainingInfoProto.defaultInstance", "link" : "onnx\/onnx\/TrainingInfoProto$.html#defaultInstance:onnx.onnx.TrainingInfoProto", "kind" : "lazy val"}, {"label" : "enumCompanionForFieldNumber", "tail" : "(__fieldNumber: Int): GeneratedEnumCompanion[_]", "member" : "onnx.onnx.TrainingInfoProto.enumCompanionForFieldNumber", "link" : "onnx\/onnx\/TrainingInfoProto$.html#enumCompanionForFieldNumber(__fieldNumber:Int):scalapb.GeneratedEnumCompanion[_]", "kind" : "def"}, {"label" : "nestedMessagesCompanions", "tail" : ": Seq[GeneratedMessageCompanion[_ <: GeneratedMessage]]", "member" : "onnx.onnx.TrainingInfoProto.nestedMessagesCompanions", "link" : "onnx\/onnx\/TrainingInfoProto$.html#nestedMessagesCompanions:Seq[scalapb.GeneratedMessageCompanion[_<:scalapb.GeneratedMessage]]", "kind" : "lazy val"}, {"label" : "messageCompanionForFieldNumber", "tail" : "(__number: Int): GeneratedMessageCompanion[_]", "member" : "onnx.onnx.TrainingInfoProto.messageCompanionForFieldNumber", "link" : "onnx\/onnx\/TrainingInfoProto$.html#messageCompanionForFieldNumber(__number:Int):scalapb.GeneratedMessageCompanion[_]", "kind" : "def"}, {"label" : "scalaDescriptor", "tail" : "(): Descriptor", "member" : "onnx.onnx.TrainingInfoProto.scalaDescriptor", "link" : "onnx\/onnx\/TrainingInfoProto$.html#scalaDescriptor:scalapb.descriptors.Descriptor", "kind" : "def"}, {"label" : "javaDescriptor", "tail" : "(): Descriptor", "member" : "onnx.onnx.TrainingInfoProto.javaDescriptor", "link" : "onnx\/onnx\/TrainingInfoProto$.html#javaDescriptor:com.google.protobuf.Descriptors.Descriptor", "kind" : "def"}, {"label" : "messageReads", "tail" : "(): Reads[TrainingInfoProto]", "member" : "onnx.onnx.TrainingInfoProto.messageReads", "link" : "onnx\/onnx\/TrainingInfoProto$.html#messageReads:scalapb.descriptors.Reads[onnx.onnx.TrainingInfoProto]", "kind" : "implicit def"}, {"label" : "parseFrom", "tail" : "(_input__: CodedInputStream): TrainingInfoProto", "member" : "onnx.onnx.TrainingInfoProto.parseFrom", "link" : "onnx\/onnx\/TrainingInfoProto$.html#parseFrom(_input__:com.google.protobuf.CodedInputStream):onnx.onnx.TrainingInfoProto", "kind" : "def"}, {"label" : "messageCompanion", "tail" : "(): GeneratedMessageCompanion[TrainingInfoProto]", "member" : "onnx.onnx.TrainingInfoProto.messageCompanion", "link" : "onnx\/onnx\/TrainingInfoProto$.html#messageCompanion:scalapb.GeneratedMessageCompanion[onnx.onnx.TrainingInfoProto]", "kind" : "implicit def"}, {"label" : "fromAscii", "tail" : "(s: String): TrainingInfoProto", "member" : "scalapb.GeneratedMessageCompanion.fromAscii", "link" : "onnx\/onnx\/TrainingInfoProto$.html#fromAscii(s:String):A", "kind" : "def"}, {"label" : "validateAscii", "tail" : "(s: String): Either[TextFormatError, TrainingInfoProto]", "member" : "scalapb.GeneratedMessageCompanion.validateAscii", "link" : "onnx\/onnx\/TrainingInfoProto$.html#validateAscii(s:String):Either[scalapb.TextFormatError,A]", "kind" : "def"}, {"label" : "enumCompanionForField", "tail" : "(field: FieldDescriptor): GeneratedEnumCompanion[_]", "member" : "scalapb.GeneratedMessageCompanion.enumCompanionForField", "link" : "onnx\/onnx\/TrainingInfoProto$.html#enumCompanionForField(field:com.google.protobuf.Descriptors.FieldDescriptor):scalapb.GeneratedEnumCompanion[_]", "kind" : "def"}, {"label" : "messageCompanionForField", "tail" : "(field: FieldDescriptor): GeneratedMessageCompanion[_]", "member" : "scalapb.GeneratedMessageCompanion.messageCompanionForField", "link" : "onnx\/onnx\/TrainingInfoProto$.html#messageCompanionForField(field:com.google.protobuf.Descriptors.FieldDescriptor):scalapb.GeneratedMessageCompanion[_]", "kind" : "def"}, {"label" : "toByteArray", "tail" : "(a: TrainingInfoProto): Array[Byte]", "member" : "scalapb.GeneratedMessageCompanion.toByteArray", "link" : "onnx\/onnx\/TrainingInfoProto$.html#toByteArray(a:A):Array[Byte]", "kind" : "def"}, {"label" : "validate", "tail" : "(s: Array[Byte]): Try[TrainingInfoProto]", "member" : "scalapb.GeneratedMessageCompanion.validate", "link" : "onnx\/onnx\/TrainingInfoProto$.html#validate(s:Array[Byte]):scala.util.Try[A]", "kind" : "def"}, {"label" : "merge", "tail" : "(a: TrainingInfoProto, input: CodedInputStream): TrainingInfoProto", "member" : "scalapb.GeneratedMessageCompanion.merge", "link" : "onnx\/onnx\/TrainingInfoProto$.html#merge(a:A,input:com.google.protobuf.CodedInputStream):A", "kind" : "def"}, {"label" : "parseFrom", "tail" : "(s: Array[Byte]): TrainingInfoProto", "member" : "scalapb.GeneratedMessageCompanion.parseFrom", "link" : "onnx\/onnx\/TrainingInfoProto$.html#parseFrom(s:Array[Byte]):A", "kind" : "def"}, {"label" : "streamFromDelimitedInput", "tail" : "(input: InputStream): Stream[TrainingInfoProto]", "member" : "scalapb.GeneratedMessageCompanion.streamFromDelimitedInput", "link" : "onnx\/onnx\/TrainingInfoProto$.html#streamFromDelimitedInput(input:java.io.InputStream):Stream[A]", "kind" : "def"}, {"label" : "parseDelimitedFrom", "tail" : "(input: InputStream): Option[TrainingInfoProto]", "member" : "scalapb.GeneratedMessageCompanion.parseDelimitedFrom", "link" : "onnx\/onnx\/TrainingInfoProto$.html#parseDelimitedFrom(input:java.io.InputStream):Option[A]", "kind" : "def"}, {"label" : "parseDelimitedFrom", "tail" : "(input: CodedInputStream): Option[TrainingInfoProto]", "member" : "scalapb.GeneratedMessageCompanion.parseDelimitedFrom", "link" : "onnx\/onnx\/TrainingInfoProto$.html#parseDelimitedFrom(input:com.google.protobuf.CodedInputStream):Option[A]", "kind" : "def"}, {"label" : "parseFrom", "tail" : "(input: InputStream): TrainingInfoProto", "member" : "scalapb.GeneratedMessageCompanion.parseFrom", "link" : "onnx\/onnx\/TrainingInfoProto$.html#parseFrom(input:java.io.InputStream):A", "kind" : "def"}, {"label" : "ValueType", "tail" : "", "member" : "scalapb.GeneratedMessageCompanion.ValueType", "link" : "onnx\/onnx\/TrainingInfoProto$.html#ValueType=A", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "onnx\/onnx\/TrainingInfoProto$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "onnx\/onnx\/TrainingInfoProto$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "onnx\/onnx\/TrainingInfoProto$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "onnx\/onnx\/TrainingInfoProto$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "onnx\/onnx\/TrainingInfoProto$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "onnx\/onnx\/TrainingInfoProto$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "onnx\/onnx\/TrainingInfoProto$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "onnx\/onnx\/TrainingInfoProto$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "onnx\/onnx\/TrainingInfoProto$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "onnx\/onnx\/TrainingInfoProto$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "onnx\/onnx\/TrainingInfoProto$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "onnx\/onnx\/TrainingInfoProto$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "onnx\/onnx\/TrainingInfoProto$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "onnx\/onnx\/TrainingInfoProto$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "onnx\/onnx\/TrainingInfoProto$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "onnx\/onnx\/TrainingInfoProto$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "onnx\/onnx\/TrainingInfoProto$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "onnx\/onnx\/TrainingInfoProto$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "onnx\/onnx\/TrainingInfoProto$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "companion", "tail" : "(): TrainingInfoProto.type", "member" : "onnx.onnx.TrainingInfoProto.companion", "link" : "onnx\/onnx\/TrainingInfoProto.html#companion:onnx.onnx.TrainingInfoProto.type", "kind" : "def"}, {"label" : "toProtoString", "tail" : "(): String", "member" : "onnx.onnx.TrainingInfoProto.toProtoString", "link" : "onnx\/onnx\/TrainingInfoProto.html#toProtoString:String", "kind" : "def"}, {"label" : "getField", "tail" : "(__field: FieldDescriptor): PValue", "member" : "onnx.onnx.TrainingInfoProto.getField", "link" : "onnx\/onnx\/TrainingInfoProto.html#getField(__field:scalapb.descriptors.FieldDescriptor):scalapb.descriptors.PValue", "kind" : "def"}, {"label" : "getFieldByNumber", "tail" : "(__fieldNumber: Int): Any", "member" : "onnx.onnx.TrainingInfoProto.getFieldByNumber", "link" : "onnx\/onnx\/TrainingInfoProto.html#getFieldByNumber(__fieldNumber:Int):Any", "kind" : "def"}, {"label" : "discardUnknownFields", "tail" : "(): TrainingInfoProto", "member" : "onnx.onnx.TrainingInfoProto.discardUnknownFields", "link" : "onnx\/onnx\/TrainingInfoProto.html#discardUnknownFields:onnx.onnx.TrainingInfoProto", "kind" : "def"}, {"label" : "withUnknownFields", "tail" : "(__v: UnknownFieldSet): TrainingInfoProto", "member" : "onnx.onnx.TrainingInfoProto.withUnknownFields", "link" : "onnx\/onnx\/TrainingInfoProto.html#withUnknownFields(__v:scalapb.UnknownFieldSet):onnx.onnx.TrainingInfoProto", "kind" : "def"}, {"label" : "withUpdateBinding", "tail" : "(__v: Seq[StringStringEntryProto]): TrainingInfoProto", "member" : "onnx.onnx.TrainingInfoProto.withUpdateBinding", "link" : "onnx\/onnx\/TrainingInfoProto.html#withUpdateBinding(__v:Seq[onnx.onnx.StringStringEntryProto]):onnx.onnx.TrainingInfoProto", "kind" : "def"}, {"label" : "addAllUpdateBinding", "tail" : "(__vs: Iterable[StringStringEntryProto]): TrainingInfoProto", "member" : "onnx.onnx.TrainingInfoProto.addAllUpdateBinding", "link" : "onnx\/onnx\/TrainingInfoProto.html#addAllUpdateBinding(__vs:Iterable[onnx.onnx.StringStringEntryProto]):onnx.onnx.TrainingInfoProto", "kind" : "def"}, {"label" : "addUpdateBinding", "tail" : "(__vs: StringStringEntryProto*): TrainingInfoProto", "member" : "onnx.onnx.TrainingInfoProto.addUpdateBinding", "link" : "onnx\/onnx\/TrainingInfoProto.html#addUpdateBinding(__vs:onnx.onnx.StringStringEntryProto*):onnx.onnx.TrainingInfoProto", "kind" : "def"}, {"label" : "clearUpdateBinding", "tail" : "(): TrainingInfoProto", "member" : "onnx.onnx.TrainingInfoProto.clearUpdateBinding", "link" : "onnx\/onnx\/TrainingInfoProto.html#clearUpdateBinding:onnx.onnx.TrainingInfoProto", "kind" : "def"}, {"label" : "withInitializationBinding", "tail" : "(__v: Seq[StringStringEntryProto]): TrainingInfoProto", "member" : "onnx.onnx.TrainingInfoProto.withInitializationBinding", "link" : "onnx\/onnx\/TrainingInfoProto.html#withInitializationBinding(__v:Seq[onnx.onnx.StringStringEntryProto]):onnx.onnx.TrainingInfoProto", "kind" : "def"}, {"label" : "addAllInitializationBinding", "tail" : "(__vs: Iterable[StringStringEntryProto]): TrainingInfoProto", "member" : "onnx.onnx.TrainingInfoProto.addAllInitializationBinding", "link" : "onnx\/onnx\/TrainingInfoProto.html#addAllInitializationBinding(__vs:Iterable[onnx.onnx.StringStringEntryProto]):onnx.onnx.TrainingInfoProto", "kind" : "def"}, {"label" : "addInitializationBinding", "tail" : "(__vs: StringStringEntryProto*): TrainingInfoProto", "member" : "onnx.onnx.TrainingInfoProto.addInitializationBinding", "link" : "onnx\/onnx\/TrainingInfoProto.html#addInitializationBinding(__vs:onnx.onnx.StringStringEntryProto*):onnx.onnx.TrainingInfoProto", "kind" : "def"}, {"label" : "clearInitializationBinding", "tail" : "(): TrainingInfoProto", "member" : "onnx.onnx.TrainingInfoProto.clearInitializationBinding", "link" : "onnx\/onnx\/TrainingInfoProto.html#clearInitializationBinding:onnx.onnx.TrainingInfoProto", "kind" : "def"}, {"label" : "withAlgorithm", "tail" : "(__v: GraphProto): TrainingInfoProto", "member" : "onnx.onnx.TrainingInfoProto.withAlgorithm", "link" : "onnx\/onnx\/TrainingInfoProto.html#withAlgorithm(__v:onnx.onnx.GraphProto):onnx.onnx.TrainingInfoProto", "kind" : "def"}, {"label" : "clearAlgorithm", "tail" : "(): TrainingInfoProto", "member" : "onnx.onnx.TrainingInfoProto.clearAlgorithm", "link" : "onnx\/onnx\/TrainingInfoProto.html#clearAlgorithm:onnx.onnx.TrainingInfoProto", "kind" : "def"}, {"label" : "getAlgorithm", "tail" : "(): GraphProto", "member" : "onnx.onnx.TrainingInfoProto.getAlgorithm", "link" : "onnx\/onnx\/TrainingInfoProto.html#getAlgorithm:onnx.onnx.GraphProto", "kind" : "def"}, {"label" : "withInitialization", "tail" : "(__v: GraphProto): TrainingInfoProto", "member" : "onnx.onnx.TrainingInfoProto.withInitialization", "link" : "onnx\/onnx\/TrainingInfoProto.html#withInitialization(__v:onnx.onnx.GraphProto):onnx.onnx.TrainingInfoProto", "kind" : "def"}, {"label" : "clearInitialization", "tail" : "(): TrainingInfoProto", "member" : "onnx.onnx.TrainingInfoProto.clearInitialization", "link" : "onnx\/onnx\/TrainingInfoProto.html#clearInitialization:onnx.onnx.TrainingInfoProto", "kind" : "def"}, {"label" : "getInitialization", "tail" : "(): GraphProto", "member" : "onnx.onnx.TrainingInfoProto.getInitialization", "link" : "onnx\/onnx\/TrainingInfoProto.html#getInitialization:onnx.onnx.GraphProto", "kind" : "def"}, {"label" : "writeTo", "tail" : "(_output__: CodedOutputStream): Unit", "member" : "onnx.onnx.TrainingInfoProto.writeTo", "link" : "onnx\/onnx\/TrainingInfoProto.html#writeTo(_output__:com.google.protobuf.CodedOutputStream):Unit", "kind" : "def"}, {"label" : "serializedSize", "tail" : "(): Int", "member" : "onnx.onnx.TrainingInfoProto.serializedSize", "link" : "onnx\/onnx\/TrainingInfoProto.html#serializedSize:Int", "kind" : "def"}, {"member" : "onnx.onnx.TrainingInfoProto#<init>", "error" : "unsupported entity"}, {"label" : "unknownFields", "tail" : ": UnknownFieldSet", "member" : "onnx.onnx.TrainingInfoProto.unknownFields", "link" : "onnx\/onnx\/TrainingInfoProto.html#unknownFields:scalapb.UnknownFieldSet", "kind" : "val"}, {"label" : "updateBinding", "tail" : ": Seq[StringStringEntryProto]", "member" : "onnx.onnx.TrainingInfoProto.updateBinding", "link" : "onnx\/onnx\/TrainingInfoProto.html#updateBinding:Seq[onnx.onnx.StringStringEntryProto]", "kind" : "val"}, {"label" : "initializationBinding", "tail" : ": Seq[StringStringEntryProto]", "member" : "onnx.onnx.TrainingInfoProto.initializationBinding", "link" : "onnx\/onnx\/TrainingInfoProto.html#initializationBinding:Seq[onnx.onnx.StringStringEntryProto]", "kind" : "val"}, {"label" : "algorithm", "tail" : ": Option[GraphProto]", "member" : "onnx.onnx.TrainingInfoProto.algorithm", "link" : "onnx\/onnx\/TrainingInfoProto.html#algorithm:Option[onnx.onnx.GraphProto]", "kind" : "val"}, {"label" : "initialization", "tail" : ": Option[GraphProto]", "member" : "onnx.onnx.TrainingInfoProto.initialization", "link" : "onnx\/onnx\/TrainingInfoProto.html#initialization:Option[onnx.onnx.GraphProto]", "kind" : "val"}, {"label" : "update", "tail" : "(ms: (Lens[TrainingInfoProto, TrainingInfoProto]) => Mutation[TrainingInfoProto]*): TrainingInfoProto", "member" : "scalapb.lenses.Updatable.update", "link" : "onnx\/onnx\/TrainingInfoProto.html#update(ms:scalapb.lenses.Lens[A,A]=>scalapb.lenses.Mutation[A]*):A", "kind" : "def"}, {"label" : "toByteString", "tail" : "(): ByteString", "member" : "scalapb.GeneratedMessage.toByteString", "link" : "onnx\/onnx\/TrainingInfoProto.html#toByteString:com.google.protobuf.ByteString", "kind" : "final def"}, {"label" : "toByteArray", "tail" : "(): Array[Byte]", "member" : "scalapb.GeneratedMessage.toByteArray", "link" : "onnx\/onnx\/TrainingInfoProto.html#toByteArray:Array[Byte]", "kind" : "final def"}, {"label" : "toPMessage", "tail" : "(): PMessage", "member" : "scalapb.GeneratedMessage.toPMessage", "link" : "onnx\/onnx\/TrainingInfoProto.html#toPMessage:scalapb.descriptors.PMessage", "kind" : "final def"}, {"label" : "writeDelimitedTo", "tail" : "(output: OutputStream): Unit", "member" : "scalapb.GeneratedMessage.writeDelimitedTo", "link" : "onnx\/onnx\/TrainingInfoProto.html#writeDelimitedTo(output:java.io.OutputStream):Unit", "kind" : "final def"}, {"label" : "writeTo", "tail" : "(output: OutputStream): Unit", "member" : "scalapb.GeneratedMessage.writeTo", "link" : "onnx\/onnx\/TrainingInfoProto.html#writeTo(output:java.io.OutputStream):Unit", "kind" : "final def"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "onnx\/onnx\/TrainingInfoProto.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "onnx\/onnx\/TrainingInfoProto.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "onnx\/onnx\/TrainingInfoProto.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "onnx\/onnx\/TrainingInfoProto.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "onnx\/onnx\/TrainingInfoProto.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "onnx\/onnx\/TrainingInfoProto.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "onnx\/onnx\/TrainingInfoProto.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "onnx\/onnx\/TrainingInfoProto.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "onnx\/onnx\/TrainingInfoProto.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "onnx\/onnx\/TrainingInfoProto.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "onnx\/onnx\/TrainingInfoProto.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "onnx\/onnx\/TrainingInfoProto.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "onnx\/onnx\/TrainingInfoProto.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "onnx\/onnx\/TrainingInfoProto.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "onnx\/onnx\/TrainingInfoProto.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "onnx\/onnx\/TrainingInfoProto.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "onnx\/onnx\/TrainingInfoProto.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "onnx\/onnx\/TrainingInfoProto.html", "kind" : "case class"}, {"name" : "onnx.onnx.TypeProto", "shortDescription" : "Types", "object" : "onnx\/onnx\/TypeProto$.html", "members_object" : [{"label" : "of", "tail" : "(value: Value, denotation: Option[String]): TypeProto", "member" : "onnx.onnx.TypeProto.of", "link" : "onnx\/onnx\/TypeProto$.html#of(value:onnx.onnx.TypeProto.Value,denotation:Option[String]):onnx.onnx.TypeProto", "kind" : "def"}, {"label" : "DENOTATION_FIELD_NUMBER", "tail" : ": Int(6)", "member" : "onnx.onnx.TypeProto.DENOTATION_FIELD_NUMBER", "link" : "onnx\/onnx\/TypeProto$.html#DENOTATION_FIELD_NUMBER:Int(6)", "kind" : "final val"}, {"label" : "MAP_TYPE_FIELD_NUMBER", "tail" : ": Int(5)", "member" : "onnx.onnx.TypeProto.MAP_TYPE_FIELD_NUMBER", "link" : "onnx\/onnx\/TypeProto$.html#MAP_TYPE_FIELD_NUMBER:Int(5)", "kind" : "final val"}, {"label" : "SEQUENCE_TYPE_FIELD_NUMBER", "tail" : ": Int(4)", "member" : "onnx.onnx.TypeProto.SEQUENCE_TYPE_FIELD_NUMBER", "link" : "onnx\/onnx\/TypeProto$.html#SEQUENCE_TYPE_FIELD_NUMBER:Int(4)", "kind" : "final val"}, {"label" : "TENSOR_TYPE_FIELD_NUMBER", "tail" : ": Int(1)", "member" : "onnx.onnx.TypeProto.TENSOR_TYPE_FIELD_NUMBER", "link" : "onnx\/onnx\/TypeProto$.html#TENSOR_TYPE_FIELD_NUMBER:Int(1)", "kind" : "final val"}, {"label" : "TypeProtoLens", "tail" : "", "member" : "onnx.onnx.TypeProto.TypeProtoLens", "link" : "onnx\/onnx\/TypeProto$.html#TypeProtoLens[UpperPB]extendsObjectLens[UpperPB,onnx.onnx.TypeProto]", "kind" : "implicit class"}, {"label" : "Map", "tail" : "", "member" : "onnx.onnx.TypeProto.Map", "link" : "onnx\/onnx\/TypeProto$.html#Map", "kind" : "object"}, {"label" : "Map", "tail" : "", "member" : "onnx.onnx.TypeProto.Map", "link" : "onnx\/onnx\/TypeProto$.html#MapextendsGeneratedMessagewithUpdatable[onnx.onnx.TypeProto.Map]withProductwithSerializable", "kind" : "final case class"}, {"label" : "Sequence", "tail" : "", "member" : "onnx.onnx.TypeProto.Sequence", "link" : "onnx\/onnx\/TypeProto$.html#Sequence", "kind" : "object"}, {"label" : "Sequence", "tail" : "", "member" : "onnx.onnx.TypeProto.Sequence", "link" : "onnx\/onnx\/TypeProto$.html#SequenceextendsGeneratedMessagewithUpdatable[onnx.onnx.TypeProto.Sequence]withProductwithSerializable", "kind" : "final case class"}, {"label" : "Tensor", "tail" : "", "member" : "onnx.onnx.TypeProto.Tensor", "link" : "onnx\/onnx\/TypeProto$.html#Tensor", "kind" : "object"}, {"label" : "Tensor", "tail" : "", "member" : "onnx.onnx.TypeProto.Tensor", "link" : "onnx\/onnx\/TypeProto$.html#TensorextendsGeneratedMessagewithUpdatable[onnx.onnx.TypeProto.Tensor]withProductwithSerializable", "kind" : "final case class"}, {"label" : "Value", "tail" : "", "member" : "onnx.onnx.TypeProto.Value", "link" : "onnx\/onnx\/TypeProto$.html#Value", "kind" : "object"}, {"label" : "Value", "tail" : "", "member" : "onnx.onnx.TypeProto.Value", "link" : "onnx\/onnx\/TypeProto$.html#ValueextendsGeneratedOneof", "kind" : "sealed trait"}, {"label" : "defaultInstance", "tail" : ": TypeProto", "member" : "onnx.onnx.TypeProto.defaultInstance", "link" : "onnx\/onnx\/TypeProto$.html#defaultInstance:onnx.onnx.TypeProto", "kind" : "lazy val"}, {"label" : "enumCompanionForFieldNumber", "tail" : "(__fieldNumber: Int): GeneratedEnumCompanion[_]", "member" : "onnx.onnx.TypeProto.enumCompanionForFieldNumber", "link" : "onnx\/onnx\/TypeProto$.html#enumCompanionForFieldNumber(__fieldNumber:Int):scalapb.GeneratedEnumCompanion[_]", "kind" : "def"}, {"label" : "nestedMessagesCompanions", "tail" : ": Seq[GeneratedMessageCompanion[_ <: GeneratedMessage]]", "member" : "onnx.onnx.TypeProto.nestedMessagesCompanions", "link" : "onnx\/onnx\/TypeProto$.html#nestedMessagesCompanions:Seq[scalapb.GeneratedMessageCompanion[_<:scalapb.GeneratedMessage]]", "kind" : "lazy val"}, {"label" : "messageCompanionForFieldNumber", "tail" : "(__number: Int): GeneratedMessageCompanion[_]", "member" : "onnx.onnx.TypeProto.messageCompanionForFieldNumber", "link" : "onnx\/onnx\/TypeProto$.html#messageCompanionForFieldNumber(__number:Int):scalapb.GeneratedMessageCompanion[_]", "kind" : "def"}, {"label" : "scalaDescriptor", "tail" : "(): Descriptor", "member" : "onnx.onnx.TypeProto.scalaDescriptor", "link" : "onnx\/onnx\/TypeProto$.html#scalaDescriptor:scalapb.descriptors.Descriptor", "kind" : "def"}, {"label" : "javaDescriptor", "tail" : "(): Descriptor", "member" : "onnx.onnx.TypeProto.javaDescriptor", "link" : "onnx\/onnx\/TypeProto$.html#javaDescriptor:com.google.protobuf.Descriptors.Descriptor", "kind" : "def"}, {"label" : "messageReads", "tail" : "(): Reads[TypeProto]", "member" : "onnx.onnx.TypeProto.messageReads", "link" : "onnx\/onnx\/TypeProto$.html#messageReads:scalapb.descriptors.Reads[onnx.onnx.TypeProto]", "kind" : "implicit def"}, {"label" : "parseFrom", "tail" : "(_input__: CodedInputStream): TypeProto", "member" : "onnx.onnx.TypeProto.parseFrom", "link" : "onnx\/onnx\/TypeProto$.html#parseFrom(_input__:com.google.protobuf.CodedInputStream):onnx.onnx.TypeProto", "kind" : "def"}, {"label" : "messageCompanion", "tail" : "(): GeneratedMessageCompanion[TypeProto]", "member" : "onnx.onnx.TypeProto.messageCompanion", "link" : "onnx\/onnx\/TypeProto$.html#messageCompanion:scalapb.GeneratedMessageCompanion[onnx.onnx.TypeProto]", "kind" : "implicit def"}, {"label" : "fromAscii", "tail" : "(s: String): TypeProto", "member" : "scalapb.GeneratedMessageCompanion.fromAscii", "link" : "onnx\/onnx\/TypeProto$.html#fromAscii(s:String):A", "kind" : "def"}, {"label" : "validateAscii", "tail" : "(s: String): Either[TextFormatError, TypeProto]", "member" : "scalapb.GeneratedMessageCompanion.validateAscii", "link" : "onnx\/onnx\/TypeProto$.html#validateAscii(s:String):Either[scalapb.TextFormatError,A]", "kind" : "def"}, {"label" : "enumCompanionForField", "tail" : "(field: FieldDescriptor): GeneratedEnumCompanion[_]", "member" : "scalapb.GeneratedMessageCompanion.enumCompanionForField", "link" : "onnx\/onnx\/TypeProto$.html#enumCompanionForField(field:com.google.protobuf.Descriptors.FieldDescriptor):scalapb.GeneratedEnumCompanion[_]", "kind" : "def"}, {"label" : "messageCompanionForField", "tail" : "(field: FieldDescriptor): GeneratedMessageCompanion[_]", "member" : "scalapb.GeneratedMessageCompanion.messageCompanionForField", "link" : "onnx\/onnx\/TypeProto$.html#messageCompanionForField(field:com.google.protobuf.Descriptors.FieldDescriptor):scalapb.GeneratedMessageCompanion[_]", "kind" : "def"}, {"label" : "toByteArray", "tail" : "(a: TypeProto): Array[Byte]", "member" : "scalapb.GeneratedMessageCompanion.toByteArray", "link" : "onnx\/onnx\/TypeProto$.html#toByteArray(a:A):Array[Byte]", "kind" : "def"}, {"label" : "validate", "tail" : "(s: Array[Byte]): Try[TypeProto]", "member" : "scalapb.GeneratedMessageCompanion.validate", "link" : "onnx\/onnx\/TypeProto$.html#validate(s:Array[Byte]):scala.util.Try[A]", "kind" : "def"}, {"label" : "merge", "tail" : "(a: TypeProto, input: CodedInputStream): TypeProto", "member" : "scalapb.GeneratedMessageCompanion.merge", "link" : "onnx\/onnx\/TypeProto$.html#merge(a:A,input:com.google.protobuf.CodedInputStream):A", "kind" : "def"}, {"label" : "parseFrom", "tail" : "(s: Array[Byte]): TypeProto", "member" : "scalapb.GeneratedMessageCompanion.parseFrom", "link" : "onnx\/onnx\/TypeProto$.html#parseFrom(s:Array[Byte]):A", "kind" : "def"}, {"label" : "streamFromDelimitedInput", "tail" : "(input: InputStream): Stream[TypeProto]", "member" : "scalapb.GeneratedMessageCompanion.streamFromDelimitedInput", "link" : "onnx\/onnx\/TypeProto$.html#streamFromDelimitedInput(input:java.io.InputStream):Stream[A]", "kind" : "def"}, {"label" : "parseDelimitedFrom", "tail" : "(input: InputStream): Option[TypeProto]", "member" : "scalapb.GeneratedMessageCompanion.parseDelimitedFrom", "link" : "onnx\/onnx\/TypeProto$.html#parseDelimitedFrom(input:java.io.InputStream):Option[A]", "kind" : "def"}, {"label" : "parseDelimitedFrom", "tail" : "(input: CodedInputStream): Option[TypeProto]", "member" : "scalapb.GeneratedMessageCompanion.parseDelimitedFrom", "link" : "onnx\/onnx\/TypeProto$.html#parseDelimitedFrom(input:com.google.protobuf.CodedInputStream):Option[A]", "kind" : "def"}, {"label" : "parseFrom", "tail" : "(input: InputStream): TypeProto", "member" : "scalapb.GeneratedMessageCompanion.parseFrom", "link" : "onnx\/onnx\/TypeProto$.html#parseFrom(input:java.io.InputStream):A", "kind" : "def"}, {"label" : "ValueType", "tail" : "", "member" : "scalapb.GeneratedMessageCompanion.ValueType", "link" : "onnx\/onnx\/TypeProto$.html#ValueType=A", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "onnx\/onnx\/TypeProto$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "onnx\/onnx\/TypeProto$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "onnx\/onnx\/TypeProto$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "onnx\/onnx\/TypeProto$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "onnx\/onnx\/TypeProto$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "onnx\/onnx\/TypeProto$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "onnx\/onnx\/TypeProto$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "onnx\/onnx\/TypeProto$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "onnx\/onnx\/TypeProto$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "onnx\/onnx\/TypeProto$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "onnx\/onnx\/TypeProto$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "onnx\/onnx\/TypeProto$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "onnx\/onnx\/TypeProto$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "onnx\/onnx\/TypeProto$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "onnx\/onnx\/TypeProto$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "onnx\/onnx\/TypeProto$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "onnx\/onnx\/TypeProto$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "onnx\/onnx\/TypeProto$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "onnx\/onnx\/TypeProto$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "companion", "tail" : "(): TypeProto.type", "member" : "onnx.onnx.TypeProto.companion", "link" : "onnx\/onnx\/TypeProto.html#companion:onnx.onnx.TypeProto.type", "kind" : "def"}, {"label" : "toProtoString", "tail" : "(): String", "member" : "onnx.onnx.TypeProto.toProtoString", "link" : "onnx\/onnx\/TypeProto.html#toProtoString:String", "kind" : "def"}, {"label" : "getField", "tail" : "(__field: FieldDescriptor): PValue", "member" : "onnx.onnx.TypeProto.getField", "link" : "onnx\/onnx\/TypeProto.html#getField(__field:scalapb.descriptors.FieldDescriptor):scalapb.descriptors.PValue", "kind" : "def"}, {"label" : "getFieldByNumber", "tail" : "(__fieldNumber: Int): Any", "member" : "onnx.onnx.TypeProto.getFieldByNumber", "link" : "onnx\/onnx\/TypeProto.html#getFieldByNumber(__fieldNumber:Int):Any", "kind" : "def"}, {"label" : "discardUnknownFields", "tail" : "(): TypeProto", "member" : "onnx.onnx.TypeProto.discardUnknownFields", "link" : "onnx\/onnx\/TypeProto.html#discardUnknownFields:onnx.onnx.TypeProto", "kind" : "def"}, {"label" : "withUnknownFields", "tail" : "(__v: UnknownFieldSet): TypeProto", "member" : "onnx.onnx.TypeProto.withUnknownFields", "link" : "onnx\/onnx\/TypeProto.html#withUnknownFields(__v:scalapb.UnknownFieldSet):onnx.onnx.TypeProto", "kind" : "def"}, {"label" : "withValue", "tail" : "(__v: Value): TypeProto", "member" : "onnx.onnx.TypeProto.withValue", "link" : "onnx\/onnx\/TypeProto.html#withValue(__v:onnx.onnx.TypeProto.Value):onnx.onnx.TypeProto", "kind" : "def"}, {"label" : "clearValue", "tail" : "(): TypeProto", "member" : "onnx.onnx.TypeProto.clearValue", "link" : "onnx\/onnx\/TypeProto.html#clearValue:onnx.onnx.TypeProto", "kind" : "def"}, {"label" : "withDenotation", "tail" : "(__v: String): TypeProto", "member" : "onnx.onnx.TypeProto.withDenotation", "link" : "onnx\/onnx\/TypeProto.html#withDenotation(__v:String):onnx.onnx.TypeProto", "kind" : "def"}, {"label" : "clearDenotation", "tail" : "(): TypeProto", "member" : "onnx.onnx.TypeProto.clearDenotation", "link" : "onnx\/onnx\/TypeProto.html#clearDenotation:onnx.onnx.TypeProto", "kind" : "def"}, {"label" : "getDenotation", "tail" : "(): String", "member" : "onnx.onnx.TypeProto.getDenotation", "link" : "onnx\/onnx\/TypeProto.html#getDenotation:String", "kind" : "def"}, {"label" : "withMapType", "tail" : "(__v: Map): TypeProto", "member" : "onnx.onnx.TypeProto.withMapType", "link" : "onnx\/onnx\/TypeProto.html#withMapType(__v:onnx.onnx.TypeProto.Map):onnx.onnx.TypeProto", "kind" : "def"}, {"label" : "getMapType", "tail" : "(): Map", "member" : "onnx.onnx.TypeProto.getMapType", "link" : "onnx\/onnx\/TypeProto.html#getMapType:onnx.onnx.TypeProto.Map", "kind" : "def"}, {"label" : "withSequenceType", "tail" : "(__v: Sequence): TypeProto", "member" : "onnx.onnx.TypeProto.withSequenceType", "link" : "onnx\/onnx\/TypeProto.html#withSequenceType(__v:onnx.onnx.TypeProto.Sequence):onnx.onnx.TypeProto", "kind" : "def"}, {"label" : "getSequenceType", "tail" : "(): Sequence", "member" : "onnx.onnx.TypeProto.getSequenceType", "link" : "onnx\/onnx\/TypeProto.html#getSequenceType:onnx.onnx.TypeProto.Sequence", "kind" : "def"}, {"label" : "withTensorType", "tail" : "(__v: Tensor): TypeProto", "member" : "onnx.onnx.TypeProto.withTensorType", "link" : "onnx\/onnx\/TypeProto.html#withTensorType(__v:onnx.onnx.TypeProto.Tensor):onnx.onnx.TypeProto", "kind" : "def"}, {"label" : "getTensorType", "tail" : "(): Tensor", "member" : "onnx.onnx.TypeProto.getTensorType", "link" : "onnx\/onnx\/TypeProto.html#getTensorType:onnx.onnx.TypeProto.Tensor", "kind" : "def"}, {"label" : "writeTo", "tail" : "(_output__: CodedOutputStream): Unit", "member" : "onnx.onnx.TypeProto.writeTo", "link" : "onnx\/onnx\/TypeProto.html#writeTo(_output__:com.google.protobuf.CodedOutputStream):Unit", "kind" : "def"}, {"label" : "serializedSize", "tail" : "(): Int", "member" : "onnx.onnx.TypeProto.serializedSize", "link" : "onnx\/onnx\/TypeProto.html#serializedSize:Int", "kind" : "def"}, {"member" : "onnx.onnx.TypeProto#<init>", "error" : "unsupported entity"}, {"label" : "unknownFields", "tail" : ": UnknownFieldSet", "member" : "onnx.onnx.TypeProto.unknownFields", "link" : "onnx\/onnx\/TypeProto.html#unknownFields:scalapb.UnknownFieldSet", "kind" : "val"}, {"label" : "denotation", "tail" : ": Option[String]", "member" : "onnx.onnx.TypeProto.denotation", "link" : "onnx\/onnx\/TypeProto.html#denotation:Option[String]", "kind" : "val"}, {"label" : "value", "tail" : ": Value", "member" : "onnx.onnx.TypeProto.value", "link" : "onnx\/onnx\/TypeProto.html#value:onnx.onnx.TypeProto.Value", "kind" : "val"}, {"label" : "update", "tail" : "(ms: (Lens[TypeProto, TypeProto]) => Mutation[TypeProto]*): TypeProto", "member" : "scalapb.lenses.Updatable.update", "link" : "onnx\/onnx\/TypeProto.html#update(ms:scalapb.lenses.Lens[A,A]=>scalapb.lenses.Mutation[A]*):A", "kind" : "def"}, {"label" : "toByteString", "tail" : "(): ByteString", "member" : "scalapb.GeneratedMessage.toByteString", "link" : "onnx\/onnx\/TypeProto.html#toByteString:com.google.protobuf.ByteString", "kind" : "final def"}, {"label" : "toByteArray", "tail" : "(): Array[Byte]", "member" : "scalapb.GeneratedMessage.toByteArray", "link" : "onnx\/onnx\/TypeProto.html#toByteArray:Array[Byte]", "kind" : "final def"}, {"label" : "toPMessage", "tail" : "(): PMessage", "member" : "scalapb.GeneratedMessage.toPMessage", "link" : "onnx\/onnx\/TypeProto.html#toPMessage:scalapb.descriptors.PMessage", "kind" : "final def"}, {"label" : "writeDelimitedTo", "tail" : "(output: OutputStream): Unit", "member" : "scalapb.GeneratedMessage.writeDelimitedTo", "link" : "onnx\/onnx\/TypeProto.html#writeDelimitedTo(output:java.io.OutputStream):Unit", "kind" : "final def"}, {"label" : "writeTo", "tail" : "(output: OutputStream): Unit", "member" : "scalapb.GeneratedMessage.writeTo", "link" : "onnx\/onnx\/TypeProto.html#writeTo(output:java.io.OutputStream):Unit", "kind" : "final def"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "onnx\/onnx\/TypeProto.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "onnx\/onnx\/TypeProto.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "onnx\/onnx\/TypeProto.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "onnx\/onnx\/TypeProto.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "onnx\/onnx\/TypeProto.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "onnx\/onnx\/TypeProto.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "onnx\/onnx\/TypeProto.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "onnx\/onnx\/TypeProto.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "onnx\/onnx\/TypeProto.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "onnx\/onnx\/TypeProto.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "onnx\/onnx\/TypeProto.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "onnx\/onnx\/TypeProto.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "onnx\/onnx\/TypeProto.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "onnx\/onnx\/TypeProto.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "onnx\/onnx\/TypeProto.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "onnx\/onnx\/TypeProto.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "onnx\/onnx\/TypeProto.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "onnx\/onnx\/TypeProto.html", "kind" : "case class"}, {"name" : "onnx.onnx.ValueInfoProto", "shortDescription" : "Defines information on value, including the name, the type, andthe shape of the value.", "object" : "onnx\/onnx\/ValueInfoProto$.html", "members_object" : [{"label" : "of", "tail" : "(name: Option[String], type: Option[TypeProto], docString: Option[String]): ValueInfoProto", "member" : "onnx.onnx.ValueInfoProto.of", "link" : "onnx\/onnx\/ValueInfoProto$.html#of(name:Option[String],type:Option[onnx.onnx.TypeProto],docString:Option[String]):onnx.onnx.ValueInfoProto", "kind" : "def"}, {"label" : "DOC_STRING_FIELD_NUMBER", "tail" : ": Int(3)", "member" : "onnx.onnx.ValueInfoProto.DOC_STRING_FIELD_NUMBER", "link" : "onnx\/onnx\/ValueInfoProto$.html#DOC_STRING_FIELD_NUMBER:Int(3)", "kind" : "final val"}, {"label" : "TYPE_FIELD_NUMBER", "tail" : ": Int(2)", "member" : "onnx.onnx.ValueInfoProto.TYPE_FIELD_NUMBER", "link" : "onnx\/onnx\/ValueInfoProto$.html#TYPE_FIELD_NUMBER:Int(2)", "kind" : "final val"}, {"label" : "NAME_FIELD_NUMBER", "tail" : ": Int(1)", "member" : "onnx.onnx.ValueInfoProto.NAME_FIELD_NUMBER", "link" : "onnx\/onnx\/ValueInfoProto$.html#NAME_FIELD_NUMBER:Int(1)", "kind" : "final val"}, {"label" : "ValueInfoProtoLens", "tail" : "", "member" : "onnx.onnx.ValueInfoProto.ValueInfoProtoLens", "link" : "onnx\/onnx\/ValueInfoProto$.html#ValueInfoProtoLens[UpperPB]extendsObjectLens[UpperPB,onnx.onnx.ValueInfoProto]", "kind" : "implicit class"}, {"label" : "defaultInstance", "tail" : ": ValueInfoProto", "member" : "onnx.onnx.ValueInfoProto.defaultInstance", "link" : "onnx\/onnx\/ValueInfoProto$.html#defaultInstance:onnx.onnx.ValueInfoProto", "kind" : "lazy val"}, {"label" : "enumCompanionForFieldNumber", "tail" : "(__fieldNumber: Int): GeneratedEnumCompanion[_]", "member" : "onnx.onnx.ValueInfoProto.enumCompanionForFieldNumber", "link" : "onnx\/onnx\/ValueInfoProto$.html#enumCompanionForFieldNumber(__fieldNumber:Int):scalapb.GeneratedEnumCompanion[_]", "kind" : "def"}, {"label" : "nestedMessagesCompanions", "tail" : ": Seq[GeneratedMessageCompanion[_ <: GeneratedMessage]]", "member" : "onnx.onnx.ValueInfoProto.nestedMessagesCompanions", "link" : "onnx\/onnx\/ValueInfoProto$.html#nestedMessagesCompanions:Seq[scalapb.GeneratedMessageCompanion[_<:scalapb.GeneratedMessage]]", "kind" : "lazy val"}, {"label" : "messageCompanionForFieldNumber", "tail" : "(__number: Int): GeneratedMessageCompanion[_]", "member" : "onnx.onnx.ValueInfoProto.messageCompanionForFieldNumber", "link" : "onnx\/onnx\/ValueInfoProto$.html#messageCompanionForFieldNumber(__number:Int):scalapb.GeneratedMessageCompanion[_]", "kind" : "def"}, {"label" : "scalaDescriptor", "tail" : "(): Descriptor", "member" : "onnx.onnx.ValueInfoProto.scalaDescriptor", "link" : "onnx\/onnx\/ValueInfoProto$.html#scalaDescriptor:scalapb.descriptors.Descriptor", "kind" : "def"}, {"label" : "javaDescriptor", "tail" : "(): Descriptor", "member" : "onnx.onnx.ValueInfoProto.javaDescriptor", "link" : "onnx\/onnx\/ValueInfoProto$.html#javaDescriptor:com.google.protobuf.Descriptors.Descriptor", "kind" : "def"}, {"label" : "messageReads", "tail" : "(): Reads[ValueInfoProto]", "member" : "onnx.onnx.ValueInfoProto.messageReads", "link" : "onnx\/onnx\/ValueInfoProto$.html#messageReads:scalapb.descriptors.Reads[onnx.onnx.ValueInfoProto]", "kind" : "implicit def"}, {"label" : "parseFrom", "tail" : "(_input__: CodedInputStream): ValueInfoProto", "member" : "onnx.onnx.ValueInfoProto.parseFrom", "link" : "onnx\/onnx\/ValueInfoProto$.html#parseFrom(_input__:com.google.protobuf.CodedInputStream):onnx.onnx.ValueInfoProto", "kind" : "def"}, {"label" : "messageCompanion", "tail" : "(): GeneratedMessageCompanion[ValueInfoProto]", "member" : "onnx.onnx.ValueInfoProto.messageCompanion", "link" : "onnx\/onnx\/ValueInfoProto$.html#messageCompanion:scalapb.GeneratedMessageCompanion[onnx.onnx.ValueInfoProto]", "kind" : "implicit def"}, {"label" : "fromAscii", "tail" : "(s: String): ValueInfoProto", "member" : "scalapb.GeneratedMessageCompanion.fromAscii", "link" : "onnx\/onnx\/ValueInfoProto$.html#fromAscii(s:String):A", "kind" : "def"}, {"label" : "validateAscii", "tail" : "(s: String): Either[TextFormatError, ValueInfoProto]", "member" : "scalapb.GeneratedMessageCompanion.validateAscii", "link" : "onnx\/onnx\/ValueInfoProto$.html#validateAscii(s:String):Either[scalapb.TextFormatError,A]", "kind" : "def"}, {"label" : "enumCompanionForField", "tail" : "(field: FieldDescriptor): GeneratedEnumCompanion[_]", "member" : "scalapb.GeneratedMessageCompanion.enumCompanionForField", "link" : "onnx\/onnx\/ValueInfoProto$.html#enumCompanionForField(field:com.google.protobuf.Descriptors.FieldDescriptor):scalapb.GeneratedEnumCompanion[_]", "kind" : "def"}, {"label" : "messageCompanionForField", "tail" : "(field: FieldDescriptor): GeneratedMessageCompanion[_]", "member" : "scalapb.GeneratedMessageCompanion.messageCompanionForField", "link" : "onnx\/onnx\/ValueInfoProto$.html#messageCompanionForField(field:com.google.protobuf.Descriptors.FieldDescriptor):scalapb.GeneratedMessageCompanion[_]", "kind" : "def"}, {"label" : "toByteArray", "tail" : "(a: ValueInfoProto): Array[Byte]", "member" : "scalapb.GeneratedMessageCompanion.toByteArray", "link" : "onnx\/onnx\/ValueInfoProto$.html#toByteArray(a:A):Array[Byte]", "kind" : "def"}, {"label" : "validate", "tail" : "(s: Array[Byte]): Try[ValueInfoProto]", "member" : "scalapb.GeneratedMessageCompanion.validate", "link" : "onnx\/onnx\/ValueInfoProto$.html#validate(s:Array[Byte]):scala.util.Try[A]", "kind" : "def"}, {"label" : "merge", "tail" : "(a: ValueInfoProto, input: CodedInputStream): ValueInfoProto", "member" : "scalapb.GeneratedMessageCompanion.merge", "link" : "onnx\/onnx\/ValueInfoProto$.html#merge(a:A,input:com.google.protobuf.CodedInputStream):A", "kind" : "def"}, {"label" : "parseFrom", "tail" : "(s: Array[Byte]): ValueInfoProto", "member" : "scalapb.GeneratedMessageCompanion.parseFrom", "link" : "onnx\/onnx\/ValueInfoProto$.html#parseFrom(s:Array[Byte]):A", "kind" : "def"}, {"label" : "streamFromDelimitedInput", "tail" : "(input: InputStream): Stream[ValueInfoProto]", "member" : "scalapb.GeneratedMessageCompanion.streamFromDelimitedInput", "link" : "onnx\/onnx\/ValueInfoProto$.html#streamFromDelimitedInput(input:java.io.InputStream):Stream[A]", "kind" : "def"}, {"label" : "parseDelimitedFrom", "tail" : "(input: InputStream): Option[ValueInfoProto]", "member" : "scalapb.GeneratedMessageCompanion.parseDelimitedFrom", "link" : "onnx\/onnx\/ValueInfoProto$.html#parseDelimitedFrom(input:java.io.InputStream):Option[A]", "kind" : "def"}, {"label" : "parseDelimitedFrom", "tail" : "(input: CodedInputStream): Option[ValueInfoProto]", "member" : "scalapb.GeneratedMessageCompanion.parseDelimitedFrom", "link" : "onnx\/onnx\/ValueInfoProto$.html#parseDelimitedFrom(input:com.google.protobuf.CodedInputStream):Option[A]", "kind" : "def"}, {"label" : "parseFrom", "tail" : "(input: InputStream): ValueInfoProto", "member" : "scalapb.GeneratedMessageCompanion.parseFrom", "link" : "onnx\/onnx\/ValueInfoProto$.html#parseFrom(input:java.io.InputStream):A", "kind" : "def"}, {"label" : "ValueType", "tail" : "", "member" : "scalapb.GeneratedMessageCompanion.ValueType", "link" : "onnx\/onnx\/ValueInfoProto$.html#ValueType=A", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "onnx\/onnx\/ValueInfoProto$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "onnx\/onnx\/ValueInfoProto$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "onnx\/onnx\/ValueInfoProto$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "onnx\/onnx\/ValueInfoProto$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "onnx\/onnx\/ValueInfoProto$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "onnx\/onnx\/ValueInfoProto$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "onnx\/onnx\/ValueInfoProto$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "onnx\/onnx\/ValueInfoProto$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "onnx\/onnx\/ValueInfoProto$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "onnx\/onnx\/ValueInfoProto$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "onnx\/onnx\/ValueInfoProto$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "onnx\/onnx\/ValueInfoProto$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "onnx\/onnx\/ValueInfoProto$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "onnx\/onnx\/ValueInfoProto$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "onnx\/onnx\/ValueInfoProto$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "onnx\/onnx\/ValueInfoProto$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "onnx\/onnx\/ValueInfoProto$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "onnx\/onnx\/ValueInfoProto$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "onnx\/onnx\/ValueInfoProto$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "companion", "tail" : "(): ValueInfoProto.type", "member" : "onnx.onnx.ValueInfoProto.companion", "link" : "onnx\/onnx\/ValueInfoProto.html#companion:onnx.onnx.ValueInfoProto.type", "kind" : "def"}, {"label" : "toProtoString", "tail" : "(): String", "member" : "onnx.onnx.ValueInfoProto.toProtoString", "link" : "onnx\/onnx\/ValueInfoProto.html#toProtoString:String", "kind" : "def"}, {"label" : "getField", "tail" : "(__field: FieldDescriptor): PValue", "member" : "onnx.onnx.ValueInfoProto.getField", "link" : "onnx\/onnx\/ValueInfoProto.html#getField(__field:scalapb.descriptors.FieldDescriptor):scalapb.descriptors.PValue", "kind" : "def"}, {"label" : "getFieldByNumber", "tail" : "(__fieldNumber: Int): Any", "member" : "onnx.onnx.ValueInfoProto.getFieldByNumber", "link" : "onnx\/onnx\/ValueInfoProto.html#getFieldByNumber(__fieldNumber:Int):Any", "kind" : "def"}, {"label" : "discardUnknownFields", "tail" : "(): ValueInfoProto", "member" : "onnx.onnx.ValueInfoProto.discardUnknownFields", "link" : "onnx\/onnx\/ValueInfoProto.html#discardUnknownFields:onnx.onnx.ValueInfoProto", "kind" : "def"}, {"label" : "withUnknownFields", "tail" : "(__v: UnknownFieldSet): ValueInfoProto", "member" : "onnx.onnx.ValueInfoProto.withUnknownFields", "link" : "onnx\/onnx\/ValueInfoProto.html#withUnknownFields(__v:scalapb.UnknownFieldSet):onnx.onnx.ValueInfoProto", "kind" : "def"}, {"label" : "withDocString", "tail" : "(__v: String): ValueInfoProto", "member" : "onnx.onnx.ValueInfoProto.withDocString", "link" : "onnx\/onnx\/ValueInfoProto.html#withDocString(__v:String):onnx.onnx.ValueInfoProto", "kind" : "def"}, {"label" : "clearDocString", "tail" : "(): ValueInfoProto", "member" : "onnx.onnx.ValueInfoProto.clearDocString", "link" : "onnx\/onnx\/ValueInfoProto.html#clearDocString:onnx.onnx.ValueInfoProto", "kind" : "def"}, {"label" : "getDocString", "tail" : "(): String", "member" : "onnx.onnx.ValueInfoProto.getDocString", "link" : "onnx\/onnx\/ValueInfoProto.html#getDocString:String", "kind" : "def"}, {"label" : "withType", "tail" : "(__v: TypeProto): ValueInfoProto", "member" : "onnx.onnx.ValueInfoProto.withType", "link" : "onnx\/onnx\/ValueInfoProto.html#withType(__v:onnx.onnx.TypeProto):onnx.onnx.ValueInfoProto", "kind" : "def"}, {"label" : "clearType", "tail" : "(): ValueInfoProto", "member" : "onnx.onnx.ValueInfoProto.clearType", "link" : "onnx\/onnx\/ValueInfoProto.html#clearType:onnx.onnx.ValueInfoProto", "kind" : "def"}, {"label" : "getType", "tail" : "(): TypeProto", "member" : "onnx.onnx.ValueInfoProto.getType", "link" : "onnx\/onnx\/ValueInfoProto.html#getType:onnx.onnx.TypeProto", "kind" : "def"}, {"label" : "withName", "tail" : "(__v: String): ValueInfoProto", "member" : "onnx.onnx.ValueInfoProto.withName", "link" : "onnx\/onnx\/ValueInfoProto.html#withName(__v:String):onnx.onnx.ValueInfoProto", "kind" : "def"}, {"label" : "clearName", "tail" : "(): ValueInfoProto", "member" : "onnx.onnx.ValueInfoProto.clearName", "link" : "onnx\/onnx\/ValueInfoProto.html#clearName:onnx.onnx.ValueInfoProto", "kind" : "def"}, {"label" : "getName", "tail" : "(): String", "member" : "onnx.onnx.ValueInfoProto.getName", "link" : "onnx\/onnx\/ValueInfoProto.html#getName:String", "kind" : "def"}, {"label" : "writeTo", "tail" : "(_output__: CodedOutputStream): Unit", "member" : "onnx.onnx.ValueInfoProto.writeTo", "link" : "onnx\/onnx\/ValueInfoProto.html#writeTo(_output__:com.google.protobuf.CodedOutputStream):Unit", "kind" : "def"}, {"label" : "serializedSize", "tail" : "(): Int", "member" : "onnx.onnx.ValueInfoProto.serializedSize", "link" : "onnx\/onnx\/ValueInfoProto.html#serializedSize:Int", "kind" : "def"}, {"member" : "onnx.onnx.ValueInfoProto#<init>", "error" : "unsupported entity"}, {"label" : "unknownFields", "tail" : ": UnknownFieldSet", "member" : "onnx.onnx.ValueInfoProto.unknownFields", "link" : "onnx\/onnx\/ValueInfoProto.html#unknownFields:scalapb.UnknownFieldSet", "kind" : "val"}, {"label" : "docString", "tail" : ": Option[String]", "member" : "onnx.onnx.ValueInfoProto.docString", "link" : "onnx\/onnx\/ValueInfoProto.html#docString:Option[String]", "kind" : "val"}, {"label" : "type", "tail" : ": Option[TypeProto]", "member" : "onnx.onnx.ValueInfoProto.type", "link" : "onnx\/onnx\/ValueInfoProto.html#type:Option[onnx.onnx.TypeProto]", "kind" : "val"}, {"label" : "name", "tail" : ": Option[String]", "member" : "onnx.onnx.ValueInfoProto.name", "link" : "onnx\/onnx\/ValueInfoProto.html#name:Option[String]", "kind" : "val"}, {"label" : "update", "tail" : "(ms: (Lens[ValueInfoProto, ValueInfoProto]) => Mutation[ValueInfoProto]*): ValueInfoProto", "member" : "scalapb.lenses.Updatable.update", "link" : "onnx\/onnx\/ValueInfoProto.html#update(ms:scalapb.lenses.Lens[A,A]=>scalapb.lenses.Mutation[A]*):A", "kind" : "def"}, {"label" : "toByteString", "tail" : "(): ByteString", "member" : "scalapb.GeneratedMessage.toByteString", "link" : "onnx\/onnx\/ValueInfoProto.html#toByteString:com.google.protobuf.ByteString", "kind" : "final def"}, {"label" : "toByteArray", "tail" : "(): Array[Byte]", "member" : "scalapb.GeneratedMessage.toByteArray", "link" : "onnx\/onnx\/ValueInfoProto.html#toByteArray:Array[Byte]", "kind" : "final def"}, {"label" : "toPMessage", "tail" : "(): PMessage", "member" : "scalapb.GeneratedMessage.toPMessage", "link" : "onnx\/onnx\/ValueInfoProto.html#toPMessage:scalapb.descriptors.PMessage", "kind" : "final def"}, {"label" : "writeDelimitedTo", "tail" : "(output: OutputStream): Unit", "member" : "scalapb.GeneratedMessage.writeDelimitedTo", "link" : "onnx\/onnx\/ValueInfoProto.html#writeDelimitedTo(output:java.io.OutputStream):Unit", "kind" : "final def"}, {"label" : "writeTo", "tail" : "(output: OutputStream): Unit", "member" : "scalapb.GeneratedMessage.writeTo", "link" : "onnx\/onnx\/ValueInfoProto.html#writeTo(output:java.io.OutputStream):Unit", "kind" : "final def"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "onnx\/onnx\/ValueInfoProto.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "onnx\/onnx\/ValueInfoProto.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "onnx\/onnx\/ValueInfoProto.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "onnx\/onnx\/ValueInfoProto.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "onnx\/onnx\/ValueInfoProto.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "onnx\/onnx\/ValueInfoProto.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "onnx\/onnx\/ValueInfoProto.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "onnx\/onnx\/ValueInfoProto.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "onnx\/onnx\/ValueInfoProto.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "onnx\/onnx\/ValueInfoProto.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "onnx\/onnx\/ValueInfoProto.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "onnx\/onnx\/ValueInfoProto.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "onnx\/onnx\/ValueInfoProto.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "onnx\/onnx\/ValueInfoProto.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "onnx\/onnx\/ValueInfoProto.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "onnx\/onnx\/ValueInfoProto.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "onnx\/onnx\/ValueInfoProto.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "onnx\/onnx\/ValueInfoProto.html", "kind" : "case class"}, {"name" : "onnx.onnx.Version", "shortDescription" : "Versioning", "object" : "onnx\/onnx\/Version$.html", "members_class" : [{"label" : "asRecognized", "tail" : "(): Option[Recognized]", "member" : "onnx.onnx.Version.asRecognized", "link" : "onnx\/onnx\/Version.html#asRecognized:Option[onnx.onnx.Version.Recognized]", "kind" : "final def"}, {"label" : "companion", "tail" : "(): GeneratedEnumCompanion[Version]", "member" : "onnx.onnx.Version.companion", "link" : "onnx\/onnx\/Version.html#companion:scalapb.GeneratedEnumCompanion[onnx.onnx.Version]", "kind" : "def"}, {"label" : "isIrVersion", "tail" : "(): Boolean", "member" : "onnx.onnx.Version.isIrVersion", "link" : "onnx\/onnx\/Version.html#isIrVersion:Boolean", "kind" : "def"}, {"label" : "isIrVersion2019919", "tail" : "(): Boolean", "member" : "onnx.onnx.Version.isIrVersion2019919", "link" : "onnx\/onnx\/Version.html#isIrVersion2019919:Boolean", "kind" : "def"}, {"label" : "isIrVersion2019318", "tail" : "(): Boolean", "member" : "onnx.onnx.Version.isIrVersion2019318", "link" : "onnx\/onnx\/Version.html#isIrVersion2019318:Boolean", "kind" : "def"}, {"label" : "isIrVersion2019122", "tail" : "(): Boolean", "member" : "onnx.onnx.Version.isIrVersion2019122", "link" : "onnx\/onnx\/Version.html#isIrVersion2019122:Boolean", "kind" : "def"}, {"label" : "isIrVersion2017113", "tail" : "(): Boolean", "member" : "onnx.onnx.Version.isIrVersion2017113", "link" : "onnx\/onnx\/Version.html#isIrVersion2017113:Boolean", "kind" : "def"}, {"label" : "isIrVersion20171030", "tail" : "(): Boolean", "member" : "onnx.onnx.Version.isIrVersion20171030", "link" : "onnx\/onnx\/Version.html#isIrVersion20171030:Boolean", "kind" : "def"}, {"label" : "isIrVersion20171010", "tail" : "(): Boolean", "member" : "onnx.onnx.Version.isIrVersion20171010", "link" : "onnx\/onnx\/Version.html#isIrVersion20171010:Boolean", "kind" : "def"}, {"label" : "isStartVersion", "tail" : "(): Boolean", "member" : "onnx.onnx.Version.isStartVersion", "link" : "onnx\/onnx\/Version.html#isStartVersion:Boolean", "kind" : "def"}, {"label" : "EnumType", "tail" : "", "member" : "onnx.onnx.Version.EnumType", "link" : "onnx\/onnx\/Version.html#EnumType=onnx.onnx.Version", "kind" : "type"}, {"label" : "value", "tail" : ": Int", "member" : "onnx.onnx.Version.value", "link" : "onnx\/onnx\/Version.html#value:Int", "kind" : "val"}, {"label" : "scalaValueDescriptor", "tail" : "(): EnumValueDescriptor", "member" : "scalapb.GeneratedEnum.scalaValueDescriptor", "link" : "onnx\/onnx\/Version.html#scalaValueDescriptor:scalapb.descriptors.EnumValueDescriptor", "kind" : "def"}, {"label" : "javaValueDescriptor", "tail" : "(): EnumValueDescriptor", "member" : "scalapb.GeneratedEnum.javaValueDescriptor", "link" : "onnx\/onnx\/Version.html#javaValueDescriptor:com.google.protobuf.Descriptors.EnumValueDescriptor", "kind" : "def"}, {"label" : "isUnrecognized", "tail" : "(): Boolean", "member" : "scalapb.GeneratedEnum.isUnrecognized", "link" : "onnx\/onnx\/Version.html#isUnrecognized:Boolean", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scalapb.GeneratedEnum.toString", "link" : "onnx\/onnx\/Version.html#toString():String", "kind" : "def"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "onnx\/onnx\/Version.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "productElementName", "tail" : "(n: Int): String", "member" : "scala.Product.productElementName", "link" : "onnx\/onnx\/Version.html#productElementName(n:Int):String", "kind" : "def"}, {"label" : "productPrefix", "tail" : "(): String", "member" : "scala.Product.productPrefix", "link" : "onnx\/onnx\/Version.html#productPrefix:String", "kind" : "def"}, {"label" : "productIterator", "tail" : "(): Iterator[Any]", "member" : "scala.Product.productIterator", "link" : "onnx\/onnx\/Version.html#productIterator:Iterator[Any]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "onnx\/onnx\/Version.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "onnx\/onnx\/Version.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "onnx\/onnx\/Version.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "onnx\/onnx\/Version.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "onnx\/onnx\/Version.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "onnx\/onnx\/Version.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "onnx\/onnx\/Version.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "onnx\/onnx\/Version.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "onnx\/onnx\/Version.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "onnx\/onnx\/Version.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "onnx\/onnx\/Version.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "onnx\/onnx\/Version.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "onnx\/onnx\/Version.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "onnx\/onnx\/Version.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "onnx\/onnx\/Version.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "onnx\/onnx\/Version.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "onnx\/onnx\/Version.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "onnx\/onnx\/Version.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "name", "tail" : "(): String", "member" : "scalapb.GeneratedEnum.name", "link" : "onnx\/onnx\/Version.html#name:String", "kind" : "abstract def"}, {"label" : "index", "tail" : "(): Int", "member" : "scalapb.GeneratedEnum.index", "link" : "onnx\/onnx\/Version.html#index:Int", "kind" : "abstract def"}, {"label" : "productElement", "tail" : "(n: Int): Any", "member" : "scala.Product.productElement", "link" : "onnx\/onnx\/Version.html#productElement(n:Int):Any", "kind" : "abstract def"}, {"label" : "productArity", "tail" : "(): Int", "member" : "scala.Product.productArity", "link" : "onnx\/onnx\/Version.html#productArity:Int", "kind" : "abstract def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "scala.Equals.canEqual", "link" : "onnx\/onnx\/Version.html#canEqual(that:Any):Boolean", "kind" : "abstract def"}], "members_object" : [{"label" : "scalaDescriptor", "tail" : "(): EnumDescriptor", "member" : "onnx.onnx.Version.scalaDescriptor", "link" : "onnx\/onnx\/Version$.html#scalaDescriptor:scalapb.descriptors.EnumDescriptor", "kind" : "def"}, {"label" : "javaDescriptor", "tail" : "(): EnumDescriptor", "member" : "onnx.onnx.Version.javaDescriptor", "link" : "onnx\/onnx\/Version$.html#javaDescriptor:com.google.protobuf.Descriptors.EnumDescriptor", "kind" : "def"}, {"label" : "fromValue", "tail" : "(__value: Int): Version", "member" : "onnx.onnx.Version.fromValue", "link" : "onnx\/onnx\/Version$.html#fromValue(__value:Int):onnx.onnx.Version", "kind" : "def"}, {"label" : "values", "tail" : ": Seq[Recognized]", "member" : "onnx.onnx.Version.values", "link" : "onnx\/onnx\/Version$.html#values:Seq[onnx.onnx.Version.Recognized]", "kind" : "lazy val"}, {"label" : "Unrecognized", "tail" : "", "member" : "onnx.onnx.Version.Unrecognized", "link" : "onnx\/onnx\/Version$.html#UnrecognizedextendsVersionwithUnrecognizedEnumwithProductwithSerializable", "kind" : "final case class"}, {"label" : "IR_VERSION", "tail" : "", "member" : "onnx.onnx.Version.IR_VERSION", "link" : "onnx\/onnx\/Version$.html#IR_VERSION", "kind" : "case object"}, {"label" : "IR_VERSION_2019_9_19", "tail" : "", "member" : "onnx.onnx.Version.IR_VERSION_2019_9_19", "link" : "onnx\/onnx\/Version$.html#IR_VERSION_2019_9_19", "kind" : "case object"}, {"label" : "IR_VERSION_2019_3_18", "tail" : "", "member" : "onnx.onnx.Version.IR_VERSION_2019_3_18", "link" : "onnx\/onnx\/Version$.html#IR_VERSION_2019_3_18", "kind" : "case object"}, {"label" : "IR_VERSION_2019_1_22", "tail" : "", "member" : "onnx.onnx.Version.IR_VERSION_2019_1_22", "link" : "onnx\/onnx\/Version$.html#IR_VERSION_2019_1_22", "kind" : "case object"}, {"label" : "IR_VERSION_2017_11_3", "tail" : "", "member" : "onnx.onnx.Version.IR_VERSION_2017_11_3", "link" : "onnx\/onnx\/Version$.html#IR_VERSION_2017_11_3", "kind" : "case object"}, {"label" : "IR_VERSION_2017_10_30", "tail" : "", "member" : "onnx.onnx.Version.IR_VERSION_2017_10_30", "link" : "onnx\/onnx\/Version$.html#IR_VERSION_2017_10_30", "kind" : "case object"}, {"label" : "IR_VERSION_2017_10_10", "tail" : "", "member" : "onnx.onnx.Version.IR_VERSION_2017_10_10", "link" : "onnx\/onnx\/Version$.html#IR_VERSION_2017_10_10", "kind" : "case object"}, {"label" : "_START_VERSION", "tail" : "", "member" : "onnx.onnx.Version._START_VERSION", "link" : "onnx\/onnx\/Version$.html#_START_VERSION", "kind" : "case object"}, {"label" : "enumCompanion", "tail" : "(): GeneratedEnumCompanion[Version]", "member" : "onnx.onnx.Version.enumCompanion", "link" : "onnx\/onnx\/Version$.html#enumCompanion:scalapb.GeneratedEnumCompanion[onnx.onnx.Version]", "kind" : "implicit def"}, {"label" : "Recognized", "tail" : "", "member" : "onnx.onnx.Version.Recognized", "link" : "onnx\/onnx\/Version$.html#RecognizedextendsVersion", "kind" : "sealed trait"}, {"label" : "fromName", "tail" : "(name: String): Option[Version]", "member" : "scalapb.GeneratedEnumCompanion.fromName", "link" : "onnx\/onnx\/Version$.html#fromName(name:String):Option[A]", "kind" : "def"}, {"label" : "ValueType", "tail" : "", "member" : "scalapb.GeneratedEnumCompanion.ValueType", "link" : "onnx\/onnx\/Version$.html#ValueType=A", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "onnx\/onnx\/Version$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "onnx\/onnx\/Version$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "onnx\/onnx\/Version$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "onnx\/onnx\/Version$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "onnx\/onnx\/Version$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "onnx\/onnx\/Version$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "onnx\/onnx\/Version$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "onnx\/onnx\/Version$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "onnx\/onnx\/Version$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "onnx\/onnx\/Version$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "onnx\/onnx\/Version$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "onnx\/onnx\/Version$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "onnx\/onnx\/Version$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "onnx\/onnx\/Version$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "onnx\/onnx\/Version$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "onnx\/onnx\/Version$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "onnx\/onnx\/Version$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "onnx\/onnx\/Version$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "onnx\/onnx\/Version$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "onnx\/onnx\/Version.html", "kind" : "class"}], "lamp.example.gan" : [{"name" : "lamp.example.gan.AWTWindow", "shortDescription" : "", "object" : "lamp\/example\/gan\/AWTWindow$.html", "members_object" : [{"label" : "showImage", "tail" : "(t: STen): (STen) => Unit", "member" : "lamp.example.gan.AWTWindow.showImage", "link" : "lamp\/example\/gan\/AWTWindow$.html#showImage(t:lamp.STen):lamp.STen=>Unit", "kind" : "def"}, {"label" : "save", "tail" : "(t: STen, i: Int): File", "member" : "lamp.example.gan.AWTWindow.save", "link" : "lamp\/example\/gan\/AWTWindow$.html#save(t:lamp.STen,i:Int):java.io.File", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/example\/gan\/AWTWindow$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/example\/gan\/AWTWindow$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/example\/gan\/AWTWindow$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/example\/gan\/AWTWindow$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/example\/gan\/AWTWindow$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/example\/gan\/AWTWindow$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/example\/gan\/AWTWindow$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/example\/gan\/AWTWindow$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/example\/gan\/AWTWindow$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/example\/gan\/AWTWindow$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/example\/gan\/AWTWindow$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/example\/gan\/AWTWindow$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/example\/gan\/AWTWindow$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/example\/gan\/AWTWindow$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/example\/gan\/AWTWindow$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/example\/gan\/AWTWindow$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/example\/gan\/AWTWindow$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/example\/gan\/AWTWindow$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/example\/gan\/AWTWindow$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "lamp.example.gan.CliConfig", "shortDescription" : "", "members_case class" : [{"member" : "lamp.example.gan.CliConfig#<init>", "error" : "unsupported entity"}, {"label" : "epochs", "tail" : ": Int", "member" : "lamp.example.gan.CliConfig.epochs", "link" : "lamp\/example\/gan\/CliConfig.html#epochs:Int", "kind" : "val"}, {"label" : "trainBatchSize", "tail" : ": Int", "member" : "lamp.example.gan.CliConfig.trainBatchSize", "link" : "lamp\/example\/gan\/CliConfig.html#trainBatchSize:Int", "kind" : "val"}, {"label" : "cuda", "tail" : ": Boolean", "member" : "lamp.example.gan.CliConfig.cuda", "link" : "lamp\/example\/gan\/CliConfig.html#cuda:Boolean", "kind" : "val"}, {"label" : "trainData", "tail" : ": String", "member" : "lamp.example.gan.CliConfig.trainData", "link" : "lamp\/example\/gan\/CliConfig.html#trainData:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/example\/gan\/CliConfig.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/example\/gan\/CliConfig.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/example\/gan\/CliConfig.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/example\/gan\/CliConfig.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/example\/gan\/CliConfig.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/example\/gan\/CliConfig.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/example\/gan\/CliConfig.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/example\/gan\/CliConfig.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/example\/gan\/CliConfig.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/example\/gan\/CliConfig.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/example\/gan\/CliConfig.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/example\/gan\/CliConfig.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/example\/gan\/CliConfig.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/example\/gan\/CliConfig.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/example\/gan\/CliConfig.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/example\/gan\/CliConfig.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/example\/gan\/CliConfig.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/example\/gan\/CliConfig.html", "kind" : "case class"}, {"name" : "lamp.example.gan.Cnn", "shortDescription" : "", "object" : "lamp\/example\/gan\/Cnn$.html", "members_object" : [{"label" : "generator", "tail" : "(in: Int, tOpt: STenOptions)(scope: Scope): Sequential[Variable, Product with GenericModule[Variable, Variable] with Serializable]", "member" : "lamp.example.gan.Cnn.generator", "link" : "lamp\/example\/gan\/Cnn$.html#generator(in:Int,tOpt:lamp.STenOptions)(implicitscope:lamp.Scope):lamp.nn.Sequential[lamp.autograd.Variable,Productwithlamp.nn.GenericModule[lamp.autograd.Variable,lamp.autograd.Variable]withjava.io.Serializable]", "kind" : "def"}, {"label" : "discriminator", "tail" : "(in: Int, tOpt: STenOptions)(pool: Scope): Sequential[Variable, Product with GenericModule[Variable, Variable] with Serializable]", "member" : "lamp.example.gan.Cnn.discriminator", "link" : "lamp\/example\/gan\/Cnn$.html#discriminator(in:Int,tOpt:lamp.STenOptions)(implicitpool:lamp.Scope):lamp.nn.Sequential[lamp.autograd.Variable,Productwithlamp.nn.GenericModule[lamp.autograd.Variable,lamp.autograd.Variable]withjava.io.Serializable]", "kind" : "def"}, {"label" : "generatorblock", "tail" : "(in: Int, out: Int, tOpt: STenOptions)(scope: Scope): Sequential[Variable, Product with GenericModule[Variable, Variable] with Serializable { def state: List[(lamp.autograd.Constant, lamp.nn.LeafTag with Product with java.io.Serializable)] }]", "member" : "lamp.example.gan.Cnn.generatorblock", "link" : "lamp\/example\/gan\/Cnn$.html#generatorblock(in:Int,out:Int,tOpt:lamp.STenOptions)(implicitscope:lamp.Scope):lamp.nn.Sequential[lamp.autograd.Variable,Productwithlamp.nn.GenericModule[lamp.autograd.Variable,lamp.autograd.Variable]withjava.io.Serializable{defstate:List[(lamp.autograd.Constant,lamp.nn.LeafTagwithProductwithjava.io.Serializable)]}]", "kind" : "def"}, {"label" : "block", "tail" : "(in: Int, out: Int, tOpt: STenOptions)(scope: Scope): Sequential[Variable, Product with GenericModule[Variable, Variable] with Serializable { def state: List[(lamp.autograd.Constant, lamp.nn.LeafTag with Product with java.io.Serializable)] }]", "member" : "lamp.example.gan.Cnn.block", "link" : "lamp\/example\/gan\/Cnn$.html#block(in:Int,out:Int,tOpt:lamp.STenOptions)(implicitscope:lamp.Scope):lamp.nn.Sequential[lamp.autograd.Variable,Productwithlamp.nn.GenericModule[lamp.autograd.Variable,lamp.autograd.Variable]withjava.io.Serializable{defstate:List[(lamp.autograd.Constant,lamp.nn.LeafTagwithProductwithjava.io.Serializable)]}]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/example\/gan\/Cnn$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/example\/gan\/Cnn$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/example\/gan\/Cnn$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/example\/gan\/Cnn$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/example\/gan\/Cnn$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/example\/gan\/Cnn$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/example\/gan\/Cnn$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/example\/gan\/Cnn$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/example\/gan\/Cnn$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/example\/gan\/Cnn$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/example\/gan\/Cnn$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/example\/gan\/Cnn$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/example\/gan\/Cnn$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/example\/gan\/Cnn$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/example\/gan\/Cnn$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/example\/gan\/Cnn$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/example\/gan\/Cnn$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/example\/gan\/Cnn$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/example\/gan\/Cnn$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "lamp.example.gan.GAN", "shortDescription" : "", "object" : "lamp\/example\/gan\/GAN$.html", "members_object" : [{"label" : "loadImageFile", "tail" : "(file: File, numImages: Int, precision: FloatingPointPrecision)(scope: Scope): (STen, STen)", "member" : "lamp.example.gan.GAN.loadImageFile", "link" : "lamp\/example\/gan\/GAN$.html#loadImageFile(file:java.io.File,numImages:Int,precision:lamp.FloatingPointPrecision)(implicitscope:lamp.Scope):(lamp.STen,lamp.STen)", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/example\/gan\/GAN$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/example\/gan\/GAN$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/example\/gan\/GAN$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/example\/gan\/GAN$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/example\/gan\/GAN$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/example\/gan\/GAN$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/example\/gan\/GAN$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/example\/gan\/GAN$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/example\/gan\/GAN$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/example\/gan\/GAN$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/example\/gan\/GAN$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/example\/gan\/GAN$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/example\/gan\/GAN$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/example\/gan\/GAN$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/example\/gan\/GAN$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/example\/gan\/GAN$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/example\/gan\/GAN$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/example\/gan\/GAN$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/example\/gan\/GAN$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "lamp.example.gan.Train", "shortDescription" : "", "object" : "lamp\/example\/gan\/Train$.html", "members_object" : [{"label" : "makeNoise", "tail" : "(instances: Int, tensorOptions: STenOptions)(scope: Scope): Constant", "member" : "lamp.example.gan.Train.makeNoise", "link" : "lamp\/example\/gan\/Train$.html#makeNoise(instances:Int,tensorOptions:lamp.STenOptions)(implicitscope:lamp.Scope):lamp.autograd.Constant", "kind" : "def"}, {"label" : "latentDim", "tail" : ": Int", "member" : "lamp.example.gan.Train.latentDim", "link" : "lamp\/example\/gan\/Train$.html#latentDim:Int", "kind" : "val"}, {"label" : "parser1", "tail" : ": OParser[String, CliConfig]", "member" : "lamp.example.gan.Train.parser1", "link" : "lamp\/example\/gan\/Train$.html#parser1:scopt.OParser[String,lamp.example.gan.CliConfig]", "kind" : "val"}, {"label" : "builder", "tail" : ": OParserBuilder[CliConfig]", "member" : "lamp.example.gan.Train.builder", "link" : "lamp\/example\/gan\/Train$.html#builder:scopt.OParserBuilder[lamp.example.gan.CliConfig]", "kind" : "val"}, {"label" : "main", "tail" : "(args: Array[String]): Unit", "member" : "scala.App.main", "link" : "lamp\/example\/gan\/Train$.html#main(args:Array[String]):Unit", "kind" : "final def"}, {"label" : "delayedInit", "tail" : "(body: => Unit): Unit", "member" : "scala.App.delayedInit", "link" : "lamp\/example\/gan\/Train$.html#delayedInit(body:=>Unit):Unit", "kind" : "def"}, {"label" : "args", "tail" : "(): Array[String]", "member" : "scala.App.args", "link" : "lamp\/example\/gan\/Train$.html#args:Array[String]", "kind" : "final def"}, {"label" : "executionStart", "tail" : ": Long", "member" : "scala.App.executionStart", "link" : "lamp\/example\/gan\/Train$.html#executionStart:Long", "kind" : "final val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/example\/gan\/Train$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/example\/gan\/Train$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/example\/gan\/Train$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/example\/gan\/Train$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/example\/gan\/Train$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/example\/gan\/Train$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/example\/gan\/Train$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/example\/gan\/Train$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/example\/gan\/Train$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/example\/gan\/Train$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/example\/gan\/Train$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/example\/gan\/Train$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/example\/gan\/Train$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/example\/gan\/Train$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/example\/gan\/Train$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/example\/gan\/Train$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/example\/gan\/Train$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/example\/gan\/Train$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/example\/gan\/Train$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "lamp.tabular" : [{"name" : "lamp.tabular.AutoLoop", "shortDescription" : "", "object" : "lamp\/tabular\/AutoLoop$.html", "members_object" : [{"label" : "train", "tail" : "(dataFullbatch: STen, targetFullbatch: STen, folds: Seq[(Seq[Int], Seq[Int])], targetType: TargetType, dataLayout: Seq[Metadata], epochs: Seq[Int], weighDecays: Seq[Double], dropouts: Seq[Double], hiddenSizes: Seq[Int], knnK: Seq[Int], knnMinibatchSize: Int, extratreesK: Seq[Int], extratreesM: Seq[Int], extratreesNMin: Seq[Int], extratreeParallelism: Int, learningRate: Double, device: Device, precision: FloatingPointPrecision, minibatchSize: Int, logger: Option[Logger], ensembleFolds: Seq[(Seq[Int], Seq[Int])], rng: Generator)(outerScope: Scope): IO[EnsembleModel]", "member" : "lamp.tabular.AutoLoop.train", "link" : "lamp\/tabular\/AutoLoop$.html#train(dataFullbatch:lamp.STen,targetFullbatch:lamp.STen,folds:Seq[(Seq[Int],Seq[Int])],targetType:lamp.tabular.TargetType,dataLayout:Seq[lamp.tabular.Metadata],epochs:Seq[Int],weighDecays:Seq[Double],dropouts:Seq[Double],hiddenSizes:Seq[Int],knnK:Seq[Int],knnMinibatchSize:Int,extratreesK:Seq[Int],extratreesM:Seq[Int],extratreesNMin:Seq[Int],extratreeParallelism:Int,learningRate:Double,device:lamp.Device,precision:lamp.FloatingPointPrecision,minibatchSize:Int,logger:Option[scribe.Logger],ensembleFolds:Seq[(Seq[Int],Seq[Int])],rng:org.saddle.spire.random.Generator)(outerScope:lamp.Scope):cats.effect.IO[lamp.tabular.EnsembleModel]", "kind" : "def"}, {"label" : "computeValidationErrors", "tail" : "(pred: STen, targetType: TargetType, precision: FloatingPointPrecision, targetFullbatch: STen)(scope: Scope): Double", "member" : "lamp.tabular.AutoLoop.computeValidationErrors", "link" : "lamp\/tabular\/AutoLoop$.html#computeValidationErrors(pred:lamp.STen,targetType:lamp.tabular.TargetType,precision:lamp.FloatingPointPrecision,targetFullbatch:lamp.STen)(implicitscope:lamp.Scope):Double", "kind" : "def"}, {"label" : "trainAndAverageFolds", "tail" : "(dataFullbatch: STen, targetFullbatch: STen, predictions: Seq[STen], folds: Seq[(Seq[Int], Seq[Int])], targetType: TargetType, dataLayout: Seq[Metadata], epochs: Seq[Int], weightDecay: Double, dropout: Double, hiddenSize: Int, learningRate: Double, device: Device, precision: FloatingPointPrecision, minibatchSize: Int, logger: Option[Logger], rng: Generator)(outerScope: Scope): IO[Seq[(Int, STen, Seq[NNBase])]]", "member" : "lamp.tabular.AutoLoop.trainAndAverageFolds", "link" : "lamp\/tabular\/AutoLoop$.html#trainAndAverageFolds(dataFullbatch:lamp.STen,targetFullbatch:lamp.STen,predictions:Seq[lamp.STen],folds:Seq[(Seq[Int],Seq[Int])],targetType:lamp.tabular.TargetType,dataLayout:Seq[lamp.tabular.Metadata],epochs:Seq[Int],weightDecay:Double,dropout:Double,hiddenSize:Int,learningRate:Double,device:lamp.Device,precision:lamp.FloatingPointPrecision,minibatchSize:Int,logger:Option[scribe.Logger],rng:org.saddle.spire.random.Generator)(outerScope:lamp.Scope):cats.effect.IO[Seq[(Int,lamp.STen,Seq[lamp.tabular.NNBase])]]", "kind" : "def"}, {"label" : "trainAndAverageFoldsKnn", "tail" : "(k: Int, dataFullbatch: STen, targetFullbatch: STen, predictions: Seq[STen], folds: Seq[(Seq[Int], Seq[Int])], targetType: TargetType, dataLayout: Seq[Metadata], device: Device, precision: FloatingPointPrecision, minibatchSize: Int, logger: Option[Logger])(outerScope: Scope): IO[Seq[(Int, STen, Seq[KnnBase])]]", "member" : "lamp.tabular.AutoLoop.trainAndAverageFoldsKnn", "link" : "lamp\/tabular\/AutoLoop$.html#trainAndAverageFoldsKnn(k:Int,dataFullbatch:lamp.STen,targetFullbatch:lamp.STen,predictions:Seq[lamp.STen],folds:Seq[(Seq[Int],Seq[Int])],targetType:lamp.tabular.TargetType,dataLayout:Seq[lamp.tabular.Metadata],device:lamp.Device,precision:lamp.FloatingPointPrecision,minibatchSize:Int,logger:Option[scribe.Logger])(outerScope:lamp.Scope):cats.effect.IO[Seq[(Int,lamp.STen,Seq[lamp.tabular.KnnBase])]]", "kind" : "def"}, {"label" : "trainAndAverageFoldsExtratrees", "tail" : "(k: Int, m: Int, nMin: Int, parallelism: Int, dataFullbatch: STen, targetFullbatch: STen, predictions: Seq[STen], folds: Seq[(Seq[Int], Seq[Int])], targetType: TargetType, dataLayout: Seq[Metadata], logger: Option[Logger])(outerScope: Scope): IO[Seq[(Int, STen, Seq[ExtratreesBase])]]", "member" : "lamp.tabular.AutoLoop.trainAndAverageFoldsExtratrees", "link" : "lamp\/tabular\/AutoLoop$.html#trainAndAverageFoldsExtratrees(k:Int,m:Int,nMin:Int,parallelism:Int,dataFullbatch:lamp.STen,targetFullbatch:lamp.STen,predictions:Seq[lamp.STen],folds:Seq[(Seq[Int],Seq[Int])],targetType:lamp.tabular.TargetType,dataLayout:Seq[lamp.tabular.Metadata],logger:Option[scribe.Logger])(outerScope:lamp.Scope):cats.effect.IO[Seq[(Int,lamp.STen,Seq[lamp.tabular.ExtratreesBase])]]", "kind" : "def"}, {"label" : "ev2", "tail" : ": Movable[RegressionTree] { def list(t: lamp.extratrees.RegressionTree): scala.collection.immutable.Nil.type }", "member" : "lamp.tabular.AutoLoop.ev2", "link" : "lamp\/tabular\/AutoLoop$.html#ev2:lamp.Movable[lamp.extratrees.RegressionTree]{deflist(t:lamp.extratrees.RegressionTree):scala.collection.immutable.Nil.type}", "kind" : "implicit val"}, {"label" : "ev1", "tail" : ": Movable[ClassificationTree] { def list(t: lamp.extratrees.ClassificationTree): scala.collection.immutable.Nil.type }", "member" : "lamp.tabular.AutoLoop.ev1", "link" : "lamp\/tabular\/AutoLoop$.html#ev1:lamp.Movable[lamp.extratrees.ClassificationTree]{deflist(t:lamp.extratrees.ClassificationTree):scala.collection.immutable.Nil.type}", "kind" : "implicit val"}, {"label" : "makeCVFolds", "tail" : "(length: Int, k: Int, repeat: Int, rng: Generator): IndexedSeq[(Seq[Int], Seq[Int])]", "member" : "lamp.tabular.AutoLoop.makeCVFolds", "link" : "lamp\/tabular\/AutoLoop$.html#makeCVFolds(length:Int,k:Int,repeat:Int,rng:org.saddle.spire.random.Generator):IndexedSeq[(Seq[Int],Seq[Int])]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/tabular\/AutoLoop$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/tabular\/AutoLoop$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/tabular\/AutoLoop$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/tabular\/AutoLoop$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/tabular\/AutoLoop$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/tabular\/AutoLoop$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/tabular\/AutoLoop$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/AutoLoop$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/AutoLoop$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/AutoLoop$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/tabular\/AutoLoop$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/tabular\/AutoLoop$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/tabular\/AutoLoop$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/tabular\/AutoLoop$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/tabular\/AutoLoop$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/tabular\/AutoLoop$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/tabular\/AutoLoop$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/tabular\/AutoLoop$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/tabular\/AutoLoop$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "lamp.tabular.BaseModel", "object" : "lamp\/tabular\/BaseModel$.html", "members_object" : [{"label" : "IsMovable", "tail" : "", "member" : "lamp.tabular.BaseModel.IsMovable", "link" : "lamp\/tabular\/BaseModel$.html#IsMovable", "kind" : "implicit object"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/tabular\/BaseModel$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/tabular\/BaseModel$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/tabular\/BaseModel$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/tabular\/BaseModel$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/tabular\/BaseModel$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/tabular\/BaseModel$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/tabular\/BaseModel$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/BaseModel$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/BaseModel$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/BaseModel$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/tabular\/BaseModel$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/tabular\/BaseModel$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/tabular\/BaseModel$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/tabular\/BaseModel$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/tabular\/BaseModel$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/tabular\/BaseModel$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/tabular\/BaseModel$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/tabular\/BaseModel$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/tabular\/BaseModel$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "lamp\/tabular\/BaseModel.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/tabular\/BaseModel.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/tabular\/BaseModel.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/tabular\/BaseModel.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/tabular\/BaseModel.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/tabular\/BaseModel.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/tabular\/BaseModel.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/tabular\/BaseModel.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/BaseModel.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/BaseModel.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/BaseModel.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/tabular\/BaseModel.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/tabular\/BaseModel.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/tabular\/BaseModel.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/tabular\/BaseModel.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/tabular\/BaseModel.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/tabular\/BaseModel.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/tabular\/BaseModel.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/tabular\/BaseModel.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/tabular\/BaseModel.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "lamp.tabular.Categorical", "shortDescription" : "", "object" : "lamp\/tabular\/Categorical$.html", "members_object" : [{"label" : "rw", "tail" : ": upickle.default.ReadWriter[Categorical]", "member" : "lamp.tabular.Categorical.rw", "link" : "lamp\/tabular\/Categorical$.html#rw:upickle.default.ReadWriter[lamp.tabular.Categorical]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/tabular\/Categorical$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/tabular\/Categorical$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/tabular\/Categorical$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/tabular\/Categorical$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/tabular\/Categorical$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/tabular\/Categorical$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/tabular\/Categorical$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/Categorical$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/Categorical$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/Categorical$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/tabular\/Categorical$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/tabular\/Categorical$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/tabular\/Categorical$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/tabular\/Categorical$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/tabular\/Categorical$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/tabular\/Categorical$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/tabular\/Categorical$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/tabular\/Categorical$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/tabular\/Categorical$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"member" : "lamp.tabular.Categorical#<init>", "error" : "unsupported entity"}, {"label" : "classes", "tail" : ": Int", "member" : "lamp.tabular.Categorical.classes", "link" : "lamp\/tabular\/Categorical.html#classes:Int", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/tabular\/Categorical.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/tabular\/Categorical.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/tabular\/Categorical.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/tabular\/Categorical.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/tabular\/Categorical.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/tabular\/Categorical.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/tabular\/Categorical.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/tabular\/Categorical.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/Categorical.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/Categorical.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/Categorical.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/tabular\/Categorical.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/tabular\/Categorical.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/tabular\/Categorical.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/tabular\/Categorical.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/tabular\/Categorical.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/tabular\/Categorical.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/tabular\/Categorical.html", "kind" : "case class"}, {"name" : "lamp.tabular.Classification", "shortDescription" : "", "object" : "lamp\/tabular\/Classification$.html", "members_object" : [{"label" : "rw", "tail" : ": upickle.default.ReadWriter[Classification]", "member" : "lamp.tabular.Classification.rw", "link" : "lamp\/tabular\/Classification$.html#rw:upickle.default.ReadWriter[lamp.tabular.Classification]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/tabular\/Classification$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/tabular\/Classification$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/tabular\/Classification$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/tabular\/Classification$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/tabular\/Classification$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/tabular\/Classification$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/tabular\/Classification$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/Classification$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/Classification$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/Classification$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/tabular\/Classification$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/tabular\/Classification$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/tabular\/Classification$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/tabular\/Classification$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/tabular\/Classification$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/tabular\/Classification$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/tabular\/Classification$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/tabular\/Classification$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/tabular\/Classification$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"member" : "lamp.tabular.Classification#<init>", "error" : "unsupported entity"}, {"label" : "weights", "tail" : ": Seq[Double]", "member" : "lamp.tabular.Classification.weights", "link" : "lamp\/tabular\/Classification.html#weights:Seq[Double]", "kind" : "val"}, {"label" : "classes", "tail" : ": Int", "member" : "lamp.tabular.Classification.classes", "link" : "lamp\/tabular\/Classification.html#classes:Int", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/tabular\/Classification.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/tabular\/Classification.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/tabular\/Classification.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/tabular\/Classification.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/tabular\/Classification.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/tabular\/Classification.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/tabular\/Classification.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/tabular\/Classification.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/Classification.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/Classification.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/Classification.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/tabular\/Classification.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/tabular\/Classification.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/tabular\/Classification.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/tabular\/Classification.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/tabular\/Classification.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/tabular\/Classification.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/tabular\/Classification.html", "kind" : "case class"}, {"name" : "lamp.tabular.ECDF", "shortDescription" : "", "object" : "lamp\/tabular\/ECDF$.html", "members_object" : [{"label" : "apply", "tail" : "(xs: Vec[Double]): ECDF", "member" : "lamp.tabular.ECDF.apply", "link" : "lamp\/tabular\/ECDF$.html#apply(xs:org.saddle.Vec[Double]):lamp.tabular.ECDF", "kind" : "def"}, {"label" : "apply", "tail" : "(t: Tensor): ECDF", "member" : "lamp.tabular.ECDF.apply", "link" : "lamp\/tabular\/ECDF$.html#apply(t:aten.Tensor):lamp.tabular.ECDF", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/tabular\/ECDF$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/tabular\/ECDF$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/tabular\/ECDF$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/tabular\/ECDF$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/tabular\/ECDF$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/tabular\/ECDF$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/tabular\/ECDF$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/ECDF$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/ECDF$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/ECDF$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/tabular\/ECDF$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/tabular\/ECDF$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/tabular\/ECDF$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/tabular\/ECDF$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/tabular\/ECDF$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/tabular\/ECDF$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/tabular\/ECDF$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/tabular\/ECDF$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/tabular\/ECDF$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "apply", "tail" : "(t: Tensor): Resource[IO, Tensor]", "member" : "lamp.tabular.ECDF.apply", "link" : "lamp\/tabular\/ECDF.html#apply(t:aten.Tensor):cats.effect.Resource[cats.effect.IO,aten.Tensor]", "kind" : "def"}, {"label" : "inverse", "tail" : "(n: Double): Double", "member" : "lamp.tabular.ECDF.inverse", "link" : "lamp\/tabular\/ECDF.html#inverse(n:Double):Double", "kind" : "def"}, {"label" : "inverse", "tail" : "(v: Vec[Double]): Vec[Double]", "member" : "lamp.tabular.ECDF.inverse", "link" : "lamp\/tabular\/ECDF.html#inverse(v:org.saddle.Vec[Double]):org.saddle.Vec[Double]", "kind" : "def"}, {"label" : "apply", "tail" : "(v: Vec[Double]): Vec[Double]", "member" : "lamp.tabular.ECDF.apply", "link" : "lamp\/tabular\/ECDF.html#apply(v:org.saddle.Vec[Double]):org.saddle.Vec[Double]", "kind" : "def"}, {"label" : "apply", "tail" : "(n: Double): Double", "member" : "lamp.tabular.ECDF.apply", "link" : "lamp\/tabular\/ECDF.html#apply(n:Double):Double", "kind" : "def"}, {"member" : "lamp.tabular.ECDF#<init>", "error" : "unsupported entity"}, {"label" : "y", "tail" : ": Vec[Double]", "member" : "lamp.tabular.ECDF.y", "link" : "lamp\/tabular\/ECDF.html#y:org.saddle.Vec[Double]", "kind" : "val"}, {"label" : "x", "tail" : ": Vec[Double]", "member" : "lamp.tabular.ECDF.x", "link" : "lamp\/tabular\/ECDF.html#x:org.saddle.Vec[Double]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/tabular\/ECDF.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/tabular\/ECDF.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/tabular\/ECDF.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/tabular\/ECDF.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/tabular\/ECDF.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/tabular\/ECDF.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/tabular\/ECDF.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/tabular\/ECDF.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/ECDF.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/ECDF.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/ECDF.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/tabular\/ECDF.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/tabular\/ECDF.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/tabular\/ECDF.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/tabular\/ECDF.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/tabular\/ECDF.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/tabular\/ECDF.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/tabular\/ECDF.html", "kind" : "case class"}, {"name" : "lamp.tabular.ECDFRegression", "case object" : "lamp\/tabular\/ECDFRegression$.html", "shortDescription" : "", "members_case object" : [{"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/tabular\/ECDFRegression$.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "productElementName", "tail" : "(n: Int): String", "member" : "scala.Product.productElementName", "link" : "lamp\/tabular\/ECDFRegression$.html#productElementName(n:Int):String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/tabular\/ECDFRegression$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/tabular\/ECDFRegression$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/tabular\/ECDFRegression$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/tabular\/ECDFRegression$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/tabular\/ECDFRegression$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/tabular\/ECDFRegression$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/tabular\/ECDFRegression$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/ECDFRegression$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/ECDFRegression$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/ECDFRegression$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/tabular\/ECDFRegression$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/tabular\/ECDFRegression$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/tabular\/ECDFRegression$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/tabular\/ECDFRegression$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/tabular\/ECDFRegression$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/tabular\/ECDFRegression$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/tabular\/ECDFRegression$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "case object"}, {"name" : "lamp.tabular.EnsembleModel", "shortDescription" : "", "object" : "lamp\/tabular\/EnsembleModel$.html", "members_object" : [{"label" : "IsMovable", "tail" : "", "member" : "lamp.tabular.EnsembleModel.IsMovable", "link" : "lamp\/tabular\/EnsembleModel$.html#IsMovable", "kind" : "implicit object"}, {"label" : "train", "tail" : "(features: STen, target: STen, dataLayout: Seq[Metadata], targetType: TargetType, device: Device, logger: Option[Logger], learningRate: Double, minibatchSize: Int, knnMinibatchSize: Int, rng: Generator)(scope: Scope): IO[EnsembleModel]", "member" : "lamp.tabular.EnsembleModel.train", "link" : "lamp\/tabular\/EnsembleModel$.html#train(features:lamp.STen,target:lamp.STen,dataLayout:Seq[lamp.tabular.Metadata],targetType:lamp.tabular.TargetType,device:lamp.Device,logger:Option[scribe.Logger],learningRate:Double,minibatchSize:Int,knnMinibatchSize:Int,rng:org.saddle.spire.random.Generator)(implicitscope:lamp.Scope):cats.effect.IO[lamp.tabular.EnsembleModel]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/tabular\/EnsembleModel$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/tabular\/EnsembleModel$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/tabular\/EnsembleModel$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/tabular\/EnsembleModel$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/tabular\/EnsembleModel$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/tabular\/EnsembleModel$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/tabular\/EnsembleModel$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/EnsembleModel$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/EnsembleModel$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/EnsembleModel$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/tabular\/EnsembleModel$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/tabular\/EnsembleModel$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/tabular\/EnsembleModel$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/tabular\/EnsembleModel$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/tabular\/EnsembleModel$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/tabular\/EnsembleModel$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/tabular\/EnsembleModel$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/tabular\/EnsembleModel$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/tabular\/EnsembleModel$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "predict", "tail" : "(data: STen)(scope: Scope): IO[STen]", "member" : "lamp.tabular.EnsembleModel.predict", "link" : "lamp\/tabular\/EnsembleModel.html#predict(data:lamp.STen)(implicitscope:lamp.Scope):cats.effect.IO[lamp.STen]", "kind" : "def"}, {"member" : "lamp.tabular.EnsembleModel#<init>", "error" : "unsupported entity"}, {"label" : "validationLosses", "tail" : ": Seq[Double]", "member" : "lamp.tabular.EnsembleModel.validationLosses", "link" : "lamp\/tabular\/EnsembleModel.html#validationLosses:Seq[Double]", "kind" : "val"}, {"label" : "precision", "tail" : ": FloatingPointPrecision", "member" : "lamp.tabular.EnsembleModel.precision", "link" : "lamp\/tabular\/EnsembleModel.html#precision:lamp.FloatingPointPrecision", "kind" : "val"}, {"label" : "targetType", "tail" : ": TargetType", "member" : "lamp.tabular.EnsembleModel.targetType", "link" : "lamp\/tabular\/EnsembleModel.html#targetType:lamp.tabular.TargetType", "kind" : "val"}, {"label" : "dataLayout", "tail" : ": Seq[Metadata]", "member" : "lamp.tabular.EnsembleModel.dataLayout", "link" : "lamp\/tabular\/EnsembleModel.html#dataLayout:Seq[lamp.tabular.Metadata]", "kind" : "val"}, {"label" : "baseModels", "tail" : ": Seq[Seq[BaseModel]]", "member" : "lamp.tabular.EnsembleModel.baseModels", "link" : "lamp\/tabular\/EnsembleModel.html#baseModels:Seq[Seq[lamp.tabular.BaseModel]]", "kind" : "val"}, {"label" : "selectionModels", "tail" : ": Seq[BaseModel]", "member" : "lamp.tabular.EnsembleModel.selectionModels", "link" : "lamp\/tabular\/EnsembleModel.html#selectionModels:Seq[lamp.tabular.BaseModel]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/tabular\/EnsembleModel.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/tabular\/EnsembleModel.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/tabular\/EnsembleModel.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/tabular\/EnsembleModel.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/tabular\/EnsembleModel.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/tabular\/EnsembleModel.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/tabular\/EnsembleModel.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/tabular\/EnsembleModel.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/EnsembleModel.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/EnsembleModel.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/EnsembleModel.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/tabular\/EnsembleModel.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/tabular\/EnsembleModel.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/tabular\/EnsembleModel.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/tabular\/EnsembleModel.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/tabular\/EnsembleModel.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/tabular\/EnsembleModel.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/tabular\/EnsembleModel.html", "kind" : "object"}, {"name" : "lamp.tabular.ExtratreesBase", "shortDescription" : "", "members_case class" : [{"member" : "lamp.tabular.ExtratreesBase#<init>", "error" : "unsupported entity"}, {"label" : "trees", "tail" : ": Either[Seq[ClassificationTree], Seq[RegressionTree]]", "member" : "lamp.tabular.ExtratreesBase.trees", "link" : "lamp\/tabular\/ExtratreesBase.html#trees:Either[Seq[lamp.extratrees.ClassificationTree],Seq[lamp.extratrees.RegressionTree]]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/tabular\/ExtratreesBase.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/tabular\/ExtratreesBase.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/tabular\/ExtratreesBase.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/tabular\/ExtratreesBase.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/tabular\/ExtratreesBase.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/tabular\/ExtratreesBase.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/tabular\/ExtratreesBase.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/tabular\/ExtratreesBase.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/ExtratreesBase.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/ExtratreesBase.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/ExtratreesBase.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/tabular\/ExtratreesBase.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/tabular\/ExtratreesBase.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/tabular\/ExtratreesBase.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/tabular\/ExtratreesBase.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/tabular\/ExtratreesBase.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/tabular\/ExtratreesBase.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/tabular\/ExtratreesBase.html", "kind" : "case class"}, {"name" : "lamp.tabular.KnnBase", "shortDescription" : "", "object" : "lamp\/tabular\/KnnBase$.html", "members_object" : [{"label" : "IsMovable", "tail" : "", "member" : "lamp.tabular.KnnBase.IsMovable", "link" : "lamp\/tabular\/KnnBase$.html#IsMovable", "kind" : "implicit object"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/tabular\/KnnBase$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/tabular\/KnnBase$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/tabular\/KnnBase$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/tabular\/KnnBase$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/tabular\/KnnBase$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/tabular\/KnnBase$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/tabular\/KnnBase$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/KnnBase$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/KnnBase$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/KnnBase$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/tabular\/KnnBase$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/tabular\/KnnBase$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/tabular\/KnnBase$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/tabular\/KnnBase$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/tabular\/KnnBase$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/tabular\/KnnBase$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/tabular\/KnnBase$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/tabular\/KnnBase$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/tabular\/KnnBase$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"member" : "lamp.tabular.KnnBase#<init>", "error" : "unsupported entity"}, {"label" : "target", "tail" : ": STen", "member" : "lamp.tabular.KnnBase.target", "link" : "lamp\/tabular\/KnnBase.html#target:lamp.STen", "kind" : "val"}, {"label" : "predictedFeatures", "tail" : ": Seq[STen]", "member" : "lamp.tabular.KnnBase.predictedFeatures", "link" : "lamp\/tabular\/KnnBase.html#predictedFeatures:Seq[lamp.STen]", "kind" : "val"}, {"label" : "features", "tail" : ": STen", "member" : "lamp.tabular.KnnBase.features", "link" : "lamp\/tabular\/KnnBase.html#features:lamp.STen", "kind" : "val"}, {"label" : "k", "tail" : ": Int", "member" : "lamp.tabular.KnnBase.k", "link" : "lamp\/tabular\/KnnBase.html#k:Int", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/tabular\/KnnBase.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/tabular\/KnnBase.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/tabular\/KnnBase.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/tabular\/KnnBase.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/tabular\/KnnBase.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/tabular\/KnnBase.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/tabular\/KnnBase.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/tabular\/KnnBase.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/KnnBase.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/KnnBase.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/KnnBase.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/tabular\/KnnBase.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/tabular\/KnnBase.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/tabular\/KnnBase.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/tabular\/KnnBase.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/tabular\/KnnBase.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/tabular\/KnnBase.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/tabular\/KnnBase.html", "kind" : "case class"}, {"name" : "lamp.tabular.Metadata", "object" : "lamp\/tabular\/Metadata$.html", "members_object" : [{"label" : "mv", "tail" : ": Movable[Metadata] { def list(t: lamp.tabular.Metadata): scala.collection.immutable.Nil.type }", "member" : "lamp.tabular.Metadata.mv", "link" : "lamp\/tabular\/Metadata$.html#mv:lamp.Movable[lamp.tabular.Metadata]{deflist(t:lamp.tabular.Metadata):scala.collection.immutable.Nil.type}", "kind" : "implicit val"}, {"label" : "rw", "tail" : ": upickle.default.ReadWriter[Metadata]", "member" : "lamp.tabular.Metadata.rw", "link" : "lamp\/tabular\/Metadata$.html#rw:upickle.default.ReadWriter[lamp.tabular.Metadata]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/tabular\/Metadata$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/tabular\/Metadata$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/tabular\/Metadata$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/tabular\/Metadata$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/tabular\/Metadata$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/tabular\/Metadata$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/tabular\/Metadata$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/Metadata$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/Metadata$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/Metadata$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/tabular\/Metadata$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/tabular\/Metadata$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/tabular\/Metadata$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/tabular\/Metadata$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/tabular\/Metadata$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/tabular\/Metadata$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/tabular\/Metadata$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/tabular\/Metadata$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/tabular\/Metadata$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "lamp\/tabular\/Metadata.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/tabular\/Metadata.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/tabular\/Metadata.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/tabular\/Metadata.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/tabular\/Metadata.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/tabular\/Metadata.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/tabular\/Metadata.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/tabular\/Metadata.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/Metadata.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/Metadata.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/Metadata.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/tabular\/Metadata.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/tabular\/Metadata.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/tabular\/Metadata.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/tabular\/Metadata.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/tabular\/Metadata.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/tabular\/Metadata.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/tabular\/Metadata.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/tabular\/Metadata.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/tabular\/Metadata.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "lamp.tabular.NNBase", "shortDescription" : "", "object" : "lamp\/tabular\/NNBase$.html", "members_object" : [{"label" : "IsMovable", "tail" : "", "member" : "lamp.tabular.NNBase.IsMovable", "link" : "lamp\/tabular\/NNBase$.html#IsMovable", "kind" : "implicit object"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/tabular\/NNBase$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/tabular\/NNBase$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/tabular\/NNBase$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/tabular\/NNBase$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/tabular\/NNBase$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/tabular\/NNBase$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/tabular\/NNBase$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/NNBase$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/NNBase$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/NNBase$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/tabular\/NNBase$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/tabular\/NNBase$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/tabular\/NNBase$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/tabular\/NNBase$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/tabular\/NNBase$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/tabular\/NNBase$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/tabular\/NNBase$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/tabular\/NNBase$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/tabular\/NNBase$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"member" : "lamp.tabular.NNBase#<init>", "error" : "unsupported entity"}, {"label" : "state", "tail" : ": Seq[STen]", "member" : "lamp.tabular.NNBase.state", "link" : "lamp\/tabular\/NNBase.html#state:Seq[lamp.STen]", "kind" : "val"}, {"label" : "hiddenSize", "tail" : ": Int", "member" : "lamp.tabular.NNBase.hiddenSize", "link" : "lamp\/tabular\/NNBase.html#hiddenSize:Int", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/tabular\/NNBase.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/tabular\/NNBase.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/tabular\/NNBase.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/tabular\/NNBase.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/tabular\/NNBase.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/tabular\/NNBase.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/tabular\/NNBase.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/tabular\/NNBase.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/NNBase.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/NNBase.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/NNBase.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/tabular\/NNBase.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/tabular\/NNBase.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/tabular\/NNBase.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/tabular\/NNBase.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/tabular\/NNBase.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/tabular\/NNBase.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/tabular\/NNBase.html", "kind" : "case class"}, {"name" : "lamp.tabular.Numerical", "case object" : "lamp\/tabular\/Numerical$.html", "shortDescription" : "", "members_case object" : [{"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/tabular\/Numerical$.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "productElementName", "tail" : "(n: Int): String", "member" : "scala.Product.productElementName", "link" : "lamp\/tabular\/Numerical$.html#productElementName(n:Int):String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/tabular\/Numerical$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/tabular\/Numerical$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/tabular\/Numerical$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/tabular\/Numerical$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/tabular\/Numerical$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/tabular\/Numerical$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/tabular\/Numerical$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/Numerical$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/Numerical$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/Numerical$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/tabular\/Numerical$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/tabular\/Numerical$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/tabular\/Numerical$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/tabular\/Numerical$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/tabular\/Numerical$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/tabular\/Numerical$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/tabular\/Numerical$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "case object"}, {"name" : "lamp.tabular.Regression", "case object" : "lamp\/tabular\/Regression$.html", "shortDescription" : "", "members_case object" : [{"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/tabular\/Regression$.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "productElementName", "tail" : "(n: Int): String", "member" : "scala.Product.productElementName", "link" : "lamp\/tabular\/Regression$.html#productElementName(n:Int):String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/tabular\/Regression$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/tabular\/Regression$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/tabular\/Regression$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/tabular\/Regression$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/tabular\/Regression$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/tabular\/Regression$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/tabular\/Regression$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/Regression$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/Regression$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/Regression$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/tabular\/Regression$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/tabular\/Regression$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/tabular\/Regression$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/tabular\/Regression$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/tabular\/Regression$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/tabular\/Regression$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/tabular\/Regression$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "case object"}, {"name" : "lamp.tabular.Serialization", "shortDescription" : "", "object" : "lamp\/tabular\/Serialization$.html", "members_object" : [{"label" : "saveModel", "tail" : "(model: EnsembleModel, outPath: String): Unit", "member" : "lamp.tabular.Serialization.saveModel", "link" : "lamp\/tabular\/Serialization$.html#saveModel(model:lamp.tabular.EnsembleModel,outPath:String):Unit", "kind" : "def"}, {"label" : "loadModel", "tail" : "(path: String)(scope: Scope): EnsembleModel", "member" : "lamp.tabular.Serialization.loadModel", "link" : "lamp\/tabular\/Serialization$.html#loadModel(path:String)(implicitscope:lamp.Scope):lamp.tabular.EnsembleModel", "kind" : "def"}, {"label" : "DTO", "tail" : "", "member" : "lamp.tabular.Serialization.DTO", "link" : "lamp\/tabular\/Serialization$.html#DTO", "kind" : "object"}, {"label" : "DTO", "tail" : "", "member" : "lamp.tabular.Serialization.DTO", "link" : "lamp\/tabular\/Serialization$.html#DTOextendsProductwithSerializable", "kind" : "case class"}, {"label" : "NNDto", "tail" : "", "member" : "lamp.tabular.Serialization.NNDto", "link" : "lamp\/tabular\/Serialization$.html#NNDto", "kind" : "object"}, {"label" : "NNDto", "tail" : "", "member" : "lamp.tabular.Serialization.NNDto", "link" : "lamp\/tabular\/Serialization$.html#NNDtoextendsSerialization.BaseModelDTOwithProductwithSerializable", "kind" : "case class"}, {"label" : "KnnDto", "tail" : "", "member" : "lamp.tabular.Serialization.KnnDto", "link" : "lamp\/tabular\/Serialization$.html#KnnDto", "kind" : "object"}, {"label" : "KnnDto", "tail" : "", "member" : "lamp.tabular.Serialization.KnnDto", "link" : "lamp\/tabular\/Serialization$.html#KnnDtoextendsSerialization.BaseModelDTOwithProductwithSerializable", "kind" : "case class"}, {"label" : "ExtratreesDto", "tail" : "", "member" : "lamp.tabular.Serialization.ExtratreesDto", "link" : "lamp\/tabular\/Serialization$.html#ExtratreesDto", "kind" : "object"}, {"label" : "ExtratreesDto", "tail" : "", "member" : "lamp.tabular.Serialization.ExtratreesDto", "link" : "lamp\/tabular\/Serialization$.html#ExtratreesDtoextendsSerialization.BaseModelDTOwithProductwithSerializable", "kind" : "case class"}, {"label" : "BaseModelDTO", "tail" : "", "member" : "lamp.tabular.Serialization.BaseModelDTO", "link" : "lamp\/tabular\/Serialization$.html#BaseModelDTO", "kind" : "object"}, {"label" : "BaseModelDTO", "tail" : "", "member" : "lamp.tabular.Serialization.BaseModelDTO", "link" : "lamp\/tabular\/Serialization$.html#BaseModelDTOextendsAnyRef", "kind" : "sealed trait"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/tabular\/Serialization$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/tabular\/Serialization$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/tabular\/Serialization$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/tabular\/Serialization$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/tabular\/Serialization$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/tabular\/Serialization$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/tabular\/Serialization$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/Serialization$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/Serialization$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/Serialization$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/tabular\/Serialization$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/tabular\/Serialization$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/tabular\/Serialization$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/tabular\/Serialization$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/tabular\/Serialization$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/tabular\/Serialization$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/tabular\/Serialization$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/tabular\/Serialization$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/tabular\/Serialization$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "lamp.tabular.StringMetadata", "object" : "lamp\/tabular\/StringMetadata$.html", "members_object" : [{"label" : "convertFrameToTensor", "tail" : "(frame: Frame[R, C, String], metadata: Seq[StringMetadata], device: Device, precision: FloatingPointPrecision, oneHotThreshold: Int)(scope: Scope): (STen, Seq[Metadata])", "member" : "lamp.tabular.StringMetadata.convertFrameToTensor", "link" : "lamp\/tabular\/StringMetadata$.html#convertFrameToTensor[R,C](frame:org.saddle.Frame[R,C,String],metadata:Seq[lamp.tabular.StringMetadata],device:lamp.Device,precision:lamp.FloatingPointPrecision,oneHotThreshold:Int)(implicitscope:lamp.Scope):(lamp.STen,Seq[lamp.tabular.Metadata])", "kind" : "def"}, {"label" : "inferMetaFromFrame", "tail" : "(frame: Frame[R, C, String], numericNaN: Set[String], categoricalThreshold: Int, categoricalMissing: String): Seq[(C, StringMetadata)]", "member" : "lamp.tabular.StringMetadata.inferMetaFromFrame", "link" : "lamp\/tabular\/StringMetadata$.html#inferMetaFromFrame[R,C](frame:org.saddle.Frame[R,C,String],numericNaN:Set[String],categoricalThreshold:Int,categoricalMissing:String):Seq[(C,lamp.tabular.StringMetadata)]", "kind" : "def"}, {"label" : "Unknown", "tail" : "", "member" : "lamp.tabular.StringMetadata.Unknown", "link" : "lamp\/tabular\/StringMetadata$.html#UnknownextendsStringMetadatawithProductwithSerializable", "kind" : "case class"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/tabular\/StringMetadata$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/tabular\/StringMetadata$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/tabular\/StringMetadata$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/tabular\/StringMetadata$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/tabular\/StringMetadata$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/tabular\/StringMetadata$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/tabular\/StringMetadata$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/StringMetadata$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/StringMetadata$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/StringMetadata$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/tabular\/StringMetadata$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/tabular\/StringMetadata$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/tabular\/StringMetadata$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/tabular\/StringMetadata$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/tabular\/StringMetadata$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/tabular\/StringMetadata$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/tabular\/StringMetadata$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/tabular\/StringMetadata$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/tabular\/StringMetadata$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "lamp\/tabular\/StringMetadata.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/tabular\/StringMetadata.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/tabular\/StringMetadata.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/tabular\/StringMetadata.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/tabular\/StringMetadata.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/tabular\/StringMetadata.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/tabular\/StringMetadata.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/tabular\/StringMetadata.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/StringMetadata.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/StringMetadata.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/StringMetadata.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/tabular\/StringMetadata.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/tabular\/StringMetadata.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/tabular\/StringMetadata.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/tabular\/StringMetadata.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/tabular\/StringMetadata.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/tabular\/StringMetadata.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/tabular\/StringMetadata.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/tabular\/StringMetadata.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/tabular\/StringMetadata.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "lamp.tabular.TabularEmbedding", "shortDescription" : "", "object" : "lamp\/tabular\/TabularEmbedding$.html", "members_object" : [{"label" : "load", "tail" : "(): Load[TabularEmbedding]", "member" : "lamp.tabular.TabularEmbedding.load", "link" : "lamp\/tabular\/TabularEmbedding$.html#load:lamp.nn.Load[lamp.tabular.TabularEmbedding]", "kind" : "implicit def"}, {"label" : "trainingMode", "tail" : "(): TrainingMode[TabularEmbedding]", "member" : "lamp.tabular.TabularEmbedding.trainingMode", "link" : "lamp\/tabular\/TabularEmbedding$.html#trainingMode:lamp.nn.TrainingMode[lamp.tabular.TabularEmbedding]", "kind" : "implicit def"}, {"label" : "make", "tail" : "(categoricalClassesWithEmbeddingDimensions: Seq[(Int, Int)], tOpt: STenOptions)(scope: Scope): TabularEmbedding", "member" : "lamp.tabular.TabularEmbedding.make", "link" : "lamp\/tabular\/TabularEmbedding$.html#make(categoricalClassesWithEmbeddingDimensions:Seq[(Int,Int)],tOpt:lamp.STenOptions)(implicitscope:lamp.Scope):lamp.tabular.TabularEmbedding", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/tabular\/TabularEmbedding$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/tabular\/TabularEmbedding$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/tabular\/TabularEmbedding$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/tabular\/TabularEmbedding$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/tabular\/TabularEmbedding$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/tabular\/TabularEmbedding$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/tabular\/TabularEmbedding$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/TabularEmbedding$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/TabularEmbedding$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/TabularEmbedding$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/tabular\/TabularEmbedding$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/tabular\/TabularEmbedding$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/tabular\/TabularEmbedding$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/tabular\/TabularEmbedding$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/tabular\/TabularEmbedding$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/tabular\/TabularEmbedding$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/tabular\/TabularEmbedding$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/tabular\/TabularEmbedding$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/tabular\/TabularEmbedding$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "forward", "tail" : "(x: (Seq[Variable], Variable))(arg0: Sc[S]): Variable", "member" : "lamp.tabular.TabularEmbedding.forward", "link" : "lamp\/tabular\/TabularEmbedding.html#forward[S](x:(Seq[lamp.autograd.Variable],lamp.autograd.Variable))(implicitevidence$1:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "state", "tail" : "(): Seq[(Constant, Weights.type)]", "member" : "lamp.tabular.TabularEmbedding.state", "link" : "lamp\/tabular\/TabularEmbedding.html#state:Seq[(lamp.autograd.Constant,lamp.nn.Embedding.Weights.type)]", "kind" : "def"}, {"member" : "lamp.tabular.TabularEmbedding#<init>", "error" : "unsupported entity"}, {"label" : "categoricalEmbeddings", "tail" : ": Seq[Embedding]", "member" : "lamp.tabular.TabularEmbedding.categoricalEmbeddings", "link" : "lamp\/tabular\/TabularEmbedding.html#categoricalEmbeddings:Seq[lamp.nn.Embedding]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/tabular\/TabularEmbedding.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "learnableParameters", "tail" : "(): Long", "member" : "lamp.nn.GenericModule.learnableParameters", "link" : "lamp\/tabular\/TabularEmbedding.html#learnableParameters:Long", "kind" : "final def"}, {"label" : "gradients", "tail" : "(loss: Variable, zeroGrad: Boolean): Seq[Option[STen]]", "member" : "lamp.nn.GenericModule.gradients", "link" : "lamp\/tabular\/TabularEmbedding.html#gradients(loss:lamp.autograd.Variable,zeroGrad:Boolean):Seq[Option[lamp.STen]]", "kind" : "final def"}, {"label" : "zeroGrad", "tail" : "(): Unit", "member" : "lamp.nn.GenericModule.zeroGrad", "link" : "lamp\/tabular\/TabularEmbedding.html#zeroGrad():Unit", "kind" : "final def"}, {"label" : "parameters", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.GenericModule.parameters", "link" : "lamp\/tabular\/TabularEmbedding.html#parameters:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "final def"}, {"label" : "apply", "tail" : "(a: (Seq[Variable], Variable))(arg0: Sc[S]): Variable", "member" : "lamp.nn.GenericModule.apply", "link" : "lamp\/tabular\/TabularEmbedding.html#apply[S](a:A)(implicitevidence$17:lamp.Sc[S]):B", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/tabular\/TabularEmbedding.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/tabular\/TabularEmbedding.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/tabular\/TabularEmbedding.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/tabular\/TabularEmbedding.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/tabular\/TabularEmbedding.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/tabular\/TabularEmbedding.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/tabular\/TabularEmbedding.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/TabularEmbedding.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/TabularEmbedding.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/TabularEmbedding.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/tabular\/TabularEmbedding.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/tabular\/TabularEmbedding.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/tabular\/TabularEmbedding.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/tabular\/TabularEmbedding.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/tabular\/TabularEmbedding.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/tabular\/TabularEmbedding.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/tabular\/TabularEmbedding.html", "kind" : "case class"}, {"name" : "lamp.tabular.TabularResidual", "shortDescription" : "", "object" : "lamp\/tabular\/TabularResidual$.html", "members_object" : [{"label" : "load", "tail" : "(arg0: Load[M2], arg1: Load[B2]): Load[TabularResidual[M2, B2]]", "member" : "lamp.tabular.TabularResidual.load", "link" : "lamp\/tabular\/TabularResidual$.html#load[M2<:lamp.nn.Module,B2<:lamp.nn.Module](implicitevidence$4:lamp.nn.Load[M2],implicitevidence$5:lamp.nn.Load[B2]):lamp.nn.Load[lamp.tabular.TabularResidual[M2,B2]]", "kind" : "implicit def"}, {"label" : "trainingMode", "tail" : "(arg0: TrainingMode[M2], arg1: TrainingMode[B2]): TrainingMode[TabularResidual[M2, B2]]", "member" : "lamp.tabular.TabularResidual.trainingMode", "link" : "lamp\/tabular\/TabularResidual$.html#trainingMode[M2<:lamp.nn.Module,B2<:lamp.nn.Module](implicitevidence$2:lamp.nn.TrainingMode[M2],implicitevidence$3:lamp.nn.TrainingMode[B2]):lamp.nn.TrainingMode[lamp.tabular.TabularResidual[M2,B2]]", "kind" : "implicit def"}, {"label" : "make", "tail" : "(inChannels: Int, hiddenChannels: Int, outChannels: Int, tOpt: STenOptions, dropout: Double)(scope: Scope): TabularResidual[Seq3[Variable, Variable, Variable, Variable, Seq4[Variable, Variable, Variable, Variable, Variable, BatchNorm with GenericModule[Variable, Variable], Dropout with GenericModule[Variable, Variable], Linear with GenericModule[Variable, Variable], Fun with GenericModule[Variable, Variable]] with GenericModule[Variable, Variable], Seq4[Variable, Variable, Variable, Variable, Variable, BatchNorm with GenericModule[Variable, Variable], Dropout with GenericModule[Variable, Variable], Linear with GenericModule[Variable, Variable], Fun with GenericModule[Variable, Variable]] with GenericModule[Variable, Variable], Seq3[Variable, Variable, Variable, Variable, BatchNorm with GenericModule[Variable, Variable], Dropout with GenericModule[Variable, Variable], Linear with GenericModule[Variable, Variable]] with GenericModule[Variable, Variable]], Seq2[Variable, Variable, Variable, BatchNorm with GenericModule[Variable, Variable], Linear with GenericModule[Variable, Variable]]]", "member" : "lamp.tabular.TabularResidual.make", "link" : "lamp\/tabular\/TabularResidual$.html#make(inChannels:Int,hiddenChannels:Int,outChannels:Int,tOpt:lamp.STenOptions,dropout:Double)(implicitscope:lamp.Scope):lamp.tabular.TabularResidual[lamp.nn.Seq3[lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.nn.Seq4[lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.nn.BatchNormwithlamp.nn.GenericModule[lamp.autograd.Variable,lamp.autograd.Variable],lamp.nn.Dropoutwithlamp.nn.GenericModule[lamp.autograd.Variable,lamp.autograd.Variable],lamp.nn.Linearwithlamp.nn.GenericModule[lamp.autograd.Variable,lamp.autograd.Variable],lamp.nn.Funwithlamp.nn.GenericModule[lamp.autograd.Variable,lamp.autograd.Variable]]withlamp.nn.GenericModule[lamp.autograd.Variable,lamp.autograd.Variable],lamp.nn.Seq4[lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.nn.BatchNormwithlamp.nn.GenericModule[lamp.autograd.Variable,lamp.autograd.Variable],lamp.nn.Dropoutwithlamp.nn.GenericModule[lamp.autograd.Variable,lamp.autograd.Variable],lamp.nn.Linearwithlamp.nn.GenericModule[lamp.autograd.Variable,lamp.autograd.Variable],lamp.nn.Funwithlamp.nn.GenericModule[lamp.autograd.Variable,lamp.autograd.Variable]]withlamp.nn.GenericModule[lamp.autograd.Variable,lamp.autograd.Variable],lamp.nn.Seq3[lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.nn.BatchNormwithlamp.nn.GenericModule[lamp.autograd.Variable,lamp.autograd.Variable],lamp.nn.Dropoutwithlamp.nn.GenericModule[lamp.autograd.Variable,lamp.autograd.Variable],lamp.nn.Linearwithlamp.nn.GenericModule[lamp.autograd.Variable,lamp.autograd.Variable]]withlamp.nn.GenericModule[lamp.autograd.Variable,lamp.autograd.Variable]],lamp.nn.Seq2[lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.nn.BatchNormwithlamp.nn.GenericModule[lamp.autograd.Variable,lamp.autograd.Variable],lamp.nn.Linearwithlamp.nn.GenericModule[lamp.autograd.Variable,lamp.autograd.Variable]]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/tabular\/TabularResidual$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/tabular\/TabularResidual$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/tabular\/TabularResidual$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/tabular\/TabularResidual$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/tabular\/TabularResidual$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/tabular\/TabularResidual$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/tabular\/TabularResidual$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/TabularResidual$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/TabularResidual$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/TabularResidual$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/tabular\/TabularResidual$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/tabular\/TabularResidual$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/tabular\/TabularResidual$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/tabular\/TabularResidual$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/tabular\/TabularResidual$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/tabular\/TabularResidual$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/tabular\/TabularResidual$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/tabular\/TabularResidual$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/tabular\/TabularResidual$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "forward", "tail" : "(x: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.tabular.TabularResidual.forward", "link" : "lamp\/tabular\/TabularResidual.html#forward[S](x:lamp.autograd.Variable)(implicitevidence$1:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "state", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.tabular.TabularResidual.state", "link" : "lamp\/tabular\/TabularResidual.html#state:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "def"}, {"member" : "lamp.tabular.TabularResidual#<init>", "error" : "unsupported entity"}, {"label" : "block", "tail" : ": Block with Module", "member" : "lamp.tabular.TabularResidual.block", "link" : "lamp\/tabular\/TabularResidual.html#block:Blockwithlamp.nn.Module", "kind" : "val"}, {"label" : "straight", "tail" : ": B2 with Module", "member" : "lamp.tabular.TabularResidual.straight", "link" : "lamp\/tabular\/TabularResidual.html#straight:B2withlamp.nn.Module", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/tabular\/TabularResidual.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "learnableParameters", "tail" : "(): Long", "member" : "lamp.nn.GenericModule.learnableParameters", "link" : "lamp\/tabular\/TabularResidual.html#learnableParameters:Long", "kind" : "final def"}, {"label" : "gradients", "tail" : "(loss: Variable, zeroGrad: Boolean): Seq[Option[STen]]", "member" : "lamp.nn.GenericModule.gradients", "link" : "lamp\/tabular\/TabularResidual.html#gradients(loss:lamp.autograd.Variable,zeroGrad:Boolean):Seq[Option[lamp.STen]]", "kind" : "final def"}, {"label" : "zeroGrad", "tail" : "(): Unit", "member" : "lamp.nn.GenericModule.zeroGrad", "link" : "lamp\/tabular\/TabularResidual.html#zeroGrad():Unit", "kind" : "final def"}, {"label" : "parameters", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.GenericModule.parameters", "link" : "lamp\/tabular\/TabularResidual.html#parameters:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "final def"}, {"label" : "apply", "tail" : "(a: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.nn.GenericModule.apply", "link" : "lamp\/tabular\/TabularResidual.html#apply[S](a:A)(implicitevidence$17:lamp.Sc[S]):B", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/tabular\/TabularResidual.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/tabular\/TabularResidual.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/tabular\/TabularResidual.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/tabular\/TabularResidual.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/tabular\/TabularResidual.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/tabular\/TabularResidual.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/tabular\/TabularResidual.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/TabularResidual.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/TabularResidual.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/TabularResidual.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/tabular\/TabularResidual.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/tabular\/TabularResidual.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/tabular\/TabularResidual.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/tabular\/TabularResidual.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/tabular\/TabularResidual.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/tabular\/TabularResidual.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/tabular\/TabularResidual.html", "kind" : "case class"}, {"name" : "lamp.tabular.TargetType", "object" : "lamp\/tabular\/TargetType$.html", "members_object" : [{"label" : "rw", "tail" : ": upickle.default.ReadWriter[TargetType]", "member" : "lamp.tabular.TargetType.rw", "link" : "lamp\/tabular\/TargetType$.html#rw:upickle.default.ReadWriter[lamp.tabular.TargetType]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/tabular\/TargetType$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/tabular\/TargetType$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/tabular\/TargetType$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/tabular\/TargetType$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/tabular\/TargetType$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/tabular\/TargetType$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/tabular\/TargetType$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/TargetType$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/TargetType$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/TargetType$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/tabular\/TargetType$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/tabular\/TargetType$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/tabular\/TargetType$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/tabular\/TargetType$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/tabular\/TargetType$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/tabular\/TargetType$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/tabular\/TargetType$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/tabular\/TargetType$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/tabular\/TargetType$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "lamp\/tabular\/TargetType.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/tabular\/TargetType.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/tabular\/TargetType.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/tabular\/TargetType.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/tabular\/TargetType.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/tabular\/TargetType.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/tabular\/TargetType.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/tabular\/TargetType.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/TargetType.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/TargetType.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/TargetType.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/tabular\/TargetType.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/tabular\/TargetType.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/tabular\/TargetType.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/tabular\/TargetType.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/tabular\/TargetType.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/tabular\/TargetType.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/tabular\/TargetType.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/tabular\/TargetType.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/tabular\/TargetType.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}], "lamp.util" : [{"name" : "lamp.util.NDArray", "shortDescription" : "INTERNAL API", "object" : "lamp\/util\/NDArray$.html", "members_object" : [{"label" : "tensorToFloatNDArray", "tail" : "(t0: Tensor): NDArray[Float]", "member" : "lamp.util.NDArray.tensorToFloatNDArray", "link" : "lamp\/util\/NDArray$.html#tensorToFloatNDArray(t0:aten.Tensor):lamp.util.NDArray[Float]", "kind" : "def"}, {"label" : "tensorToLongNDArray", "tail" : "(t0: Tensor): NDArray[Long]", "member" : "lamp.util.NDArray.tensorToLongNDArray", "link" : "lamp\/util\/NDArray$.html#tensorToLongNDArray(t0:aten.Tensor):lamp.util.NDArray[Long]", "kind" : "def"}, {"label" : "tensorToNDArray", "tail" : "(t0: Tensor): NDArray[Double]", "member" : "lamp.util.NDArray.tensorToNDArray", "link" : "lamp\/util\/NDArray$.html#tensorToNDArray(t0:aten.Tensor):lamp.util.NDArray[Double]", "kind" : "def"}, {"label" : "tensorFromLongNDArray", "tail" : "(m: NDArray[Long], cuda: Boolean): Tensor", "member" : "lamp.util.NDArray.tensorFromLongNDArray", "link" : "lamp\/util\/NDArray$.html#tensorFromLongNDArray(m:lamp.util.NDArray[Long],cuda:Boolean):aten.Tensor", "kind" : "def"}, {"label" : "tensorFromNDArray", "tail" : "(m: NDArray[Double], cuda: Boolean): Tensor", "member" : "lamp.util.NDArray.tensorFromNDArray", "link" : "lamp\/util\/NDArray$.html#tensorFromNDArray(m:lamp.util.NDArray[Double],cuda:Boolean):aten.Tensor", "kind" : "def"}, {"label" : "zeros", "tail" : "(shape: List[Int]): NDArray[Double]", "member" : "lamp.util.NDArray.zeros", "link" : "lamp\/util\/NDArray$.html#zeros(shape:List[Int]):lamp.util.NDArray[Double]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/util\/NDArray$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/util\/NDArray$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/util\/NDArray$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/util\/NDArray$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/util\/NDArray$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/util\/NDArray$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/util\/NDArray$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/util\/NDArray$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/util\/NDArray$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/util\/NDArray$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/util\/NDArray$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/util\/NDArray$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/util\/NDArray$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/util\/NDArray$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/util\/NDArray$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/util\/NDArray$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/util\/NDArray$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/util\/NDArray$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/util\/NDArray$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "-", "tail" : "(other: NDArray[T])(num: NUM[T], ct: ClassTag[T]): NDArray[T]", "member" : "lamp.util.NDArray.-", "link" : "lamp\/util\/NDArray.html#-(other:lamp.util.NDArray[T])(implicitnum:org.saddle.NUM[T],implicitct:scala.reflect.ClassTag[T]):lamp.util.NDArray[T]", "kind" : "def"}, {"label" : "+", "tail" : "(other: NDArray[T])(num: NUM[T], ct: ClassTag[T]): NDArray[T]", "member" : "lamp.util.NDArray.+", "link" : "lamp\/util\/NDArray.html#+(other:lamp.util.NDArray[T])(implicitnum:org.saddle.NUM[T],implicitct:scala.reflect.ClassTag[T]):lamp.util.NDArray[T]", "kind" : "def"}, {"label" : "set", "tail" : "(idx: List[Int], v: T): Unit", "member" : "lamp.util.NDArray.set", "link" : "lamp\/util\/NDArray.html#set(idx:List[Int],v:T):Unit", "kind" : "def"}, {"label" : "mapWithIndex", "tail" : "(f: (T, List[Int]) => B)(arg0: ClassTag[B]): NDArray[B]", "member" : "lamp.util.NDArray.mapWithIndex", "link" : "lamp\/util\/NDArray.html#mapWithIndex[B](f:(T,List[Int])=>B)(implicitevidence$1:scala.reflect.ClassTag[B]):lamp.util.NDArray[B]", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "lamp.util.NDArray.toString", "link" : "lamp\/util\/NDArray.html#toString():String", "kind" : "def"}, {"label" : "toVec", "tail" : "(st: ST[T]): Vec[T]", "member" : "lamp.util.NDArray.toVec", "link" : "lamp\/util\/NDArray.html#toVec(implicitst:org.saddle.ST[T]):org.saddle.Vec[T]", "kind" : "def"}, {"label" : "toArray", "tail" : "(): Array[T]", "member" : "lamp.util.NDArray.toArray", "link" : "lamp\/util\/NDArray.html#toArray:Array[T]", "kind" : "def"}, {"label" : "shapeOffsets", "tail" : "(): List[Int]", "member" : "lamp.util.NDArray.shapeOffsets", "link" : "lamp\/util\/NDArray.html#shapeOffsets:List[Int]", "kind" : "def"}, {"label" : "reshape", "tail" : "(ns: List[Int]): NDArray[T]", "member" : "lamp.util.NDArray.reshape", "link" : "lamp\/util\/NDArray.html#reshape(ns:List[Int]):lamp.util.NDArray[T]", "kind" : "def"}, {"member" : "lamp.util.NDArray#<init>", "error" : "unsupported entity"}, {"label" : "shape", "tail" : ": List[Int]", "member" : "lamp.util.NDArray.shape", "link" : "lamp\/util\/NDArray.html#shape:List[Int]", "kind" : "val"}, {"label" : "data", "tail" : ": Array[T]", "member" : "lamp.util.NDArray.data", "link" : "lamp\/util\/NDArray.html#data:Array[T]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/util\/NDArray.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/util\/NDArray.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/util\/NDArray.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/util\/NDArray.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/util\/NDArray.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/util\/NDArray.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/util\/NDArray.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/util\/NDArray.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/util\/NDArray.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/util\/NDArray.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/util\/NDArray.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/util\/NDArray.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/util\/NDArray.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/util\/NDArray.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/util\/NDArray.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/util\/NDArray.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/util\/NDArray.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/util\/NDArray.html", "kind" : "case class"}, {"name" : "lamp.util.syntax", "shortDescription" : "", "members_class" : [{"label" : "toLongVec", "tail" : "(): Vec[Long]", "member" : "lamp.util.syntax.toLongVec", "link" : "lamp\/util\/package$$syntax.html#toLongVec:org.saddle.Vec[Long]", "kind" : "def"}, {"label" : "toLongMat", "tail" : "(): Mat[Long]", "member" : "lamp.util.syntax.toLongMat", "link" : "lamp\/util\/package$$syntax.html#toLongMat:org.saddle.Mat[Long]", "kind" : "def"}, {"label" : "toMat", "tail" : "(): Mat[Double]", "member" : "lamp.util.syntax.toMat", "link" : "lamp\/util\/package$$syntax.html#toMat:org.saddle.Mat[Double]", "kind" : "def"}, {"label" : "toDoubleArray", "tail" : "(): Array[Double]", "member" : "lamp.util.syntax.toDoubleArray", "link" : "lamp\/util\/package$$syntax.html#toDoubleArray:Array[Double]", "kind" : "def"}, {"label" : "size", "tail" : "(): Long", "member" : "lamp.util.syntax.size", "link" : "lamp\/util\/package$$syntax.html#size:Long", "kind" : "def"}, {"label" : "options", "tail" : "(): TensorOptions", "member" : "lamp.util.syntax.options", "link" : "lamp\/util\/package$$syntax.html#options:aten.TensorOptions", "kind" : "def"}, {"label" : "shape", "tail" : "(): List[Long]", "member" : "lamp.util.syntax.shape", "link" : "lamp\/util\/package$$syntax.html#shape:List[Long]", "kind" : "def"}, {"label" : "copy", "tail" : "(): Tensor", "member" : "lamp.util.syntax.copy", "link" : "lamp\/util\/package$$syntax.html#copy:aten.Tensor", "kind" : "def"}, {"label" : "scalar", "tail" : "(d: Double): Resource[IO, Tensor]", "member" : "lamp.util.syntax.scalar", "link" : "lamp\/util\/package$$syntax.html#scalar(d:Double):cats.effect.kernel.Resource[cats.effect.IO,aten.Tensor]", "kind" : "def"}, {"member" : "lamp.util.syntax#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/util\/package$$syntax.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/util\/package$$syntax.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/util\/package$$syntax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/util\/package$$syntax.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/util\/package$$syntax.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/util\/package$$syntax.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/util\/package$$syntax.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/util\/package$$syntax.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/util\/package$$syntax.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/util\/package$$syntax.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/util\/package$$syntax.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/util\/package$$syntax.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/util\/package$$syntax.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/util\/package$$syntax.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/util\/package$$syntax.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/util\/package$$syntax.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/util\/package$$syntax.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/util\/package$$syntax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/util\/package$$syntax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "lamp\/util\/package$$syntax.html", "kind" : "class"}], "lamp.extratrees" : [{"name" : "lamp.extratrees.ClassificationLeaf", "shortDescription" : "", "object" : "lamp\/extratrees\/ClassificationLeaf$.html", "members_object" : [{"label" : "rw", "tail" : ": upickle.default.ReadWriter[ClassificationLeaf]", "member" : "lamp.extratrees.ClassificationLeaf.rw", "link" : "lamp\/extratrees\/ClassificationLeaf$.html#rw:upickle.default.ReadWriter[lamp.extratrees.ClassificationLeaf]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/extratrees\/ClassificationLeaf$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/extratrees\/ClassificationLeaf$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/extratrees\/ClassificationLeaf$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/extratrees\/ClassificationLeaf$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/extratrees\/ClassificationLeaf$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/extratrees\/ClassificationLeaf$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/extratrees\/ClassificationLeaf$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/extratrees\/ClassificationLeaf$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/extratrees\/ClassificationLeaf$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/extratrees\/ClassificationLeaf$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/extratrees\/ClassificationLeaf$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/extratrees\/ClassificationLeaf$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/extratrees\/ClassificationLeaf$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/extratrees\/ClassificationLeaf$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/extratrees\/ClassificationLeaf$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/extratrees\/ClassificationLeaf$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/extratrees\/ClassificationLeaf$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/extratrees\/ClassificationLeaf$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/extratrees\/ClassificationLeaf$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"member" : "lamp.extratrees.ClassificationLeaf#<init>", "error" : "unsupported entity"}, {"label" : "targetDistribution", "tail" : ": Seq[Double]", "member" : "lamp.extratrees.ClassificationLeaf.targetDistribution", "link" : "lamp\/extratrees\/ClassificationLeaf.html#targetDistribution:Seq[Double]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/extratrees\/ClassificationLeaf.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/extratrees\/ClassificationLeaf.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/extratrees\/ClassificationLeaf.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/extratrees\/ClassificationLeaf.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/extratrees\/ClassificationLeaf.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/extratrees\/ClassificationLeaf.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/extratrees\/ClassificationLeaf.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/extratrees\/ClassificationLeaf.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/extratrees\/ClassificationLeaf.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/extratrees\/ClassificationLeaf.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/extratrees\/ClassificationLeaf.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/extratrees\/ClassificationLeaf.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/extratrees\/ClassificationLeaf.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/extratrees\/ClassificationLeaf.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/extratrees\/ClassificationLeaf.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/extratrees\/ClassificationLeaf.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/extratrees\/ClassificationLeaf.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/extratrees\/ClassificationLeaf.html", "kind" : "case class"}, {"name" : "lamp.extratrees.ClassificationNonLeaf", "shortDescription" : "", "object" : "lamp\/extratrees\/ClassificationNonLeaf$.html", "members_object" : [{"label" : "rw", "tail" : ": upickle.default.ReadWriter[ClassificationNonLeaf]", "member" : "lamp.extratrees.ClassificationNonLeaf.rw", "link" : "lamp\/extratrees\/ClassificationNonLeaf$.html#rw:upickle.default.ReadWriter[lamp.extratrees.ClassificationNonLeaf]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/extratrees\/ClassificationNonLeaf$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/extratrees\/ClassificationNonLeaf$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/extratrees\/ClassificationNonLeaf$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/extratrees\/ClassificationNonLeaf$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/extratrees\/ClassificationNonLeaf$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/extratrees\/ClassificationNonLeaf$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/extratrees\/ClassificationNonLeaf$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/extratrees\/ClassificationNonLeaf$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/extratrees\/ClassificationNonLeaf$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/extratrees\/ClassificationNonLeaf$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/extratrees\/ClassificationNonLeaf$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/extratrees\/ClassificationNonLeaf$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/extratrees\/ClassificationNonLeaf$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/extratrees\/ClassificationNonLeaf$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/extratrees\/ClassificationNonLeaf$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/extratrees\/ClassificationNonLeaf$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/extratrees\/ClassificationNonLeaf$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/extratrees\/ClassificationNonLeaf$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/extratrees\/ClassificationNonLeaf$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"member" : "lamp.extratrees.ClassificationNonLeaf#<init>", "error" : "unsupported entity"}, {"label" : "cutpoint", "tail" : ": Double", "member" : "lamp.extratrees.ClassificationNonLeaf.cutpoint", "link" : "lamp\/extratrees\/ClassificationNonLeaf.html#cutpoint:Double", "kind" : "val"}, {"label" : "splitFeature", "tail" : ": Int", "member" : "lamp.extratrees.ClassificationNonLeaf.splitFeature", "link" : "lamp\/extratrees\/ClassificationNonLeaf.html#splitFeature:Int", "kind" : "val"}, {"label" : "right", "tail" : ": ClassificationTree", "member" : "lamp.extratrees.ClassificationNonLeaf.right", "link" : "lamp\/extratrees\/ClassificationNonLeaf.html#right:lamp.extratrees.ClassificationTree", "kind" : "val"}, {"label" : "left", "tail" : ": ClassificationTree", "member" : "lamp.extratrees.ClassificationNonLeaf.left", "link" : "lamp\/extratrees\/ClassificationNonLeaf.html#left:lamp.extratrees.ClassificationTree", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/extratrees\/ClassificationNonLeaf.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/extratrees\/ClassificationNonLeaf.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/extratrees\/ClassificationNonLeaf.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/extratrees\/ClassificationNonLeaf.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/extratrees\/ClassificationNonLeaf.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/extratrees\/ClassificationNonLeaf.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/extratrees\/ClassificationNonLeaf.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/extratrees\/ClassificationNonLeaf.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/extratrees\/ClassificationNonLeaf.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/extratrees\/ClassificationNonLeaf.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/extratrees\/ClassificationNonLeaf.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/extratrees\/ClassificationNonLeaf.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/extratrees\/ClassificationNonLeaf.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/extratrees\/ClassificationNonLeaf.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/extratrees\/ClassificationNonLeaf.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/extratrees\/ClassificationNonLeaf.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/extratrees\/ClassificationNonLeaf.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/extratrees\/ClassificationNonLeaf.html", "kind" : "case class"}, {"name" : "lamp.extratrees.ClassificationTree", "object" : "lamp\/extratrees\/ClassificationTree$.html", "members_object" : [{"label" : "rw", "tail" : ": upickle.default.ReadWriter[ClassificationTree]", "member" : "lamp.extratrees.ClassificationTree.rw", "link" : "lamp\/extratrees\/ClassificationTree$.html#rw:upickle.default.ReadWriter[lamp.extratrees.ClassificationTree]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/extratrees\/ClassificationTree$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/extratrees\/ClassificationTree$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/extratrees\/ClassificationTree$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/extratrees\/ClassificationTree$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/extratrees\/ClassificationTree$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/extratrees\/ClassificationTree$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/extratrees\/ClassificationTree$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/extratrees\/ClassificationTree$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/extratrees\/ClassificationTree$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/extratrees\/ClassificationTree$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/extratrees\/ClassificationTree$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/extratrees\/ClassificationTree$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/extratrees\/ClassificationTree$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/extratrees\/ClassificationTree$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/extratrees\/ClassificationTree$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/extratrees\/ClassificationTree$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/extratrees\/ClassificationTree$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/extratrees\/ClassificationTree$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/extratrees\/ClassificationTree$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "lamp\/extratrees\/ClassificationTree.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/extratrees\/ClassificationTree.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/extratrees\/ClassificationTree.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/extratrees\/ClassificationTree.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/extratrees\/ClassificationTree.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/extratrees\/ClassificationTree.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/extratrees\/ClassificationTree.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/extratrees\/ClassificationTree.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/extratrees\/ClassificationTree.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/extratrees\/ClassificationTree.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/extratrees\/ClassificationTree.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/extratrees\/ClassificationTree.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/extratrees\/ClassificationTree.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/extratrees\/ClassificationTree.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/extratrees\/ClassificationTree.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/extratrees\/ClassificationTree.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/extratrees\/ClassificationTree.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/extratrees\/ClassificationTree.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/extratrees\/ClassificationTree.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/extratrees\/ClassificationTree.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "lamp.extratrees.RegressionLeaf", "shortDescription" : "", "object" : "lamp\/extratrees\/RegressionLeaf$.html", "members_object" : [{"label" : "rw", "tail" : ": upickle.default.ReadWriter[RegressionLeaf]", "member" : "lamp.extratrees.RegressionLeaf.rw", "link" : "lamp\/extratrees\/RegressionLeaf$.html#rw:upickle.default.ReadWriter[lamp.extratrees.RegressionLeaf]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/extratrees\/RegressionLeaf$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/extratrees\/RegressionLeaf$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/extratrees\/RegressionLeaf$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/extratrees\/RegressionLeaf$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/extratrees\/RegressionLeaf$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/extratrees\/RegressionLeaf$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/extratrees\/RegressionLeaf$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/extratrees\/RegressionLeaf$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/extratrees\/RegressionLeaf$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/extratrees\/RegressionLeaf$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/extratrees\/RegressionLeaf$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/extratrees\/RegressionLeaf$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/extratrees\/RegressionLeaf$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/extratrees\/RegressionLeaf$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/extratrees\/RegressionLeaf$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/extratrees\/RegressionLeaf$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/extratrees\/RegressionLeaf$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/extratrees\/RegressionLeaf$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/extratrees\/RegressionLeaf$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"member" : "lamp.extratrees.RegressionLeaf#<init>", "error" : "unsupported entity"}, {"label" : "targetMean", "tail" : ": Double", "member" : "lamp.extratrees.RegressionLeaf.targetMean", "link" : "lamp\/extratrees\/RegressionLeaf.html#targetMean:Double", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/extratrees\/RegressionLeaf.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/extratrees\/RegressionLeaf.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/extratrees\/RegressionLeaf.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/extratrees\/RegressionLeaf.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/extratrees\/RegressionLeaf.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/extratrees\/RegressionLeaf.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/extratrees\/RegressionLeaf.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/extratrees\/RegressionLeaf.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/extratrees\/RegressionLeaf.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/extratrees\/RegressionLeaf.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/extratrees\/RegressionLeaf.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/extratrees\/RegressionLeaf.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/extratrees\/RegressionLeaf.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/extratrees\/RegressionLeaf.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/extratrees\/RegressionLeaf.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/extratrees\/RegressionLeaf.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/extratrees\/RegressionLeaf.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/extratrees\/RegressionLeaf.html", "kind" : "case class"}, {"name" : "lamp.extratrees.RegressionNonLeaf", "shortDescription" : "", "object" : "lamp\/extratrees\/RegressionNonLeaf$.html", "members_object" : [{"label" : "rw", "tail" : ": upickle.default.ReadWriter[RegressionNonLeaf]", "member" : "lamp.extratrees.RegressionNonLeaf.rw", "link" : "lamp\/extratrees\/RegressionNonLeaf$.html#rw:upickle.default.ReadWriter[lamp.extratrees.RegressionNonLeaf]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/extratrees\/RegressionNonLeaf$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/extratrees\/RegressionNonLeaf$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/extratrees\/RegressionNonLeaf$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/extratrees\/RegressionNonLeaf$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/extratrees\/RegressionNonLeaf$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/extratrees\/RegressionNonLeaf$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/extratrees\/RegressionNonLeaf$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/extratrees\/RegressionNonLeaf$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/extratrees\/RegressionNonLeaf$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/extratrees\/RegressionNonLeaf$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/extratrees\/RegressionNonLeaf$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/extratrees\/RegressionNonLeaf$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/extratrees\/RegressionNonLeaf$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/extratrees\/RegressionNonLeaf$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/extratrees\/RegressionNonLeaf$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/extratrees\/RegressionNonLeaf$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/extratrees\/RegressionNonLeaf$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/extratrees\/RegressionNonLeaf$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/extratrees\/RegressionNonLeaf$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"member" : "lamp.extratrees.RegressionNonLeaf#<init>", "error" : "unsupported entity"}, {"label" : "cutpoint", "tail" : ": Double", "member" : "lamp.extratrees.RegressionNonLeaf.cutpoint", "link" : "lamp\/extratrees\/RegressionNonLeaf.html#cutpoint:Double", "kind" : "val"}, {"label" : "splitFeature", "tail" : ": Int", "member" : "lamp.extratrees.RegressionNonLeaf.splitFeature", "link" : "lamp\/extratrees\/RegressionNonLeaf.html#splitFeature:Int", "kind" : "val"}, {"label" : "right", "tail" : ": RegressionTree", "member" : "lamp.extratrees.RegressionNonLeaf.right", "link" : "lamp\/extratrees\/RegressionNonLeaf.html#right:lamp.extratrees.RegressionTree", "kind" : "val"}, {"label" : "left", "tail" : ": RegressionTree", "member" : "lamp.extratrees.RegressionNonLeaf.left", "link" : "lamp\/extratrees\/RegressionNonLeaf.html#left:lamp.extratrees.RegressionTree", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/extratrees\/RegressionNonLeaf.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/extratrees\/RegressionNonLeaf.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/extratrees\/RegressionNonLeaf.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/extratrees\/RegressionNonLeaf.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/extratrees\/RegressionNonLeaf.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/extratrees\/RegressionNonLeaf.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/extratrees\/RegressionNonLeaf.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/extratrees\/RegressionNonLeaf.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/extratrees\/RegressionNonLeaf.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/extratrees\/RegressionNonLeaf.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/extratrees\/RegressionNonLeaf.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/extratrees\/RegressionNonLeaf.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/extratrees\/RegressionNonLeaf.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/extratrees\/RegressionNonLeaf.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/extratrees\/RegressionNonLeaf.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/extratrees\/RegressionNonLeaf.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/extratrees\/RegressionNonLeaf.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/extratrees\/RegressionNonLeaf.html", "kind" : "case class"}, {"name" : "lamp.extratrees.RegressionTree", "object" : "lamp\/extratrees\/RegressionTree$.html", "members_object" : [{"label" : "rw", "tail" : ": upickle.default.ReadWriter[RegressionTree]", "member" : "lamp.extratrees.RegressionTree.rw", "link" : "lamp\/extratrees\/RegressionTree$.html#rw:upickle.default.ReadWriter[lamp.extratrees.RegressionTree]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/extratrees\/RegressionTree$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/extratrees\/RegressionTree$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/extratrees\/RegressionTree$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/extratrees\/RegressionTree$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/extratrees\/RegressionTree$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/extratrees\/RegressionTree$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/extratrees\/RegressionTree$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/extratrees\/RegressionTree$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/extratrees\/RegressionTree$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/extratrees\/RegressionTree$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/extratrees\/RegressionTree$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/extratrees\/RegressionTree$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/extratrees\/RegressionTree$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/extratrees\/RegressionTree$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/extratrees\/RegressionTree$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/extratrees\/RegressionTree$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/extratrees\/RegressionTree$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/extratrees\/RegressionTree$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/extratrees\/RegressionTree$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "lamp\/extratrees\/RegressionTree.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/extratrees\/RegressionTree.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/extratrees\/RegressionTree.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/extratrees\/RegressionTree.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/extratrees\/RegressionTree.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/extratrees\/RegressionTree.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/extratrees\/RegressionTree.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/extratrees\/RegressionTree.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/extratrees\/RegressionTree.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/extratrees\/RegressionTree.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/extratrees\/RegressionTree.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/extratrees\/RegressionTree.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/extratrees\/RegressionTree.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/extratrees\/RegressionTree.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/extratrees\/RegressionTree.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/extratrees\/RegressionTree.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/extratrees\/RegressionTree.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/extratrees\/RegressionTree.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/extratrees\/RegressionTree.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/extratrees\/RegressionTree.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}], "lamp.umap" : [{"name" : "lamp.umap.Umap", "shortDescription" : "", "object" : "lamp\/umap\/Umap$.html", "members_object" : [{"label" : "umapCustomKnn", "tail" : "(knn: Mat[Int], knnDistances: Mat[Double], device: Device, numDim: Int, lr: Double, iterations: Int, minDist: Double, negativeSampleSize: Int, randomSeed: Long, balanceAttractionsAndRepulsions: Boolean, repulsionStrength: Double, logger: Option[Logger], positiveSamples: Option[Int]): (Mat[Double], Mat[Double], Double)", "member" : "lamp.umap.Umap.umapCustomKnn", "link" : "lamp\/umap\/Umap$.html#umapCustomKnn(knn:org.saddle.Mat[Int],knnDistances:org.saddle.Mat[Double],device:lamp.Device,numDim:Int,lr:Double,iterations:Int,minDist:Double,negativeSampleSize:Int,randomSeed:Long,balanceAttractionsAndRepulsions:Boolean,repulsionStrength:Double,logger:Option[scribe.Logger],positiveSamples:Option[Int]):(org.saddle.Mat[Double],org.saddle.Mat[Double],Double)", "kind" : "def"}, {"label" : "umap", "tail" : "(data: Mat[Double], device: Device, precision: FloatingPointPrecision, k: Int, numDim: Int, knnMinibatchSize: Int, lr: Double, iterations: Int, minDist: Double, negativeSampleSize: Int, randomSeed: Long, balanceAttractionsAndRepulsions: Boolean, repulsionStrength: Double, logger: Option[Logger], positiveSamples: Option[Int]): (Mat[Double], Mat[Double], Double)", "member" : "lamp.umap.Umap.umap", "link" : "lamp\/umap\/Umap$.html#umap(data:org.saddle.Mat[Double],device:lamp.Device,precision:lamp.FloatingPointPrecision,k:Int,numDim:Int,knnMinibatchSize:Int,lr:Double,iterations:Int,minDist:Double,negativeSampleSize:Int,randomSeed:Long,balanceAttractionsAndRepulsions:Boolean,repulsionStrength:Double,logger:Option[scribe.Logger],positiveSamples:Option[Int]):(org.saddle.Mat[Double],org.saddle.Mat[Double],Double)", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/umap\/Umap$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/umap\/Umap$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/umap\/Umap$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/umap\/Umap$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/umap\/Umap$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/umap\/Umap$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/umap\/Umap$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/umap\/Umap$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/umap\/Umap$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/umap\/Umap$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/umap\/Umap$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/umap\/Umap$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/umap\/Umap$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/umap\/Umap$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/umap\/Umap$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/umap\/Umap$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/umap\/Umap$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/umap\/Umap$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/umap\/Umap$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "lamp.example.translation" : [{"name" : "lamp.example.translation.CliConfig", "shortDescription" : "", "members_case class" : [{"member" : "lamp.example.translation.CliConfig#<init>", "error" : "unsupported entity"}, {"label" : "query", "tail" : ": Option[String]", "member" : "lamp.example.translation.CliConfig.query", "link" : "lamp\/example\/translation\/CliConfig.html#query:Option[String]", "kind" : "val"}, {"label" : "checkpointLoad", "tail" : ": Option[String]", "member" : "lamp.example.translation.CliConfig.checkpointLoad", "link" : "lamp\/example\/translation\/CliConfig.html#checkpointLoad:Option[String]", "kind" : "val"}, {"label" : "checkpointSave", "tail" : ": Option[String]", "member" : "lamp.example.translation.CliConfig.checkpointSave", "link" : "lamp\/example\/translation\/CliConfig.html#checkpointSave:Option[String]", "kind" : "val"}, {"label" : "dropout", "tail" : ": Double", "member" : "lamp.example.translation.CliConfig.dropout", "link" : "lamp\/example\/translation\/CliConfig.html#dropout:Double", "kind" : "val"}, {"label" : "learningRate", "tail" : ": Double", "member" : "lamp.example.translation.CliConfig.learningRate", "link" : "lamp\/example\/translation\/CliConfig.html#learningRate:Double", "kind" : "val"}, {"label" : "epochs", "tail" : ": Int", "member" : "lamp.example.translation.CliConfig.epochs", "link" : "lamp\/example\/translation\/CliConfig.html#epochs:Int", "kind" : "val"}, {"label" : "validationBatchSize", "tail" : ": Int", "member" : "lamp.example.translation.CliConfig.validationBatchSize", "link" : "lamp\/example\/translation\/CliConfig.html#validationBatchSize:Int", "kind" : "val"}, {"label" : "trainBatchSize", "tail" : ": Int", "member" : "lamp.example.translation.CliConfig.trainBatchSize", "link" : "lamp\/example\/translation\/CliConfig.html#trainBatchSize:Int", "kind" : "val"}, {"label" : "singlePrecision", "tail" : ": Boolean", "member" : "lamp.example.translation.CliConfig.singlePrecision", "link" : "lamp\/example\/translation\/CliConfig.html#singlePrecision:Boolean", "kind" : "val"}, {"label" : "cuda", "tail" : ": Boolean", "member" : "lamp.example.translation.CliConfig.cuda", "link" : "lamp\/example\/translation\/CliConfig.html#cuda:Boolean", "kind" : "val"}, {"label" : "testData", "tail" : ": Option[String]", "member" : "lamp.example.translation.CliConfig.testData", "link" : "lamp\/example\/translation\/CliConfig.html#testData:Option[String]", "kind" : "val"}, {"label" : "trainData", "tail" : ": String", "member" : "lamp.example.translation.CliConfig.trainData", "link" : "lamp\/example\/translation\/CliConfig.html#trainData:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lamp\/example\/translation\/CliConfig.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/example\/translation\/CliConfig.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/example\/translation\/CliConfig.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/example\/translation\/CliConfig.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/example\/translation\/CliConfig.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/example\/translation\/CliConfig.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/example\/translation\/CliConfig.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/example\/translation\/CliConfig.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/example\/translation\/CliConfig.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/example\/translation\/CliConfig.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/example\/translation\/CliConfig.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/example\/translation\/CliConfig.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/example\/translation\/CliConfig.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/example\/translation\/CliConfig.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/example\/translation\/CliConfig.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/example\/translation\/CliConfig.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/example\/translation\/CliConfig.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/example\/translation\/CliConfig.html", "kind" : "case class"}, {"name" : "lamp.example.translation.Train", "shortDescription" : "", "object" : "lamp\/example\/translation\/Train$.html", "members_object" : [{"label" : "parser1", "tail" : ": OParser[String, CliConfig]", "member" : "lamp.example.translation.Train.parser1", "link" : "lamp\/example\/translation\/Train$.html#parser1:scopt.OParser[String,lamp.example.translation.CliConfig]", "kind" : "val"}, {"label" : "builder", "tail" : ": OParserBuilder[CliConfig]", "member" : "lamp.example.translation.Train.builder", "link" : "lamp\/example\/translation\/Train$.html#builder:scopt.OParserBuilder[lamp.example.translation.CliConfig]", "kind" : "val"}, {"label" : "main", "tail" : "(args: Array[String]): Unit", "member" : "scala.App.main", "link" : "lamp\/example\/translation\/Train$.html#main(args:Array[String]):Unit", "kind" : "final def"}, {"label" : "delayedInit", "tail" : "(body: => Unit): Unit", "member" : "scala.App.delayedInit", "link" : "lamp\/example\/translation\/Train$.html#delayedInit(body:=>Unit):Unit", "kind" : "def"}, {"label" : "args", "tail" : "(): Array[String]", "member" : "scala.App.args", "link" : "lamp\/example\/translation\/Train$.html#args:Array[String]", "kind" : "final def"}, {"label" : "executionStart", "tail" : ": Long", "member" : "scala.App.executionStart", "link" : "lamp\/example\/translation\/Train$.html#executionStart:Long", "kind" : "final val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/example\/translation\/Train$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/example\/translation\/Train$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/example\/translation\/Train$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/example\/translation\/Train$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/example\/translation\/Train$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/example\/translation\/Train$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/example\/translation\/Train$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/example\/translation\/Train$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/example\/translation\/Train$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/example\/translation\/Train$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/example\/translation\/Train$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/example\/translation\/Train$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/example\/translation\/Train$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/example\/translation\/Train$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/example\/translation\/Train$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/example\/translation\/Train$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/example\/translation\/Train$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/example\/translation\/Train$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/example\/translation\/Train$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "lamp.example.translation.Translation", "shortDescription" : "", "object" : "lamp\/example\/translation\/Translation$.html", "members_object" : [{"label" : "prepare", "tail" : "(line: String, endOfSentence: Char, startOfSentence: Char): (String, String)", "member" : "lamp.example.translation.Translation.prepare", "link" : "lamp\/example\/translation\/Translation$.html#prepare(line:String,endOfSentence:Char,startOfSentence:Char):(String,String)", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/example\/translation\/Translation$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/example\/translation\/Translation$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/example\/translation\/Translation$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/example\/translation\/Translation$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/example\/translation\/Translation$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/example\/translation\/Translation$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/example\/translation\/Translation$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/example\/translation\/Translation$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/example\/translation\/Translation$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/example\/translation\/Translation$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/example\/translation\/Translation$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/example\/translation\/Translation$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/example\/translation\/Translation$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/example\/translation\/Translation$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/example\/translation\/Translation$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/example\/translation\/Translation$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/example\/translation\/Translation$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/example\/translation\/Translation$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/example\/translation\/Translation$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}]};