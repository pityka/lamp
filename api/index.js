Index.PACKAGES = {"scala.collection" : [], "lamp.autograd" : [{"name" : "lamp.autograd.Add", "shortDescription" : "", "members_class" : [{"label" : "value", "tail" : ": Variable", "member" : "lamp.autograd.Add.value", "link" : "lamp\/autograd\/Add.html#value:lamp.autograd.Variable", "kind" : "val"}, {"label" : "params", "tail" : ": List[(Variable, (STen, STen) ⇒ Unit)]", "member" : "lamp.autograd.Add.params", "link" : "lamp\/autograd\/Add.html#params:List[(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)]", "kind" : "val"}, {"member" : "lamp.autograd.Add#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/Add.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/Add.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/Add.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/Add.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/Add.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/Add.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/Add.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Add.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Add.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Add.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/Add.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/Add.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/autograd\/Add.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/Add.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/autograd\/Add.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/autograd\/Add.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/Add.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/Add.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/Add.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "lamp\/autograd\/Add.html", "kind" : "class"}, {"name" : "lamp.autograd.ArcTan", "shortDescription" : "", "members_class" : [{"label" : "value", "tail" : ": Variable", "member" : "lamp.autograd.ArcTan.value", "link" : "lamp\/autograd\/ArcTan.html#value:lamp.autograd.Variable", "kind" : "val"}, {"label" : "params", "tail" : ": List[(Variable, (STen, STen) ⇒ Unit)]", "member" : "lamp.autograd.ArcTan.params", "link" : "lamp\/autograd\/ArcTan.html#params:List[(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)]", "kind" : "val"}, {"member" : "lamp.autograd.ArcTan#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/ArcTan.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/ArcTan.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/ArcTan.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/ArcTan.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/ArcTan.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/ArcTan.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/ArcTan.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/ArcTan.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/ArcTan.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/ArcTan.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/ArcTan.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/ArcTan.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/autograd\/ArcTan.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/ArcTan.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/autograd\/ArcTan.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/autograd\/ArcTan.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/ArcTan.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/ArcTan.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/ArcTan.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "lamp\/autograd\/ArcTan.html", "kind" : "class"}, {"name" : "lamp.autograd.ArgMax", "shortDescription" : "", "members_class" : [{"label" : "value", "tail" : ": Variable", "member" : "lamp.autograd.ArgMax.value", "link" : "lamp\/autograd\/ArgMax.html#value:lamp.autograd.Variable", "kind" : "val"}, {"label" : "params", "tail" : ": List[(Variable, (STen, STen) ⇒ Unit)]", "member" : "lamp.autograd.ArgMax.params", "link" : "lamp\/autograd\/ArgMax.html#params:List[(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)]", "kind" : "val"}, {"member" : "lamp.autograd.ArgMax#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/ArgMax.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/ArgMax.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/ArgMax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/ArgMax.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/ArgMax.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/ArgMax.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/ArgMax.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/ArgMax.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/ArgMax.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/ArgMax.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/ArgMax.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/ArgMax.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/autograd\/ArgMax.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/ArgMax.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/autograd\/ArgMax.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/autograd\/ArgMax.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/ArgMax.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/ArgMax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/ArgMax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "lamp\/autograd\/ArgMax.html", "kind" : "class"}, {"name" : "lamp.autograd.Assign", "shortDescription" : "", "members_class" : [{"label" : "value", "tail" : ": Variable", "member" : "lamp.autograd.Assign.value", "link" : "lamp\/autograd\/Assign.html#value:lamp.autograd.Variable", "kind" : "val"}, {"label" : "params", "tail" : ": List[(Variable, (STen, STen) ⇒ Unit)]", "member" : "lamp.autograd.Assign.params", "link" : "lamp\/autograd\/Assign.html#params:List[(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)]", "kind" : "val"}, {"member" : "lamp.autograd.Assign#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/Assign.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/Assign.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/Assign.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/Assign.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/Assign.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/Assign.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/Assign.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Assign.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Assign.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Assign.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/Assign.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/Assign.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/autograd\/Assign.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/Assign.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/autograd\/Assign.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/autograd\/Assign.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/Assign.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/Assign.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/Assign.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "lamp\/autograd\/Assign.html", "kind" : "class"}, {"name" : "lamp.autograd.Autograd", "shortDescription" : "", "object" : "lamp\/autograd\/Autograd$.html", "members_object" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/Autograd$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/Autograd$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/Autograd$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/Autograd$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/Autograd$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/Autograd$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/Autograd$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Autograd$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Autograd$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Autograd$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/Autograd$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/Autograd$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/autograd\/Autograd$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/Autograd$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/autograd\/Autograd$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/autograd\/Autograd$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/Autograd$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/Autograd$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/Autograd$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "lamp.autograd.AvgPool2D", "shortDescription" : "2D avg pooling", "members_class" : [{"label" : "value", "tail" : ": Variable", "member" : "lamp.autograd.AvgPool2D.value", "link" : "lamp\/autograd\/AvgPool2D.html#value:lamp.autograd.Variable", "kind" : "val"}, {"label" : "params", "tail" : ": List[(Variable, (STen, STen) ⇒ Unit)]", "member" : "lamp.autograd.AvgPool2D.params", "link" : "lamp\/autograd\/AvgPool2D.html#params:List[(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)]", "kind" : "val"}, {"label" : "imageSize", "tail" : ": Long", "member" : "lamp.autograd.AvgPool2D.imageSize", "link" : "lamp\/autograd\/AvgPool2D.html#imageSize:Long", "kind" : "val"}, {"label" : "inputChannels", "tail" : ": Long", "member" : "lamp.autograd.AvgPool2D.inputChannels", "link" : "lamp\/autograd\/AvgPool2D.html#inputChannels:Long", "kind" : "val"}, {"label" : "batchSize", "tail" : ": Long", "member" : "lamp.autograd.AvgPool2D.batchSize", "link" : "lamp\/autograd\/AvgPool2D.html#batchSize:Long", "kind" : "val"}, {"member" : "lamp.autograd.AvgPool2D#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/AvgPool2D.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/AvgPool2D.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/AvgPool2D.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/AvgPool2D.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/AvgPool2D.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/AvgPool2D.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/AvgPool2D.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/AvgPool2D.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/AvgPool2D.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/AvgPool2D.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/AvgPool2D.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/AvgPool2D.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/autograd\/AvgPool2D.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/AvgPool2D.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/autograd\/AvgPool2D.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/autograd\/AvgPool2D.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/AvgPool2D.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/AvgPool2D.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/AvgPool2D.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "lamp\/autograd\/AvgPool2D.html", "kind" : "class"}, {"name" : "lamp.autograd.BatchedMatMul", "shortDescription" : "", "members_class" : [{"label" : "value", "tail" : ": Variable", "member" : "lamp.autograd.BatchedMatMul.value", "link" : "lamp\/autograd\/BatchedMatMul.html#value:lamp.autograd.Variable", "kind" : "val"}, {"label" : "params", "tail" : ": List[(Variable, (STen, STen) ⇒ Unit)]", "member" : "lamp.autograd.BatchedMatMul.params", "link" : "lamp\/autograd\/BatchedMatMul.html#params:List[(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)]", "kind" : "val"}, {"member" : "lamp.autograd.BatchedMatMul#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/BatchedMatMul.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/BatchedMatMul.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/BatchedMatMul.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/BatchedMatMul.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/BatchedMatMul.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/BatchedMatMul.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/BatchedMatMul.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/BatchedMatMul.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/BatchedMatMul.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/BatchedMatMul.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/BatchedMatMul.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/BatchedMatMul.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/autograd\/BatchedMatMul.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/BatchedMatMul.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/autograd\/BatchedMatMul.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/autograd\/BatchedMatMul.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/BatchedMatMul.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/BatchedMatMul.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/BatchedMatMul.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "lamp\/autograd\/BatchedMatMul.html", "kind" : "class"}, {"name" : "lamp.autograd.BatchNorm", "shortDescription" : "", "members_class" : [{"label" : "params", "tail" : ": List[(Variable, (STen, STen) ⇒ Unit)]", "member" : "lamp.autograd.BatchNorm.params", "link" : "lamp\/autograd\/BatchNorm.html#params:List[(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)]", "kind" : "val"}, {"label" : "value", "tail" : ": Variable", "member" : "lamp.autograd.BatchNorm.value", "link" : "lamp\/autograd\/BatchNorm.html#value:lamp.autograd.Variable", "kind" : "val"}, {"label" : "output_reshaped", "tail" : ": Tensor", "member" : "lamp.autograd.BatchNorm.output_reshaped", "link" : "lamp\/autograd\/BatchNorm.html#output_reshaped:aten.Tensor", "kind" : "val"}, {"label" : "saveInvstd", "tail" : ": Tensor", "member" : "lamp.autograd.BatchNorm.saveInvstd", "link" : "lamp\/autograd\/BatchNorm.html#saveInvstd:aten.Tensor", "kind" : "val"}, {"label" : "saveMean", "tail" : ": Tensor", "member" : "lamp.autograd.BatchNorm.saveMean", "link" : "lamp\/autograd\/BatchNorm.html#saveMean:aten.Tensor", "kind" : "val"}, {"label" : "output", "tail" : ": Tensor", "member" : "lamp.autograd.BatchNorm.output", "link" : "lamp\/autograd\/BatchNorm.html#output:aten.Tensor", "kind" : "val"}, {"label" : "expectedShape", "tail" : ": List[Long]", "member" : "lamp.autograd.BatchNorm.expectedShape", "link" : "lamp\/autograd\/BatchNorm.html#expectedShape:List[Long]", "kind" : "val"}, {"label" : "input_flattened", "tail" : ": Tensor", "member" : "lamp.autograd.BatchNorm.input_flattened", "link" : "lamp\/autograd\/BatchNorm.html#input_flattened:aten.Tensor", "kind" : "val"}, {"member" : "lamp.autograd.BatchNorm#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/BatchNorm.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/BatchNorm.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/BatchNorm.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/BatchNorm.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/BatchNorm.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/BatchNorm.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/BatchNorm.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/BatchNorm.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/BatchNorm.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/BatchNorm.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/BatchNorm.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/BatchNorm.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/autograd\/BatchNorm.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/BatchNorm.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/autograd\/BatchNorm.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/autograd\/BatchNorm.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/BatchNorm.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/BatchNorm.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/BatchNorm.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "lamp\/autograd\/BatchNorm.html", "kind" : "class"}, {"name" : "lamp.autograd.BatchNorm2D", "shortDescription" : "Batch Norm 2D0-th dimension are samples.", "members_class" : [{"label" : "params", "tail" : ": List[(Variable, (STen, STen) ⇒ Unit)]", "member" : "lamp.autograd.BatchNorm2D.params", "link" : "lamp\/autograd\/BatchNorm2D.html#params:List[(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)]", "kind" : "val"}, {"label" : "value", "tail" : ": Variable", "member" : "lamp.autograd.BatchNorm2D.value", "link" : "lamp\/autograd\/BatchNorm2D.html#value:lamp.autograd.Variable", "kind" : "val"}, {"label" : "saveInvstd", "tail" : ": Tensor", "member" : "lamp.autograd.BatchNorm2D.saveInvstd", "link" : "lamp\/autograd\/BatchNorm2D.html#saveInvstd:aten.Tensor", "kind" : "val"}, {"label" : "saveMean", "tail" : ": Tensor", "member" : "lamp.autograd.BatchNorm2D.saveMean", "link" : "lamp\/autograd\/BatchNorm2D.html#saveMean:aten.Tensor", "kind" : "val"}, {"label" : "output", "tail" : ": Tensor", "member" : "lamp.autograd.BatchNorm2D.output", "link" : "lamp\/autograd\/BatchNorm2D.html#output:aten.Tensor", "kind" : "val"}, {"label" : "expectedShape", "tail" : ": List[Long]", "member" : "lamp.autograd.BatchNorm2D.expectedShape", "link" : "lamp\/autograd\/BatchNorm2D.html#expectedShape:List[Long]", "kind" : "val"}, {"label" : "inputShape", "tail" : ": List[Long]", "member" : "lamp.autograd.BatchNorm2D.inputShape", "link" : "lamp\/autograd\/BatchNorm2D.html#inputShape:List[Long]", "kind" : "val"}, {"member" : "lamp.autograd.BatchNorm2D#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/BatchNorm2D.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/BatchNorm2D.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/BatchNorm2D.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/BatchNorm2D.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/BatchNorm2D.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/BatchNorm2D.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/BatchNorm2D.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/BatchNorm2D.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/BatchNorm2D.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/BatchNorm2D.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/BatchNorm2D.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/BatchNorm2D.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/autograd\/BatchNorm2D.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/BatchNorm2D.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/autograd\/BatchNorm2D.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/autograd\/BatchNorm2D.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/BatchNorm2D.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/BatchNorm2D.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/BatchNorm2D.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "lamp\/autograd\/BatchNorm2D.html", "kind" : "class"}, {"name" : "lamp.autograd.CappedShiftedNegativeExponential", "shortDescription" : "", "members_class" : [{"label" : "value", "tail" : ": Variable", "member" : "lamp.autograd.CappedShiftedNegativeExponential.value", "link" : "lamp\/autograd\/CappedShiftedNegativeExponential.html#value:lamp.autograd.Variable", "kind" : "val"}, {"label" : "result", "tail" : ": Tensor", "member" : "lamp.autograd.CappedShiftedNegativeExponential.result", "link" : "lamp\/autograd\/CappedShiftedNegativeExponential.html#result:aten.Tensor", "kind" : "val"}, {"label" : "above", "tail" : ": Tensor", "member" : "lamp.autograd.CappedShiftedNegativeExponential.above", "link" : "lamp\/autograd\/CappedShiftedNegativeExponential.html#above:aten.Tensor", "kind" : "val"}, {"label" : "scalar", "tail" : ": Tensor", "member" : "lamp.autograd.CappedShiftedNegativeExponential.scalar", "link" : "lamp\/autograd\/CappedShiftedNegativeExponential.html#scalar:aten.Tensor", "kind" : "val"}, {"label" : "ones", "tail" : ": Tensor", "member" : "lamp.autograd.CappedShiftedNegativeExponential.ones", "link" : "lamp\/autograd\/CappedShiftedNegativeExponential.html#ones:aten.Tensor", "kind" : "val"}, {"label" : "pred", "tail" : ": Tensor", "member" : "lamp.autograd.CappedShiftedNegativeExponential.pred", "link" : "lamp\/autograd\/CappedShiftedNegativeExponential.html#pred:aten.Tensor", "kind" : "val"}, {"label" : "params", "tail" : ": List[(Variable, (STen, STen) ⇒ Unit)]", "member" : "lamp.autograd.CappedShiftedNegativeExponential.params", "link" : "lamp\/autograd\/CappedShiftedNegativeExponential.html#params:List[(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)]", "kind" : "val"}, {"member" : "lamp.autograd.CappedShiftedNegativeExponential#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/CappedShiftedNegativeExponential.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/CappedShiftedNegativeExponential.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/CappedShiftedNegativeExponential.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/CappedShiftedNegativeExponential.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/CappedShiftedNegativeExponential.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/CappedShiftedNegativeExponential.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/CappedShiftedNegativeExponential.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/CappedShiftedNegativeExponential.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/CappedShiftedNegativeExponential.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/CappedShiftedNegativeExponential.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/CappedShiftedNegativeExponential.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/CappedShiftedNegativeExponential.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/autograd\/CappedShiftedNegativeExponential.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/CappedShiftedNegativeExponential.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/autograd\/CappedShiftedNegativeExponential.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/autograd\/CappedShiftedNegativeExponential.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/CappedShiftedNegativeExponential.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/CappedShiftedNegativeExponential.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/CappedShiftedNegativeExponential.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "lamp\/autograd\/CappedShiftedNegativeExponential.html", "kind" : "class"}, {"name" : "lamp.autograd.CastToPrecision", "shortDescription" : "", "members_class" : [{"label" : "value", "tail" : ": Variable", "member" : "lamp.autograd.CastToPrecision.value", "link" : "lamp\/autograd\/CastToPrecision.html#value:lamp.autograd.Variable", "kind" : "val"}, {"label" : "params", "tail" : ": List[(Variable, (STen, STen) ⇒ Unit)]", "member" : "lamp.autograd.CastToPrecision.params", "link" : "lamp\/autograd\/CastToPrecision.html#params:List[(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)]", "kind" : "val"}, {"member" : "lamp.autograd.CastToPrecision#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/CastToPrecision.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/CastToPrecision.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/CastToPrecision.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/CastToPrecision.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/CastToPrecision.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/CastToPrecision.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/CastToPrecision.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/CastToPrecision.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/CastToPrecision.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/CastToPrecision.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/CastToPrecision.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/CastToPrecision.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/autograd\/CastToPrecision.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/CastToPrecision.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/autograd\/CastToPrecision.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/autograd\/CastToPrecision.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/CastToPrecision.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/CastToPrecision.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/CastToPrecision.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "lamp\/autograd\/CastToPrecision.html", "kind" : "class"}, {"name" : "lamp.autograd.ColSum", "shortDescription" : "", "members_class" : [{"label" : "value", "tail" : ": Variable", "member" : "lamp.autograd.ColSum.value", "link" : "lamp\/autograd\/ColSum.html#value:lamp.autograd.Variable", "kind" : "val"}, {"label" : "params", "tail" : ": List[(Variable, (STen, STen) ⇒ Unit)]", "member" : "lamp.autograd.ColSum.params", "link" : "lamp\/autograd\/ColSum.html#params:List[(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)]", "kind" : "val"}, {"member" : "lamp.autograd.ColSum#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/ColSum.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/ColSum.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/ColSum.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/ColSum.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/ColSum.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/ColSum.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/ColSum.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/ColSum.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/ColSum.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/ColSum.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/ColSum.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/ColSum.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/autograd\/ColSum.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/ColSum.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/autograd\/ColSum.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/autograd\/ColSum.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/ColSum.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/ColSum.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/ColSum.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "lamp\/autograd\/ColSum.html", "kind" : "class"}, {"name" : "lamp.autograd.Concatenate", "shortDescription" : "", "members_class" : [{"label" : "value", "tail" : ": Variable", "member" : "lamp.autograd.Concatenate.value", "link" : "lamp\/autograd\/Concatenate.html#value:lamp.autograd.Variable", "kind" : "val"}, {"label" : "params", "tail" : ": List[(Variable, (STen, STen) ⇒ Unit)]", "member" : "lamp.autograd.Concatenate.params", "link" : "lamp\/autograd\/Concatenate.html#params:List[(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)]", "kind" : "val"}, {"label" : "boundaries", "tail" : ": List[(Long, Long)]", "member" : "lamp.autograd.Concatenate.boundaries", "link" : "lamp\/autograd\/Concatenate.html#boundaries:List[(Long,Long)]", "kind" : "val"}, {"label" : "ashapes", "tail" : ": Seq[Long]", "member" : "lamp.autograd.Concatenate.ashapes", "link" : "lamp\/autograd\/Concatenate.html#ashapes:Seq[Long]", "kind" : "val"}, {"member" : "lamp.autograd.Concatenate#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/Concatenate.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/Concatenate.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/Concatenate.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/Concatenate.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/Concatenate.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/Concatenate.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/Concatenate.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Concatenate.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Concatenate.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Concatenate.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/Concatenate.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/Concatenate.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/autograd\/Concatenate.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/Concatenate.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/autograd\/Concatenate.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/autograd\/Concatenate.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/Concatenate.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/Concatenate.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/Concatenate.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "lamp\/autograd\/Concatenate.html", "kind" : "class"}, {"name" : "lamp.autograd.ConcatenateAddNewDim", "shortDescription" : "Prepends a new dimension and concatenates the tensors along that axis", "members_class" : [{"label" : "value", "tail" : ": Variable", "member" : "lamp.autograd.ConcatenateAddNewDim.value", "link" : "lamp\/autograd\/ConcatenateAddNewDim.html#value:lamp.autograd.Variable", "kind" : "val"}, {"label" : "zeros", "tail" : ": STen", "member" : "lamp.autograd.ConcatenateAddNewDim.zeros", "link" : "lamp\/autograd\/ConcatenateAddNewDim.html#zeros:lamp.STen", "kind" : "val"}, {"label" : "shape1", "tail" : ": List[Long]", "member" : "lamp.autograd.ConcatenateAddNewDim.shape1", "link" : "lamp\/autograd\/ConcatenateAddNewDim.html#shape1:List[Long]", "kind" : "val"}, {"label" : "shape", "tail" : ": List[Long]", "member" : "lamp.autograd.ConcatenateAddNewDim.shape", "link" : "lamp\/autograd\/ConcatenateAddNewDim.html#shape:List[Long]", "kind" : "val"}, {"label" : "shapes", "tail" : ": Seq[List[Long]]", "member" : "lamp.autograd.ConcatenateAddNewDim.shapes", "link" : "lamp\/autograd\/ConcatenateAddNewDim.html#shapes:Seq[List[Long]]", "kind" : "val"}, {"label" : "params", "tail" : ": List[(Variable, (STen, STen) ⇒ Unit)]", "member" : "lamp.autograd.ConcatenateAddNewDim.params", "link" : "lamp\/autograd\/ConcatenateAddNewDim.html#params:List[(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)]", "kind" : "val"}, {"member" : "lamp.autograd.ConcatenateAddNewDim#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/ConcatenateAddNewDim.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/ConcatenateAddNewDim.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/ConcatenateAddNewDim.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/ConcatenateAddNewDim.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/ConcatenateAddNewDim.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/ConcatenateAddNewDim.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/ConcatenateAddNewDim.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/ConcatenateAddNewDim.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/ConcatenateAddNewDim.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/ConcatenateAddNewDim.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/ConcatenateAddNewDim.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/ConcatenateAddNewDim.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/autograd\/ConcatenateAddNewDim.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/ConcatenateAddNewDim.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/autograd\/ConcatenateAddNewDim.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/autograd\/ConcatenateAddNewDim.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/ConcatenateAddNewDim.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/ConcatenateAddNewDim.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/ConcatenateAddNewDim.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "lamp\/autograd\/ConcatenateAddNewDim.html", "kind" : "class"}, {"name" : "lamp.autograd.ConstAdd", "shortDescription" : "", "members_class" : [{"label" : "value", "tail" : ": Variable", "member" : "lamp.autograd.ConstAdd.value", "link" : "lamp\/autograd\/ConstAdd.html#value:lamp.autograd.Variable", "kind" : "val"}, {"label" : "params", "tail" : ": List[(Variable, (STen, STen) ⇒ Unit)]", "member" : "lamp.autograd.ConstAdd.params", "link" : "lamp\/autograd\/ConstAdd.html#params:List[(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)]", "kind" : "val"}, {"member" : "lamp.autograd.ConstAdd#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/ConstAdd.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/ConstAdd.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/ConstAdd.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/ConstAdd.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/ConstAdd.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/ConstAdd.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/ConstAdd.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/ConstAdd.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/ConstAdd.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/ConstAdd.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/ConstAdd.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/ConstAdd.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/autograd\/ConstAdd.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/ConstAdd.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/autograd\/ConstAdd.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/autograd\/ConstAdd.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/ConstAdd.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/ConstAdd.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/ConstAdd.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "lamp\/autograd\/ConstAdd.html", "kind" : "class"}, {"name" : "lamp.autograd.Constant", "members_trait" : [{"label" : "op", "tail" : "(): None.type", "member" : "lamp.autograd.Constant.op", "link" : "lamp\/autograd\/Constant.html#op:None.type", "kind" : "final def"}, {"label" : "toLongMat", "tail" : "(): Mat[Long]", "member" : "lamp.autograd.Variable.toLongMat", "link" : "lamp\/autograd\/Constant.html#toLongMat:org.saddle.Mat[Long]", "kind" : "def"}, {"label" : "toMat", "tail" : "(): Mat[Double]", "member" : "lamp.autograd.Variable.toMat", "link" : "lamp\/autograd\/Constant.html#toMat:org.saddle.Mat[Double]", "kind" : "def"}, {"label" : "flattenLastDimensions", "tail" : "(dims: Int)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.flattenLastDimensions", "link" : "lamp\/autograd\/Constant.html#flattenLastDimensions[S](dims:Int)(implicitevidence$51:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "view", "tail" : "(shape: List[Int])(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.view", "link" : "lamp\/autograd\/Constant.html#view[S](shape:List[Int])(implicitevidence$50:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "normalize", "tail" : "(dim: List[Int])(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.normalize", "link" : "lamp\/autograd\/Constant.html#normalize[S](dim:List[Int])(implicitevidence$49:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "variance", "tail" : "(dim: List[Int])(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.variance", "link" : "lamp\/autograd\/Constant.html#variance[S](dim:List[Int])(implicitevidence$48:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "mean", "tail" : "(dim: List[Int])(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.mean", "link" : "lamp\/autograd\/Constant.html#mean[S](dim:List[Int])(implicitevidence$47:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "squaredFrobenius", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.squaredFrobenius", "link" : "lamp\/autograd\/Constant.html#squaredFrobenius[S](implicitevidence$46:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "l1Loss", "tail" : "(target: STen, reduction: Reduction)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.l1Loss", "link" : "lamp\/autograd\/Constant.html#l1Loss[S](target:lamp.STen,reduction:lamp.autograd.Reduction)(implicitevidence$45:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "mseLoss", "tail" : "(target: STen, reduction: Reduction)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.mseLoss", "link" : "lamp\/autograd\/Constant.html#mseLoss[S](target:lamp.STen,reduction:lamp.autograd.Reduction)(implicitevidence$44:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "nllLoss", "tail" : "(target: STen, weights: STen, reduction: Reduction, ignore: Long)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.nllLoss", "link" : "lamp\/autograd\/Constant.html#nllLoss[S](target:lamp.STen,weights:lamp.STen,reduction:lamp.autograd.Reduction,ignore:Long)(implicitevidence$43:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "crossEntropy", "tail" : "(other: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.crossEntropy", "link" : "lamp\/autograd\/Constant.html#crossEntropy[S](other:lamp.autograd.Variable)(implicitevidence$42:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "logSoftMax", "tail" : "(dim: Int)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.logSoftMax", "link" : "lamp\/autograd\/Constant.html#logSoftMax[S](dim:Int)(implicitevidence$41:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "euclideanDistance", "tail" : "(b: Variable, dim: Int)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.euclideanDistance", "link" : "lamp\/autograd\/Constant.html#euclideanDistance[S](b:lamp.autograd.Variable,dim:Int)(implicitevidence$40:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "pow", "tail" : "(exponent: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.pow", "link" : "lamp\/autograd\/Constant.html#pow[S](exponent:lamp.autograd.Variable)(implicitevidence$39:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "pow", "tail" : "(const: Double)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.pow", "link" : "lamp\/autograd\/Constant.html#pow[S](const:Double)(implicitevidence$38:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "atan", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.atan", "link" : "lamp\/autograd\/Constant.html#atan[S](implicitevidence$37:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "tanh", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.tanh", "link" : "lamp\/autograd\/Constant.html#tanh[S](implicitevidence$36:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "tan", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.tan", "link" : "lamp\/autograd\/Constant.html#tan[S](implicitevidence$35:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "cos", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.cos", "link" : "lamp\/autograd\/Constant.html#cos[S](implicitevidence$34:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "sin", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.sin", "link" : "lamp\/autograd\/Constant.html#sin[S](implicitevidence$33:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "log1p", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.log1p", "link" : "lamp\/autograd\/Constant.html#log1p[S](implicitevidence$32:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "log", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.log", "link" : "lamp\/autograd\/Constant.html#log[S](implicitevidence$31:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "exp", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.exp", "link" : "lamp\/autograd\/Constant.html#exp[S](implicitevidence$30:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "colSum", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.colSum", "link" : "lamp\/autograd\/Constant.html#colSum[S](implicitevidence$29:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "rowSum", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.rowSum", "link" : "lamp\/autograd\/Constant.html#rowSum[S](implicitevidence$28:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "expandAs", "tail" : "(other: STen)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.expandAs", "link" : "lamp\/autograd\/Constant.html#expandAs[S](other:lamp.STen)(implicitevidence$27:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "sum", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.sum", "link" : "lamp\/autograd\/Constant.html#sum[S](implicitevidence$26:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "indexAdd", "tail" : "(index: Variable, dim: Int, maxIndex: Long)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.indexAdd", "link" : "lamp\/autograd\/Constant.html#indexAdd[S](index:lamp.autograd.Variable,dim:Int,maxIndex:Long)(implicitevidence$25:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "scatterAdd", "tail" : "(index: Variable, dim: Int, maxIndex: Long)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.scatterAdd", "link" : "lamp\/autograd\/Constant.html#scatterAdd[S](index:lamp.autograd.Variable,dim:Int,maxIndex:Long)(implicitevidence$24:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "dropout", "tail" : "(prob: Double, train: Boolean)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.dropout", "link" : "lamp\/autograd\/Constant.html#dropout[S](prob:Double,train:Boolean)(implicitevidence$23:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "sigmoid", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.sigmoid", "link" : "lamp\/autograd\/Constant.html#sigmoid[S](implicitevidence$22:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "gelu", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.gelu", "link" : "lamp\/autograd\/Constant.html#gelu[S](implicitevidence$21:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "relu", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.relu", "link" : "lamp\/autograd\/Constant.html#relu[S](implicitevidence$20:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "bmm", "tail" : "(other: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.bmm", "link" : "lamp\/autograd\/Constant.html#bmm[S](other:lamp.autograd.Variable)(implicitevidence$19:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "mm", "tail" : "(other: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.mm", "link" : "lamp\/autograd\/Constant.html#mm[S](other:lamp.autograd.Variable)(implicitevidence$18:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "\/", "tail" : "(other: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.\/", "link" : "lamp\/autograd\/Constant.html#\/[S](other:lamp.autograd.Variable)(implicitevidence$17:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "*", "tail" : "(other: Double)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.*", "link" : "lamp\/autograd\/Constant.html#*[S](other:Double)(implicitevidence$16:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "*", "tail" : "(other: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.*", "link" : "lamp\/autograd\/Constant.html#*[S](other:lamp.autograd.Variable)(implicitevidence$15:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "-", "tail" : "(other: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.-", "link" : "lamp\/autograd\/Constant.html#-[S](other:lamp.autograd.Variable)(implicitevidence$14:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "+", "tail" : "(other: Double)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.+", "link" : "lamp\/autograd\/Constant.html#+[S](other:Double)(implicitevidence$13:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "+", "tail" : "(other: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.+", "link" : "lamp\/autograd\/Constant.html#+[S](other:lamp.autograd.Variable)(implicitevidence$12:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "cat", "tail" : "(other: Variable, dim: Long)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.cat", "link" : "lamp\/autograd\/Constant.html#cat[S](other:lamp.autograd.Variable,dim:Long)(implicitevidence$11:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "cast", "tail" : "(precision: FloatingPointPrecision)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.cast", "link" : "lamp\/autograd\/Constant.html#cast[S](precision:lamp.FloatingPointPrecision)(implicitevidence$10:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "makeBooleanMask", "tail" : "(q: Long)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.makeBooleanMask", "link" : "lamp\/autograd\/Constant.html#makeBooleanMask[S](q:Long)(implicitevidence$9:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "maskFill", "tail" : "(mask: Variable, fill: Double)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.maskFill", "link" : "lamp\/autograd\/Constant.html#maskFill[S](mask:lamp.autograd.Variable,fill:Double)(implicitevidence$8:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "assign", "tail" : "(other: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.assign", "link" : "lamp\/autograd\/Constant.html#assign[S](other:lamp.autograd.Variable)(implicitevidence$7:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "oneHot", "tail" : "(numClasses: Int)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.oneHot", "link" : "lamp\/autograd\/Constant.html#oneHot[S](numClasses:Int)(implicitevidence$6:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "argmax", "tail" : "(dim: Long, keepDim: Boolean)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.argmax", "link" : "lamp\/autograd\/Constant.html#argmax[S](dim:Long,keepDim:Boolean)(implicitevidence$5:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "indexSelect", "tail" : "(dim: Long, index: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.indexSelect", "link" : "lamp\/autograd\/Constant.html#indexSelect[S](dim:Long,index:lamp.autograd.Variable)(implicitevidence$4:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "select", "tail" : "(dim: Long, index: Long)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.select", "link" : "lamp\/autograd\/Constant.html#select[S](dim:Long,index:Long)(implicitevidence$3:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "t", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.t", "link" : "lamp\/autograd\/Constant.html#t[S](implicitevidence$2:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "transpose", "tail" : "(dim1: Int, dim2: Int)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.transpose", "link" : "lamp\/autograd\/Constant.html#transpose[S](dim1:Int,dim2:Int)(implicitevidence$1:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "accumulateGrad", "tail" : "(incoming: STen, computeGrad: (STen, STen) ⇒ Unit): Unit", "member" : "lamp.autograd.Variable.accumulateGrad", "link" : "lamp\/autograd\/Constant.html#accumulateGrad(incoming:lamp.STen,computeGrad:(lamp.STen,lamp.STen)=>Unit):Unit", "kind" : "def"}, {"label" : "zipBackward", "tail" : "(fn: (STen, STen) ⇒ Unit): (Variable, (STen, STen) ⇒ Unit)", "member" : "lamp.autograd.Variable.zipBackward", "link" : "lamp\/autograd\/Constant.html#zipBackward(fn:(lamp.STen,lamp.STen)=>Unit):(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)", "kind" : "def"}, {"label" : "backprop", "tail" : "(): Unit", "member" : "lamp.autograd.Variable.backprop", "link" : "lamp\/autograd\/Constant.html#backprop():Unit", "kind" : "def"}, {"label" : "wengert", "tail" : ": Seq[Variable]", "member" : "lamp.autograd.Variable.wengert", "link" : "lamp\/autograd\/Constant.html#wengert:Seq[lamp.autograd.Variable]", "kind" : "lazy val"}, {"label" : "zeroGrad", "tail" : "(): Unit", "member" : "lamp.autograd.Variable.zeroGrad", "link" : "lamp\/autograd\/Constant.html#zeroGrad():Unit", "kind" : "def"}, {"label" : "detached", "tail" : "(): Constant", "member" : "lamp.autograd.Variable.detached", "link" : "lamp\/autograd\/Constant.html#detached:lamp.autograd.Constant", "kind" : "def"}, {"label" : "id", "tail" : ": UUID", "member" : "lamp.autograd.Variable.id", "link" : "lamp\/autograd\/Constant.html#id:java.util.UUID", "kind" : "val"}, {"label" : "shape", "tail" : "(): List[Long]", "member" : "lamp.autograd.Variable.shape", "link" : "lamp\/autograd\/Constant.html#shape:List[Long]", "kind" : "def"}, {"label" : "sizes", "tail" : ": List[Long]", "member" : "lamp.autograd.Variable.sizes", "link" : "lamp\/autograd\/Constant.html#sizes:List[Long]", "kind" : "val"}, {"label" : "options", "tail" : ": TensorOptions", "member" : "lamp.autograd.Variable.options", "link" : "lamp\/autograd\/Constant.html#options:aten.TensorOptions", "kind" : "val"}, {"label" : "toString", "tail" : "(): String", "member" : "lamp.autograd.Variable.toString", "link" : "lamp\/autograd\/Constant.html#toString():String", "kind" : "def"}, {"label" : "needsGrad", "tail" : "(): Boolean", "member" : "lamp.autograd.Variable.needsGrad", "link" : "lamp\/autograd\/Constant.html#needsGrad:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/Constant.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/Constant.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/Constant.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/Constant.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/Constant.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/Constant.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/Constant.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Constant.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Constant.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Constant.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/Constant.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/Constant.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/Constant.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/autograd\/Constant.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/autograd\/Constant.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/Constant.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/Constant.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/Constant.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "partialDerivative", "tail" : "(): Option[STen]", "member" : "lamp.autograd.Variable.partialDerivative", "link" : "lamp\/autograd\/Constant.html#partialDerivative:Option[lamp.STen]", "kind" : "abstract def"}, {"label" : "value", "tail" : "(): STen", "member" : "lamp.autograd.Variable.value", "link" : "lamp\/autograd\/Constant.html#value:lamp.STen", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "lamp\/autograd\/Constant.html", "kind" : "trait"}, {"name" : "lamp.autograd.ConstantWithGrad", "shortDescription" : "", "object" : "lamp\/autograd\/ConstantWithGrad$.html", "members_object" : [{"label" : "movable", "tail" : ": Movable[ConstantWithGrad]", "member" : "lamp.autograd.ConstantWithGrad.movable", "link" : "lamp\/autograd\/ConstantWithGrad$.html#movable:lamp.Movable[lamp.autograd.ConstantWithGrad]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/ConstantWithGrad$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/ConstantWithGrad$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/ConstantWithGrad$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/ConstantWithGrad$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/ConstantWithGrad$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/ConstantWithGrad$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/ConstantWithGrad$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/ConstantWithGrad$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/ConstantWithGrad$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/ConstantWithGrad$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/ConstantWithGrad$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/ConstantWithGrad$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/autograd\/ConstantWithGrad$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/ConstantWithGrad$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/autograd\/ConstantWithGrad$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/autograd\/ConstantWithGrad$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/ConstantWithGrad$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/ConstantWithGrad$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/ConstantWithGrad$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "partialDerivative", "tail" : ": Some[STen]", "member" : "lamp.autograd.ConstantWithGrad.partialDerivative", "link" : "lamp\/autograd\/ConstantWithGrad.html#partialDerivative:Some[lamp.STen]", "kind" : "val"}, {"member" : "lamp.autograd.ConstantWithGrad#<init>", "error" : "unsupported entity"}, {"label" : "pd", "tail" : ": STen", "member" : "lamp.autograd.ConstantWithGrad.pd", "link" : "lamp\/autograd\/ConstantWithGrad.html#pd:lamp.STen", "kind" : "val"}, {"label" : "value", "tail" : ": STen", "member" : "lamp.autograd.ConstantWithGrad.value", "link" : "lamp\/autograd\/ConstantWithGrad.html#value:lamp.STen", "kind" : "val"}, {"label" : "op", "tail" : "(): None.type", "member" : "lamp.autograd.Constant.op", "link" : "lamp\/autograd\/ConstantWithGrad.html#op:None.type", "kind" : "final def"}, {"label" : "toLongMat", "tail" : "(): Mat[Long]", "member" : "lamp.autograd.Variable.toLongMat", "link" : "lamp\/autograd\/ConstantWithGrad.html#toLongMat:org.saddle.Mat[Long]", "kind" : "def"}, {"label" : "toMat", "tail" : "(): Mat[Double]", "member" : "lamp.autograd.Variable.toMat", "link" : "lamp\/autograd\/ConstantWithGrad.html#toMat:org.saddle.Mat[Double]", "kind" : "def"}, {"label" : "flattenLastDimensions", "tail" : "(dims: Int)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.flattenLastDimensions", "link" : "lamp\/autograd\/ConstantWithGrad.html#flattenLastDimensions[S](dims:Int)(implicitevidence$51:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "view", "tail" : "(shape: List[Int])(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.view", "link" : "lamp\/autograd\/ConstantWithGrad.html#view[S](shape:List[Int])(implicitevidence$50:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "normalize", "tail" : "(dim: List[Int])(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.normalize", "link" : "lamp\/autograd\/ConstantWithGrad.html#normalize[S](dim:List[Int])(implicitevidence$49:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "variance", "tail" : "(dim: List[Int])(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.variance", "link" : "lamp\/autograd\/ConstantWithGrad.html#variance[S](dim:List[Int])(implicitevidence$48:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "mean", "tail" : "(dim: List[Int])(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.mean", "link" : "lamp\/autograd\/ConstantWithGrad.html#mean[S](dim:List[Int])(implicitevidence$47:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "squaredFrobenius", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.squaredFrobenius", "link" : "lamp\/autograd\/ConstantWithGrad.html#squaredFrobenius[S](implicitevidence$46:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "l1Loss", "tail" : "(target: STen, reduction: Reduction)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.l1Loss", "link" : "lamp\/autograd\/ConstantWithGrad.html#l1Loss[S](target:lamp.STen,reduction:lamp.autograd.Reduction)(implicitevidence$45:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "mseLoss", "tail" : "(target: STen, reduction: Reduction)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.mseLoss", "link" : "lamp\/autograd\/ConstantWithGrad.html#mseLoss[S](target:lamp.STen,reduction:lamp.autograd.Reduction)(implicitevidence$44:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "nllLoss", "tail" : "(target: STen, weights: STen, reduction: Reduction, ignore: Long)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.nllLoss", "link" : "lamp\/autograd\/ConstantWithGrad.html#nllLoss[S](target:lamp.STen,weights:lamp.STen,reduction:lamp.autograd.Reduction,ignore:Long)(implicitevidence$43:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "crossEntropy", "tail" : "(other: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.crossEntropy", "link" : "lamp\/autograd\/ConstantWithGrad.html#crossEntropy[S](other:lamp.autograd.Variable)(implicitevidence$42:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "logSoftMax", "tail" : "(dim: Int)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.logSoftMax", "link" : "lamp\/autograd\/ConstantWithGrad.html#logSoftMax[S](dim:Int)(implicitevidence$41:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "euclideanDistance", "tail" : "(b: Variable, dim: Int)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.euclideanDistance", "link" : "lamp\/autograd\/ConstantWithGrad.html#euclideanDistance[S](b:lamp.autograd.Variable,dim:Int)(implicitevidence$40:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "pow", "tail" : "(exponent: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.pow", "link" : "lamp\/autograd\/ConstantWithGrad.html#pow[S](exponent:lamp.autograd.Variable)(implicitevidence$39:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "pow", "tail" : "(const: Double)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.pow", "link" : "lamp\/autograd\/ConstantWithGrad.html#pow[S](const:Double)(implicitevidence$38:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "atan", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.atan", "link" : "lamp\/autograd\/ConstantWithGrad.html#atan[S](implicitevidence$37:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "tanh", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.tanh", "link" : "lamp\/autograd\/ConstantWithGrad.html#tanh[S](implicitevidence$36:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "tan", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.tan", "link" : "lamp\/autograd\/ConstantWithGrad.html#tan[S](implicitevidence$35:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "cos", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.cos", "link" : "lamp\/autograd\/ConstantWithGrad.html#cos[S](implicitevidence$34:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "sin", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.sin", "link" : "lamp\/autograd\/ConstantWithGrad.html#sin[S](implicitevidence$33:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "log1p", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.log1p", "link" : "lamp\/autograd\/ConstantWithGrad.html#log1p[S](implicitevidence$32:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "log", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.log", "link" : "lamp\/autograd\/ConstantWithGrad.html#log[S](implicitevidence$31:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "exp", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.exp", "link" : "lamp\/autograd\/ConstantWithGrad.html#exp[S](implicitevidence$30:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "colSum", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.colSum", "link" : "lamp\/autograd\/ConstantWithGrad.html#colSum[S](implicitevidence$29:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "rowSum", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.rowSum", "link" : "lamp\/autograd\/ConstantWithGrad.html#rowSum[S](implicitevidence$28:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "expandAs", "tail" : "(other: STen)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.expandAs", "link" : "lamp\/autograd\/ConstantWithGrad.html#expandAs[S](other:lamp.STen)(implicitevidence$27:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "sum", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.sum", "link" : "lamp\/autograd\/ConstantWithGrad.html#sum[S](implicitevidence$26:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "indexAdd", "tail" : "(index: Variable, dim: Int, maxIndex: Long)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.indexAdd", "link" : "lamp\/autograd\/ConstantWithGrad.html#indexAdd[S](index:lamp.autograd.Variable,dim:Int,maxIndex:Long)(implicitevidence$25:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "scatterAdd", "tail" : "(index: Variable, dim: Int, maxIndex: Long)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.scatterAdd", "link" : "lamp\/autograd\/ConstantWithGrad.html#scatterAdd[S](index:lamp.autograd.Variable,dim:Int,maxIndex:Long)(implicitevidence$24:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "dropout", "tail" : "(prob: Double, train: Boolean)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.dropout", "link" : "lamp\/autograd\/ConstantWithGrad.html#dropout[S](prob:Double,train:Boolean)(implicitevidence$23:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "sigmoid", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.sigmoid", "link" : "lamp\/autograd\/ConstantWithGrad.html#sigmoid[S](implicitevidence$22:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "gelu", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.gelu", "link" : "lamp\/autograd\/ConstantWithGrad.html#gelu[S](implicitevidence$21:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "relu", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.relu", "link" : "lamp\/autograd\/ConstantWithGrad.html#relu[S](implicitevidence$20:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "bmm", "tail" : "(other: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.bmm", "link" : "lamp\/autograd\/ConstantWithGrad.html#bmm[S](other:lamp.autograd.Variable)(implicitevidence$19:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "mm", "tail" : "(other: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.mm", "link" : "lamp\/autograd\/ConstantWithGrad.html#mm[S](other:lamp.autograd.Variable)(implicitevidence$18:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "\/", "tail" : "(other: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.\/", "link" : "lamp\/autograd\/ConstantWithGrad.html#\/[S](other:lamp.autograd.Variable)(implicitevidence$17:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "*", "tail" : "(other: Double)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.*", "link" : "lamp\/autograd\/ConstantWithGrad.html#*[S](other:Double)(implicitevidence$16:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "*", "tail" : "(other: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.*", "link" : "lamp\/autograd\/ConstantWithGrad.html#*[S](other:lamp.autograd.Variable)(implicitevidence$15:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "-", "tail" : "(other: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.-", "link" : "lamp\/autograd\/ConstantWithGrad.html#-[S](other:lamp.autograd.Variable)(implicitevidence$14:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "+", "tail" : "(other: Double)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.+", "link" : "lamp\/autograd\/ConstantWithGrad.html#+[S](other:Double)(implicitevidence$13:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "+", "tail" : "(other: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.+", "link" : "lamp\/autograd\/ConstantWithGrad.html#+[S](other:lamp.autograd.Variable)(implicitevidence$12:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "cat", "tail" : "(other: Variable, dim: Long)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.cat", "link" : "lamp\/autograd\/ConstantWithGrad.html#cat[S](other:lamp.autograd.Variable,dim:Long)(implicitevidence$11:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "cast", "tail" : "(precision: FloatingPointPrecision)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.cast", "link" : "lamp\/autograd\/ConstantWithGrad.html#cast[S](precision:lamp.FloatingPointPrecision)(implicitevidence$10:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "makeBooleanMask", "tail" : "(q: Long)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.makeBooleanMask", "link" : "lamp\/autograd\/ConstantWithGrad.html#makeBooleanMask[S](q:Long)(implicitevidence$9:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "maskFill", "tail" : "(mask: Variable, fill: Double)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.maskFill", "link" : "lamp\/autograd\/ConstantWithGrad.html#maskFill[S](mask:lamp.autograd.Variable,fill:Double)(implicitevidence$8:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "assign", "tail" : "(other: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.assign", "link" : "lamp\/autograd\/ConstantWithGrad.html#assign[S](other:lamp.autograd.Variable)(implicitevidence$7:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "oneHot", "tail" : "(numClasses: Int)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.oneHot", "link" : "lamp\/autograd\/ConstantWithGrad.html#oneHot[S](numClasses:Int)(implicitevidence$6:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "argmax", "tail" : "(dim: Long, keepDim: Boolean)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.argmax", "link" : "lamp\/autograd\/ConstantWithGrad.html#argmax[S](dim:Long,keepDim:Boolean)(implicitevidence$5:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "indexSelect", "tail" : "(dim: Long, index: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.indexSelect", "link" : "lamp\/autograd\/ConstantWithGrad.html#indexSelect[S](dim:Long,index:lamp.autograd.Variable)(implicitevidence$4:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "select", "tail" : "(dim: Long, index: Long)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.select", "link" : "lamp\/autograd\/ConstantWithGrad.html#select[S](dim:Long,index:Long)(implicitevidence$3:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "t", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.t", "link" : "lamp\/autograd\/ConstantWithGrad.html#t[S](implicitevidence$2:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "transpose", "tail" : "(dim1: Int, dim2: Int)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.transpose", "link" : "lamp\/autograd\/ConstantWithGrad.html#transpose[S](dim1:Int,dim2:Int)(implicitevidence$1:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "accumulateGrad", "tail" : "(incoming: STen, computeGrad: (STen, STen) ⇒ Unit): Unit", "member" : "lamp.autograd.Variable.accumulateGrad", "link" : "lamp\/autograd\/ConstantWithGrad.html#accumulateGrad(incoming:lamp.STen,computeGrad:(lamp.STen,lamp.STen)=>Unit):Unit", "kind" : "def"}, {"label" : "zipBackward", "tail" : "(fn: (STen, STen) ⇒ Unit): (Variable, (STen, STen) ⇒ Unit)", "member" : "lamp.autograd.Variable.zipBackward", "link" : "lamp\/autograd\/ConstantWithGrad.html#zipBackward(fn:(lamp.STen,lamp.STen)=>Unit):(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)", "kind" : "def"}, {"label" : "backprop", "tail" : "(): Unit", "member" : "lamp.autograd.Variable.backprop", "link" : "lamp\/autograd\/ConstantWithGrad.html#backprop():Unit", "kind" : "def"}, {"label" : "wengert", "tail" : ": Seq[Variable]", "member" : "lamp.autograd.Variable.wengert", "link" : "lamp\/autograd\/ConstantWithGrad.html#wengert:Seq[lamp.autograd.Variable]", "kind" : "lazy val"}, {"label" : "zeroGrad", "tail" : "(): Unit", "member" : "lamp.autograd.Variable.zeroGrad", "link" : "lamp\/autograd\/ConstantWithGrad.html#zeroGrad():Unit", "kind" : "def"}, {"label" : "detached", "tail" : "(): Constant", "member" : "lamp.autograd.Variable.detached", "link" : "lamp\/autograd\/ConstantWithGrad.html#detached:lamp.autograd.Constant", "kind" : "def"}, {"label" : "id", "tail" : ": UUID", "member" : "lamp.autograd.Variable.id", "link" : "lamp\/autograd\/ConstantWithGrad.html#id:java.util.UUID", "kind" : "val"}, {"label" : "shape", "tail" : "(): List[Long]", "member" : "lamp.autograd.Variable.shape", "link" : "lamp\/autograd\/ConstantWithGrad.html#shape:List[Long]", "kind" : "def"}, {"label" : "sizes", "tail" : ": List[Long]", "member" : "lamp.autograd.Variable.sizes", "link" : "lamp\/autograd\/ConstantWithGrad.html#sizes:List[Long]", "kind" : "val"}, {"label" : "options", "tail" : ": TensorOptions", "member" : "lamp.autograd.Variable.options", "link" : "lamp\/autograd\/ConstantWithGrad.html#options:aten.TensorOptions", "kind" : "val"}, {"label" : "toString", "tail" : "(): String", "member" : "lamp.autograd.Variable.toString", "link" : "lamp\/autograd\/ConstantWithGrad.html#toString():String", "kind" : "def"}, {"label" : "needsGrad", "tail" : "(): Boolean", "member" : "lamp.autograd.Variable.needsGrad", "link" : "lamp\/autograd\/ConstantWithGrad.html#needsGrad:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/ConstantWithGrad.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/ConstantWithGrad.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/ConstantWithGrad.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/ConstantWithGrad.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/ConstantWithGrad.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/ConstantWithGrad.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/ConstantWithGrad.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/ConstantWithGrad.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/ConstantWithGrad.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/ConstantWithGrad.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/ConstantWithGrad.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/ConstantWithGrad.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/ConstantWithGrad.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/ConstantWithGrad.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/ConstantWithGrad.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/ConstantWithGrad.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/autograd\/ConstantWithGrad.html", "kind" : "case class"}, {"name" : "lamp.autograd.ConstantWithoutGrad", "shortDescription" : "", "object" : "lamp\/autograd\/ConstantWithoutGrad$.html", "members_object" : [{"label" : "movable", "tail" : ": Movable[ConstantWithoutGrad]", "member" : "lamp.autograd.ConstantWithoutGrad.movable", "link" : "lamp\/autograd\/ConstantWithoutGrad$.html#movable:lamp.Movable[lamp.autograd.ConstantWithoutGrad]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/ConstantWithoutGrad$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/ConstantWithoutGrad$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/ConstantWithoutGrad$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/ConstantWithoutGrad$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/ConstantWithoutGrad$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/ConstantWithoutGrad$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/ConstantWithoutGrad$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/ConstantWithoutGrad$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/ConstantWithoutGrad$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/ConstantWithoutGrad$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/ConstantWithoutGrad$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/ConstantWithoutGrad$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/autograd\/ConstantWithoutGrad$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/ConstantWithoutGrad$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/autograd\/ConstantWithoutGrad$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/autograd\/ConstantWithoutGrad$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/ConstantWithoutGrad$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/ConstantWithoutGrad$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/ConstantWithoutGrad$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "partialDerivative", "tail" : ": None.type", "member" : "lamp.autograd.ConstantWithoutGrad.partialDerivative", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#partialDerivative:None.type", "kind" : "val"}, {"member" : "lamp.autograd.ConstantWithoutGrad#<init>", "error" : "unsupported entity"}, {"label" : "value", "tail" : ": STen", "member" : "lamp.autograd.ConstantWithoutGrad.value", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#value:lamp.STen", "kind" : "val"}, {"label" : "op", "tail" : "(): None.type", "member" : "lamp.autograd.Constant.op", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#op:None.type", "kind" : "final def"}, {"label" : "toLongMat", "tail" : "(): Mat[Long]", "member" : "lamp.autograd.Variable.toLongMat", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#toLongMat:org.saddle.Mat[Long]", "kind" : "def"}, {"label" : "toMat", "tail" : "(): Mat[Double]", "member" : "lamp.autograd.Variable.toMat", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#toMat:org.saddle.Mat[Double]", "kind" : "def"}, {"label" : "flattenLastDimensions", "tail" : "(dims: Int)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.flattenLastDimensions", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#flattenLastDimensions[S](dims:Int)(implicitevidence$51:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "view", "tail" : "(shape: List[Int])(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.view", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#view[S](shape:List[Int])(implicitevidence$50:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "normalize", "tail" : "(dim: List[Int])(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.normalize", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#normalize[S](dim:List[Int])(implicitevidence$49:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "variance", "tail" : "(dim: List[Int])(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.variance", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#variance[S](dim:List[Int])(implicitevidence$48:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "mean", "tail" : "(dim: List[Int])(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.mean", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#mean[S](dim:List[Int])(implicitevidence$47:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "squaredFrobenius", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.squaredFrobenius", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#squaredFrobenius[S](implicitevidence$46:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "l1Loss", "tail" : "(target: STen, reduction: Reduction)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.l1Loss", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#l1Loss[S](target:lamp.STen,reduction:lamp.autograd.Reduction)(implicitevidence$45:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "mseLoss", "tail" : "(target: STen, reduction: Reduction)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.mseLoss", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#mseLoss[S](target:lamp.STen,reduction:lamp.autograd.Reduction)(implicitevidence$44:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "nllLoss", "tail" : "(target: STen, weights: STen, reduction: Reduction, ignore: Long)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.nllLoss", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#nllLoss[S](target:lamp.STen,weights:lamp.STen,reduction:lamp.autograd.Reduction,ignore:Long)(implicitevidence$43:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "crossEntropy", "tail" : "(other: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.crossEntropy", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#crossEntropy[S](other:lamp.autograd.Variable)(implicitevidence$42:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "logSoftMax", "tail" : "(dim: Int)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.logSoftMax", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#logSoftMax[S](dim:Int)(implicitevidence$41:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "euclideanDistance", "tail" : "(b: Variable, dim: Int)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.euclideanDistance", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#euclideanDistance[S](b:lamp.autograd.Variable,dim:Int)(implicitevidence$40:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "pow", "tail" : "(exponent: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.pow", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#pow[S](exponent:lamp.autograd.Variable)(implicitevidence$39:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "pow", "tail" : "(const: Double)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.pow", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#pow[S](const:Double)(implicitevidence$38:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "atan", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.atan", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#atan[S](implicitevidence$37:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "tanh", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.tanh", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#tanh[S](implicitevidence$36:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "tan", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.tan", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#tan[S](implicitevidence$35:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "cos", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.cos", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#cos[S](implicitevidence$34:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "sin", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.sin", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#sin[S](implicitevidence$33:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "log1p", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.log1p", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#log1p[S](implicitevidence$32:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "log", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.log", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#log[S](implicitevidence$31:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "exp", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.exp", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#exp[S](implicitevidence$30:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "colSum", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.colSum", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#colSum[S](implicitevidence$29:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "rowSum", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.rowSum", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#rowSum[S](implicitevidence$28:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "expandAs", "tail" : "(other: STen)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.expandAs", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#expandAs[S](other:lamp.STen)(implicitevidence$27:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "sum", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.sum", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#sum[S](implicitevidence$26:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "indexAdd", "tail" : "(index: Variable, dim: Int, maxIndex: Long)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.indexAdd", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#indexAdd[S](index:lamp.autograd.Variable,dim:Int,maxIndex:Long)(implicitevidence$25:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "scatterAdd", "tail" : "(index: Variable, dim: Int, maxIndex: Long)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.scatterAdd", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#scatterAdd[S](index:lamp.autograd.Variable,dim:Int,maxIndex:Long)(implicitevidence$24:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "dropout", "tail" : "(prob: Double, train: Boolean)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.dropout", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#dropout[S](prob:Double,train:Boolean)(implicitevidence$23:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "sigmoid", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.sigmoid", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#sigmoid[S](implicitevidence$22:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "gelu", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.gelu", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#gelu[S](implicitevidence$21:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "relu", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.relu", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#relu[S](implicitevidence$20:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "bmm", "tail" : "(other: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.bmm", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#bmm[S](other:lamp.autograd.Variable)(implicitevidence$19:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "mm", "tail" : "(other: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.mm", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#mm[S](other:lamp.autograd.Variable)(implicitevidence$18:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "\/", "tail" : "(other: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.\/", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#\/[S](other:lamp.autograd.Variable)(implicitevidence$17:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "*", "tail" : "(other: Double)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.*", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#*[S](other:Double)(implicitevidence$16:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "*", "tail" : "(other: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.*", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#*[S](other:lamp.autograd.Variable)(implicitevidence$15:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "-", "tail" : "(other: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.-", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#-[S](other:lamp.autograd.Variable)(implicitevidence$14:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "+", "tail" : "(other: Double)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.+", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#+[S](other:Double)(implicitevidence$13:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "+", "tail" : "(other: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.+", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#+[S](other:lamp.autograd.Variable)(implicitevidence$12:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "cat", "tail" : "(other: Variable, dim: Long)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.cat", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#cat[S](other:lamp.autograd.Variable,dim:Long)(implicitevidence$11:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "cast", "tail" : "(precision: FloatingPointPrecision)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.cast", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#cast[S](precision:lamp.FloatingPointPrecision)(implicitevidence$10:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "makeBooleanMask", "tail" : "(q: Long)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.makeBooleanMask", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#makeBooleanMask[S](q:Long)(implicitevidence$9:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "maskFill", "tail" : "(mask: Variable, fill: Double)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.maskFill", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#maskFill[S](mask:lamp.autograd.Variable,fill:Double)(implicitevidence$8:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "assign", "tail" : "(other: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.assign", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#assign[S](other:lamp.autograd.Variable)(implicitevidence$7:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "oneHot", "tail" : "(numClasses: Int)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.oneHot", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#oneHot[S](numClasses:Int)(implicitevidence$6:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "argmax", "tail" : "(dim: Long, keepDim: Boolean)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.argmax", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#argmax[S](dim:Long,keepDim:Boolean)(implicitevidence$5:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "indexSelect", "tail" : "(dim: Long, index: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.indexSelect", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#indexSelect[S](dim:Long,index:lamp.autograd.Variable)(implicitevidence$4:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "select", "tail" : "(dim: Long, index: Long)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.select", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#select[S](dim:Long,index:Long)(implicitevidence$3:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "t", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.t", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#t[S](implicitevidence$2:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "transpose", "tail" : "(dim1: Int, dim2: Int)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.transpose", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#transpose[S](dim1:Int,dim2:Int)(implicitevidence$1:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "accumulateGrad", "tail" : "(incoming: STen, computeGrad: (STen, STen) ⇒ Unit): Unit", "member" : "lamp.autograd.Variable.accumulateGrad", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#accumulateGrad(incoming:lamp.STen,computeGrad:(lamp.STen,lamp.STen)=>Unit):Unit", "kind" : "def"}, {"label" : "zipBackward", "tail" : "(fn: (STen, STen) ⇒ Unit): (Variable, (STen, STen) ⇒ Unit)", "member" : "lamp.autograd.Variable.zipBackward", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#zipBackward(fn:(lamp.STen,lamp.STen)=>Unit):(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)", "kind" : "def"}, {"label" : "backprop", "tail" : "(): Unit", "member" : "lamp.autograd.Variable.backprop", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#backprop():Unit", "kind" : "def"}, {"label" : "wengert", "tail" : ": Seq[Variable]", "member" : "lamp.autograd.Variable.wengert", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#wengert:Seq[lamp.autograd.Variable]", "kind" : "lazy val"}, {"label" : "zeroGrad", "tail" : "(): Unit", "member" : "lamp.autograd.Variable.zeroGrad", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#zeroGrad():Unit", "kind" : "def"}, {"label" : "detached", "tail" : "(): Constant", "member" : "lamp.autograd.Variable.detached", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#detached:lamp.autograd.Constant", "kind" : "def"}, {"label" : "id", "tail" : ": UUID", "member" : "lamp.autograd.Variable.id", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#id:java.util.UUID", "kind" : "val"}, {"label" : "shape", "tail" : "(): List[Long]", "member" : "lamp.autograd.Variable.shape", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#shape:List[Long]", "kind" : "def"}, {"label" : "sizes", "tail" : ": List[Long]", "member" : "lamp.autograd.Variable.sizes", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#sizes:List[Long]", "kind" : "val"}, {"label" : "options", "tail" : ": TensorOptions", "member" : "lamp.autograd.Variable.options", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#options:aten.TensorOptions", "kind" : "val"}, {"label" : "toString", "tail" : "(): String", "member" : "lamp.autograd.Variable.toString", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#toString():String", "kind" : "def"}, {"label" : "needsGrad", "tail" : "(): Boolean", "member" : "lamp.autograd.Variable.needsGrad", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#needsGrad:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/ConstantWithoutGrad.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/ConstantWithoutGrad.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/autograd\/ConstantWithoutGrad.html", "kind" : "case class"}, {"name" : "lamp.autograd.ConstMult", "shortDescription" : "", "members_class" : [{"label" : "value", "tail" : ": Variable", "member" : "lamp.autograd.ConstMult.value", "link" : "lamp\/autograd\/ConstMult.html#value:lamp.autograd.Variable", "kind" : "val"}, {"label" : "params", "tail" : ": List[(Variable, (STen, STen) ⇒ Unit)]", "member" : "lamp.autograd.ConstMult.params", "link" : "lamp\/autograd\/ConstMult.html#params:List[(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)]", "kind" : "val"}, {"member" : "lamp.autograd.ConstMult#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/ConstMult.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/ConstMult.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/ConstMult.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/ConstMult.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/ConstMult.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/ConstMult.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/ConstMult.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/ConstMult.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/ConstMult.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/ConstMult.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/ConstMult.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/ConstMult.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/autograd\/ConstMult.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/ConstMult.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/autograd\/ConstMult.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/autograd\/ConstMult.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/ConstMult.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/ConstMult.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/ConstMult.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "lamp\/autograd\/ConstMult.html", "kind" : "class"}, {"name" : "lamp.autograd.Conv1D", "shortDescription" : "1D convolution", "members_class" : [{"label" : "value", "tail" : ": Variable", "member" : "lamp.autograd.Conv1D.value", "link" : "lamp\/autograd\/Conv1D.html#value:lamp.autograd.Variable", "kind" : "val"}, {"label" : "params", "tail" : ": List[(Variable, (STen, STen) ⇒ Unit)]", "member" : "lamp.autograd.Conv1D.params", "link" : "lamp\/autograd\/Conv1D.html#params:List[(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)]", "kind" : "val"}, {"label" : "outChannels", "tail" : ": Long", "member" : "lamp.autograd.Conv1D.outChannels", "link" : "lamp\/autograd\/Conv1D.html#outChannels:Long", "kind" : "val"}, {"label" : "kernelSize", "tail" : ": Long", "member" : "lamp.autograd.Conv1D.kernelSize", "link" : "lamp\/autograd\/Conv1D.html#kernelSize:Long", "kind" : "val"}, {"label" : "imageSize", "tail" : ": Long", "member" : "lamp.autograd.Conv1D.imageSize", "link" : "lamp\/autograd\/Conv1D.html#imageSize:Long", "kind" : "val"}, {"label" : "inputChannels", "tail" : ": Long", "member" : "lamp.autograd.Conv1D.inputChannels", "link" : "lamp\/autograd\/Conv1D.html#inputChannels:Long", "kind" : "val"}, {"label" : "batchSize", "tail" : ": Long", "member" : "lamp.autograd.Conv1D.batchSize", "link" : "lamp\/autograd\/Conv1D.html#batchSize:Long", "kind" : "val"}, {"member" : "lamp.autograd.Conv1D#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/Conv1D.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/Conv1D.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/Conv1D.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/Conv1D.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/Conv1D.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/Conv1D.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/Conv1D.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Conv1D.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Conv1D.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Conv1D.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/Conv1D.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/Conv1D.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/autograd\/Conv1D.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/Conv1D.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/autograd\/Conv1D.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/autograd\/Conv1D.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/Conv1D.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/Conv1D.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/Conv1D.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "lamp\/autograd\/Conv1D.html", "kind" : "class"}, {"name" : "lamp.autograd.Conv2D", "shortDescription" : "2D convolution", "members_class" : [{"label" : "value", "tail" : ": Variable", "member" : "lamp.autograd.Conv2D.value", "link" : "lamp\/autograd\/Conv2D.html#value:lamp.autograd.Variable", "kind" : "val"}, {"label" : "params", "tail" : ": List[(Variable, (STen, STen) ⇒ Unit)]", "member" : "lamp.autograd.Conv2D.params", "link" : "lamp\/autograd\/Conv2D.html#params:List[(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)]", "kind" : "val"}, {"label" : "outChannels", "tail" : ": Long", "member" : "lamp.autograd.Conv2D.outChannels", "link" : "lamp\/autograd\/Conv2D.html#outChannels:Long", "kind" : "val"}, {"label" : "kernelSize", "tail" : ": Long", "member" : "lamp.autograd.Conv2D.kernelSize", "link" : "lamp\/autograd\/Conv2D.html#kernelSize:Long", "kind" : "val"}, {"label" : "imageWidth", "tail" : ": Long", "member" : "lamp.autograd.Conv2D.imageWidth", "link" : "lamp\/autograd\/Conv2D.html#imageWidth:Long", "kind" : "val"}, {"label" : "imageHeight", "tail" : ": Long", "member" : "lamp.autograd.Conv2D.imageHeight", "link" : "lamp\/autograd\/Conv2D.html#imageHeight:Long", "kind" : "val"}, {"label" : "inputChannels", "tail" : ": Long", "member" : "lamp.autograd.Conv2D.inputChannels", "link" : "lamp\/autograd\/Conv2D.html#inputChannels:Long", "kind" : "val"}, {"label" : "batchSize", "tail" : ": Long", "member" : "lamp.autograd.Conv2D.batchSize", "link" : "lamp\/autograd\/Conv2D.html#batchSize:Long", "kind" : "val"}, {"member" : "lamp.autograd.Conv2D#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/Conv2D.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/Conv2D.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/Conv2D.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/Conv2D.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/Conv2D.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/Conv2D.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/Conv2D.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Conv2D.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Conv2D.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Conv2D.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/Conv2D.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/Conv2D.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/autograd\/Conv2D.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/Conv2D.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/autograd\/Conv2D.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/autograd\/Conv2D.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/Conv2D.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/Conv2D.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/Conv2D.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "lamp\/autograd\/Conv2D.html", "kind" : "class"}, {"name" : "lamp.autograd.Cos", "shortDescription" : "", "members_class" : [{"label" : "value", "tail" : ": Variable", "member" : "lamp.autograd.Cos.value", "link" : "lamp\/autograd\/Cos.html#value:lamp.autograd.Variable", "kind" : "val"}, {"label" : "params", "tail" : ": List[(Variable, (STen, STen) ⇒ Unit)]", "member" : "lamp.autograd.Cos.params", "link" : "lamp\/autograd\/Cos.html#params:List[(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)]", "kind" : "val"}, {"member" : "lamp.autograd.Cos#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/Cos.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/Cos.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/Cos.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/Cos.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/Cos.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/Cos.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/Cos.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Cos.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Cos.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Cos.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/Cos.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/Cos.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/autograd\/Cos.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/Cos.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/autograd\/Cos.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/autograd\/Cos.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/Cos.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/Cos.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/Cos.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "lamp\/autograd\/Cos.html", "kind" : "class"}, {"name" : "lamp.autograd.Div", "shortDescription" : "", "members_class" : [{"label" : "value", "tail" : ": Variable", "member" : "lamp.autograd.Div.value", "link" : "lamp\/autograd\/Div.html#value:lamp.autograd.Variable", "kind" : "val"}, {"label" : "params", "tail" : ": List[(Variable, (STen, STen) ⇒ Unit)]", "member" : "lamp.autograd.Div.params", "link" : "lamp\/autograd\/Div.html#params:List[(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)]", "kind" : "val"}, {"member" : "lamp.autograd.Div#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/Div.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/Div.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/Div.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/Div.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/Div.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/Div.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/Div.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Div.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Div.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Div.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/Div.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/Div.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/autograd\/Div.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/Div.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/autograd\/Div.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/autograd\/Div.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/Div.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/Div.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/Div.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "lamp\/autograd\/Div.html", "kind" : "class"}, {"name" : "lamp.autograd.Dropout", "shortDescription" : "", "members_class" : [{"label" : "value", "tail" : ": Variable", "member" : "lamp.autograd.Dropout.value", "link" : "lamp\/autograd\/Dropout.html#value:lamp.autograd.Variable", "kind" : "val"}, {"label" : "mask", "tail" : ": STen", "member" : "lamp.autograd.Dropout.mask", "link" : "lamp\/autograd\/Dropout.html#mask:lamp.STen", "kind" : "val"}, {"label" : "params", "tail" : ": List[(Variable, (STen, STen) ⇒ Unit)]", "member" : "lamp.autograd.Dropout.params", "link" : "lamp\/autograd\/Dropout.html#params:List[(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)]", "kind" : "val"}, {"member" : "lamp.autograd.Dropout#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/Dropout.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/Dropout.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/Dropout.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/Dropout.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/Dropout.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/Dropout.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/Dropout.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Dropout.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Dropout.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Dropout.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/Dropout.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/Dropout.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/autograd\/Dropout.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/Dropout.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/autograd\/Dropout.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/autograd\/Dropout.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/Dropout.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/Dropout.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/Dropout.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "lamp\/autograd\/Dropout.html", "kind" : "class"}, {"name" : "lamp.autograd.Embedding", "shortDescription" : "", "members_class" : [{"label" : "value", "tail" : ": Variable", "member" : "lamp.autograd.Embedding.value", "link" : "lamp\/autograd\/Embedding.html#value:lamp.autograd.Variable", "kind" : "val"}, {"label" : "params", "tail" : ": List[(Variable, (STen, STen) ⇒ Unit)]", "member" : "lamp.autograd.Embedding.params", "link" : "lamp\/autograd\/Embedding.html#params:List[(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)]", "kind" : "val"}, {"member" : "lamp.autograd.Embedding#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/Embedding.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/Embedding.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/Embedding.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/Embedding.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/Embedding.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/Embedding.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/Embedding.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Embedding.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Embedding.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Embedding.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/Embedding.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/Embedding.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/autograd\/Embedding.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/Embedding.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/autograd\/Embedding.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/autograd\/Embedding.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/Embedding.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/Embedding.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/Embedding.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "lamp\/autograd\/Embedding.html", "kind" : "class"}, {"name" : "lamp.autograd.EqWhere", "shortDescription" : "", "members_class" : [{"label" : "value", "tail" : ": Variable", "member" : "lamp.autograd.EqWhere.value", "link" : "lamp\/autograd\/EqWhere.html#value:lamp.autograd.Variable", "kind" : "val"}, {"label" : "params", "tail" : ": List[Nothing]", "member" : "lamp.autograd.EqWhere.params", "link" : "lamp\/autograd\/EqWhere.html#params:List[Nothing]", "kind" : "val"}, {"member" : "lamp.autograd.EqWhere#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/EqWhere.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/EqWhere.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/EqWhere.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/EqWhere.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/EqWhere.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/EqWhere.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/EqWhere.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/EqWhere.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/EqWhere.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/EqWhere.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/EqWhere.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/EqWhere.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/autograd\/EqWhere.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/EqWhere.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/autograd\/EqWhere.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/autograd\/EqWhere.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/EqWhere.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/EqWhere.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/EqWhere.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "lamp\/autograd\/EqWhere.html", "kind" : "class"}, {"name" : "lamp.autograd.EuclideanDistance", "shortDescription" : "", "members_class" : [{"label" : "value", "tail" : ": Variable", "member" : "lamp.autograd.EuclideanDistance.value", "link" : "lamp\/autograd\/EuclideanDistance.html#value:lamp.autograd.Variable", "kind" : "val"}, {"label" : "norm", "tail" : ": STen", "member" : "lamp.autograd.EuclideanDistance.norm", "link" : "lamp\/autograd\/EuclideanDistance.html#norm:lamp.STen", "kind" : "val"}, {"label" : "diff", "tail" : ": STen", "member" : "lamp.autograd.EuclideanDistance.diff", "link" : "lamp\/autograd\/EuclideanDistance.html#diff:lamp.STen", "kind" : "val"}, {"label" : "params", "tail" : ": List[(Variable, (STen, STen) ⇒ Unit)]", "member" : "lamp.autograd.EuclideanDistance.params", "link" : "lamp\/autograd\/EuclideanDistance.html#params:List[(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)]", "kind" : "val"}, {"member" : "lamp.autograd.EuclideanDistance#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/EuclideanDistance.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/EuclideanDistance.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/EuclideanDistance.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/EuclideanDistance.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/EuclideanDistance.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/EuclideanDistance.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/EuclideanDistance.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/EuclideanDistance.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/EuclideanDistance.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/EuclideanDistance.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/EuclideanDistance.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/EuclideanDistance.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/autograd\/EuclideanDistance.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/EuclideanDistance.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/autograd\/EuclideanDistance.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/autograd\/EuclideanDistance.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/EuclideanDistance.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/EuclideanDistance.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/EuclideanDistance.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "lamp\/autograd\/EuclideanDistance.html", "kind" : "class"}, {"name" : "lamp.autograd.Exp", "shortDescription" : "", "members_class" : [{"label" : "value", "tail" : ": Variable", "member" : "lamp.autograd.Exp.value", "link" : "lamp\/autograd\/Exp.html#value:lamp.autograd.Variable", "kind" : "val"}, {"label" : "params", "tail" : ": List[(Variable, (STen, STen) ⇒ Unit)]", "member" : "lamp.autograd.Exp.params", "link" : "lamp\/autograd\/Exp.html#params:List[(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)]", "kind" : "val"}, {"member" : "lamp.autograd.Exp#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/Exp.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/Exp.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/Exp.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/Exp.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/Exp.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/Exp.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/Exp.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Exp.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Exp.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Exp.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/Exp.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/Exp.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/autograd\/Exp.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/Exp.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/autograd\/Exp.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/autograd\/Exp.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/Exp.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/Exp.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/Exp.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "lamp\/autograd\/Exp.html", "kind" : "class"}, {"name" : "lamp.autograd.ExpandAs", "shortDescription" : "", "members_class" : [{"label" : "value", "tail" : ": Variable", "member" : "lamp.autograd.ExpandAs.value", "link" : "lamp\/autograd\/ExpandAs.html#value:lamp.autograd.Variable", "kind" : "val"}, {"label" : "params", "tail" : ": List[(Variable, (STen, STen) ⇒ Unit)]", "member" : "lamp.autograd.ExpandAs.params", "link" : "lamp\/autograd\/ExpandAs.html#params:List[(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)]", "kind" : "val"}, {"member" : "lamp.autograd.ExpandAs#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/ExpandAs.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/ExpandAs.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/ExpandAs.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/ExpandAs.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/ExpandAs.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/ExpandAs.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/ExpandAs.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/ExpandAs.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/ExpandAs.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/ExpandAs.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/ExpandAs.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/ExpandAs.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/autograd\/ExpandAs.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/ExpandAs.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/autograd\/ExpandAs.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/autograd\/ExpandAs.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/ExpandAs.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/ExpandAs.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/ExpandAs.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "lamp\/autograd\/ExpandAs.html", "kind" : "class"}, {"name" : "lamp.autograd.FlattenLastDimensions", "shortDescription" : "", "members_class" : [{"label" : "value", "tail" : ": Variable", "member" : "lamp.autograd.FlattenLastDimensions.value", "link" : "lamp\/autograd\/FlattenLastDimensions.html#value:lamp.autograd.Variable", "kind" : "val"}, {"label" : "size", "tail" : ": Long", "member" : "lamp.autograd.FlattenLastDimensions.size", "link" : "lamp\/autograd\/FlattenLastDimensions.html#size:Long", "kind" : "val"}, {"label" : "params", "tail" : ": List[(Variable, (STen, STen) ⇒ Unit)]", "member" : "lamp.autograd.FlattenLastDimensions.params", "link" : "lamp\/autograd\/FlattenLastDimensions.html#params:List[(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)]", "kind" : "val"}, {"member" : "lamp.autograd.FlattenLastDimensions#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/FlattenLastDimensions.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/FlattenLastDimensions.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/FlattenLastDimensions.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/FlattenLastDimensions.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/FlattenLastDimensions.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/FlattenLastDimensions.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/FlattenLastDimensions.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/FlattenLastDimensions.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/FlattenLastDimensions.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/FlattenLastDimensions.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/FlattenLastDimensions.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/FlattenLastDimensions.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/autograd\/FlattenLastDimensions.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/FlattenLastDimensions.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/autograd\/FlattenLastDimensions.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/autograd\/FlattenLastDimensions.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/FlattenLastDimensions.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/FlattenLastDimensions.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/FlattenLastDimensions.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "lamp\/autograd\/FlattenLastDimensions.html", "kind" : "class"}, {"name" : "lamp.autograd.Gelu", "shortDescription" : "", "members_class" : [{"label" : "value", "tail" : ": Variable", "member" : "lamp.autograd.Gelu.value", "link" : "lamp\/autograd\/Gelu.html#value:lamp.autograd.Variable", "kind" : "val"}, {"label" : "params", "tail" : ": List[(Variable, (STen, STen) ⇒ Unit)]", "member" : "lamp.autograd.Gelu.params", "link" : "lamp\/autograd\/Gelu.html#params:List[(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)]", "kind" : "val"}, {"member" : "lamp.autograd.Gelu#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/Gelu.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/Gelu.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/Gelu.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/Gelu.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/Gelu.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/Gelu.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/Gelu.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Gelu.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Gelu.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Gelu.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/Gelu.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/Gelu.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/autograd\/Gelu.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/Gelu.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/autograd\/Gelu.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/autograd\/Gelu.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/Gelu.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/Gelu.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/Gelu.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "lamp\/autograd\/Gelu.html", "kind" : "class"}, {"name" : "lamp.autograd.IndexAdd", "shortDescription" : "", "members_class" : [{"label" : "value", "tail" : ": Variable", "member" : "lamp.autograd.IndexAdd.value", "link" : "lamp\/autograd\/IndexAdd.html#value:lamp.autograd.Variable", "kind" : "val"}, {"label" : "params", "tail" : ": List[(Variable, (STen, STen) ⇒ Unit)]", "member" : "lamp.autograd.IndexAdd.params", "link" : "lamp\/autograd\/IndexAdd.html#params:List[(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)]", "kind" : "val"}, {"member" : "lamp.autograd.IndexAdd#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/IndexAdd.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/IndexAdd.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/IndexAdd.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/IndexAdd.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/IndexAdd.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/IndexAdd.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/IndexAdd.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/IndexAdd.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/IndexAdd.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/IndexAdd.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/IndexAdd.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/IndexAdd.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/autograd\/IndexAdd.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/IndexAdd.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/autograd\/IndexAdd.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/autograd\/IndexAdd.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/IndexAdd.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/IndexAdd.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/IndexAdd.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "lamp\/autograd\/IndexAdd.html", "kind" : "class"}, {"name" : "lamp.autograd.IndexFill", "shortDescription" : "", "members_class" : [{"label" : "value", "tail" : ": Variable", "member" : "lamp.autograd.IndexFill.value", "link" : "lamp\/autograd\/IndexFill.html#value:lamp.autograd.Variable", "kind" : "val"}, {"label" : "params", "tail" : ": List[(Variable, (STen, STen) ⇒ Unit)]", "member" : "lamp.autograd.IndexFill.params", "link" : "lamp\/autograd\/IndexFill.html#params:List[(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)]", "kind" : "val"}, {"member" : "lamp.autograd.IndexFill#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/IndexFill.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/IndexFill.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/IndexFill.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/IndexFill.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/IndexFill.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/IndexFill.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/IndexFill.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/IndexFill.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/IndexFill.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/IndexFill.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/IndexFill.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/IndexFill.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/autograd\/IndexFill.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/IndexFill.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/autograd\/IndexFill.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/autograd\/IndexFill.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/IndexFill.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/IndexFill.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/IndexFill.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "lamp\/autograd\/IndexFill.html", "kind" : "class"}, {"name" : "lamp.autograd.IndexSelect", "shortDescription" : "", "members_class" : [{"label" : "value", "tail" : ": Variable", "member" : "lamp.autograd.IndexSelect.value", "link" : "lamp\/autograd\/IndexSelect.html#value:lamp.autograd.Variable", "kind" : "val"}, {"label" : "params", "tail" : ": List[(Variable, (STen, STen) ⇒ Unit)]", "member" : "lamp.autograd.IndexSelect.params", "link" : "lamp\/autograd\/IndexSelect.html#params:List[(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)]", "kind" : "val"}, {"member" : "lamp.autograd.IndexSelect#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/IndexSelect.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/IndexSelect.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/IndexSelect.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/IndexSelect.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/IndexSelect.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/IndexSelect.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/IndexSelect.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/IndexSelect.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/IndexSelect.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/IndexSelect.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/IndexSelect.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/IndexSelect.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/autograd\/IndexSelect.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/IndexSelect.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/autograd\/IndexSelect.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/autograd\/IndexSelect.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/IndexSelect.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/IndexSelect.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/IndexSelect.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "lamp\/autograd\/IndexSelect.html", "kind" : "class"}, {"name" : "lamp.autograd.L1Loss", "shortDescription" : "", "members_class" : [{"label" : "value", "tail" : ": Variable", "member" : "lamp.autograd.L1Loss.value", "link" : "lamp\/autograd\/L1Loss.html#value:lamp.autograd.Variable", "kind" : "val"}, {"label" : "targetViewed", "tail" : ": STen", "member" : "lamp.autograd.L1Loss.targetViewed", "link" : "lamp\/autograd\/L1Loss.html#targetViewed:lamp.STen", "kind" : "val"}, {"label" : "params", "tail" : ": List[(Variable, (STen, STen) ⇒ Unit)]", "member" : "lamp.autograd.L1Loss.params", "link" : "lamp\/autograd\/L1Loss.html#params:List[(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)]", "kind" : "val"}, {"member" : "lamp.autograd.L1Loss#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/L1Loss.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/L1Loss.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/L1Loss.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/L1Loss.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/L1Loss.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/L1Loss.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/L1Loss.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/L1Loss.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/L1Loss.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/L1Loss.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/L1Loss.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/L1Loss.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/autograd\/L1Loss.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/L1Loss.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/autograd\/L1Loss.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/autograd\/L1Loss.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/L1Loss.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/L1Loss.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/L1Loss.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "lamp\/autograd\/L1Loss.html", "kind" : "class"}, {"name" : "lamp.autograd.Log", "shortDescription" : "", "members_class" : [{"label" : "value", "tail" : ": Variable", "member" : "lamp.autograd.Log.value", "link" : "lamp\/autograd\/Log.html#value:lamp.autograd.Variable", "kind" : "val"}, {"label" : "params", "tail" : ": List[(Variable, (STen, STen) ⇒ Unit)]", "member" : "lamp.autograd.Log.params", "link" : "lamp\/autograd\/Log.html#params:List[(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)]", "kind" : "val"}, {"member" : "lamp.autograd.Log#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/Log.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/Log.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/Log.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/Log.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/Log.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/Log.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/Log.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Log.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Log.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Log.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/Log.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/Log.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/autograd\/Log.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/Log.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/autograd\/Log.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/autograd\/Log.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/Log.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/Log.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/Log.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "lamp\/autograd\/Log.html", "kind" : "class"}, {"name" : "lamp.autograd.Log1p", "shortDescription" : "", "members_class" : [{"label" : "value", "tail" : ": Variable", "member" : "lamp.autograd.Log1p.value", "link" : "lamp\/autograd\/Log1p.html#value:lamp.autograd.Variable", "kind" : "val"}, {"label" : "params", "tail" : ": List[(Variable, (STen, STen) ⇒ Unit)]", "member" : "lamp.autograd.Log1p.params", "link" : "lamp\/autograd\/Log1p.html#params:List[(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)]", "kind" : "val"}, {"member" : "lamp.autograd.Log1p#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/Log1p.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/Log1p.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/Log1p.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/Log1p.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/Log1p.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/Log1p.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/Log1p.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Log1p.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Log1p.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Log1p.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/Log1p.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/Log1p.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/autograd\/Log1p.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/Log1p.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/autograd\/Log1p.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/autograd\/Log1p.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/Log1p.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/Log1p.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/Log1p.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "lamp\/autograd\/Log1p.html", "kind" : "class"}, {"name" : "lamp.autograd.LogSoftMax", "shortDescription" : "", "members_class" : [{"label" : "value", "tail" : ": Variable", "member" : "lamp.autograd.LogSoftMax.value", "link" : "lamp\/autograd\/LogSoftMax.html#value:lamp.autograd.Variable", "kind" : "val"}, {"label" : "params", "tail" : ": List[(Variable, (STen, STen) ⇒ Unit)]", "member" : "lamp.autograd.LogSoftMax.params", "link" : "lamp\/autograd\/LogSoftMax.html#params:List[(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)]", "kind" : "val"}, {"member" : "lamp.autograd.LogSoftMax#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/LogSoftMax.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/LogSoftMax.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/LogSoftMax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/LogSoftMax.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/LogSoftMax.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/LogSoftMax.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/LogSoftMax.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/LogSoftMax.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/LogSoftMax.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/LogSoftMax.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/LogSoftMax.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/LogSoftMax.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/autograd\/LogSoftMax.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/LogSoftMax.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/autograd\/LogSoftMax.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/autograd\/LogSoftMax.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/LogSoftMax.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/LogSoftMax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/LogSoftMax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "lamp\/autograd\/LogSoftMax.html", "kind" : "class"}, {"name" : "lamp.autograd.MaskFill", "shortDescription" : "", "members_class" : [{"label" : "value", "tail" : ": Variable", "member" : "lamp.autograd.MaskFill.value", "link" : "lamp\/autograd\/MaskFill.html#value:lamp.autograd.Variable", "kind" : "val"}, {"label" : "params", "tail" : ": List[(Variable, (STen, STen) ⇒ Unit)]", "member" : "lamp.autograd.MaskFill.params", "link" : "lamp\/autograd\/MaskFill.html#params:List[(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)]", "kind" : "val"}, {"member" : "lamp.autograd.MaskFill#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/MaskFill.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/MaskFill.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/MaskFill.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/MaskFill.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/MaskFill.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/MaskFill.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/MaskFill.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/MaskFill.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/MaskFill.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/MaskFill.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/MaskFill.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/MaskFill.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/autograd\/MaskFill.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/MaskFill.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/autograd\/MaskFill.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/autograd\/MaskFill.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/MaskFill.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/MaskFill.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/MaskFill.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "lamp\/autograd\/MaskFill.html", "kind" : "class"}, {"name" : "lamp.autograd.MatMul", "shortDescription" : "", "members_class" : [{"label" : "value", "tail" : ": Variable", "member" : "lamp.autograd.MatMul.value", "link" : "lamp\/autograd\/MatMul.html#value:lamp.autograd.Variable", "kind" : "val"}, {"label" : "params", "tail" : ": List[(Variable, (STen, STen) ⇒ Unit)]", "member" : "lamp.autograd.MatMul.params", "link" : "lamp\/autograd\/MatMul.html#params:List[(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)]", "kind" : "val"}, {"member" : "lamp.autograd.MatMul#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/MatMul.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/MatMul.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/MatMul.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/MatMul.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/MatMul.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/MatMul.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/MatMul.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/MatMul.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/MatMul.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/MatMul.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/MatMul.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/MatMul.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/autograd\/MatMul.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/MatMul.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/autograd\/MatMul.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/autograd\/MatMul.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/MatMul.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/MatMul.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/MatMul.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "lamp\/autograd\/MatMul.html", "kind" : "class"}, {"name" : "lamp.autograd.MaxPool1D", "shortDescription" : "1D max pooling", "members_class" : [{"label" : "value", "tail" : ": Variable", "member" : "lamp.autograd.MaxPool1D.value", "link" : "lamp\/autograd\/MaxPool1D.html#value:lamp.autograd.Variable", "kind" : "val"}, {"label" : "mask", "tail" : ": Tensor", "member" : "lamp.autograd.MaxPool1D.mask", "link" : "lamp\/autograd\/MaxPool1D.html#mask:aten.Tensor", "kind" : "val"}, {"label" : "output", "tail" : ": Tensor", "member" : "lamp.autograd.MaxPool1D.output", "link" : "lamp\/autograd\/MaxPool1D.html#output:aten.Tensor", "kind" : "val"}, {"label" : "params", "tail" : ": List[(Variable, (STen, STen) ⇒ Unit)]", "member" : "lamp.autograd.MaxPool1D.params", "link" : "lamp\/autograd\/MaxPool1D.html#params:List[(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)]", "kind" : "val"}, {"label" : "imageSize", "tail" : ": Long", "member" : "lamp.autograd.MaxPool1D.imageSize", "link" : "lamp\/autograd\/MaxPool1D.html#imageSize:Long", "kind" : "val"}, {"label" : "inputChannels", "tail" : ": Long", "member" : "lamp.autograd.MaxPool1D.inputChannels", "link" : "lamp\/autograd\/MaxPool1D.html#inputChannels:Long", "kind" : "val"}, {"label" : "batchSize", "tail" : ": Long", "member" : "lamp.autograd.MaxPool1D.batchSize", "link" : "lamp\/autograd\/MaxPool1D.html#batchSize:Long", "kind" : "val"}, {"member" : "lamp.autograd.MaxPool1D#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/MaxPool1D.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/MaxPool1D.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/MaxPool1D.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/MaxPool1D.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/MaxPool1D.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/MaxPool1D.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/MaxPool1D.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/MaxPool1D.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/MaxPool1D.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/MaxPool1D.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/MaxPool1D.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/MaxPool1D.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/autograd\/MaxPool1D.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/MaxPool1D.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/autograd\/MaxPool1D.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/autograd\/MaxPool1D.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/MaxPool1D.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/MaxPool1D.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/MaxPool1D.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "lamp\/autograd\/MaxPool1D.html", "kind" : "class"}, {"name" : "lamp.autograd.MaxPool2D", "shortDescription" : "2D max pooling", "members_class" : [{"label" : "value", "tail" : ": Variable", "member" : "lamp.autograd.MaxPool2D.value", "link" : "lamp\/autograd\/MaxPool2D.html#value:lamp.autograd.Variable", "kind" : "val"}, {"label" : "mask", "tail" : ": Tensor", "member" : "lamp.autograd.MaxPool2D.mask", "link" : "lamp\/autograd\/MaxPool2D.html#mask:aten.Tensor", "kind" : "val"}, {"label" : "output", "tail" : ": Tensor", "member" : "lamp.autograd.MaxPool2D.output", "link" : "lamp\/autograd\/MaxPool2D.html#output:aten.Tensor", "kind" : "val"}, {"label" : "params", "tail" : ": List[(Variable, (STen, STen) ⇒ Unit)]", "member" : "lamp.autograd.MaxPool2D.params", "link" : "lamp\/autograd\/MaxPool2D.html#params:List[(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)]", "kind" : "val"}, {"label" : "imageSize", "tail" : ": Long", "member" : "lamp.autograd.MaxPool2D.imageSize", "link" : "lamp\/autograd\/MaxPool2D.html#imageSize:Long", "kind" : "val"}, {"label" : "inputChannels", "tail" : ": Long", "member" : "lamp.autograd.MaxPool2D.inputChannels", "link" : "lamp\/autograd\/MaxPool2D.html#inputChannels:Long", "kind" : "val"}, {"label" : "batchSize", "tail" : ": Long", "member" : "lamp.autograd.MaxPool2D.batchSize", "link" : "lamp\/autograd\/MaxPool2D.html#batchSize:Long", "kind" : "val"}, {"member" : "lamp.autograd.MaxPool2D#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/MaxPool2D.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/MaxPool2D.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/MaxPool2D.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/MaxPool2D.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/MaxPool2D.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/MaxPool2D.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/MaxPool2D.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/MaxPool2D.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/MaxPool2D.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/MaxPool2D.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/MaxPool2D.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/MaxPool2D.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/autograd\/MaxPool2D.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/MaxPool2D.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/autograd\/MaxPool2D.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/autograd\/MaxPool2D.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/MaxPool2D.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/MaxPool2D.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/MaxPool2D.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "lamp\/autograd\/MaxPool2D.html", "kind" : "class"}, {"name" : "lamp.autograd.Mean", "shortDescription" : "", "object" : "lamp\/autograd\/Mean$.html", "members_class" : [{"label" : "value", "tail" : ": Variable", "member" : "lamp.autograd.Mean.value", "link" : "lamp\/autograd\/Mean.html#value:lamp.autograd.Variable", "kind" : "val"}, {"label" : "params", "tail" : ": List[(Variable, (STen, STen) ⇒ Unit)]", "member" : "lamp.autograd.Mean.params", "link" : "lamp\/autograd\/Mean.html#params:List[(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)]", "kind" : "val"}, {"member" : "lamp.autograd.Mean#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/Mean.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/Mean.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/Mean.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/Mean.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/Mean.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/Mean.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/Mean.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Mean.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Mean.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Mean.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/Mean.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/Mean.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/autograd\/Mean.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/Mean.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/autograd\/Mean.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/autograd\/Mean.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/Mean.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/Mean.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/Mean.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "asLong", "tail" : "(): Long", "member" : "lamp.autograd.Mean.asLong", "link" : "lamp\/autograd\/Mean$.html#asLong:Long", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/Mean$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/Mean$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/Mean$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/Mean$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/Mean$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/Mean$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/Mean$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Mean$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Mean$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Mean$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/Mean$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/Mean$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/Mean$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/autograd\/Mean$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/Mean$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/Mean$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/Mean$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "lamp\/autograd\/Mean.html", "kind" : "class"}, {"name" : "lamp.autograd.Minus", "shortDescription" : "", "members_class" : [{"label" : "value", "tail" : ": Variable", "member" : "lamp.autograd.Minus.value", "link" : "lamp\/autograd\/Minus.html#value:lamp.autograd.Variable", "kind" : "val"}, {"label" : "params", "tail" : ": List[(Variable, (STen, STen) ⇒ Unit)]", "member" : "lamp.autograd.Minus.params", "link" : "lamp\/autograd\/Minus.html#params:List[(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)]", "kind" : "val"}, {"member" : "lamp.autograd.Minus#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/Minus.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/Minus.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/Minus.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/Minus.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/Minus.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/Minus.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/Minus.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Minus.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Minus.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Minus.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/Minus.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/Minus.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/autograd\/Minus.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/Minus.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/autograd\/Minus.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/autograd\/Minus.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/Minus.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/Minus.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/Minus.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "lamp\/autograd\/Minus.html", "kind" : "class"}, {"name" : "lamp.autograd.MseLoss", "shortDescription" : "", "members_class" : [{"label" : "value", "tail" : ": Variable", "member" : "lamp.autograd.MseLoss.value", "link" : "lamp\/autograd\/MseLoss.html#value:lamp.autograd.Variable", "kind" : "val"}, {"label" : "targetViewed", "tail" : ": STen", "member" : "lamp.autograd.MseLoss.targetViewed", "link" : "lamp\/autograd\/MseLoss.html#targetViewed:lamp.STen", "kind" : "val"}, {"label" : "params", "tail" : ": List[(Variable, (STen, STen) ⇒ Unit)]", "member" : "lamp.autograd.MseLoss.params", "link" : "lamp\/autograd\/MseLoss.html#params:List[(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)]", "kind" : "val"}, {"member" : "lamp.autograd.MseLoss#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/MseLoss.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/MseLoss.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/MseLoss.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/MseLoss.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/MseLoss.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/MseLoss.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/MseLoss.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/MseLoss.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/MseLoss.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/MseLoss.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/MseLoss.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/MseLoss.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/autograd\/MseLoss.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/MseLoss.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/autograd\/MseLoss.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/autograd\/MseLoss.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/MseLoss.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/MseLoss.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/MseLoss.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "lamp\/autograd\/MseLoss.html", "kind" : "class"}, {"name" : "lamp.autograd.Mult", "shortDescription" : "", "members_class" : [{"label" : "value", "tail" : ": Variable", "member" : "lamp.autograd.Mult.value", "link" : "lamp\/autograd\/Mult.html#value:lamp.autograd.Variable", "kind" : "val"}, {"label" : "params", "tail" : ": List[(Variable, (STen, STen) ⇒ Unit)]", "member" : "lamp.autograd.Mult.params", "link" : "lamp\/autograd\/Mult.html#params:List[(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)]", "kind" : "val"}, {"member" : "lamp.autograd.Mult#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/Mult.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/Mult.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/Mult.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/Mult.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/Mult.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/Mult.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/Mult.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Mult.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Mult.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Mult.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/Mult.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/Mult.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/autograd\/Mult.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/Mult.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/autograd\/Mult.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/autograd\/Mult.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/Mult.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/Mult.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/Mult.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "lamp\/autograd\/Mult.html", "kind" : "class"}, {"name" : "lamp.autograd.NllLoss", "shortDescription" : "", "members_class" : [{"label" : "value", "tail" : ": Variable", "member" : "lamp.autograd.NllLoss.value", "link" : "lamp\/autograd\/NllLoss.html#value:lamp.autograd.Variable", "kind" : "val"}, {"label" : "total_weight", "tail" : ": Tensor", "member" : "lamp.autograd.NllLoss.total_weight", "link" : "lamp\/autograd\/NllLoss.html#total_weight:aten.Tensor", "kind" : "val"}, {"label" : "value1", "tail" : ": Tensor", "member" : "lamp.autograd.NllLoss.value1", "link" : "lamp\/autograd\/NllLoss.html#value1:aten.Tensor", "kind" : "val"}, {"label" : "params", "tail" : ": List[(Variable, (STen, STen) ⇒ Unit)]", "member" : "lamp.autograd.NllLoss.params", "link" : "lamp\/autograd\/NllLoss.html#params:List[(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)]", "kind" : "val"}, {"member" : "lamp.autograd.NllLoss#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/NllLoss.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/NllLoss.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/NllLoss.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/NllLoss.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/NllLoss.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/NllLoss.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/NllLoss.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/NllLoss.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/NllLoss.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/NllLoss.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/NllLoss.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/NllLoss.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/autograd\/NllLoss.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/NllLoss.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/autograd\/NllLoss.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/autograd\/NllLoss.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/NllLoss.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/NllLoss.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/NllLoss.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "lamp\/autograd\/NllLoss.html", "kind" : "class"}, {"name" : "lamp.autograd.NoReduction", "shortDescription" : "", "object" : "lamp\/autograd\/NoReduction$.html", "members_object" : [{"label" : "asLong", "tail" : "(): Long", "member" : "lamp.autograd.NoReduction.asLong", "link" : "lamp\/autograd\/NoReduction$.html#asLong:Long", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/NoReduction$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/NoReduction$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/NoReduction$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/NoReduction$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/NoReduction$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/NoReduction$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/NoReduction$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/NoReduction$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/NoReduction$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/NoReduction$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/NoReduction$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/NoReduction$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/NoReduction$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/autograd\/NoReduction$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/NoReduction$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/NoReduction$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/NoReduction$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "lamp.autograd.OneHot", "shortDescription" : "", "members_class" : [{"label" : "value", "tail" : ": Variable", "member" : "lamp.autograd.OneHot.value", "link" : "lamp\/autograd\/OneHot.html#value:lamp.autograd.Variable", "kind" : "val"}, {"label" : "params", "tail" : ": List[(Variable, (STen, STen) ⇒ Unit)]", "member" : "lamp.autograd.OneHot.params", "link" : "lamp\/autograd\/OneHot.html#params:List[(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)]", "kind" : "val"}, {"member" : "lamp.autograd.OneHot#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/OneHot.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/OneHot.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/OneHot.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/OneHot.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/OneHot.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/OneHot.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/OneHot.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/OneHot.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/OneHot.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/OneHot.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/OneHot.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/OneHot.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/autograd\/OneHot.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/OneHot.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/autograd\/OneHot.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/autograd\/OneHot.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/OneHot.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/OneHot.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/OneHot.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "lamp\/autograd\/OneHot.html", "kind" : "class"}, {"name" : "lamp.autograd.Op", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/Op.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/Op.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/Op.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/Op.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/Op.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/Op.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/Op.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Op.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Op.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Op.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/Op.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/Op.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/autograd\/Op.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/Op.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/autograd\/Op.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/autograd\/Op.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/Op.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/Op.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/Op.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "params", "tail" : ": List[(Variable, (STen, STen) ⇒ Unit)]", "member" : "lamp.autograd.Op.params", "link" : "lamp\/autograd\/Op.html#params:List[(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)]", "kind" : "abstract val"}, {"label" : "value", "tail" : ": Variable", "member" : "lamp.autograd.Op.value", "link" : "lamp\/autograd\/Op.html#value:lamp.autograd.Variable", "kind" : "abstract val"}], "shortDescription" : "Params: the input and the function which calculates the partial derivativeof the function value wrt to this input", "trait" : "lamp\/autograd\/Op.html", "kind" : "trait"}, {"name" : "lamp.autograd.Pow", "shortDescription" : "", "members_class" : [{"label" : "value", "tail" : ": Variable", "member" : "lamp.autograd.Pow.value", "link" : "lamp\/autograd\/Pow.html#value:lamp.autograd.Variable", "kind" : "val"}, {"label" : "params", "tail" : ": List[(Variable, (STen, STen) ⇒ Unit)]", "member" : "lamp.autograd.Pow.params", "link" : "lamp\/autograd\/Pow.html#params:List[(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)]", "kind" : "val"}, {"member" : "lamp.autograd.Pow#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/Pow.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/Pow.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/Pow.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/Pow.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/Pow.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/Pow.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/Pow.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Pow.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Pow.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Pow.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/Pow.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/Pow.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/autograd\/Pow.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/Pow.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/autograd\/Pow.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/autograd\/Pow.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/Pow.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/Pow.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/Pow.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "lamp\/autograd\/Pow.html", "kind" : "class"}, {"name" : "lamp.autograd.PowConst", "shortDescription" : "", "members_class" : [{"label" : "value", "tail" : ": Variable", "member" : "lamp.autograd.PowConst.value", "link" : "lamp\/autograd\/PowConst.html#value:lamp.autograd.Variable", "kind" : "val"}, {"label" : "params", "tail" : ": List[(Variable, (STen, STen) ⇒ Unit)]", "member" : "lamp.autograd.PowConst.params", "link" : "lamp\/autograd\/PowConst.html#params:List[(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)]", "kind" : "val"}, {"member" : "lamp.autograd.PowConst#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/PowConst.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/PowConst.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/PowConst.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/PowConst.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/PowConst.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/PowConst.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/PowConst.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/PowConst.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/PowConst.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/PowConst.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/PowConst.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/PowConst.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/autograd\/PowConst.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/PowConst.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/autograd\/PowConst.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/autograd\/PowConst.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/PowConst.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/PowConst.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/PowConst.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "lamp\/autograd\/PowConst.html", "kind" : "class"}, {"name" : "lamp.autograd.Reduction", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/Reduction.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/Reduction.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/Reduction.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/Reduction.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/Reduction.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/Reduction.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/Reduction.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Reduction.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Reduction.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Reduction.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/Reduction.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/Reduction.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/autograd\/Reduction.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/Reduction.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/autograd\/Reduction.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/autograd\/Reduction.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/Reduction.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/Reduction.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/Reduction.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "asLong", "tail" : "(): Long", "member" : "lamp.autograd.Reduction.asLong", "link" : "lamp\/autograd\/Reduction.html#asLong:Long", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "lamp\/autograd\/Reduction.html", "kind" : "trait"}, {"name" : "lamp.autograd.Relu", "shortDescription" : "", "members_class" : [{"label" : "value", "tail" : ": Variable", "member" : "lamp.autograd.Relu.value", "link" : "lamp\/autograd\/Relu.html#value:lamp.autograd.Variable", "kind" : "val"}, {"label" : "params", "tail" : ": List[(Variable, (STen, STen) ⇒ Unit)]", "member" : "lamp.autograd.Relu.params", "link" : "lamp\/autograd\/Relu.html#params:List[(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)]", "kind" : "val"}, {"member" : "lamp.autograd.Relu#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/Relu.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/Relu.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/Relu.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/Relu.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/Relu.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/Relu.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/Relu.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Relu.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Relu.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Relu.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/Relu.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/Relu.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/autograd\/Relu.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/Relu.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/autograd\/Relu.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/autograd\/Relu.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/Relu.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/Relu.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/Relu.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "lamp\/autograd\/Relu.html", "kind" : "class"}, {"name" : "lamp.autograd.RowSum", "shortDescription" : "", "members_class" : [{"label" : "value", "tail" : ": Variable", "member" : "lamp.autograd.RowSum.value", "link" : "lamp\/autograd\/RowSum.html#value:lamp.autograd.Variable", "kind" : "val"}, {"label" : "params", "tail" : ": List[(Variable, (STen, STen) ⇒ Unit)]", "member" : "lamp.autograd.RowSum.params", "link" : "lamp\/autograd\/RowSum.html#params:List[(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)]", "kind" : "val"}, {"member" : "lamp.autograd.RowSum#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/RowSum.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/RowSum.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/RowSum.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/RowSum.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/RowSum.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/RowSum.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/RowSum.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/RowSum.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/RowSum.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/RowSum.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/RowSum.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/RowSum.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/autograd\/RowSum.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/RowSum.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/autograd\/RowSum.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/autograd\/RowSum.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/RowSum.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/RowSum.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/RowSum.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "lamp\/autograd\/RowSum.html", "kind" : "class"}, {"name" : "lamp.autograd.ScatterAdd", "shortDescription" : "", "members_class" : [{"label" : "value", "tail" : ": Variable", "member" : "lamp.autograd.ScatterAdd.value", "link" : "lamp\/autograd\/ScatterAdd.html#value:lamp.autograd.Variable", "kind" : "val"}, {"label" : "params", "tail" : ": List[(Variable, (STen, STen) ⇒ Unit)]", "member" : "lamp.autograd.ScatterAdd.params", "link" : "lamp\/autograd\/ScatterAdd.html#params:List[(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)]", "kind" : "val"}, {"member" : "lamp.autograd.ScatterAdd#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/ScatterAdd.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/ScatterAdd.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/ScatterAdd.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/ScatterAdd.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/ScatterAdd.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/ScatterAdd.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/ScatterAdd.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/ScatterAdd.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/ScatterAdd.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/ScatterAdd.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/ScatterAdd.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/ScatterAdd.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/autograd\/ScatterAdd.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/ScatterAdd.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/autograd\/ScatterAdd.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/autograd\/ScatterAdd.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/ScatterAdd.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/ScatterAdd.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/ScatterAdd.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "lamp\/autograd\/ScatterAdd.html", "kind" : "class"}, {"name" : "lamp.autograd.Select", "shortDescription" : "", "members_class" : [{"label" : "value", "tail" : ": Variable", "member" : "lamp.autograd.Select.value", "link" : "lamp\/autograd\/Select.html#value:lamp.autograd.Variable", "kind" : "val"}, {"label" : "params", "tail" : ": List[(Variable, (STen, STen) ⇒ Unit)]", "member" : "lamp.autograd.Select.params", "link" : "lamp\/autograd\/Select.html#params:List[(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)]", "kind" : "val"}, {"member" : "lamp.autograd.Select#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/Select.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/Select.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/Select.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/Select.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/Select.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/Select.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/Select.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Select.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Select.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Select.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/Select.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/Select.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/autograd\/Select.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/Select.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/autograd\/Select.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/autograd\/Select.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/Select.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/Select.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/Select.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "lamp\/autograd\/Select.html", "kind" : "class"}, {"name" : "lamp.autograd.Sigmoid", "shortDescription" : "", "members_class" : [{"label" : "value", "tail" : ": Variable", "member" : "lamp.autograd.Sigmoid.value", "link" : "lamp\/autograd\/Sigmoid.html#value:lamp.autograd.Variable", "kind" : "val"}, {"label" : "params", "tail" : ": List[(Variable, (STen, STen) ⇒ Unit)]", "member" : "lamp.autograd.Sigmoid.params", "link" : "lamp\/autograd\/Sigmoid.html#params:List[(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)]", "kind" : "val"}, {"member" : "lamp.autograd.Sigmoid#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/Sigmoid.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/Sigmoid.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/Sigmoid.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/Sigmoid.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/Sigmoid.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/Sigmoid.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/Sigmoid.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Sigmoid.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Sigmoid.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Sigmoid.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/Sigmoid.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/Sigmoid.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/autograd\/Sigmoid.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/Sigmoid.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/autograd\/Sigmoid.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/autograd\/Sigmoid.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/Sigmoid.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/Sigmoid.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/Sigmoid.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "lamp\/autograd\/Sigmoid.html", "kind" : "class"}, {"name" : "lamp.autograd.Sin", "shortDescription" : "", "members_class" : [{"label" : "value", "tail" : ": Variable", "member" : "lamp.autograd.Sin.value", "link" : "lamp\/autograd\/Sin.html#value:lamp.autograd.Variable", "kind" : "val"}, {"label" : "params", "tail" : ": List[(Variable, (STen, STen) ⇒ Unit)]", "member" : "lamp.autograd.Sin.params", "link" : "lamp\/autograd\/Sin.html#params:List[(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)]", "kind" : "val"}, {"member" : "lamp.autograd.Sin#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/Sin.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/Sin.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/Sin.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/Sin.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/Sin.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/Sin.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/Sin.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Sin.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Sin.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Sin.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/Sin.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/Sin.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/autograd\/Sin.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/Sin.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/autograd\/Sin.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/autograd\/Sin.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/Sin.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/Sin.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/Sin.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "lamp\/autograd\/Sin.html", "kind" : "class"}, {"name" : "lamp.autograd.SquaredFrobeniusMatrixNorm", "shortDescription" : "", "members_class" : [{"label" : "value", "tail" : ": Variable", "member" : "lamp.autograd.SquaredFrobeniusMatrixNorm.value", "link" : "lamp\/autograd\/SquaredFrobeniusMatrixNorm.html#value:lamp.autograd.Variable", "kind" : "val"}, {"label" : "params", "tail" : ": List[(Variable, (STen, STen) ⇒ Unit)]", "member" : "lamp.autograd.SquaredFrobeniusMatrixNorm.params", "link" : "lamp\/autograd\/SquaredFrobeniusMatrixNorm.html#params:List[(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)]", "kind" : "val"}, {"member" : "lamp.autograd.SquaredFrobeniusMatrixNorm#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/SquaredFrobeniusMatrixNorm.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/SquaredFrobeniusMatrixNorm.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/SquaredFrobeniusMatrixNorm.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/SquaredFrobeniusMatrixNorm.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/SquaredFrobeniusMatrixNorm.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/SquaredFrobeniusMatrixNorm.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/SquaredFrobeniusMatrixNorm.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/SquaredFrobeniusMatrixNorm.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/SquaredFrobeniusMatrixNorm.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/SquaredFrobeniusMatrixNorm.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/SquaredFrobeniusMatrixNorm.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/SquaredFrobeniusMatrixNorm.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/autograd\/SquaredFrobeniusMatrixNorm.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/SquaredFrobeniusMatrixNorm.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/autograd\/SquaredFrobeniusMatrixNorm.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/autograd\/SquaredFrobeniusMatrixNorm.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/SquaredFrobeniusMatrixNorm.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/SquaredFrobeniusMatrixNorm.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/SquaredFrobeniusMatrixNorm.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "lamp\/autograd\/SquaredFrobeniusMatrixNorm.html", "kind" : "class"}, {"name" : "lamp.autograd.Sum", "shortDescription" : "", "object" : "lamp\/autograd\/Sum$.html", "members_class" : [{"label" : "value", "tail" : ": Variable", "member" : "lamp.autograd.Sum.value", "link" : "lamp\/autograd\/Sum.html#value:lamp.autograd.Variable", "kind" : "val"}, {"label" : "params", "tail" : ": List[(Variable, (STen, STen) ⇒ Unit)]", "member" : "lamp.autograd.Sum.params", "link" : "lamp\/autograd\/Sum.html#params:List[(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)]", "kind" : "val"}, {"member" : "lamp.autograd.Sum#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/Sum.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/Sum.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/Sum.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/Sum.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/Sum.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/Sum.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/Sum.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Sum.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Sum.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Sum.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/Sum.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/Sum.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/autograd\/Sum.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/Sum.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/autograd\/Sum.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/autograd\/Sum.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/Sum.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/Sum.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/Sum.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "asLong", "tail" : "(): Long", "member" : "lamp.autograd.Sum.asLong", "link" : "lamp\/autograd\/Sum$.html#asLong:Long", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/Sum$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/Sum$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/Sum$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/Sum$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/Sum$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/Sum$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/Sum$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Sum$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Sum$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Sum$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/Sum$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/Sum$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/Sum$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/autograd\/Sum$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/Sum$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/Sum$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/Sum$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "lamp\/autograd\/Sum.html", "kind" : "class"}, {"name" : "lamp.autograd.Tan", "shortDescription" : "", "members_class" : [{"label" : "value", "tail" : ": Variable", "member" : "lamp.autograd.Tan.value", "link" : "lamp\/autograd\/Tan.html#value:lamp.autograd.Variable", "kind" : "val"}, {"label" : "params", "tail" : ": List[(Variable, (STen, STen) ⇒ Unit)]", "member" : "lamp.autograd.Tan.params", "link" : "lamp\/autograd\/Tan.html#params:List[(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)]", "kind" : "val"}, {"member" : "lamp.autograd.Tan#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/Tan.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/Tan.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/Tan.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/Tan.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/Tan.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/Tan.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/Tan.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Tan.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Tan.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Tan.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/Tan.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/Tan.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/autograd\/Tan.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/Tan.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/autograd\/Tan.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/autograd\/Tan.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/Tan.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/Tan.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/Tan.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "lamp\/autograd\/Tan.html", "kind" : "class"}, {"name" : "lamp.autograd.Tanh", "shortDescription" : "", "members_class" : [{"label" : "value", "tail" : ": Variable", "member" : "lamp.autograd.Tanh.value", "link" : "lamp\/autograd\/Tanh.html#value:lamp.autograd.Variable", "kind" : "val"}, {"label" : "params", "tail" : ": List[(Variable, (STen, STen) ⇒ Unit)]", "member" : "lamp.autograd.Tanh.params", "link" : "lamp\/autograd\/Tanh.html#params:List[(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)]", "kind" : "val"}, {"member" : "lamp.autograd.Tanh#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/Tanh.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/Tanh.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/Tanh.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/Tanh.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/Tanh.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/Tanh.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/Tanh.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Tanh.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Tanh.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Tanh.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/Tanh.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/Tanh.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/autograd\/Tanh.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/Tanh.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/autograd\/Tanh.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/autograd\/Tanh.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/Tanh.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/Tanh.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/Tanh.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "lamp\/autograd\/Tanh.html", "kind" : "class"}, {"name" : "lamp.autograd.Transpose", "shortDescription" : "", "members_class" : [{"label" : "value", "tail" : ": Variable", "member" : "lamp.autograd.Transpose.value", "link" : "lamp\/autograd\/Transpose.html#value:lamp.autograd.Variable", "kind" : "val"}, {"label" : "params", "tail" : ": List[(Variable, (STen, STen) ⇒ Unit)]", "member" : "lamp.autograd.Transpose.params", "link" : "lamp\/autograd\/Transpose.html#params:List[(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)]", "kind" : "val"}, {"member" : "lamp.autograd.Transpose#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/Transpose.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/Transpose.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/Transpose.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/Transpose.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/Transpose.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/Transpose.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/Transpose.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Transpose.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Transpose.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Transpose.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/Transpose.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/Transpose.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/autograd\/Transpose.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/Transpose.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/autograd\/Transpose.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/autograd\/Transpose.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/Transpose.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/Transpose.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/Transpose.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "lamp\/autograd\/Transpose.html", "kind" : "class"}, {"name" : "lamp.autograd.Variable", "members_trait" : [{"label" : "toLongMat", "tail" : "(): Mat[Long]", "member" : "lamp.autograd.Variable.toLongMat", "link" : "lamp\/autograd\/Variable.html#toLongMat:org.saddle.Mat[Long]", "kind" : "def"}, {"label" : "toMat", "tail" : "(): Mat[Double]", "member" : "lamp.autograd.Variable.toMat", "link" : "lamp\/autograd\/Variable.html#toMat:org.saddle.Mat[Double]", "kind" : "def"}, {"label" : "flattenLastDimensions", "tail" : "(dims: Int)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.flattenLastDimensions", "link" : "lamp\/autograd\/Variable.html#flattenLastDimensions[S](dims:Int)(implicitevidence$51:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "view", "tail" : "(shape: List[Int])(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.view", "link" : "lamp\/autograd\/Variable.html#view[S](shape:List[Int])(implicitevidence$50:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "normalize", "tail" : "(dim: List[Int])(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.normalize", "link" : "lamp\/autograd\/Variable.html#normalize[S](dim:List[Int])(implicitevidence$49:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "variance", "tail" : "(dim: List[Int])(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.variance", "link" : "lamp\/autograd\/Variable.html#variance[S](dim:List[Int])(implicitevidence$48:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "mean", "tail" : "(dim: List[Int])(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.mean", "link" : "lamp\/autograd\/Variable.html#mean[S](dim:List[Int])(implicitevidence$47:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "squaredFrobenius", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.squaredFrobenius", "link" : "lamp\/autograd\/Variable.html#squaredFrobenius[S](implicitevidence$46:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "l1Loss", "tail" : "(target: STen, reduction: Reduction)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.l1Loss", "link" : "lamp\/autograd\/Variable.html#l1Loss[S](target:lamp.STen,reduction:lamp.autograd.Reduction)(implicitevidence$45:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "mseLoss", "tail" : "(target: STen, reduction: Reduction)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.mseLoss", "link" : "lamp\/autograd\/Variable.html#mseLoss[S](target:lamp.STen,reduction:lamp.autograd.Reduction)(implicitevidence$44:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "nllLoss", "tail" : "(target: STen, weights: STen, reduction: Reduction, ignore: Long)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.nllLoss", "link" : "lamp\/autograd\/Variable.html#nllLoss[S](target:lamp.STen,weights:lamp.STen,reduction:lamp.autograd.Reduction,ignore:Long)(implicitevidence$43:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "crossEntropy", "tail" : "(other: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.crossEntropy", "link" : "lamp\/autograd\/Variable.html#crossEntropy[S](other:lamp.autograd.Variable)(implicitevidence$42:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "logSoftMax", "tail" : "(dim: Int)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.logSoftMax", "link" : "lamp\/autograd\/Variable.html#logSoftMax[S](dim:Int)(implicitevidence$41:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "euclideanDistance", "tail" : "(b: Variable, dim: Int)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.euclideanDistance", "link" : "lamp\/autograd\/Variable.html#euclideanDistance[S](b:lamp.autograd.Variable,dim:Int)(implicitevidence$40:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "pow", "tail" : "(exponent: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.pow", "link" : "lamp\/autograd\/Variable.html#pow[S](exponent:lamp.autograd.Variable)(implicitevidence$39:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "pow", "tail" : "(const: Double)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.pow", "link" : "lamp\/autograd\/Variable.html#pow[S](const:Double)(implicitevidence$38:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "atan", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.atan", "link" : "lamp\/autograd\/Variable.html#atan[S](implicitevidence$37:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "tanh", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.tanh", "link" : "lamp\/autograd\/Variable.html#tanh[S](implicitevidence$36:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "tan", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.tan", "link" : "lamp\/autograd\/Variable.html#tan[S](implicitevidence$35:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "cos", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.cos", "link" : "lamp\/autograd\/Variable.html#cos[S](implicitevidence$34:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "sin", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.sin", "link" : "lamp\/autograd\/Variable.html#sin[S](implicitevidence$33:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "log1p", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.log1p", "link" : "lamp\/autograd\/Variable.html#log1p[S](implicitevidence$32:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "log", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.log", "link" : "lamp\/autograd\/Variable.html#log[S](implicitevidence$31:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "exp", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.exp", "link" : "lamp\/autograd\/Variable.html#exp[S](implicitevidence$30:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "colSum", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.colSum", "link" : "lamp\/autograd\/Variable.html#colSum[S](implicitevidence$29:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "rowSum", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.rowSum", "link" : "lamp\/autograd\/Variable.html#rowSum[S](implicitevidence$28:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "expandAs", "tail" : "(other: STen)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.expandAs", "link" : "lamp\/autograd\/Variable.html#expandAs[S](other:lamp.STen)(implicitevidence$27:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "sum", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.sum", "link" : "lamp\/autograd\/Variable.html#sum[S](implicitevidence$26:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "indexAdd", "tail" : "(index: Variable, dim: Int, maxIndex: Long)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.indexAdd", "link" : "lamp\/autograd\/Variable.html#indexAdd[S](index:lamp.autograd.Variable,dim:Int,maxIndex:Long)(implicitevidence$25:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "scatterAdd", "tail" : "(index: Variable, dim: Int, maxIndex: Long)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.scatterAdd", "link" : "lamp\/autograd\/Variable.html#scatterAdd[S](index:lamp.autograd.Variable,dim:Int,maxIndex:Long)(implicitevidence$24:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "dropout", "tail" : "(prob: Double, train: Boolean)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.dropout", "link" : "lamp\/autograd\/Variable.html#dropout[S](prob:Double,train:Boolean)(implicitevidence$23:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "sigmoid", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.sigmoid", "link" : "lamp\/autograd\/Variable.html#sigmoid[S](implicitevidence$22:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "gelu", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.gelu", "link" : "lamp\/autograd\/Variable.html#gelu[S](implicitevidence$21:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "relu", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.relu", "link" : "lamp\/autograd\/Variable.html#relu[S](implicitevidence$20:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "bmm", "tail" : "(other: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.bmm", "link" : "lamp\/autograd\/Variable.html#bmm[S](other:lamp.autograd.Variable)(implicitevidence$19:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "mm", "tail" : "(other: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.mm", "link" : "lamp\/autograd\/Variable.html#mm[S](other:lamp.autograd.Variable)(implicitevidence$18:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "\/", "tail" : "(other: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.\/", "link" : "lamp\/autograd\/Variable.html#\/[S](other:lamp.autograd.Variable)(implicitevidence$17:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "*", "tail" : "(other: Double)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.*", "link" : "lamp\/autograd\/Variable.html#*[S](other:Double)(implicitevidence$16:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "*", "tail" : "(other: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.*", "link" : "lamp\/autograd\/Variable.html#*[S](other:lamp.autograd.Variable)(implicitevidence$15:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "-", "tail" : "(other: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.-", "link" : "lamp\/autograd\/Variable.html#-[S](other:lamp.autograd.Variable)(implicitevidence$14:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "+", "tail" : "(other: Double)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.+", "link" : "lamp\/autograd\/Variable.html#+[S](other:Double)(implicitevidence$13:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "+", "tail" : "(other: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.+", "link" : "lamp\/autograd\/Variable.html#+[S](other:lamp.autograd.Variable)(implicitevidence$12:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "cat", "tail" : "(other: Variable, dim: Long)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.cat", "link" : "lamp\/autograd\/Variable.html#cat[S](other:lamp.autograd.Variable,dim:Long)(implicitevidence$11:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "cast", "tail" : "(precision: FloatingPointPrecision)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.cast", "link" : "lamp\/autograd\/Variable.html#cast[S](precision:lamp.FloatingPointPrecision)(implicitevidence$10:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "makeBooleanMask", "tail" : "(q: Long)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.makeBooleanMask", "link" : "lamp\/autograd\/Variable.html#makeBooleanMask[S](q:Long)(implicitevidence$9:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "maskFill", "tail" : "(mask: Variable, fill: Double)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.maskFill", "link" : "lamp\/autograd\/Variable.html#maskFill[S](mask:lamp.autograd.Variable,fill:Double)(implicitevidence$8:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "assign", "tail" : "(other: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.assign", "link" : "lamp\/autograd\/Variable.html#assign[S](other:lamp.autograd.Variable)(implicitevidence$7:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "oneHot", "tail" : "(numClasses: Int)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.oneHot", "link" : "lamp\/autograd\/Variable.html#oneHot[S](numClasses:Int)(implicitevidence$6:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "argmax", "tail" : "(dim: Long, keepDim: Boolean)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.argmax", "link" : "lamp\/autograd\/Variable.html#argmax[S](dim:Long,keepDim:Boolean)(implicitevidence$5:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "indexSelect", "tail" : "(dim: Long, index: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.indexSelect", "link" : "lamp\/autograd\/Variable.html#indexSelect[S](dim:Long,index:lamp.autograd.Variable)(implicitevidence$4:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "select", "tail" : "(dim: Long, index: Long)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.select", "link" : "lamp\/autograd\/Variable.html#select[S](dim:Long,index:Long)(implicitevidence$3:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "t", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.t", "link" : "lamp\/autograd\/Variable.html#t[S](implicitevidence$2:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "transpose", "tail" : "(dim1: Int, dim2: Int)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.transpose", "link" : "lamp\/autograd\/Variable.html#transpose[S](dim1:Int,dim2:Int)(implicitevidence$1:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "accumulateGrad", "tail" : "(incoming: STen, computeGrad: (STen, STen) ⇒ Unit): Unit", "member" : "lamp.autograd.Variable.accumulateGrad", "link" : "lamp\/autograd\/Variable.html#accumulateGrad(incoming:lamp.STen,computeGrad:(lamp.STen,lamp.STen)=>Unit):Unit", "kind" : "def"}, {"label" : "zipBackward", "tail" : "(fn: (STen, STen) ⇒ Unit): (Variable, (STen, STen) ⇒ Unit)", "member" : "lamp.autograd.Variable.zipBackward", "link" : "lamp\/autograd\/Variable.html#zipBackward(fn:(lamp.STen,lamp.STen)=>Unit):(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)", "kind" : "def"}, {"label" : "backprop", "tail" : "(): Unit", "member" : "lamp.autograd.Variable.backprop", "link" : "lamp\/autograd\/Variable.html#backprop():Unit", "kind" : "def"}, {"label" : "wengert", "tail" : ": Seq[Variable]", "member" : "lamp.autograd.Variable.wengert", "link" : "lamp\/autograd\/Variable.html#wengert:Seq[lamp.autograd.Variable]", "kind" : "lazy val"}, {"label" : "zeroGrad", "tail" : "(): Unit", "member" : "lamp.autograd.Variable.zeroGrad", "link" : "lamp\/autograd\/Variable.html#zeroGrad():Unit", "kind" : "def"}, {"label" : "detached", "tail" : "(): Constant", "member" : "lamp.autograd.Variable.detached", "link" : "lamp\/autograd\/Variable.html#detached:lamp.autograd.Constant", "kind" : "def"}, {"label" : "id", "tail" : ": UUID", "member" : "lamp.autograd.Variable.id", "link" : "lamp\/autograd\/Variable.html#id:java.util.UUID", "kind" : "val"}, {"label" : "shape", "tail" : "(): List[Long]", "member" : "lamp.autograd.Variable.shape", "link" : "lamp\/autograd\/Variable.html#shape:List[Long]", "kind" : "def"}, {"label" : "sizes", "tail" : ": List[Long]", "member" : "lamp.autograd.Variable.sizes", "link" : "lamp\/autograd\/Variable.html#sizes:List[Long]", "kind" : "val"}, {"label" : "options", "tail" : ": TensorOptions", "member" : "lamp.autograd.Variable.options", "link" : "lamp\/autograd\/Variable.html#options:aten.TensorOptions", "kind" : "val"}, {"label" : "toString", "tail" : "(): String", "member" : "lamp.autograd.Variable.toString", "link" : "lamp\/autograd\/Variable.html#toString():String", "kind" : "def"}, {"label" : "needsGrad", "tail" : "(): Boolean", "member" : "lamp.autograd.Variable.needsGrad", "link" : "lamp\/autograd\/Variable.html#needsGrad:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/Variable.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/Variable.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/Variable.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/Variable.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/Variable.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/Variable.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/Variable.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Variable.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Variable.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Variable.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/Variable.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/Variable.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/Variable.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/autograd\/Variable.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/autograd\/Variable.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/Variable.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/Variable.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/Variable.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "partialDerivative", "tail" : "(): Option[STen]", "member" : "lamp.autograd.Variable.partialDerivative", "link" : "lamp\/autograd\/Variable.html#partialDerivative:Option[lamp.STen]", "kind" : "abstract def"}, {"label" : "value", "tail" : "(): STen", "member" : "lamp.autograd.Variable.value", "link" : "lamp\/autograd\/Variable.html#value:lamp.STen", "kind" : "abstract def"}, {"label" : "op", "tail" : "(): Option[Op]", "member" : "lamp.autograd.Variable.op", "link" : "lamp\/autograd\/Variable.html#op:Option[lamp.autograd.Op]", "kind" : "abstract def"}], "shortDescription" : "", "object" : "lamp\/autograd\/Variable$.html", "members_object" : [{"label" : "cat", "tail" : "(inputs: Seq[Variable], dim: Long)(scope: Scope): Variable", "member" : "lamp.autograd.Variable.cat", "link" : "lamp\/autograd\/Variable$.html#cat(inputs:Seq[lamp.autograd.Variable],dim:Long)(implicitscope:lamp.Scope):lamp.autograd.Variable", "kind" : "def"}, {"label" : "concatenateAddNewDim", "tail" : "(inputs: Seq[Variable])(scope: Scope): Variable", "member" : "lamp.autograd.Variable.concatenateAddNewDim", "link" : "lamp\/autograd\/Variable$.html#concatenateAddNewDim(inputs:Seq[lamp.autograd.Variable])(implicitscope:lamp.Scope):lamp.autograd.Variable", "kind" : "def"}, {"label" : "apply", "tail" : "(op: Op, value: STen)(scope: Scope): Variable", "member" : "lamp.autograd.Variable.apply", "link" : "lamp\/autograd\/Variable$.html#apply(op:lamp.autograd.Op,value:lamp.STen)(implicitscope:lamp.Scope):lamp.autograd.Variable", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/Variable$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/Variable$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/Variable$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/Variable$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/Variable$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/Variable$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/Variable$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Variable$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Variable$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Variable$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/Variable$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/Variable$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/autograd\/Variable$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/Variable$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/autograd\/Variable$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/autograd\/Variable$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/Variable$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/Variable$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/Variable$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "lamp\/autograd\/Variable.html", "kind" : "trait"}, {"name" : "lamp.autograd.VariableNonConstant", "shortDescription" : "", "object" : "lamp\/autograd\/VariableNonConstant$.html", "members_object" : [{"label" : "movable", "tail" : ": Movable[VariableNonConstant]", "member" : "lamp.autograd.VariableNonConstant.movable", "link" : "lamp\/autograd\/VariableNonConstant$.html#movable:lamp.Movable[lamp.autograd.VariableNonConstant]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/VariableNonConstant$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/VariableNonConstant$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/VariableNonConstant$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/VariableNonConstant$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/VariableNonConstant$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/VariableNonConstant$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/VariableNonConstant$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/VariableNonConstant$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/VariableNonConstant$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/VariableNonConstant$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/VariableNonConstant$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/VariableNonConstant$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/autograd\/VariableNonConstant$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/VariableNonConstant$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/autograd\/VariableNonConstant$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/autograd\/VariableNonConstant$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/VariableNonConstant$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/VariableNonConstant$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/VariableNonConstant$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "partialDerivative", "tail" : ": Option[STen]", "member" : "lamp.autograd.VariableNonConstant.partialDerivative", "link" : "lamp\/autograd\/VariableNonConstant.html#partialDerivative:Option[lamp.STen]", "kind" : "val"}, {"label" : "op", "tail" : ": Some[Op]", "member" : "lamp.autograd.VariableNonConstant.op", "link" : "lamp\/autograd\/VariableNonConstant.html#op:Some[lamp.autograd.Op]", "kind" : "val"}, {"member" : "lamp.autograd.VariableNonConstant#<init>", "error" : "unsupported entity"}, {"label" : "pd", "tail" : ": STen", "member" : "lamp.autograd.VariableNonConstant.pd", "link" : "lamp\/autograd\/VariableNonConstant.html#pd:lamp.STen", "kind" : "val"}, {"label" : "value", "tail" : ": STen", "member" : "lamp.autograd.VariableNonConstant.value", "link" : "lamp\/autograd\/VariableNonConstant.html#value:lamp.STen", "kind" : "val"}, {"label" : "op1", "tail" : ": Op", "member" : "lamp.autograd.VariableNonConstant.op1", "link" : "lamp\/autograd\/VariableNonConstant.html#op1:lamp.autograd.Op", "kind" : "val"}, {"label" : "toLongMat", "tail" : "(): Mat[Long]", "member" : "lamp.autograd.Variable.toLongMat", "link" : "lamp\/autograd\/VariableNonConstant.html#toLongMat:org.saddle.Mat[Long]", "kind" : "def"}, {"label" : "toMat", "tail" : "(): Mat[Double]", "member" : "lamp.autograd.Variable.toMat", "link" : "lamp\/autograd\/VariableNonConstant.html#toMat:org.saddle.Mat[Double]", "kind" : "def"}, {"label" : "flattenLastDimensions", "tail" : "(dims: Int)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.flattenLastDimensions", "link" : "lamp\/autograd\/VariableNonConstant.html#flattenLastDimensions[S](dims:Int)(implicitevidence$51:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "view", "tail" : "(shape: List[Int])(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.view", "link" : "lamp\/autograd\/VariableNonConstant.html#view[S](shape:List[Int])(implicitevidence$50:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "normalize", "tail" : "(dim: List[Int])(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.normalize", "link" : "lamp\/autograd\/VariableNonConstant.html#normalize[S](dim:List[Int])(implicitevidence$49:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "variance", "tail" : "(dim: List[Int])(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.variance", "link" : "lamp\/autograd\/VariableNonConstant.html#variance[S](dim:List[Int])(implicitevidence$48:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "mean", "tail" : "(dim: List[Int])(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.mean", "link" : "lamp\/autograd\/VariableNonConstant.html#mean[S](dim:List[Int])(implicitevidence$47:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "squaredFrobenius", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.squaredFrobenius", "link" : "lamp\/autograd\/VariableNonConstant.html#squaredFrobenius[S](implicitevidence$46:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "l1Loss", "tail" : "(target: STen, reduction: Reduction)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.l1Loss", "link" : "lamp\/autograd\/VariableNonConstant.html#l1Loss[S](target:lamp.STen,reduction:lamp.autograd.Reduction)(implicitevidence$45:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "mseLoss", "tail" : "(target: STen, reduction: Reduction)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.mseLoss", "link" : "lamp\/autograd\/VariableNonConstant.html#mseLoss[S](target:lamp.STen,reduction:lamp.autograd.Reduction)(implicitevidence$44:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "nllLoss", "tail" : "(target: STen, weights: STen, reduction: Reduction, ignore: Long)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.nllLoss", "link" : "lamp\/autograd\/VariableNonConstant.html#nllLoss[S](target:lamp.STen,weights:lamp.STen,reduction:lamp.autograd.Reduction,ignore:Long)(implicitevidence$43:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "crossEntropy", "tail" : "(other: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.crossEntropy", "link" : "lamp\/autograd\/VariableNonConstant.html#crossEntropy[S](other:lamp.autograd.Variable)(implicitevidence$42:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "logSoftMax", "tail" : "(dim: Int)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.logSoftMax", "link" : "lamp\/autograd\/VariableNonConstant.html#logSoftMax[S](dim:Int)(implicitevidence$41:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "euclideanDistance", "tail" : "(b: Variable, dim: Int)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.euclideanDistance", "link" : "lamp\/autograd\/VariableNonConstant.html#euclideanDistance[S](b:lamp.autograd.Variable,dim:Int)(implicitevidence$40:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "pow", "tail" : "(exponent: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.pow", "link" : "lamp\/autograd\/VariableNonConstant.html#pow[S](exponent:lamp.autograd.Variable)(implicitevidence$39:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "pow", "tail" : "(const: Double)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.pow", "link" : "lamp\/autograd\/VariableNonConstant.html#pow[S](const:Double)(implicitevidence$38:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "atan", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.atan", "link" : "lamp\/autograd\/VariableNonConstant.html#atan[S](implicitevidence$37:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "tanh", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.tanh", "link" : "lamp\/autograd\/VariableNonConstant.html#tanh[S](implicitevidence$36:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "tan", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.tan", "link" : "lamp\/autograd\/VariableNonConstant.html#tan[S](implicitevidence$35:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "cos", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.cos", "link" : "lamp\/autograd\/VariableNonConstant.html#cos[S](implicitevidence$34:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "sin", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.sin", "link" : "lamp\/autograd\/VariableNonConstant.html#sin[S](implicitevidence$33:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "log1p", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.log1p", "link" : "lamp\/autograd\/VariableNonConstant.html#log1p[S](implicitevidence$32:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "log", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.log", "link" : "lamp\/autograd\/VariableNonConstant.html#log[S](implicitevidence$31:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "exp", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.exp", "link" : "lamp\/autograd\/VariableNonConstant.html#exp[S](implicitevidence$30:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "colSum", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.colSum", "link" : "lamp\/autograd\/VariableNonConstant.html#colSum[S](implicitevidence$29:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "rowSum", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.rowSum", "link" : "lamp\/autograd\/VariableNonConstant.html#rowSum[S](implicitevidence$28:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "expandAs", "tail" : "(other: STen)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.expandAs", "link" : "lamp\/autograd\/VariableNonConstant.html#expandAs[S](other:lamp.STen)(implicitevidence$27:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "sum", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.sum", "link" : "lamp\/autograd\/VariableNonConstant.html#sum[S](implicitevidence$26:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "indexAdd", "tail" : "(index: Variable, dim: Int, maxIndex: Long)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.indexAdd", "link" : "lamp\/autograd\/VariableNonConstant.html#indexAdd[S](index:lamp.autograd.Variable,dim:Int,maxIndex:Long)(implicitevidence$25:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "scatterAdd", "tail" : "(index: Variable, dim: Int, maxIndex: Long)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.scatterAdd", "link" : "lamp\/autograd\/VariableNonConstant.html#scatterAdd[S](index:lamp.autograd.Variable,dim:Int,maxIndex:Long)(implicitevidence$24:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "dropout", "tail" : "(prob: Double, train: Boolean)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.dropout", "link" : "lamp\/autograd\/VariableNonConstant.html#dropout[S](prob:Double,train:Boolean)(implicitevidence$23:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "sigmoid", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.sigmoid", "link" : "lamp\/autograd\/VariableNonConstant.html#sigmoid[S](implicitevidence$22:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "gelu", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.gelu", "link" : "lamp\/autograd\/VariableNonConstant.html#gelu[S](implicitevidence$21:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "relu", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.relu", "link" : "lamp\/autograd\/VariableNonConstant.html#relu[S](implicitevidence$20:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "bmm", "tail" : "(other: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.bmm", "link" : "lamp\/autograd\/VariableNonConstant.html#bmm[S](other:lamp.autograd.Variable)(implicitevidence$19:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "mm", "tail" : "(other: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.mm", "link" : "lamp\/autograd\/VariableNonConstant.html#mm[S](other:lamp.autograd.Variable)(implicitevidence$18:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "\/", "tail" : "(other: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.\/", "link" : "lamp\/autograd\/VariableNonConstant.html#\/[S](other:lamp.autograd.Variable)(implicitevidence$17:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "*", "tail" : "(other: Double)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.*", "link" : "lamp\/autograd\/VariableNonConstant.html#*[S](other:Double)(implicitevidence$16:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "*", "tail" : "(other: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.*", "link" : "lamp\/autograd\/VariableNonConstant.html#*[S](other:lamp.autograd.Variable)(implicitevidence$15:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "-", "tail" : "(other: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.-", "link" : "lamp\/autograd\/VariableNonConstant.html#-[S](other:lamp.autograd.Variable)(implicitevidence$14:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "+", "tail" : "(other: Double)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.+", "link" : "lamp\/autograd\/VariableNonConstant.html#+[S](other:Double)(implicitevidence$13:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "+", "tail" : "(other: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.+", "link" : "lamp\/autograd\/VariableNonConstant.html#+[S](other:lamp.autograd.Variable)(implicitevidence$12:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "cat", "tail" : "(other: Variable, dim: Long)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.cat", "link" : "lamp\/autograd\/VariableNonConstant.html#cat[S](other:lamp.autograd.Variable,dim:Long)(implicitevidence$11:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "cast", "tail" : "(precision: FloatingPointPrecision)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.cast", "link" : "lamp\/autograd\/VariableNonConstant.html#cast[S](precision:lamp.FloatingPointPrecision)(implicitevidence$10:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "makeBooleanMask", "tail" : "(q: Long)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.makeBooleanMask", "link" : "lamp\/autograd\/VariableNonConstant.html#makeBooleanMask[S](q:Long)(implicitevidence$9:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "maskFill", "tail" : "(mask: Variable, fill: Double)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.maskFill", "link" : "lamp\/autograd\/VariableNonConstant.html#maskFill[S](mask:lamp.autograd.Variable,fill:Double)(implicitevidence$8:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "assign", "tail" : "(other: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.assign", "link" : "lamp\/autograd\/VariableNonConstant.html#assign[S](other:lamp.autograd.Variable)(implicitevidence$7:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "oneHot", "tail" : "(numClasses: Int)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.oneHot", "link" : "lamp\/autograd\/VariableNonConstant.html#oneHot[S](numClasses:Int)(implicitevidence$6:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "argmax", "tail" : "(dim: Long, keepDim: Boolean)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.argmax", "link" : "lamp\/autograd\/VariableNonConstant.html#argmax[S](dim:Long,keepDim:Boolean)(implicitevidence$5:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "indexSelect", "tail" : "(dim: Long, index: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.indexSelect", "link" : "lamp\/autograd\/VariableNonConstant.html#indexSelect[S](dim:Long,index:lamp.autograd.Variable)(implicitevidence$4:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "select", "tail" : "(dim: Long, index: Long)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.select", "link" : "lamp\/autograd\/VariableNonConstant.html#select[S](dim:Long,index:Long)(implicitevidence$3:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "t", "tail" : "(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.t", "link" : "lamp\/autograd\/VariableNonConstant.html#t[S](implicitevidence$2:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "transpose", "tail" : "(dim1: Int, dim2: Int)(arg0: Sc[S]): Variable", "member" : "lamp.autograd.Variable.transpose", "link" : "lamp\/autograd\/VariableNonConstant.html#transpose[S](dim1:Int,dim2:Int)(implicitevidence$1:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "accumulateGrad", "tail" : "(incoming: STen, computeGrad: (STen, STen) ⇒ Unit): Unit", "member" : "lamp.autograd.Variable.accumulateGrad", "link" : "lamp\/autograd\/VariableNonConstant.html#accumulateGrad(incoming:lamp.STen,computeGrad:(lamp.STen,lamp.STen)=>Unit):Unit", "kind" : "def"}, {"label" : "zipBackward", "tail" : "(fn: (STen, STen) ⇒ Unit): (Variable, (STen, STen) ⇒ Unit)", "member" : "lamp.autograd.Variable.zipBackward", "link" : "lamp\/autograd\/VariableNonConstant.html#zipBackward(fn:(lamp.STen,lamp.STen)=>Unit):(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)", "kind" : "def"}, {"label" : "backprop", "tail" : "(): Unit", "member" : "lamp.autograd.Variable.backprop", "link" : "lamp\/autograd\/VariableNonConstant.html#backprop():Unit", "kind" : "def"}, {"label" : "wengert", "tail" : ": Seq[Variable]", "member" : "lamp.autograd.Variable.wengert", "link" : "lamp\/autograd\/VariableNonConstant.html#wengert:Seq[lamp.autograd.Variable]", "kind" : "lazy val"}, {"label" : "zeroGrad", "tail" : "(): Unit", "member" : "lamp.autograd.Variable.zeroGrad", "link" : "lamp\/autograd\/VariableNonConstant.html#zeroGrad():Unit", "kind" : "def"}, {"label" : "detached", "tail" : "(): Constant", "member" : "lamp.autograd.Variable.detached", "link" : "lamp\/autograd\/VariableNonConstant.html#detached:lamp.autograd.Constant", "kind" : "def"}, {"label" : "id", "tail" : ": UUID", "member" : "lamp.autograd.Variable.id", "link" : "lamp\/autograd\/VariableNonConstant.html#id:java.util.UUID", "kind" : "val"}, {"label" : "shape", "tail" : "(): List[Long]", "member" : "lamp.autograd.Variable.shape", "link" : "lamp\/autograd\/VariableNonConstant.html#shape:List[Long]", "kind" : "def"}, {"label" : "sizes", "tail" : ": List[Long]", "member" : "lamp.autograd.Variable.sizes", "link" : "lamp\/autograd\/VariableNonConstant.html#sizes:List[Long]", "kind" : "val"}, {"label" : "options", "tail" : ": TensorOptions", "member" : "lamp.autograd.Variable.options", "link" : "lamp\/autograd\/VariableNonConstant.html#options:aten.TensorOptions", "kind" : "val"}, {"label" : "toString", "tail" : "(): String", "member" : "lamp.autograd.Variable.toString", "link" : "lamp\/autograd\/VariableNonConstant.html#toString():String", "kind" : "def"}, {"label" : "needsGrad", "tail" : "(): Boolean", "member" : "lamp.autograd.Variable.needsGrad", "link" : "lamp\/autograd\/VariableNonConstant.html#needsGrad:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/VariableNonConstant.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/VariableNonConstant.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/VariableNonConstant.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/VariableNonConstant.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/VariableNonConstant.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/VariableNonConstant.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/VariableNonConstant.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/VariableNonConstant.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/VariableNonConstant.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/VariableNonConstant.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/VariableNonConstant.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/VariableNonConstant.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/VariableNonConstant.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/VariableNonConstant.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/VariableNonConstant.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/VariableNonConstant.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/autograd\/VariableNonConstant.html", "kind" : "case class"}, {"name" : "lamp.autograd.Variance", "shortDescription" : "", "members_class" : [{"label" : "value", "tail" : ": Variable", "member" : "lamp.autograd.Variance.value", "link" : "lamp\/autograd\/Variance.html#value:lamp.autograd.Variable", "kind" : "val"}, {"label" : "m", "tail" : ": STen", "member" : "lamp.autograd.Variance.m", "link" : "lamp\/autograd\/Variance.html#m:lamp.STen", "kind" : "val"}, {"label" : "v", "tail" : ": STen", "member" : "lamp.autograd.Variance.v", "link" : "lamp\/autograd\/Variance.html#v:lamp.STen", "kind" : "val"}, {"label" : "params", "tail" : ": List[(Variable, (STen, STen) ⇒ Unit)]", "member" : "lamp.autograd.Variance.params", "link" : "lamp\/autograd\/Variance.html#params:List[(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)]", "kind" : "val"}, {"member" : "lamp.autograd.Variance#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/Variance.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/Variance.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/Variance.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/Variance.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/Variance.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/Variance.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/Variance.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Variance.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Variance.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/Variance.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/Variance.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/Variance.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/autograd\/Variance.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/Variance.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/autograd\/Variance.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/autograd\/Variance.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/Variance.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/Variance.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/Variance.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "lamp\/autograd\/Variance.html", "kind" : "class"}, {"name" : "lamp.autograd.View", "shortDescription" : "", "members_class" : [{"label" : "value", "tail" : ": Variable", "member" : "lamp.autograd.View.value", "link" : "lamp\/autograd\/View.html#value:lamp.autograd.Variable", "kind" : "val"}, {"label" : "params", "tail" : ": List[(Variable, (STen, STen) ⇒ Unit)]", "member" : "lamp.autograd.View.params", "link" : "lamp\/autograd\/View.html#params:List[(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)]", "kind" : "val"}, {"member" : "lamp.autograd.View#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/View.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/View.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/View.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/View.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/View.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/View.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/View.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/View.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/View.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/View.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/View.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/View.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/autograd\/View.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/View.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/autograd\/View.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/autograd\/View.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/View.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/View.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/View.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "lamp\/autograd\/View.html", "kind" : "class"}, {"name" : "lamp.autograd.WeightNorm", "shortDescription" : "", "members_class" : [{"label" : "value", "tail" : ": Variable", "member" : "lamp.autograd.WeightNorm.value", "link" : "lamp\/autograd\/WeightNorm.html#value:lamp.autograd.Variable", "kind" : "val"}, {"label" : "w", "tail" : ": Tensor", "member" : "lamp.autograd.WeightNorm.w", "link" : "lamp\/autograd\/WeightNorm.html#w:aten.Tensor", "kind" : "val"}, {"label" : "norm", "tail" : ": Tensor", "member" : "lamp.autograd.WeightNorm.norm", "link" : "lamp\/autograd\/WeightNorm.html#norm:aten.Tensor", "kind" : "val"}, {"label" : "params", "tail" : ": List[(Variable, (STen, STen) ⇒ Unit)]", "member" : "lamp.autograd.WeightNorm.params", "link" : "lamp\/autograd\/WeightNorm.html#params:List[(lamp.autograd.Variable,(lamp.STen,lamp.STen)=>Unit)]", "kind" : "val"}, {"label" : "gradg", "tail" : "(p: Tensor): Tensor", "member" : "lamp.autograd.WeightNorm.gradg", "link" : "lamp\/autograd\/WeightNorm.html#gradg(p:aten.Tensor):aten.Tensor", "kind" : "def"}, {"member" : "lamp.autograd.WeightNorm#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/autograd\/WeightNorm.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/autograd\/WeightNorm.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/autograd\/WeightNorm.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/autograd\/WeightNorm.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/autograd\/WeightNorm.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/autograd\/WeightNorm.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/autograd\/WeightNorm.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/WeightNorm.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/WeightNorm.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/autograd\/WeightNorm.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/autograd\/WeightNorm.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/autograd\/WeightNorm.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/autograd\/WeightNorm.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/autograd\/WeightNorm.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/autograd\/WeightNorm.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/autograd\/WeightNorm.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/autograd\/WeightNorm.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/autograd\/WeightNorm.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/autograd\/WeightNorm.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "lamp\/autograd\/WeightNorm.html", "kind" : "class"}], "lamp.knn" : [{"name" : "lamp.knn.DistanceFunction", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/knn\/package$$DistanceFunction.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/knn\/package$$DistanceFunction.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/knn\/package$$DistanceFunction.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/knn\/package$$DistanceFunction.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/knn\/package$$DistanceFunction.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/knn\/package$$DistanceFunction.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/knn\/package$$DistanceFunction.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/knn\/package$$DistanceFunction.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/knn\/package$$DistanceFunction.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/knn\/package$$DistanceFunction.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/knn\/package$$DistanceFunction.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/knn\/package$$DistanceFunction.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/knn\/package$$DistanceFunction.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/knn\/package$$DistanceFunction.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/knn\/package$$DistanceFunction.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/knn\/package$$DistanceFunction.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/knn\/package$$DistanceFunction.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/knn\/package$$DistanceFunction.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/knn\/package$$DistanceFunction.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "apply", "tail" : "(a: STen, b: STen)(scope: Scope): STen", "member" : "lamp.knn.DistanceFunction.apply", "link" : "lamp\/knn\/package$$DistanceFunction.html#apply(a:lamp.STen,b:lamp.STen)(implicitscope:lamp.Scope):lamp.STen", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "lamp\/knn\/package$$DistanceFunction.html", "kind" : "trait"}, {"name" : "lamp.knn.JaccardDistance", "shortDescription" : "", "object" : "lamp\/knn\/package$$JaccardDistance$.html", "members_object" : [{"label" : "apply", "tail" : "(a: STen, b: STen)(scope: Scope): STen", "member" : "lamp.knn.JaccardDistance.apply", "link" : "lamp\/knn\/package$$JaccardDistance$.html#apply(a:lamp.STen,b:lamp.STen)(implicitscope:lamp.Scope):lamp.STen", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/knn\/package$$JaccardDistance$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/knn\/package$$JaccardDistance$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/knn\/package$$JaccardDistance$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/knn\/package$$JaccardDistance$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/knn\/package$$JaccardDistance$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/knn\/package$$JaccardDistance$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/knn\/package$$JaccardDistance$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/knn\/package$$JaccardDistance$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/knn\/package$$JaccardDistance$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/knn\/package$$JaccardDistance$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/knn\/package$$JaccardDistance$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/knn\/package$$JaccardDistance$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/knn\/package$$JaccardDistance$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/knn\/package$$JaccardDistance$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/knn\/package$$JaccardDistance$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/knn\/package$$JaccardDistance$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/knn\/package$$JaccardDistance$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/knn\/package$$JaccardDistance$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/knn\/package$$JaccardDistance$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "lamp.knn.SquaredEuclideanDistance", "shortDescription" : "", "object" : "lamp\/knn\/package$$SquaredEuclideanDistance$.html", "members_object" : [{"label" : "apply", "tail" : "(a: STen, b: STen)(scope: Scope): STen", "member" : "lamp.knn.SquaredEuclideanDistance.apply", "link" : "lamp\/knn\/package$$SquaredEuclideanDistance$.html#apply(a:lamp.STen,b:lamp.STen)(implicitscope:lamp.Scope):lamp.STen", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/knn\/package$$SquaredEuclideanDistance$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/knn\/package$$SquaredEuclideanDistance$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/knn\/package$$SquaredEuclideanDistance$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/knn\/package$$SquaredEuclideanDistance$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/knn\/package$$SquaredEuclideanDistance$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/knn\/package$$SquaredEuclideanDistance$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/knn\/package$$SquaredEuclideanDistance$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/knn\/package$$SquaredEuclideanDistance$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/knn\/package$$SquaredEuclideanDistance$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/knn\/package$$SquaredEuclideanDistance$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/knn\/package$$SquaredEuclideanDistance$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/knn\/package$$SquaredEuclideanDistance$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/knn\/package$$SquaredEuclideanDistance$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/knn\/package$$SquaredEuclideanDistance$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/knn\/package$$SquaredEuclideanDistance$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/knn\/package$$SquaredEuclideanDistance$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/knn\/package$$SquaredEuclideanDistance$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/knn\/package$$SquaredEuclideanDistance$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/knn\/package$$SquaredEuclideanDistance$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "lamp.example.cifar" : [{"name" : "lamp.example.cifar.AWTWindow", "shortDescription" : "", "object" : "lamp\/example\/cifar\/AWTWindow$.html", "members_object" : [{"label" : "showImage", "tail" : "(t: Tensor): JFrame", "member" : "lamp.example.cifar.AWTWindow.showImage", "link" : "lamp\/example\/cifar\/AWTWindow$.html#showImage(t:aten.Tensor):javax.swing.JFrame", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/example\/cifar\/AWTWindow$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/example\/cifar\/AWTWindow$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/example\/cifar\/AWTWindow$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/example\/cifar\/AWTWindow$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/example\/cifar\/AWTWindow$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/example\/cifar\/AWTWindow$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/example\/cifar\/AWTWindow$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/example\/cifar\/AWTWindow$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/example\/cifar\/AWTWindow$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/example\/cifar\/AWTWindow$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/example\/cifar\/AWTWindow$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/example\/cifar\/AWTWindow$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/example\/cifar\/AWTWindow$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/example\/cifar\/AWTWindow$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/example\/cifar\/AWTWindow$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/example\/cifar\/AWTWindow$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/example\/cifar\/AWTWindow$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/example\/cifar\/AWTWindow$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/example\/cifar\/AWTWindow$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "lamp.example.cifar.Cifar", "shortDescription" : "", "object" : "lamp\/example\/cifar\/Cifar$.html", "members_object" : [{"label" : "loadImageFile", "tail" : "(file: File, numImages: Int, precision: FloatingPointPrecision)(scope: Scope): (STen, STen)", "member" : "lamp.example.cifar.Cifar.loadImageFile", "link" : "lamp\/example\/cifar\/Cifar$.html#loadImageFile(file:java.io.File,numImages:Int,precision:lamp.FloatingPointPrecision)(implicitscope:lamp.Scope):(lamp.STen,lamp.STen)", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/example\/cifar\/Cifar$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/example\/cifar\/Cifar$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/example\/cifar\/Cifar$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/example\/cifar\/Cifar$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/example\/cifar\/Cifar$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/example\/cifar\/Cifar$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/example\/cifar\/Cifar$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/example\/cifar\/Cifar$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/example\/cifar\/Cifar$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/example\/cifar\/Cifar$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/example\/cifar\/Cifar$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/example\/cifar\/Cifar$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/example\/cifar\/Cifar$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/example\/cifar\/Cifar$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/example\/cifar\/Cifar$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/example\/cifar\/Cifar$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/example\/cifar\/Cifar$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/example\/cifar\/Cifar$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/example\/cifar\/Cifar$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "lamp.example.cifar.CliConfig", "shortDescription" : "", "members_case class" : [{"member" : "lamp.example.cifar.CliConfig#<init>", "error" : "unsupported entity"}, {"label" : "singlePrecision", "tail" : ": Boolean", "member" : "lamp.example.cifar.CliConfig.singlePrecision", "link" : "lamp\/example\/cifar\/CliConfig.html#singlePrecision:Boolean", "kind" : "val"}, {"label" : "checkpointLoad", "tail" : ": Option[String]", "member" : "lamp.example.cifar.CliConfig.checkpointLoad", "link" : "lamp\/example\/cifar\/CliConfig.html#checkpointLoad:Option[String]", "kind" : "val"}, {"label" : "checkpointSave", "tail" : ": Option[String]", "member" : "lamp.example.cifar.CliConfig.checkpointSave", "link" : "lamp\/example\/cifar\/CliConfig.html#checkpointSave:Option[String]", "kind" : "val"}, {"label" : "network", "tail" : ": String", "member" : "lamp.example.cifar.CliConfig.network", "link" : "lamp\/example\/cifar\/CliConfig.html#network:String", "kind" : "val"}, {"label" : "dropout", "tail" : ": Double", "member" : "lamp.example.cifar.CliConfig.dropout", "link" : "lamp\/example\/cifar\/CliConfig.html#dropout:Double", "kind" : "val"}, {"label" : "learningRate", "tail" : ": Double", "member" : "lamp.example.cifar.CliConfig.learningRate", "link" : "lamp\/example\/cifar\/CliConfig.html#learningRate:Double", "kind" : "val"}, {"label" : "epochs", "tail" : ": Int", "member" : "lamp.example.cifar.CliConfig.epochs", "link" : "lamp\/example\/cifar\/CliConfig.html#epochs:Int", "kind" : "val"}, {"label" : "testBatchSize", "tail" : ": Int", "member" : "lamp.example.cifar.CliConfig.testBatchSize", "link" : "lamp\/example\/cifar\/CliConfig.html#testBatchSize:Int", "kind" : "val"}, {"label" : "trainBatchSize", "tail" : ": Int", "member" : "lamp.example.cifar.CliConfig.trainBatchSize", "link" : "lamp\/example\/cifar\/CliConfig.html#trainBatchSize:Int", "kind" : "val"}, {"label" : "cuda", "tail" : ": Boolean", "member" : "lamp.example.cifar.CliConfig.cuda", "link" : "lamp\/example\/cifar\/CliConfig.html#cuda:Boolean", "kind" : "val"}, {"label" : "labels", "tail" : ": String", "member" : "lamp.example.cifar.CliConfig.labels", "link" : "lamp\/example\/cifar\/CliConfig.html#labels:String", "kind" : "val"}, {"label" : "testData", "tail" : ": String", "member" : "lamp.example.cifar.CliConfig.testData", "link" : "lamp\/example\/cifar\/CliConfig.html#testData:String", "kind" : "val"}, {"label" : "trainData", "tail" : ": String", "member" : "lamp.example.cifar.CliConfig.trainData", "link" : "lamp\/example\/cifar\/CliConfig.html#trainData:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/example\/cifar\/CliConfig.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/example\/cifar\/CliConfig.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/example\/cifar\/CliConfig.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/example\/cifar\/CliConfig.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/example\/cifar\/CliConfig.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/example\/cifar\/CliConfig.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/example\/cifar\/CliConfig.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/example\/cifar\/CliConfig.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/example\/cifar\/CliConfig.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/example\/cifar\/CliConfig.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/example\/cifar\/CliConfig.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/example\/cifar\/CliConfig.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/example\/cifar\/CliConfig.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/example\/cifar\/CliConfig.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/example\/cifar\/CliConfig.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/example\/cifar\/CliConfig.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/example\/cifar\/CliConfig.html", "kind" : "case class"}, {"name" : "lamp.example.cifar.Cnn", "shortDescription" : "", "object" : "lamp\/example\/cifar\/Cnn$.html", "members_object" : [{"label" : "lenet", "tail" : "(numClasses: Int, dropOut: Double, tOpt: TensorOptions)(pool: Scope): Sequential[Variable, Product with Serializable with GenericModule[Variable, Variable]]", "member" : "lamp.example.cifar.Cnn.lenet", "link" : "lamp\/example\/cifar\/Cnn$.html#lenet(numClasses:Int,dropOut:Double,tOpt:aten.TensorOptions)(implicitpool:lamp.Scope):lamp.nn.Sequential[lamp.autograd.Variable,ProductwithSerializablewithlamp.nn.GenericModule[lamp.autograd.Variable,lamp.autograd.Variable]]", "kind" : "def"}, {"label" : "resnet", "tail" : "(numClasses: Int, dropout: Double, tOpt: TensorOptions)(pool: Scope): Seq5[Variable, Variable, Variable, Variable, Variable, Variable, Conv2D with GenericModule[Variable, Variable], Seq4[Variable, Variable, Variable, Variable, Variable, Seq3[Variable, Variable, Variable, Variable, Residual[Seq6[Variable, Variable, Variable, Variable, Variable, Variable, Variable, Conv2D, BatchNorm2D, Fun, Dropout, Conv2D, BatchNorm2D], Seq2[Variable, Variable, Variable, Conv2D, BatchNorm2D]] with GenericModule[Variable, Variable], Fun with GenericModule[Variable, Variable], Dropout with GenericModule[Variable, Variable]] with GenericModule[Variable, Variable], Seq3[Variable, Variable, Variable, Variable, Residual[Seq6[Variable, Variable, Variable, Variable, Variable, Variable, Variable, Conv2D, BatchNorm2D, Fun, Dropout, Conv2D, BatchNorm2D], Seq2[Variable, Variable, Variable, Conv2D, BatchNorm2D]] with GenericModule[Variable, Variable], Fun with GenericModule[Variable, Variable], Dropout with GenericModule[Variable, Variable]] with GenericModule[Variable, Variable], Seq3[Variable, Variable, Variable, Variable, Residual[Seq6[Variable, Variable, Variable, Variable, Variable, Variable, Variable, Conv2D, BatchNorm2D, Fun, Dropout, Conv2D, BatchNorm2D], Seq2[Variable, Variable, Variable, Conv2D, BatchNorm2D]] with GenericModule[Variable, Variable], Fun with GenericModule[Variable, Variable], Dropout with GenericModule[Variable, Variable]] with GenericModule[Variable, Variable], Seq3[Variable, Variable, Variable, Variable, Residual[Seq6[Variable, Variable, Variable, Variable, Variable, Variable, Variable, Conv2D, BatchNorm2D, Fun, Dropout, Conv2D, BatchNorm2D], Seq2[Variable, Variable, Variable, Conv2D, BatchNorm2D]] with GenericModule[Variable, Variable], Fun with GenericModule[Variable, Variable], Dropout with GenericModule[Variable, Variable]] with GenericModule[Variable, Variable]] with GenericModule[Variable, Variable], Fun with GenericModule[Variable, Variable], Fun with GenericModule[Variable, Variable], Fun with GenericModule[Variable, Variable]]", "member" : "lamp.example.cifar.Cnn.resnet", "link" : "lamp\/example\/cifar\/Cnn$.html#resnet(numClasses:Int,dropout:Double,tOpt:aten.TensorOptions)(implicitpool:lamp.Scope):lamp.nn.Seq5[lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.nn.Conv2Dwithlamp.nn.GenericModule[lamp.autograd.Variable,lamp.autograd.Variable],lamp.nn.Seq4[lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.nn.Seq3[lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.example.cifar.Residual[lamp.nn.Seq6[lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.nn.Conv2D,lamp.nn.BatchNorm2D,lamp.nn.Fun,lamp.nn.Dropout,lamp.nn.Conv2D,lamp.nn.BatchNorm2D],lamp.nn.Seq2[lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.nn.Conv2D,lamp.nn.BatchNorm2D]]withlamp.nn.GenericModule[lamp.autograd.Variable,lamp.autograd.Variable],lamp.nn.Funwithlamp.nn.GenericModule[lamp.autograd.Variable,lamp.autograd.Variable],lamp.nn.Dropoutwithlamp.nn.GenericModule[lamp.autograd.Variable,lamp.autograd.Variable]]withlamp.nn.GenericModule[lamp.autograd.Variable,lamp.autograd.Variable],lamp.nn.Seq3[lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.example.cifar.Residual[lamp.nn.Seq6[lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.nn.Conv2D,lamp.nn.BatchNorm2D,lamp.nn.Fun,lamp.nn.Dropout,lamp.nn.Conv2D,lamp.nn.BatchNorm2D],lamp.nn.Seq2[lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.nn.Conv2D,lamp.nn.BatchNorm2D]]withlamp.nn.GenericModule[lamp.autograd.Variable,lamp.autograd.Variable],lamp.nn.Funwithlamp.nn.GenericModule[lamp.autograd.Variable,lamp.autograd.Variable],lamp.nn.Dropoutwithlamp.nn.GenericModule[lamp.autograd.Variable,lamp.autograd.Variable]]withlamp.nn.GenericModule[lamp.autograd.Variable,lamp.autograd.Variable],lamp.nn.Seq3[lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.example.cifar.Residual[lamp.nn.Seq6[lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.nn.Conv2D,lamp.nn.BatchNorm2D,lamp.nn.Fun,lamp.nn.Dropout,lamp.nn.Conv2D,lamp.nn.BatchNorm2D],lamp.nn.Seq2[lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.nn.Conv2D,lamp.nn.BatchNorm2D]]withlamp.nn.GenericModule[lamp.autograd.Variable,lamp.autograd.Variable],lamp.nn.Funwithlamp.nn.GenericModule[lamp.autograd.Variable,lamp.autograd.Variable],lamp.nn.Dropoutwithlamp.nn.GenericModule[lamp.autograd.Variable,lamp.autograd.Variable]]withlamp.nn.GenericModule[lamp.autograd.Variable,lamp.autograd.Variable],lamp.nn.Seq3[lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.example.cifar.Residual[lamp.nn.Seq6[lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.nn.Conv2D,lamp.nn.BatchNorm2D,lamp.nn.Fun,lamp.nn.Dropout,lamp.nn.Conv2D,lamp.nn.BatchNorm2D],lamp.nn.Seq2[lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.nn.Conv2D,lamp.nn.BatchNorm2D]]withlamp.nn.GenericModule[lamp.autograd.Variable,lamp.autograd.Variable],lamp.nn.Funwithlamp.nn.GenericModule[lamp.autograd.Variable,lamp.autograd.Variable],lamp.nn.Dropoutwithlamp.nn.GenericModule[lamp.autograd.Variable,lamp.autograd.Variable]]withlamp.nn.GenericModule[lamp.autograd.Variable,lamp.autograd.Variable]]withlamp.nn.GenericModule[lamp.autograd.Variable,lamp.autograd.Variable],lamp.nn.Funwithlamp.nn.GenericModule[lamp.autograd.Variable,lamp.autograd.Variable],lamp.nn.Funwithlamp.nn.GenericModule[lamp.autograd.Variable,lamp.autograd.Variable],lamp.nn.Funwithlamp.nn.GenericModule[lamp.autograd.Variable,lamp.autograd.Variable]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/example\/cifar\/Cnn$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/example\/cifar\/Cnn$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/example\/cifar\/Cnn$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/example\/cifar\/Cnn$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/example\/cifar\/Cnn$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/example\/cifar\/Cnn$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/example\/cifar\/Cnn$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/example\/cifar\/Cnn$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/example\/cifar\/Cnn$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/example\/cifar\/Cnn$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/example\/cifar\/Cnn$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/example\/cifar\/Cnn$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/example\/cifar\/Cnn$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/example\/cifar\/Cnn$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/example\/cifar\/Cnn$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/example\/cifar\/Cnn$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/example\/cifar\/Cnn$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/example\/cifar\/Cnn$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/example\/cifar\/Cnn$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "lamp.example.cifar.Residual", "shortDescription" : "", "object" : "lamp\/example\/cifar\/Residual$.html", "members_object" : [{"label" : "make", "tail" : "(inChannels: Int, outChannels: Int, tOpt: TensorOptions, dropout: Double, stride: Int)(pool: Scope): Seq3[Variable, Variable, Variable, Variable, Residual[Seq6[Variable, Variable, Variable, Variable, Variable, Variable, Variable, Conv2D, BatchNorm2D, Fun, Dropout, Conv2D, BatchNorm2D], Seq2[Variable, Variable, Variable, Conv2D, BatchNorm2D]] with GenericModule[Variable, Variable], Fun with GenericModule[Variable, Variable], Dropout with GenericModule[Variable, Variable]]", "member" : "lamp.example.cifar.Residual.make", "link" : "lamp\/example\/cifar\/Residual$.html#make(inChannels:Int,outChannels:Int,tOpt:aten.TensorOptions,dropout:Double,stride:Int)(implicitpool:lamp.Scope):lamp.nn.Seq3[lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.example.cifar.Residual[lamp.nn.Seq6[lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.nn.Conv2D,lamp.nn.BatchNorm2D,lamp.nn.Fun,lamp.nn.Dropout,lamp.nn.Conv2D,lamp.nn.BatchNorm2D],lamp.nn.Seq2[lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.nn.Conv2D,lamp.nn.BatchNorm2D]]withlamp.nn.GenericModule[lamp.autograd.Variable,lamp.autograd.Variable],lamp.nn.Funwithlamp.nn.GenericModule[lamp.autograd.Variable,lamp.autograd.Variable],lamp.nn.Dropoutwithlamp.nn.GenericModule[lamp.autograd.Variable,lamp.autograd.Variable]]", "kind" : "def"}, {"label" : "load", "tail" : "(arg0: Load[M1], arg1: Load[M2]): Load[Residual[M1, M2]]", "member" : "lamp.example.cifar.Residual.load", "link" : "lamp\/example\/cifar\/Residual$.html#load[M1<:lamp.nn.Module,M2<:lamp.nn.Module](implicitevidence$4:lamp.nn.Load[M1],implicitevidence$5:lamp.nn.Load[M2]):lamp.nn.Load[lamp.example.cifar.Residual[M1,M2]]", "kind" : "implicit def"}, {"label" : "trainingMode", "tail" : "(arg0: Load[M1], arg1: Load[M2]): TrainingMode[Residual[M1, M2]]", "member" : "lamp.example.cifar.Residual.trainingMode", "link" : "lamp\/example\/cifar\/Residual$.html#trainingMode[M1<:lamp.nn.Module,M2<:lamp.nn.Module](implicitevidence$2:lamp.nn.Load[M1],implicitevidence$3:lamp.nn.Load[M2]):lamp.nn.TrainingMode[lamp.example.cifar.Residual[M1,M2]]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/example\/cifar\/Residual$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/example\/cifar\/Residual$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/example\/cifar\/Residual$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/example\/cifar\/Residual$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/example\/cifar\/Residual$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/example\/cifar\/Residual$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/example\/cifar\/Residual$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/example\/cifar\/Residual$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/example\/cifar\/Residual$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/example\/cifar\/Residual$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/example\/cifar\/Residual$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/example\/cifar\/Residual$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/example\/cifar\/Residual$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/example\/cifar\/Residual$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/example\/cifar\/Residual$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/example\/cifar\/Residual$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/example\/cifar\/Residual$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/example\/cifar\/Residual$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/example\/cifar\/Residual$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "forward", "tail" : "(x: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.example.cifar.Residual.forward", "link" : "lamp\/example\/cifar\/Residual.html#forward[S](x:lamp.autograd.Variable)(implicitevidence$1:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "state", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.example.cifar.Residual.state", "link" : "lamp\/example\/cifar\/Residual.html#state:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "def"}, {"member" : "lamp.example.cifar.Residual#<init>", "error" : "unsupported entity"}, {"label" : "left", "tail" : ": Option[M2 with Module]", "member" : "lamp.example.cifar.Residual.left", "link" : "lamp\/example\/cifar\/Residual.html#left:Option[M2withlamp.nn.Module]", "kind" : "val"}, {"label" : "right", "tail" : ": M1 with Module", "member" : "lamp.example.cifar.Residual.right", "link" : "lamp\/example\/cifar\/Residual.html#right:M1withlamp.nn.Module", "kind" : "val"}, {"label" : "learnableParameters", "tail" : "(): Long", "member" : "lamp.nn.GenericModule.learnableParameters", "link" : "lamp\/example\/cifar\/Residual.html#learnableParameters:Long", "kind" : "final def"}, {"label" : "gradients", "tail" : "(loss: Variable, zeroGrad: Boolean): Seq[Option[STen]]", "member" : "lamp.nn.GenericModule.gradients", "link" : "lamp\/example\/cifar\/Residual.html#gradients(loss:lamp.autograd.Variable,zeroGrad:Boolean):Seq[Option[lamp.STen]]", "kind" : "final def"}, {"label" : "parameters", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.GenericModule.parameters", "link" : "lamp\/example\/cifar\/Residual.html#parameters:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "final def"}, {"label" : "apply", "tail" : "(a: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.nn.GenericModule.apply", "link" : "lamp\/example\/cifar\/Residual.html#apply[S](a:A)(implicitevidence$17:lamp.Sc[S]):B", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/example\/cifar\/Residual.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/example\/cifar\/Residual.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/example\/cifar\/Residual.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/example\/cifar\/Residual.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/example\/cifar\/Residual.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/example\/cifar\/Residual.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/example\/cifar\/Residual.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/example\/cifar\/Residual.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/example\/cifar\/Residual.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/example\/cifar\/Residual.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/example\/cifar\/Residual.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/example\/cifar\/Residual.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/example\/cifar\/Residual.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/example\/cifar\/Residual.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/example\/cifar\/Residual.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/example\/cifar\/Residual.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/example\/cifar\/Residual.html", "kind" : "case class"}, {"name" : "lamp.example.cifar.Train", "shortDescription" : "", "object" : "lamp\/example\/cifar\/Train$.html", "members_object" : [{"label" : "parser1", "tail" : ": OParser[String, CliConfig]", "member" : "lamp.example.cifar.Train.parser1", "link" : "lamp\/example\/cifar\/Train$.html#parser1:scopt.OParser[String,lamp.example.cifar.CliConfig]", "kind" : "val"}, {"label" : "builder", "tail" : ": OParserBuilder[CliConfig]", "member" : "lamp.example.cifar.Train.builder", "link" : "lamp\/example\/cifar\/Train$.html#builder:scopt.OParserBuilder[lamp.example.cifar.CliConfig]", "kind" : "val"}, {"label" : "main", "tail" : "(args: Array[String]): Unit", "member" : "scala.App.main", "link" : "lamp\/example\/cifar\/Train$.html#main(args:Array[String]):Unit", "kind" : "def"}, {"label" : "delayedInit", "tail" : "(body: ⇒ Unit): Unit", "member" : "scala.App.delayedInit", "link" : "lamp\/example\/cifar\/Train$.html#delayedInit(body:=>Unit):Unit", "kind" : "def"}, {"label" : "args", "tail" : "(): Array[String]", "member" : "scala.App.args", "link" : "lamp\/example\/cifar\/Train$.html#args:Array[String]", "kind" : "def"}, {"label" : "executionStart", "tail" : ": Long", "member" : "scala.App.executionStart", "link" : "lamp\/example\/cifar\/Train$.html#executionStart:Long", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/example\/cifar\/Train$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/example\/cifar\/Train$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/example\/cifar\/Train$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/example\/cifar\/Train$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/example\/cifar\/Train$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/example\/cifar\/Train$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/example\/cifar\/Train$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/example\/cifar\/Train$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/example\/cifar\/Train$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/example\/cifar\/Train$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/example\/cifar\/Train$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/example\/cifar\/Train$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/example\/cifar\/Train$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/example\/cifar\/Train$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/example\/cifar\/Train$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/example\/cifar\/Train$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/example\/cifar\/Train$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/example\/cifar\/Train$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/example\/cifar\/Train$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "lamp.data" : [{"name" : "lamp.data.BatchStream", "members_trait" : [{"label" : "map", "tail" : "(f: (I, STen) ⇒ Resource[IO, (I2, STen)]): BatchStream[I2]", "member" : "lamp.data.BatchStream.map", "link" : "lamp\/data\/BatchStream.html#map[I2](f:(I,lamp.STen)=>cats.effect.Resource[cats.effect.IO,(I2,lamp.STen)]):lamp.data.BatchStream[I2]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/data\/BatchStream.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/data\/BatchStream.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/data\/BatchStream.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/data\/BatchStream.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/data\/BatchStream.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/data\/BatchStream.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/data\/BatchStream.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/BatchStream.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/BatchStream.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/BatchStream.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/data\/BatchStream.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/data\/BatchStream.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/data\/BatchStream.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/data\/BatchStream.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/data\/BatchStream.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/data\/BatchStream.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/data\/BatchStream.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/data\/BatchStream.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/data\/BatchStream.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "nextBatch", "tail" : "(): Resource[IO, Option[(I, STen)]]", "member" : "lamp.data.BatchStream.nextBatch", "link" : "lamp\/data\/BatchStream.html#nextBatch:cats.effect.Resource[cats.effect.IO,Option[(I,lamp.STen)]]", "kind" : "abstract def"}], "shortDescription" : "", "object" : "lamp\/data\/BatchStream$.html", "members_object" : [{"label" : "fromFullBatch", "tail" : "(features: STen, targets: STen, device: Device)(): BatchStream[Variable]", "member" : "lamp.data.BatchStream.fromFullBatch", "link" : "lamp\/data\/BatchStream$.html#fromFullBatch(features:lamp.STen,targets:lamp.STen,device:lamp.Device)():lamp.data.BatchStream[lamp.autograd.Variable]", "kind" : "def"}, {"label" : "minibatchesFromFull", "tail" : "(minibatchSize: Int, dropLast: Boolean, features: STen, target: STen, device: Device, rng: Generator): BatchStream[Variable]", "member" : "lamp.data.BatchStream.minibatchesFromFull", "link" : "lamp\/data\/BatchStream$.html#minibatchesFromFull(minibatchSize:Int,dropLast:Boolean,features:lamp.STen,target:lamp.STen,device:lamp.Device,rng:org.saddle.spire.random.Generator):lamp.data.BatchStream[lamp.autograd.Variable]", "kind" : "def"}, {"label" : "scopeInResource", "tail" : "(): Resource[IO, Scope]", "member" : "lamp.data.BatchStream.scopeInResource", "link" : "lamp\/data\/BatchStream$.html#scopeInResource:cats.effect.Resource[cats.effect.IO,lamp.Scope]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/data\/BatchStream$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/data\/BatchStream$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/data\/BatchStream$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/data\/BatchStream$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/data\/BatchStream$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/data\/BatchStream$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/data\/BatchStream$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/BatchStream$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/BatchStream$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/BatchStream$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/data\/BatchStream$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/data\/BatchStream$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/data\/BatchStream$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/data\/BatchStream$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/data\/BatchStream$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/data\/BatchStream$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/data\/BatchStream$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/data\/BatchStream$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/data\/BatchStream$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "lamp\/data\/BatchStream.html", "kind" : "trait"}, {"name" : "lamp.data.BufferedImageHelper", "shortDescription" : "", "object" : "lamp\/data\/BufferedImageHelper$.html", "members_object" : [{"label" : "toFloatTensor", "tail" : "(image: BufferedImage): Tensor", "member" : "lamp.data.BufferedImageHelper.toFloatTensor", "link" : "lamp\/data\/BufferedImageHelper$.html#toFloatTensor(image:java.awt.image.BufferedImage):aten.Tensor", "kind" : "def"}, {"label" : "fromDoubleTensor", "tail" : "(t: Tensor): BufferedImage", "member" : "lamp.data.BufferedImageHelper.fromDoubleTensor", "link" : "lamp\/data\/BufferedImageHelper$.html#fromDoubleTensor(t:aten.Tensor):java.awt.image.BufferedImage", "kind" : "def"}, {"label" : "fromFloatTensor", "tail" : "(t: Tensor): BufferedImage", "member" : "lamp.data.BufferedImageHelper.fromFloatTensor", "link" : "lamp\/data\/BufferedImageHelper$.html#fromFloatTensor(t:aten.Tensor):java.awt.image.BufferedImage", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/data\/BufferedImageHelper$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/data\/BufferedImageHelper$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/data\/BufferedImageHelper$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/data\/BufferedImageHelper$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/data\/BufferedImageHelper$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/data\/BufferedImageHelper$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/data\/BufferedImageHelper$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/BufferedImageHelper$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/BufferedImageHelper$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/BufferedImageHelper$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/data\/BufferedImageHelper$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/data\/BufferedImageHelper$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/data\/BufferedImageHelper$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/data\/BufferedImageHelper$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/data\/BufferedImageHelper$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/data\/BufferedImageHelper$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/data\/BufferedImageHelper$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/data\/BufferedImageHelper$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/data\/BufferedImageHelper$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "lamp.data.GraphBatchStream", "shortDescription" : "", "object" : "lamp\/data\/GraphBatchStream$.html", "members_object" : [{"label" : "bigGraphModeFullBatch", "tail" : "(nodes: STen, edges: STen, targetPerNode: STen): BatchStream[(Variable, Variable)]", "member" : "lamp.data.GraphBatchStream.bigGraphModeFullBatch", "link" : "lamp\/data\/GraphBatchStream$.html#bigGraphModeFullBatch(nodes:lamp.STen,edges:lamp.STen,targetPerNode:lamp.STen):lamp.data.BatchStream[(lamp.autograd.Variable,lamp.autograd.Variable)]", "kind" : "def"}, {"label" : "smallGraphMode", "tail" : "(minibatchSize: Int, graphNodesAndEdges: Vec[(STen, STen)], targetPerGraph: STen, device: Device, rng: Option[Generator]): BatchStream[(Variable, Variable, Variable)]", "member" : "lamp.data.GraphBatchStream.smallGraphMode", "link" : "lamp\/data\/GraphBatchStream$.html#smallGraphMode(minibatchSize:Int,graphNodesAndEdges:org.saddle.Vec[(lamp.STen,lamp.STen)],targetPerGraph:lamp.STen,device:lamp.Device,rng:Option[org.saddle.spire.random.Generator]):lamp.data.BatchStream[(lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable)]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/data\/GraphBatchStream$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/data\/GraphBatchStream$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/data\/GraphBatchStream$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/data\/GraphBatchStream$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/data\/GraphBatchStream$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/data\/GraphBatchStream$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/data\/GraphBatchStream$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/GraphBatchStream$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/GraphBatchStream$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/GraphBatchStream$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/data\/GraphBatchStream$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/data\/GraphBatchStream$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/data\/GraphBatchStream$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/data\/GraphBatchStream$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/data\/GraphBatchStream$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/data\/GraphBatchStream$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/data\/GraphBatchStream$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/data\/GraphBatchStream$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/data\/GraphBatchStream$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "lamp.data.IOLoops", "shortDescription" : "", "object" : "lamp\/data\/IOLoops$.html", "members_object" : [{"label" : "validationOneEpoch", "tail" : "(model: SupervisedModel[I, M], validationBatches: BatchStream[I], validationCallback: ValidationCallback, logger: Option[Logger], validationLogFrequency: Int, epochCount: Long, minimumCheckpointFile: Option[File], minimumValidationLossSoFar: Option[Double]): IO[Double]", "member" : "lamp.data.IOLoops.validationOneEpoch", "link" : "lamp\/data\/IOLoops$.html#validationOneEpoch[I,M<:lamp.nn.GenericModule[I,lamp.autograd.Variable]](model:lamp.nn.SupervisedModel[I,M],validationBatches:lamp.data.BatchStream[I],validationCallback:lamp.data.ValidationCallback,logger:Option[scribe.Logger],validationLogFrequency:Int,epochCount:Long,minimumCheckpointFile:Option[java.io.File],minimumValidationLossSoFar:Option[Double]):cats.effect.IO[Double]", "kind" : "def"}, {"label" : "oneEpoch", "tail" : "(model: ModelWithOptimizer[I, M], trainBatches: BatchStream[I], trainingCallback: TrainingCallback, logger: Option[Logger], trainLogFrequency: Int, learningRateScheduleFactor: Double): IO[Unit]", "member" : "lamp.data.IOLoops.oneEpoch", "link" : "lamp\/data\/IOLoops$.html#oneEpoch[I,M<:lamp.nn.GenericModule[I,lamp.autograd.Variable]](model:lamp.nn.ModelWithOptimizer[I,M],trainBatches:lamp.data.BatchStream[I],trainingCallback:lamp.data.TrainingCallback,logger:Option[scribe.Logger],trainLogFrequency:Int,learningRateScheduleFactor:Double):cats.effect.IO[Unit]", "kind" : "def"}, {"label" : "epochs", "tail" : "(model: SupervisedModel[I, M], optimizerFactory: (Seq[(STen, PTag)]) ⇒ Optimizer, trainBatchesOverEpoch: () ⇒ BatchStream[I], validationBatchesOverEpoch: Option[() ⇒ BatchStream[I]], epochs: Int, trainingCallback: TrainingCallback, validationCallback: ValidationCallback, checkpointFile: Option[File], minimumCheckpointFile: Option[File], logFrequency: Int, validationFrequency: Int, logger: Option[Logger], returnMinValidationLossModel: Seq[Int], returnDevice: Option[Device], learningRateSchedule: LearningRateSchedule)(arg0: Load[M], arg1: TrainingMode[M]): IO[(Int, SupervisedModel[I, M])]", "member" : "lamp.data.IOLoops.epochs", "link" : "lamp\/data\/IOLoops$.html#epochs[I,M<:lamp.nn.GenericModule[I,lamp.autograd.Variable]](model:lamp.nn.SupervisedModel[I,M],optimizerFactory:Seq[(lamp.STen,lamp.nn.PTag)]=>lamp.nn.Optimizer,trainBatchesOverEpoch:()=>lamp.data.BatchStream[I],validationBatchesOverEpoch:Option[()=>lamp.data.BatchStream[I]],epochs:Int,trainingCallback:lamp.data.TrainingCallback,validationCallback:lamp.data.ValidationCallback,checkpointFile:Option[java.io.File],minimumCheckpointFile:Option[java.io.File],logFrequency:Int,validationFrequency:Int,logger:Option[scribe.Logger],returnMinValidationLossModel:Seq[Int],returnDevice:Option[lamp.Device],learningRateSchedule:lamp.nn.LearningRateSchedule)(implicitevidence$1:lamp.nn.Load[M],implicitevidence$2:lamp.nn.TrainingMode[M]):cats.effect.IO[(Int,lamp.nn.SupervisedModel[I,M])]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/data\/IOLoops$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/data\/IOLoops$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/data\/IOLoops$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/data\/IOLoops$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/data\/IOLoops$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/data\/IOLoops$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/data\/IOLoops$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/IOLoops$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/IOLoops$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/IOLoops$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/data\/IOLoops$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/data\/IOLoops$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/data\/IOLoops$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/data\/IOLoops$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/data\/IOLoops$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/data\/IOLoops$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/data\/IOLoops$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/data\/IOLoops$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/data\/IOLoops$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "lamp.data.Peek", "shortDescription" : "", "members_case class" : [{"label" : "forward", "tail" : "(x: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.data.Peek.forward", "link" : "lamp\/data\/Peek.html#forward[S](x:lamp.autograd.Variable)(implicitevidence$1:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "state", "tail" : "(): Nil.type", "member" : "lamp.data.Peek.state", "link" : "lamp\/data\/Peek.html#state:scala.collection.immutable.Nil.type", "kind" : "def"}, {"member" : "lamp.data.Peek#<init>", "error" : "unsupported entity"}, {"label" : "label", "tail" : ": String", "member" : "lamp.data.Peek.label", "link" : "lamp\/data\/Peek.html#label:String", "kind" : "val"}, {"label" : "learnableParameters", "tail" : "(): Long", "member" : "lamp.nn.GenericModule.learnableParameters", "link" : "lamp\/data\/Peek.html#learnableParameters:Long", "kind" : "final def"}, {"label" : "gradients", "tail" : "(loss: Variable, zeroGrad: Boolean): Seq[Option[STen]]", "member" : "lamp.nn.GenericModule.gradients", "link" : "lamp\/data\/Peek.html#gradients(loss:lamp.autograd.Variable,zeroGrad:Boolean):Seq[Option[lamp.STen]]", "kind" : "final def"}, {"label" : "parameters", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.GenericModule.parameters", "link" : "lamp\/data\/Peek.html#parameters:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "final def"}, {"label" : "apply", "tail" : "(a: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.nn.GenericModule.apply", "link" : "lamp\/data\/Peek.html#apply[S](a:A)(implicitevidence$17:lamp.Sc[S]):B", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/data\/Peek.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/data\/Peek.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/data\/Peek.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/data\/Peek.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/data\/Peek.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/data\/Peek.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/data\/Peek.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/Peek.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/Peek.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/Peek.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/data\/Peek.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/data\/Peek.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/data\/Peek.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/data\/Peek.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/data\/Peek.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/data\/Peek.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/data\/Peek.html", "kind" : "case class"}, {"name" : "lamp.data.Reader", "shortDescription" : "", "object" : "lamp\/data\/Reader$.html", "members_object" : [{"label" : "loadFromChannel", "tail" : "(module: M with GenericModule[A, B], channel: Resource[IO, ReadableByteChannel], device: Device)(arg0: Load[M]): IO[Either[String, Unit]]", "member" : "lamp.data.Reader.loadFromChannel", "link" : "lamp\/data\/Reader$.html#loadFromChannel[A,B,M<:lamp.nn.GenericModule[A,B]](module:Mwithlamp.nn.GenericModule[A,B],channel:cats.effect.Resource[cats.effect.IO,java.nio.channels.ReadableByteChannel],device:lamp.Device)(implicitevidence$7:lamp.nn.Load[M]):cats.effect.IO[scala.util.Either[String,Unit]]", "kind" : "def"}, {"label" : "loadFromFile", "tail" : "(module: M with GenericModule[A, B], file: File, device: Device)(arg0: Load[M]): IO[Either[String, Unit]]", "member" : "lamp.data.Reader.loadFromFile", "link" : "lamp\/data\/Reader$.html#loadFromFile[A,B,M<:lamp.nn.GenericModule[A,B]](module:Mwithlamp.nn.GenericModule[A,B],file:java.io.File,device:lamp.Device)(implicitevidence$6:lamp.nn.Load[M]):cats.effect.IO[scala.util.Either[String,Unit]]", "kind" : "def"}, {"label" : "scalarTypeToScalarTag", "tail" : "(t: Byte): ScalarTag[_ >: Long with Float with Double <: AnyVal]", "member" : "lamp.data.Reader.scalarTypeToScalarTag", "link" : "lamp\/data\/Reader$.html#scalarTypeToScalarTag(t:Byte):org.saddle.scalar.ScalarTag[_>:LongwithFloatwithDouble<:AnyVal]", "kind" : "def"}, {"label" : "readTensorFromArray", "tail" : "(array: Array[Byte], device: Device)(arg0: ST[T]): Either[String, Tensor]", "member" : "lamp.data.Reader.readTensorFromArray", "link" : "lamp\/data\/Reader$.html#readTensorFromArray[T](array:Array[Byte],device:lamp.Device)(implicitevidence$5:org.saddle.ST[T]):scala.util.Either[String,aten.Tensor]", "kind" : "def"}, {"label" : "ByteChannel", "tail" : "", "member" : "lamp.data.Reader.ByteChannel", "link" : "lamp\/data\/Reader$.html#ByteChannelextendsReadableByteChannel", "kind" : "class"}, {"label" : "readTensorsFromChannel", "tail" : "(types: Seq[ScalarTag[_]], channel: ReadableByteChannel, device: Device): Either[String, Seq[Tensor]]", "member" : "lamp.data.Reader.readTensorsFromChannel", "link" : "lamp\/data\/Reader$.html#readTensorsFromChannel(types:Seq[org.saddle.scalar.ScalarTag[_]],channel:java.nio.channels.ReadableByteChannel,device:lamp.Device):scala.util.Either[String,Seq[aten.Tensor]]", "kind" : "def"}, {"label" : "readTensorFromChannel", "tail" : "(channel: ReadableByteChannel, device: Device)(arg0: ST[T]): Either[String, Tensor]", "member" : "lamp.data.Reader.readTensorFromChannel", "link" : "lamp\/data\/Reader$.html#readTensorFromChannel[T](channel:java.nio.channels.ReadableByteChannel,device:lamp.Device)(implicitevidence$4:org.saddle.ST[T]):scala.util.Either[String,aten.Tensor]", "kind" : "def"}, {"label" : "readTensorDataFromChannel", "tail" : "(channel: ReadableByteChannel, shape: List[Int], width: Int, device: Device)(arg0: ST[T]): Either[String, Tensor]", "member" : "lamp.data.Reader.readTensorDataFromChannel", "link" : "lamp\/data\/Reader$.html#readTensorDataFromChannel[T](channel:java.nio.channels.ReadableByteChannel,shape:List[Int],width:Int,device:lamp.Device)(implicitevidence$3:org.saddle.ST[T]):scala.util.Either[String,aten.Tensor]", "kind" : "def"}, {"label" : "readHeaderFromChannel", "tail" : "(channel: ReadableByteChannel)(arg0: ST[T]): Either[String, LinkedHashMap[String, Value]]", "member" : "lamp.data.Reader.readHeaderFromChannel", "link" : "lamp\/data\/Reader$.html#readHeaderFromChannel[T](channel:java.nio.channels.ReadableByteChannel)(implicitevidence$2:org.saddle.ST[T]):scala.util.Either[String,scala.collection.mutable.LinkedHashMap[String,ujson.Value]]", "kind" : "def"}, {"label" : "readFully", "tail" : "(bb: ByteBuffer, channel: ReadableByteChannel): Buffer", "member" : "lamp.data.Reader.readFully", "link" : "lamp\/data\/Reader$.html#readFully(bb:java.nio.ByteBuffer,channel:java.nio.channels.ReadableByteChannel):java.nio.Buffer", "kind" : "def"}, {"label" : "sequence", "tail" : "(s: Seq[Either[A, B]]): Either[A, Seq[B]]", "member" : "lamp.data.Reader.sequence", "link" : "lamp\/data\/Reader$.html#sequence[A,B](s:Seq[scala.util.Either[A,B]]):scala.util.Either[A,Seq[B]]", "kind" : "def"}, {"label" : "parse", "tail" : "(size: Int, from: ByteBuffer)(arg0: ST[T]): Either[String, Array[T]]", "member" : "lamp.data.Reader.parse", "link" : "lamp\/data\/Reader$.html#parse[T](size:Int,from:java.nio.ByteBuffer)(implicitevidence$1:org.saddle.ST[T]):scala.util.Either[String,Array[T]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/data\/Reader$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/data\/Reader$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/data\/Reader$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/data\/Reader$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/data\/Reader$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/data\/Reader$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/data\/Reader$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/Reader$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/Reader$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/Reader$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/data\/Reader$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/data\/Reader$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/data\/Reader$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/data\/Reader$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/data\/Reader$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/data\/Reader$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/data\/Reader$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/data\/Reader$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/data\/Reader$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "lamp.data.Text", "shortDescription" : "", "object" : "lamp\/data\/Text$.html", "members_object" : [{"label" : "minibatchesForSeq2Seq", "tail" : "(text: IndexedSeq[(Vector[Long], Vector[Long])], minibatchSize: Int, timeSteps: Int, pad: Long, device: Device, rng: Generator): BatchStream[(Variable, Variable)]", "member" : "lamp.data.Text.minibatchesForSeq2Seq", "link" : "lamp\/data\/Text$.html#minibatchesForSeq2Seq(text:IndexedSeq[(Vector[Long],Vector[Long])],minibatchSize:Int,timeSteps:Int,pad:Long,device:lamp.Device,rng:org.saddle.spire.random.Generator):lamp.data.BatchStream[(lamp.autograd.Variable,lamp.autograd.Variable)]", "kind" : "def"}, {"label" : "minibatchesFromText", "tail" : "(text: Vector[Int], minibatchSize: Int, timeSteps: Int, device: Device, rng: Generator): BatchStream[Variable]", "member" : "lamp.data.Text.minibatchesFromText", "link" : "lamp\/data\/Text$.html#minibatchesFromText(text:Vector[Int],minibatchSize:Int,timeSteps:Int,device:lamp.Device,rng:org.saddle.spire.random.Generator):lamp.data.BatchStream[lamp.autograd.Variable]", "kind" : "def"}, {"label" : "makePredictionBatch", "tail" : "(examples: Seq[Vector[Long]], device: Device)(scope: Scope): Variable", "member" : "lamp.data.Text.makePredictionBatch", "link" : "lamp\/data\/Text$.html#makePredictionBatch(examples:Seq[Vector[Long]],device:lamp.Device)(implicitscope:lamp.Scope):lamp.autograd.Variable", "kind" : "def"}, {"label" : "charsToIntegers", "tail" : "(text: String, chars: Map[Char, Int]): Vector[Int]", "member" : "lamp.data.Text.charsToIntegers", "link" : "lamp\/data\/Text$.html#charsToIntegers(text:String,chars:Map[Char,Int]):Vector[Int]", "kind" : "def"}, {"label" : "charsToIntegers", "tail" : "(text: String): (Map[Char, Int], Vector[Int])", "member" : "lamp.data.Text.charsToIntegers", "link" : "lamp\/data\/Text$.html#charsToIntegers(text:String):(scala.collection.immutable.Map[Char,Int],Vector[Int])", "kind" : "def"}, {"label" : "convertIntegersToText", "tail" : "(tensor: STen, vocab: Map[Int, Char]): Seq[String]", "member" : "lamp.data.Text.convertIntegersToText", "link" : "lamp\/data\/Text$.html#convertIntegersToText(tensor:lamp.STen,vocab:Map[Int,Char]):Seq[String]", "kind" : "def"}, {"label" : "convertLogitsToText", "tail" : "(tensor: STen, vocab: Map[Int, Char])(scope: Scope): Seq[String]", "member" : "lamp.data.Text.convertLogitsToText", "link" : "lamp\/data\/Text$.html#convertLogitsToText(tensor:lamp.STen,vocab:Map[Int,Char])(implicitscope:lamp.Scope):Seq[String]", "kind" : "def"}, {"label" : "sequencePredictionBeam", "tail" : "(prefix: Vector[Long], device: Device, module: M with StatefulModule[Variable, Variable, T], steps: Int, startSequence: Int, endOfSequence: Int)(is: InitState[M, T], scope: Scope): Seq[(STen, Double)]", "member" : "lamp.data.Text.sequencePredictionBeam", "link" : "lamp\/data\/Text$.html#sequencePredictionBeam[T,M<:lamp.nn.StatefulModule[lamp.autograd.Variable,lamp.autograd.Variable,T]](prefix:Vector[Long],device:lamp.Device,module:Mwithlamp.nn.StatefulModule[lamp.autograd.Variable,lamp.autograd.Variable,T],steps:Int,startSequence:Int,endOfSequence:Int)(implicitis:lamp.nn.InitState[M,T],implicitscope:lamp.Scope):Seq[(lamp.STen,Double)]", "kind" : "def"}, {"label" : "sequencePrediction", "tail" : "(batch: Seq[Vector[Long]], device: Device, module: M with StatefulModule[Variable, Variable, T], steps: Int)(is: InitState[M, T], scope: Scope): STen", "member" : "lamp.data.Text.sequencePrediction", "link" : "lamp\/data\/Text$.html#sequencePrediction[T,M<:lamp.nn.StatefulModule[lamp.autograd.Variable,lamp.autograd.Variable,T]](batch:Seq[Vector[Long]],device:lamp.Device,module:Mwithlamp.nn.StatefulModule[lamp.autograd.Variable,lamp.autograd.Variable,T],steps:Int)(implicitis:lamp.nn.InitState[M,T],implicitscope:lamp.Scope):lamp.STen", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/data\/Text$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/data\/Text$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/data\/Text$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/data\/Text$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/data\/Text$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/data\/Text$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/data\/Text$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/Text$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/Text$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/Text$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/data\/Text$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/data\/Text$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/data\/Text$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/data\/Text$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/data\/Text$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/data\/Text$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/data\/Text$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/data\/Text$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/data\/Text$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "lamp.data.TrainingCallback", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/data\/TrainingCallback.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/data\/TrainingCallback.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/data\/TrainingCallback.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/data\/TrainingCallback.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/data\/TrainingCallback.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/data\/TrainingCallback.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/data\/TrainingCallback.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/TrainingCallback.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/TrainingCallback.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/TrainingCallback.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/data\/TrainingCallback.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/data\/TrainingCallback.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/data\/TrainingCallback.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/data\/TrainingCallback.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/data\/TrainingCallback.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/data\/TrainingCallback.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/data\/TrainingCallback.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/data\/TrainingCallback.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/data\/TrainingCallback.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "apply", "tail" : "(trainingLoss: Double, batchCount: Int): Unit", "member" : "lamp.data.TrainingCallback.apply", "link" : "lamp\/data\/TrainingCallback.html#apply(trainingLoss:Double,batchCount:Int):Unit", "kind" : "abstract def"}], "shortDescription" : "", "object" : "lamp\/data\/TrainingCallback$.html", "members_object" : [{"label" : "noop", "tail" : ": TrainingCallback", "member" : "lamp.data.TrainingCallback.noop", "link" : "lamp\/data\/TrainingCallback$.html#noop:lamp.data.TrainingCallback", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/data\/TrainingCallback$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/data\/TrainingCallback$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/data\/TrainingCallback$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/data\/TrainingCallback$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/data\/TrainingCallback$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/data\/TrainingCallback$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/data\/TrainingCallback$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/TrainingCallback$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/TrainingCallback$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/TrainingCallback$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/data\/TrainingCallback$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/data\/TrainingCallback$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/data\/TrainingCallback$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/data\/TrainingCallback$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/data\/TrainingCallback$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/data\/TrainingCallback$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/data\/TrainingCallback$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/data\/TrainingCallback$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/data\/TrainingCallback$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "lamp\/data\/TrainingCallback.html", "kind" : "trait"}, {"name" : "lamp.data.ValidationCallback", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/data\/ValidationCallback.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/data\/ValidationCallback.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/data\/ValidationCallback.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/data\/ValidationCallback.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/data\/ValidationCallback.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/data\/ValidationCallback.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/data\/ValidationCallback.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/ValidationCallback.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/ValidationCallback.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/ValidationCallback.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/data\/ValidationCallback.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/data\/ValidationCallback.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/data\/ValidationCallback.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/data\/ValidationCallback.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/data\/ValidationCallback.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/data\/ValidationCallback.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/data\/ValidationCallback.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/data\/ValidationCallback.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/data\/ValidationCallback.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "apply", "tail" : "(validationOutput: STen, validationTarget: STen, validationLoss: Double, epochCount: Long): Unit", "member" : "lamp.data.ValidationCallback.apply", "link" : "lamp\/data\/ValidationCallback.html#apply(validationOutput:lamp.STen,validationTarget:lamp.STen,validationLoss:Double,epochCount:Long):Unit", "kind" : "abstract def"}], "shortDescription" : "", "object" : "lamp\/data\/ValidationCallback$.html", "members_object" : [{"label" : "logAccuracy", "tail" : "(logger: Logger): ValidationCallback", "member" : "lamp.data.ValidationCallback.logAccuracy", "link" : "lamp\/data\/ValidationCallback$.html#logAccuracy(logger:scribe.Logger):lamp.data.ValidationCallback", "kind" : "def"}, {"label" : "noop", "tail" : ": ValidationCallback", "member" : "lamp.data.ValidationCallback.noop", "link" : "lamp\/data\/ValidationCallback$.html#noop:lamp.data.ValidationCallback", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/data\/ValidationCallback$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/data\/ValidationCallback$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/data\/ValidationCallback$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/data\/ValidationCallback$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/data\/ValidationCallback$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/data\/ValidationCallback$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/data\/ValidationCallback$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/ValidationCallback$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/ValidationCallback$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/ValidationCallback$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/data\/ValidationCallback$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/data\/ValidationCallback$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/data\/ValidationCallback$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/data\/ValidationCallback$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/data\/ValidationCallback$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/data\/ValidationCallback$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/data\/ValidationCallback$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/data\/ValidationCallback$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/data\/ValidationCallback$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "lamp\/data\/ValidationCallback.html", "kind" : "trait"}, {"name" : "lamp.data.Writer", "shortDescription" : "Binary serialization for Tensor with primitive Double, Float, Long", "object" : "lamp\/data\/Writer$.html", "members_object" : [{"label" : "writeCheckpoint", "tail" : "(file: File, model: GenericModule[A, B]): IO[Either[String, Seq[Unit]]]", "member" : "lamp.data.Writer.writeCheckpoint", "link" : "lamp\/data\/Writer$.html#writeCheckpoint[A,B](file:java.io.File,model:lamp.nn.GenericModule[A,B]):cats.effect.IO[Either[String,Seq[Unit]]]", "kind" : "def"}, {"label" : "writeTensorsIntoChannel", "tail" : "(tensors: Seq[Tensor], channel: WritableByteChannel): Either[String, Seq[Unit]]", "member" : "lamp.data.Writer.writeTensorsIntoChannel", "link" : "lamp\/data\/Writer$.html#writeTensorsIntoChannel(tensors:Seq[aten.Tensor],channel:java.nio.channels.WritableByteChannel):Either[String,Seq[Unit]]", "kind" : "def"}, {"label" : "writeTensorIntoArray", "tail" : "(tensor: Tensor)(arg0: ST[T]): Either[String, Array[Byte]]", "member" : "lamp.data.Writer.writeTensorIntoArray", "link" : "lamp\/data\/Writer$.html#writeTensorIntoArray[T](tensor:aten.Tensor)(implicitevidence$7:org.saddle.ST[T]):Either[String,Array[Byte]]", "kind" : "def"}, {"label" : "writeFully", "tail" : "(bb: ByteBuffer, channel: WritableByteChannel): Unit", "member" : "lamp.data.Writer.writeFully", "link" : "lamp\/data\/Writer$.html#writeFully(bb:java.nio.ByteBuffer,channel:java.nio.channels.WritableByteChannel):Unit", "kind" : "def"}, {"label" : "writeTensorIntoChannel", "tail" : "(tensor: Tensor, channel: WritableByteChannel)(arg0: ST[T]): Either[String, Unit]", "member" : "lamp.data.Writer.writeTensorIntoChannel", "link" : "lamp\/data\/Writer$.html#writeTensorIntoChannel[T](tensor:aten.Tensor,channel:java.nio.channels.WritableByteChannel)(implicitevidence$6:org.saddle.ST[T]):Either[String,Unit]", "kind" : "def"}, {"label" : "tensorToArray", "tail" : "(tensor: Tensor, elem: Int)(arg0: ST[T]): Array[T]", "member" : "lamp.data.Writer.tensorToArray", "link" : "lamp\/data\/Writer$.html#tensorToArray[T](tensor:aten.Tensor,elem:Int)(implicitevidence$5:org.saddle.ST[T]):Array[T]", "kind" : "def"}, {"label" : "put", "tail" : "(t: Array[T], bb: ByteBuffer)(arg0: ST[T]): Either[String, Unit]", "member" : "lamp.data.Writer.put", "link" : "lamp\/data\/Writer$.html#put[T](t:Array[T],bb:java.nio.ByteBuffer)(implicitevidence$4:org.saddle.ST[T]):scala.util.Either[String,Unit]", "kind" : "def"}, {"label" : "createHeader", "tail" : "(descriptor: Either[String, String]): Either[String, Array[Byte]]", "member" : "lamp.data.Writer.createHeader", "link" : "lamp\/data\/Writer$.html#createHeader(descriptor:Either[String,String]):Either[String,Array[Byte]]", "kind" : "def"}, {"label" : "createTensorDescriptor", "tail" : "(tensor: Tensor)(arg0: ST[T]): Either[String, String]", "member" : "lamp.data.Writer.createTensorDescriptor", "link" : "lamp\/data\/Writer$.html#createTensorDescriptor[T](tensor:aten.Tensor)(implicitevidence$1:org.saddle.ST[T]):scala.util.Either[String,String]", "kind" : "def"}, {"label" : "KEY_v", "tail" : ": String", "member" : "lamp.data.Writer.KEY_v", "link" : "lamp\/data\/Writer$.html#KEY_v:String", "kind" : "val"}, {"label" : "KEY_shape", "tail" : ": String", "member" : "lamp.data.Writer.KEY_shape", "link" : "lamp\/data\/Writer$.html#KEY_shape:String", "kind" : "val"}, {"label" : "KEY_datatype", "tail" : ": String", "member" : "lamp.data.Writer.KEY_datatype", "link" : "lamp\/data\/Writer$.html#KEY_datatype:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/data\/Writer$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/data\/Writer$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/data\/Writer$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/data\/Writer$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/data\/Writer$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/data\/Writer$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/data\/Writer$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/Writer$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/Writer$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/data\/Writer$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/data\/Writer$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/data\/Writer$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/data\/Writer$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/data\/Writer$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/data\/Writer$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/data\/Writer$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/data\/Writer$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/data\/Writer$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/data\/Writer$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "lamp.tabular" : [{"name" : "lamp.tabular.AutoLoop", "shortDescription" : "", "object" : "lamp\/tabular\/AutoLoop$.html", "members_object" : [{"label" : "train", "tail" : "(dataFullbatch: STen, targetFullbatch: STen, folds: Seq[(Seq[Int], Seq[Int])], targetType: TargetType, dataLayout: Seq[Metadata], epochs: Seq[Int], weighDecays: Seq[Double], dropouts: Seq[Double], hiddenSizes: Seq[Int], knnK: Seq[Int], knnMinibatchSize: Int, extratreesK: Seq[Int], extratreesM: Seq[Int], extratreesNMin: Seq[Int], extratreeParallelism: Int, learningRate: Double, device: Device, precision: FloatingPointPrecision, minibatchSize: Int, logFrequency: Int, logger: Option[Logger], ensembleFolds: Seq[(Seq[Int], Seq[Int])], rng: Generator)(outerScope: Scope): IO[EnsembleModel]", "member" : "lamp.tabular.AutoLoop.train", "link" : "lamp\/tabular\/AutoLoop$.html#train(dataFullbatch:lamp.STen,targetFullbatch:lamp.STen,folds:Seq[(Seq[Int],Seq[Int])],targetType:lamp.tabular.TargetType,dataLayout:Seq[lamp.tabular.Metadata],epochs:Seq[Int],weighDecays:Seq[Double],dropouts:Seq[Double],hiddenSizes:Seq[Int],knnK:Seq[Int],knnMinibatchSize:Int,extratreesK:Seq[Int],extratreesM:Seq[Int],extratreesNMin:Seq[Int],extratreeParallelism:Int,learningRate:Double,device:lamp.Device,precision:lamp.FloatingPointPrecision,minibatchSize:Int,logFrequency:Int,logger:Option[scribe.Logger],ensembleFolds:Seq[(Seq[Int],Seq[Int])],rng:org.saddle.spire.random.Generator)(outerScope:lamp.Scope):cats.effect.IO[lamp.tabular.EnsembleModel]", "kind" : "def"}, {"label" : "computeValidationErrors", "tail" : "(pred: STen, targetType: TargetType, precision: FloatingPointPrecision, targetFullbatch: STen)(scope: Scope): Double", "member" : "lamp.tabular.AutoLoop.computeValidationErrors", "link" : "lamp\/tabular\/AutoLoop$.html#computeValidationErrors(pred:lamp.STen,targetType:lamp.tabular.TargetType,precision:lamp.FloatingPointPrecision,targetFullbatch:lamp.STen)(implicitscope:lamp.Scope):Double", "kind" : "def"}, {"label" : "trainAndAverageFolds", "tail" : "(dataFullbatch: STen, targetFullbatch: STen, predictions: Seq[STen], folds: Seq[(Seq[Int], Seq[Int])], targetType: TargetType, dataLayout: Seq[Metadata], epochs: Seq[Int], weightDecay: Double, dropout: Double, hiddenSize: Int, learningRate: Double, device: Device, precision: FloatingPointPrecision, minibatchSize: Int, logFrequency: Int, logger: Option[Logger], rng: Generator)(outerScope: Scope): IO[Seq[(Int, STen, Seq[NNBase])]]", "member" : "lamp.tabular.AutoLoop.trainAndAverageFolds", "link" : "lamp\/tabular\/AutoLoop$.html#trainAndAverageFolds(dataFullbatch:lamp.STen,targetFullbatch:lamp.STen,predictions:Seq[lamp.STen],folds:Seq[(Seq[Int],Seq[Int])],targetType:lamp.tabular.TargetType,dataLayout:Seq[lamp.tabular.Metadata],epochs:Seq[Int],weightDecay:Double,dropout:Double,hiddenSize:Int,learningRate:Double,device:lamp.Device,precision:lamp.FloatingPointPrecision,minibatchSize:Int,logFrequency:Int,logger:Option[scribe.Logger],rng:org.saddle.spire.random.Generator)(outerScope:lamp.Scope):cats.effect.IO[Seq[(Int,lamp.STen,Seq[lamp.tabular.NNBase])]]", "kind" : "def"}, {"label" : "trainAndAverageFoldsKnn", "tail" : "(k: Int, dataFullbatch: STen, targetFullbatch: STen, predictions: Seq[STen], folds: Seq[(Seq[Int], Seq[Int])], targetType: TargetType, dataLayout: Seq[Metadata], device: Device, precision: FloatingPointPrecision, minibatchSize: Int, logger: Option[Logger])(outerScope: Scope): IO[Seq[(Int, STen, Seq[KnnBase])]]", "member" : "lamp.tabular.AutoLoop.trainAndAverageFoldsKnn", "link" : "lamp\/tabular\/AutoLoop$.html#trainAndAverageFoldsKnn(k:Int,dataFullbatch:lamp.STen,targetFullbatch:lamp.STen,predictions:Seq[lamp.STen],folds:Seq[(Seq[Int],Seq[Int])],targetType:lamp.tabular.TargetType,dataLayout:Seq[lamp.tabular.Metadata],device:lamp.Device,precision:lamp.FloatingPointPrecision,minibatchSize:Int,logger:Option[scribe.Logger])(outerScope:lamp.Scope):cats.effect.IO[Seq[(Int,lamp.STen,Seq[lamp.tabular.KnnBase])]]", "kind" : "def"}, {"label" : "trainAndAverageFoldsExtratrees", "tail" : "(k: Int, m: Int, nMin: Int, parallelism: Int, dataFullbatch: STen, targetFullbatch: STen, predictions: Seq[STen], folds: Seq[(Seq[Int], Seq[Int])], targetType: TargetType, dataLayout: Seq[Metadata], logger: Option[Logger])(outerScope: Scope): IO[Seq[(Int, STen, Seq[ExtratreesBase])]]", "member" : "lamp.tabular.AutoLoop.trainAndAverageFoldsExtratrees", "link" : "lamp\/tabular\/AutoLoop$.html#trainAndAverageFoldsExtratrees(k:Int,m:Int,nMin:Int,parallelism:Int,dataFullbatch:lamp.STen,targetFullbatch:lamp.STen,predictions:Seq[lamp.STen],folds:Seq[(Seq[Int],Seq[Int])],targetType:lamp.tabular.TargetType,dataLayout:Seq[lamp.tabular.Metadata],logger:Option[scribe.Logger])(outerScope:lamp.Scope):cats.effect.IO[Seq[(Int,lamp.STen,Seq[lamp.tabular.ExtratreesBase])]]", "kind" : "def"}, {"label" : "ev2", "tail" : ": Movable[RegressionTree] { def list(t: lamp.RegressionTree): scala.collection.immutable.Nil.type }", "member" : "lamp.tabular.AutoLoop.ev2", "link" : "lamp\/tabular\/AutoLoop$.html#ev2:lamp.Movable[lamp.RegressionTree]{deflist(t:lamp.RegressionTree):scala.collection.immutable.Nil.type}", "kind" : "implicit val"}, {"label" : "ev1", "tail" : ": Movable[ClassificationTree] { def list(t: lamp.ClassificationTree): scala.collection.immutable.Nil.type }", "member" : "lamp.tabular.AutoLoop.ev1", "link" : "lamp\/tabular\/AutoLoop$.html#ev1:lamp.Movable[lamp.ClassificationTree]{deflist(t:lamp.ClassificationTree):scala.collection.immutable.Nil.type}", "kind" : "implicit val"}, {"label" : "makeCVFolds", "tail" : "(length: Int, k: Int, repeat: Int, rng: Generator): IndexedSeq[(Seq[Int], Seq[Int])]", "member" : "lamp.tabular.AutoLoop.makeCVFolds", "link" : "lamp\/tabular\/AutoLoop$.html#makeCVFolds(length:Int,k:Int,repeat:Int,rng:org.saddle.spire.random.Generator):scala.collection.immutable.IndexedSeq[(Seq[Int],Seq[Int])]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/tabular\/AutoLoop$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/tabular\/AutoLoop$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/tabular\/AutoLoop$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/tabular\/AutoLoop$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/tabular\/AutoLoop$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/tabular\/AutoLoop$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/tabular\/AutoLoop$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/AutoLoop$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/AutoLoop$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/AutoLoop$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/tabular\/AutoLoop$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/tabular\/AutoLoop$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/tabular\/AutoLoop$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/tabular\/AutoLoop$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/tabular\/AutoLoop$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/tabular\/AutoLoop$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/tabular\/AutoLoop$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/tabular\/AutoLoop$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/tabular\/AutoLoop$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "lamp.tabular.BaseModel", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/tabular\/BaseModel.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/tabular\/BaseModel.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/tabular\/BaseModel.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/tabular\/BaseModel.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/tabular\/BaseModel.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/tabular\/BaseModel.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/tabular\/BaseModel.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/BaseModel.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/BaseModel.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/BaseModel.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/tabular\/BaseModel.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/tabular\/BaseModel.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/tabular\/BaseModel.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/tabular\/BaseModel.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/tabular\/BaseModel.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/tabular\/BaseModel.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/tabular\/BaseModel.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/tabular\/BaseModel.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/tabular\/BaseModel.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "object" : "lamp\/tabular\/BaseModel$.html", "members_object" : [{"label" : "IsMovable", "tail" : "", "member" : "lamp.tabular.BaseModel.IsMovable", "link" : "lamp\/tabular\/BaseModel$.html#IsMovable", "kind" : "implicit object"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/tabular\/BaseModel$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/tabular\/BaseModel$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/tabular\/BaseModel$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/tabular\/BaseModel$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/tabular\/BaseModel$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/tabular\/BaseModel$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/tabular\/BaseModel$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/BaseModel$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/BaseModel$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/BaseModel$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/tabular\/BaseModel$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/tabular\/BaseModel$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/tabular\/BaseModel$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/tabular\/BaseModel$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/tabular\/BaseModel$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/tabular\/BaseModel$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/tabular\/BaseModel$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/tabular\/BaseModel$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/tabular\/BaseModel$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "lamp\/tabular\/BaseModel.html", "kind" : "trait"}, {"name" : "lamp.tabular.Categorical", "shortDescription" : "", "object" : "lamp\/tabular\/Categorical$.html", "members_object" : [{"label" : "rw", "tail" : ": upickle.default.ReadWriter[Categorical]", "member" : "lamp.tabular.Categorical.rw", "link" : "lamp\/tabular\/Categorical$.html#rw:upickle.default.ReadWriter[lamp.tabular.Categorical]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/tabular\/Categorical$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/tabular\/Categorical$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/tabular\/Categorical$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/tabular\/Categorical$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/tabular\/Categorical$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/tabular\/Categorical$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/tabular\/Categorical$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/Categorical$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/Categorical$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/Categorical$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/tabular\/Categorical$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/tabular\/Categorical$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/tabular\/Categorical$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/tabular\/Categorical$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/tabular\/Categorical$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/tabular\/Categorical$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/tabular\/Categorical$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/tabular\/Categorical$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/tabular\/Categorical$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"member" : "lamp.tabular.Categorical#<init>", "error" : "unsupported entity"}, {"label" : "classes", "tail" : ": Int", "member" : "lamp.tabular.Categorical.classes", "link" : "lamp\/tabular\/Categorical.html#classes:Int", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/tabular\/Categorical.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/tabular\/Categorical.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/tabular\/Categorical.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/tabular\/Categorical.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/tabular\/Categorical.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/tabular\/Categorical.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/tabular\/Categorical.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/Categorical.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/Categorical.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/Categorical.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/tabular\/Categorical.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/tabular\/Categorical.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/tabular\/Categorical.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/tabular\/Categorical.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/tabular\/Categorical.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/tabular\/Categorical.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/tabular\/Categorical.html", "kind" : "case class"}, {"name" : "lamp.tabular.Classification", "shortDescription" : "", "object" : "lamp\/tabular\/Classification$.html", "members_object" : [{"label" : "rw", "tail" : ": upickle.default.ReadWriter[Classification]", "member" : "lamp.tabular.Classification.rw", "link" : "lamp\/tabular\/Classification$.html#rw:upickle.default.ReadWriter[lamp.tabular.Classification]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/tabular\/Classification$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/tabular\/Classification$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/tabular\/Classification$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/tabular\/Classification$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/tabular\/Classification$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/tabular\/Classification$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/tabular\/Classification$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/Classification$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/Classification$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/Classification$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/tabular\/Classification$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/tabular\/Classification$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/tabular\/Classification$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/tabular\/Classification$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/tabular\/Classification$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/tabular\/Classification$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/tabular\/Classification$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/tabular\/Classification$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/tabular\/Classification$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"member" : "lamp.tabular.Classification#<init>", "error" : "unsupported entity"}, {"label" : "weights", "tail" : ": Seq[Double]", "member" : "lamp.tabular.Classification.weights", "link" : "lamp\/tabular\/Classification.html#weights:Seq[Double]", "kind" : "val"}, {"label" : "classes", "tail" : ": Int", "member" : "lamp.tabular.Classification.classes", "link" : "lamp\/tabular\/Classification.html#classes:Int", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/tabular\/Classification.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/tabular\/Classification.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/tabular\/Classification.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/tabular\/Classification.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/tabular\/Classification.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/tabular\/Classification.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/tabular\/Classification.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/Classification.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/Classification.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/Classification.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/tabular\/Classification.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/tabular\/Classification.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/tabular\/Classification.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/tabular\/Classification.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/tabular\/Classification.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/tabular\/Classification.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/tabular\/Classification.html", "kind" : "case class"}, {"name" : "lamp.tabular.ECDF", "shortDescription" : "", "object" : "lamp\/tabular\/ECDF$.html", "members_object" : [{"label" : "apply", "tail" : "(xs: Vec[Double]): ECDF", "member" : "lamp.tabular.ECDF.apply", "link" : "lamp\/tabular\/ECDF$.html#apply(xs:org.saddle.Vec[Double]):lamp.tabular.ECDF", "kind" : "def"}, {"label" : "apply", "tail" : "(t: Tensor): ECDF", "member" : "lamp.tabular.ECDF.apply", "link" : "lamp\/tabular\/ECDF$.html#apply(t:aten.Tensor):lamp.tabular.ECDF", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/tabular\/ECDF$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/tabular\/ECDF$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/tabular\/ECDF$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/tabular\/ECDF$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/tabular\/ECDF$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/tabular\/ECDF$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/tabular\/ECDF$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/ECDF$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/ECDF$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/ECDF$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/tabular\/ECDF$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/tabular\/ECDF$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/tabular\/ECDF$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/tabular\/ECDF$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/tabular\/ECDF$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/tabular\/ECDF$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/tabular\/ECDF$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/tabular\/ECDF$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/tabular\/ECDF$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "apply", "tail" : "(t: Tensor): Resource[IO, Tensor]", "member" : "lamp.tabular.ECDF.apply", "link" : "lamp\/tabular\/ECDF.html#apply(t:aten.Tensor):cats.effect.Resource[cats.effect.IO,aten.Tensor]", "kind" : "def"}, {"label" : "inverse", "tail" : "(n: Double): Double", "member" : "lamp.tabular.ECDF.inverse", "link" : "lamp\/tabular\/ECDF.html#inverse(n:Double):Double", "kind" : "def"}, {"label" : "inverse", "tail" : "(v: Vec[Double]): Vec[Double]", "member" : "lamp.tabular.ECDF.inverse", "link" : "lamp\/tabular\/ECDF.html#inverse(v:org.saddle.Vec[Double]):org.saddle.Vec[Double]", "kind" : "def"}, {"label" : "apply", "tail" : "(v: Vec[Double]): Vec[Double]", "member" : "lamp.tabular.ECDF.apply", "link" : "lamp\/tabular\/ECDF.html#apply(v:org.saddle.Vec[Double]):org.saddle.Vec[Double]", "kind" : "def"}, {"label" : "apply", "tail" : "(n: Double): Double", "member" : "lamp.tabular.ECDF.apply", "link" : "lamp\/tabular\/ECDF.html#apply(n:Double):Double", "kind" : "def"}, {"member" : "lamp.tabular.ECDF#<init>", "error" : "unsupported entity"}, {"label" : "y", "tail" : ": Vec[Double]", "member" : "lamp.tabular.ECDF.y", "link" : "lamp\/tabular\/ECDF.html#y:org.saddle.Vec[Double]", "kind" : "val"}, {"label" : "x", "tail" : ": Vec[Double]", "member" : "lamp.tabular.ECDF.x", "link" : "lamp\/tabular\/ECDF.html#x:org.saddle.Vec[Double]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/tabular\/ECDF.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/tabular\/ECDF.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/tabular\/ECDF.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/tabular\/ECDF.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/tabular\/ECDF.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/tabular\/ECDF.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/tabular\/ECDF.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/ECDF.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/ECDF.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/ECDF.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/tabular\/ECDF.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/tabular\/ECDF.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/tabular\/ECDF.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/tabular\/ECDF.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/tabular\/ECDF.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/tabular\/ECDF.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/tabular\/ECDF.html", "kind" : "case class"}, {"name" : "lamp.tabular.ECDFRegression", "shortDescription" : "", "object" : "lamp\/tabular\/ECDFRegression$.html", "members_object" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/tabular\/ECDFRegression$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/tabular\/ECDFRegression$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/tabular\/ECDFRegression$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/tabular\/ECDFRegression$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/tabular\/ECDFRegression$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/tabular\/ECDFRegression$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/tabular\/ECDFRegression$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/ECDFRegression$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/ECDFRegression$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/ECDFRegression$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/tabular\/ECDFRegression$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/tabular\/ECDFRegression$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/tabular\/ECDFRegression$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/tabular\/ECDFRegression$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/tabular\/ECDFRegression$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/tabular\/ECDFRegression$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/tabular\/ECDFRegression$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "lamp.tabular.EnsembleModel", "shortDescription" : "", "object" : "lamp\/tabular\/EnsembleModel$.html", "members_object" : [{"label" : "IsMovable", "tail" : "", "member" : "lamp.tabular.EnsembleModel.IsMovable", "link" : "lamp\/tabular\/EnsembleModel$.html#IsMovable", "kind" : "implicit object"}, {"label" : "train", "tail" : "(features: STen, target: STen, dataLayout: Seq[Metadata], targetType: TargetType, device: Device, logger: Option[Logger], logFrequency: Int, learningRate: Double, minibatchSize: Int, knnMinibatchSize: Int, rng: Generator)(scope: Scope): IO[EnsembleModel]", "member" : "lamp.tabular.EnsembleModel.train", "link" : "lamp\/tabular\/EnsembleModel$.html#train(features:lamp.STen,target:lamp.STen,dataLayout:Seq[lamp.tabular.Metadata],targetType:lamp.tabular.TargetType,device:lamp.Device,logger:Option[scribe.Logger],logFrequency:Int,learningRate:Double,minibatchSize:Int,knnMinibatchSize:Int,rng:org.saddle.spire.random.Generator)(implicitscope:lamp.Scope):cats.effect.IO[lamp.tabular.EnsembleModel]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/tabular\/EnsembleModel$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/tabular\/EnsembleModel$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/tabular\/EnsembleModel$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/tabular\/EnsembleModel$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/tabular\/EnsembleModel$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/tabular\/EnsembleModel$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/tabular\/EnsembleModel$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/EnsembleModel$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/EnsembleModel$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/EnsembleModel$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/tabular\/EnsembleModel$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/tabular\/EnsembleModel$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/tabular\/EnsembleModel$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/tabular\/EnsembleModel$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/tabular\/EnsembleModel$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/tabular\/EnsembleModel$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/tabular\/EnsembleModel$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/tabular\/EnsembleModel$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/tabular\/EnsembleModel$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "predict", "tail" : "(data: STen)(scope: Scope): IO[STen]", "member" : "lamp.tabular.EnsembleModel.predict", "link" : "lamp\/tabular\/EnsembleModel.html#predict(data:lamp.STen)(implicitscope:lamp.Scope):cats.effect.IO[lamp.STen]", "kind" : "def"}, {"member" : "lamp.tabular.EnsembleModel#<init>", "error" : "unsupported entity"}, {"label" : "validationLosses", "tail" : ": Seq[Double]", "member" : "lamp.tabular.EnsembleModel.validationLosses", "link" : "lamp\/tabular\/EnsembleModel.html#validationLosses:Seq[Double]", "kind" : "val"}, {"label" : "precision", "tail" : ": FloatingPointPrecision", "member" : "lamp.tabular.EnsembleModel.precision", "link" : "lamp\/tabular\/EnsembleModel.html#precision:lamp.FloatingPointPrecision", "kind" : "val"}, {"label" : "targetType", "tail" : ": TargetType", "member" : "lamp.tabular.EnsembleModel.targetType", "link" : "lamp\/tabular\/EnsembleModel.html#targetType:lamp.tabular.TargetType", "kind" : "val"}, {"label" : "dataLayout", "tail" : ": Seq[Metadata]", "member" : "lamp.tabular.EnsembleModel.dataLayout", "link" : "lamp\/tabular\/EnsembleModel.html#dataLayout:Seq[lamp.tabular.Metadata]", "kind" : "val"}, {"label" : "baseModels", "tail" : ": Seq[Seq[BaseModel]]", "member" : "lamp.tabular.EnsembleModel.baseModels", "link" : "lamp\/tabular\/EnsembleModel.html#baseModels:Seq[Seq[lamp.tabular.BaseModel]]", "kind" : "val"}, {"label" : "selectionModels", "tail" : ": Seq[BaseModel]", "member" : "lamp.tabular.EnsembleModel.selectionModels", "link" : "lamp\/tabular\/EnsembleModel.html#selectionModels:Seq[lamp.tabular.BaseModel]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/tabular\/EnsembleModel.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/tabular\/EnsembleModel.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/tabular\/EnsembleModel.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/tabular\/EnsembleModel.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/tabular\/EnsembleModel.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/tabular\/EnsembleModel.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/tabular\/EnsembleModel.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/EnsembleModel.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/EnsembleModel.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/EnsembleModel.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/tabular\/EnsembleModel.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/tabular\/EnsembleModel.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/tabular\/EnsembleModel.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/tabular\/EnsembleModel.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/tabular\/EnsembleModel.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/tabular\/EnsembleModel.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/tabular\/EnsembleModel.html", "kind" : "object"}, {"name" : "lamp.tabular.ExtratreesBase", "shortDescription" : "", "members_case class" : [{"member" : "lamp.tabular.ExtratreesBase#<init>", "error" : "unsupported entity"}, {"label" : "trees", "tail" : ": Either[Seq[ClassificationTree], Seq[RegressionTree]]", "member" : "lamp.tabular.ExtratreesBase.trees", "link" : "lamp\/tabular\/ExtratreesBase.html#trees:Either[Seq[lamp.ClassificationTree],Seq[lamp.RegressionTree]]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/tabular\/ExtratreesBase.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/tabular\/ExtratreesBase.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/tabular\/ExtratreesBase.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/tabular\/ExtratreesBase.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/tabular\/ExtratreesBase.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/tabular\/ExtratreesBase.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/tabular\/ExtratreesBase.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/ExtratreesBase.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/ExtratreesBase.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/ExtratreesBase.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/tabular\/ExtratreesBase.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/tabular\/ExtratreesBase.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/tabular\/ExtratreesBase.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/tabular\/ExtratreesBase.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/tabular\/ExtratreesBase.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/tabular\/ExtratreesBase.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/tabular\/ExtratreesBase.html", "kind" : "case class"}, {"name" : "lamp.tabular.KnnBase", "shortDescription" : "", "object" : "lamp\/tabular\/KnnBase$.html", "members_object" : [{"label" : "IsMovable", "tail" : "", "member" : "lamp.tabular.KnnBase.IsMovable", "link" : "lamp\/tabular\/KnnBase$.html#IsMovable", "kind" : "implicit object"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/tabular\/KnnBase$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/tabular\/KnnBase$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/tabular\/KnnBase$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/tabular\/KnnBase$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/tabular\/KnnBase$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/tabular\/KnnBase$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/tabular\/KnnBase$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/KnnBase$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/KnnBase$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/KnnBase$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/tabular\/KnnBase$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/tabular\/KnnBase$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/tabular\/KnnBase$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/tabular\/KnnBase$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/tabular\/KnnBase$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/tabular\/KnnBase$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/tabular\/KnnBase$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/tabular\/KnnBase$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/tabular\/KnnBase$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"member" : "lamp.tabular.KnnBase#<init>", "error" : "unsupported entity"}, {"label" : "target", "tail" : ": STen", "member" : "lamp.tabular.KnnBase.target", "link" : "lamp\/tabular\/KnnBase.html#target:lamp.STen", "kind" : "val"}, {"label" : "predictedFeatures", "tail" : ": Seq[STen]", "member" : "lamp.tabular.KnnBase.predictedFeatures", "link" : "lamp\/tabular\/KnnBase.html#predictedFeatures:Seq[lamp.STen]", "kind" : "val"}, {"label" : "features", "tail" : ": STen", "member" : "lamp.tabular.KnnBase.features", "link" : "lamp\/tabular\/KnnBase.html#features:lamp.STen", "kind" : "val"}, {"label" : "k", "tail" : ": Int", "member" : "lamp.tabular.KnnBase.k", "link" : "lamp\/tabular\/KnnBase.html#k:Int", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/tabular\/KnnBase.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/tabular\/KnnBase.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/tabular\/KnnBase.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/tabular\/KnnBase.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/tabular\/KnnBase.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/tabular\/KnnBase.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/tabular\/KnnBase.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/KnnBase.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/KnnBase.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/KnnBase.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/tabular\/KnnBase.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/tabular\/KnnBase.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/tabular\/KnnBase.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/tabular\/KnnBase.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/tabular\/KnnBase.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/tabular\/KnnBase.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/tabular\/KnnBase.html", "kind" : "case class"}, {"name" : "lamp.tabular.Metadata", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/tabular\/Metadata.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/tabular\/Metadata.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/tabular\/Metadata.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/tabular\/Metadata.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/tabular\/Metadata.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/tabular\/Metadata.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/tabular\/Metadata.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/Metadata.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/Metadata.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/Metadata.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/tabular\/Metadata.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/tabular\/Metadata.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/tabular\/Metadata.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/tabular\/Metadata.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/tabular\/Metadata.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/tabular\/Metadata.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/tabular\/Metadata.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/tabular\/Metadata.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/tabular\/Metadata.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "object" : "lamp\/tabular\/Metadata$.html", "members_object" : [{"label" : "mv", "tail" : ": Movable[Metadata] { def list(t: lamp.tabular.Metadata): scala.collection.immutable.Nil.type }", "member" : "lamp.tabular.Metadata.mv", "link" : "lamp\/tabular\/Metadata$.html#mv:lamp.Movable[lamp.tabular.Metadata]{deflist(t:lamp.tabular.Metadata):scala.collection.immutable.Nil.type}", "kind" : "implicit val"}, {"label" : "rw", "tail" : ": upickle.default.ReadWriter[Metadata]", "member" : "lamp.tabular.Metadata.rw", "link" : "lamp\/tabular\/Metadata$.html#rw:upickle.default.ReadWriter[lamp.tabular.Metadata]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/tabular\/Metadata$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/tabular\/Metadata$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/tabular\/Metadata$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/tabular\/Metadata$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/tabular\/Metadata$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/tabular\/Metadata$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/tabular\/Metadata$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/Metadata$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/Metadata$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/Metadata$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/tabular\/Metadata$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/tabular\/Metadata$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/tabular\/Metadata$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/tabular\/Metadata$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/tabular\/Metadata$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/tabular\/Metadata$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/tabular\/Metadata$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/tabular\/Metadata$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/tabular\/Metadata$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "lamp\/tabular\/Metadata.html", "kind" : "trait"}, {"name" : "lamp.tabular.NNBase", "shortDescription" : "", "object" : "lamp\/tabular\/NNBase$.html", "members_object" : [{"label" : "IsMovable", "tail" : "", "member" : "lamp.tabular.NNBase.IsMovable", "link" : "lamp\/tabular\/NNBase$.html#IsMovable", "kind" : "implicit object"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/tabular\/NNBase$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/tabular\/NNBase$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/tabular\/NNBase$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/tabular\/NNBase$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/tabular\/NNBase$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/tabular\/NNBase$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/tabular\/NNBase$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/NNBase$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/NNBase$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/NNBase$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/tabular\/NNBase$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/tabular\/NNBase$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/tabular\/NNBase$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/tabular\/NNBase$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/tabular\/NNBase$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/tabular\/NNBase$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/tabular\/NNBase$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/tabular\/NNBase$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/tabular\/NNBase$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"member" : "lamp.tabular.NNBase#<init>", "error" : "unsupported entity"}, {"label" : "state", "tail" : ": Seq[STen]", "member" : "lamp.tabular.NNBase.state", "link" : "lamp\/tabular\/NNBase.html#state:Seq[lamp.STen]", "kind" : "val"}, {"label" : "hiddenSize", "tail" : ": Int", "member" : "lamp.tabular.NNBase.hiddenSize", "link" : "lamp\/tabular\/NNBase.html#hiddenSize:Int", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/tabular\/NNBase.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/tabular\/NNBase.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/tabular\/NNBase.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/tabular\/NNBase.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/tabular\/NNBase.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/tabular\/NNBase.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/tabular\/NNBase.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/NNBase.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/NNBase.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/NNBase.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/tabular\/NNBase.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/tabular\/NNBase.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/tabular\/NNBase.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/tabular\/NNBase.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/tabular\/NNBase.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/tabular\/NNBase.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/tabular\/NNBase.html", "kind" : "case class"}, {"name" : "lamp.tabular.Numerical", "shortDescription" : "", "object" : "lamp\/tabular\/Numerical$.html", "members_object" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/tabular\/Numerical$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/tabular\/Numerical$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/tabular\/Numerical$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/tabular\/Numerical$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/tabular\/Numerical$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/tabular\/Numerical$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/tabular\/Numerical$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/Numerical$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/Numerical$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/Numerical$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/tabular\/Numerical$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/tabular\/Numerical$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/tabular\/Numerical$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/tabular\/Numerical$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/tabular\/Numerical$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/tabular\/Numerical$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/tabular\/Numerical$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "lamp.tabular.Regression", "shortDescription" : "", "object" : "lamp\/tabular\/Regression$.html", "members_object" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/tabular\/Regression$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/tabular\/Regression$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/tabular\/Regression$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/tabular\/Regression$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/tabular\/Regression$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/tabular\/Regression$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/tabular\/Regression$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/Regression$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/Regression$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/Regression$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/tabular\/Regression$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/tabular\/Regression$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/tabular\/Regression$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/tabular\/Regression$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/tabular\/Regression$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/tabular\/Regression$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/tabular\/Regression$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "lamp.tabular.Serialization", "shortDescription" : "", "object" : "lamp\/tabular\/Serialization$.html", "members_object" : [{"label" : "saveModel", "tail" : "(model: EnsembleModel, outPath: String): Unit", "member" : "lamp.tabular.Serialization.saveModel", "link" : "lamp\/tabular\/Serialization$.html#saveModel(model:lamp.tabular.EnsembleModel,outPath:String):Unit", "kind" : "def"}, {"label" : "loadModel", "tail" : "(path: String)(scope: Scope): Either[String, EnsembleModel]", "member" : "lamp.tabular.Serialization.loadModel", "link" : "lamp\/tabular\/Serialization$.html#loadModel(path:String)(implicitscope:lamp.Scope):scala.util.Either[String,lamp.tabular.EnsembleModel]", "kind" : "def"}, {"label" : "DTO", "tail" : "", "member" : "lamp.tabular.Serialization.DTO", "link" : "lamp\/tabular\/Serialization$.html#DTO", "kind" : "object"}, {"label" : "DTO", "tail" : "", "member" : "lamp.tabular.Serialization.DTO", "link" : "lamp\/tabular\/Serialization$.html#DTOextendsProductwithSerializable", "kind" : "case class"}, {"label" : "NNDto", "tail" : "", "member" : "lamp.tabular.Serialization.NNDto", "link" : "lamp\/tabular\/Serialization$.html#NNDto", "kind" : "object"}, {"label" : "NNDto", "tail" : "", "member" : "lamp.tabular.Serialization.NNDto", "link" : "lamp\/tabular\/Serialization$.html#NNDtoextendsSerialization.BaseModelDTOwithProductwithSerializable", "kind" : "case class"}, {"label" : "KnnDto", "tail" : "", "member" : "lamp.tabular.Serialization.KnnDto", "link" : "lamp\/tabular\/Serialization$.html#KnnDto", "kind" : "object"}, {"label" : "KnnDto", "tail" : "", "member" : "lamp.tabular.Serialization.KnnDto", "link" : "lamp\/tabular\/Serialization$.html#KnnDtoextendsSerialization.BaseModelDTOwithProductwithSerializable", "kind" : "case class"}, {"label" : "ExtratreesDto", "tail" : "", "member" : "lamp.tabular.Serialization.ExtratreesDto", "link" : "lamp\/tabular\/Serialization$.html#ExtratreesDto", "kind" : "object"}, {"label" : "ExtratreesDto", "tail" : "", "member" : "lamp.tabular.Serialization.ExtratreesDto", "link" : "lamp\/tabular\/Serialization$.html#ExtratreesDtoextendsSerialization.BaseModelDTOwithProductwithSerializable", "kind" : "case class"}, {"label" : "BaseModelDTO", "tail" : "", "member" : "lamp.tabular.Serialization.BaseModelDTO", "link" : "lamp\/tabular\/Serialization$.html#BaseModelDTO", "kind" : "object"}, {"label" : "BaseModelDTO", "tail" : "", "member" : "lamp.tabular.Serialization.BaseModelDTO", "link" : "lamp\/tabular\/Serialization$.html#BaseModelDTOextendsAnyRef", "kind" : "sealed trait"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/tabular\/Serialization$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/tabular\/Serialization$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/tabular\/Serialization$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/tabular\/Serialization$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/tabular\/Serialization$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/tabular\/Serialization$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/tabular\/Serialization$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/Serialization$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/Serialization$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/Serialization$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/tabular\/Serialization$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/tabular\/Serialization$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/tabular\/Serialization$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/tabular\/Serialization$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/tabular\/Serialization$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/tabular\/Serialization$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/tabular\/Serialization$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/tabular\/Serialization$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/tabular\/Serialization$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "lamp.tabular.TabularEmbedding", "shortDescription" : "", "object" : "lamp\/tabular\/TabularEmbedding$.html", "members_object" : [{"label" : "load", "tail" : "(): Load[TabularEmbedding]", "member" : "lamp.tabular.TabularEmbedding.load", "link" : "lamp\/tabular\/TabularEmbedding$.html#load:lamp.nn.Load[lamp.tabular.TabularEmbedding]", "kind" : "implicit def"}, {"label" : "trainingMode", "tail" : "(): TrainingMode[TabularEmbedding]", "member" : "lamp.tabular.TabularEmbedding.trainingMode", "link" : "lamp\/tabular\/TabularEmbedding$.html#trainingMode:lamp.nn.TrainingMode[lamp.tabular.TabularEmbedding]", "kind" : "implicit def"}, {"label" : "make", "tail" : "(categoricalClassesWithEmbeddingDimensions: Seq[(Int, Int)], tOpt: TensorOptions)(scope: Scope): TabularEmbedding", "member" : "lamp.tabular.TabularEmbedding.make", "link" : "lamp\/tabular\/TabularEmbedding$.html#make(categoricalClassesWithEmbeddingDimensions:Seq[(Int,Int)],tOpt:aten.TensorOptions)(implicitscope:lamp.Scope):lamp.tabular.TabularEmbedding", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/tabular\/TabularEmbedding$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/tabular\/TabularEmbedding$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/tabular\/TabularEmbedding$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/tabular\/TabularEmbedding$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/tabular\/TabularEmbedding$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/tabular\/TabularEmbedding$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/tabular\/TabularEmbedding$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/TabularEmbedding$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/TabularEmbedding$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/TabularEmbedding$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/tabular\/TabularEmbedding$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/tabular\/TabularEmbedding$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/tabular\/TabularEmbedding$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/tabular\/TabularEmbedding$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/tabular\/TabularEmbedding$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/tabular\/TabularEmbedding$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/tabular\/TabularEmbedding$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/tabular\/TabularEmbedding$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/tabular\/TabularEmbedding$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "forward", "tail" : "(x: (Seq[Variable], Variable))(arg0: Sc[S]): Variable", "member" : "lamp.tabular.TabularEmbedding.forward", "link" : "lamp\/tabular\/TabularEmbedding.html#forward[S](x:(Seq[lamp.autograd.Variable],lamp.autograd.Variable))(implicitevidence$1:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "state", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.tabular.TabularEmbedding.state", "link" : "lamp\/tabular\/TabularEmbedding.html#state:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "def"}, {"member" : "lamp.tabular.TabularEmbedding#<init>", "error" : "unsupported entity"}, {"label" : "categoricalEmbeddings", "tail" : ": Seq[Embedding]", "member" : "lamp.tabular.TabularEmbedding.categoricalEmbeddings", "link" : "lamp\/tabular\/TabularEmbedding.html#categoricalEmbeddings:Seq[lamp.nn.Embedding]", "kind" : "val"}, {"label" : "learnableParameters", "tail" : "(): Long", "member" : "lamp.nn.GenericModule.learnableParameters", "link" : "lamp\/tabular\/TabularEmbedding.html#learnableParameters:Long", "kind" : "final def"}, {"label" : "gradients", "tail" : "(loss: Variable, zeroGrad: Boolean): Seq[Option[STen]]", "member" : "lamp.nn.GenericModule.gradients", "link" : "lamp\/tabular\/TabularEmbedding.html#gradients(loss:lamp.autograd.Variable,zeroGrad:Boolean):Seq[Option[lamp.STen]]", "kind" : "final def"}, {"label" : "parameters", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.GenericModule.parameters", "link" : "lamp\/tabular\/TabularEmbedding.html#parameters:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "final def"}, {"label" : "apply", "tail" : "(a: (Seq[Variable], Variable))(arg0: Sc[S]): Variable", "member" : "lamp.nn.GenericModule.apply", "link" : "lamp\/tabular\/TabularEmbedding.html#apply[S](a:A)(implicitevidence$17:lamp.Sc[S]):B", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/tabular\/TabularEmbedding.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/tabular\/TabularEmbedding.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/tabular\/TabularEmbedding.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/tabular\/TabularEmbedding.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/tabular\/TabularEmbedding.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/tabular\/TabularEmbedding.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/tabular\/TabularEmbedding.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/TabularEmbedding.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/TabularEmbedding.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/TabularEmbedding.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/tabular\/TabularEmbedding.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/tabular\/TabularEmbedding.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/tabular\/TabularEmbedding.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/tabular\/TabularEmbedding.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/tabular\/TabularEmbedding.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/tabular\/TabularEmbedding.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/tabular\/TabularEmbedding.html", "kind" : "case class"}, {"name" : "lamp.tabular.TabularResidual", "shortDescription" : "", "object" : "lamp\/tabular\/TabularResidual$.html", "members_object" : [{"label" : "load", "tail" : "(arg0: Load[M2], arg1: Load[B2]): Load[TabularResidual[M2, B2]]", "member" : "lamp.tabular.TabularResidual.load", "link" : "lamp\/tabular\/TabularResidual$.html#load[M2<:lamp.nn.Module,B2<:lamp.nn.Module](implicitevidence$4:lamp.nn.Load[M2],implicitevidence$5:lamp.nn.Load[B2]):lamp.nn.Load[lamp.tabular.TabularResidual[M2,B2]]", "kind" : "implicit def"}, {"label" : "trainingMode", "tail" : "(arg0: TrainingMode[M2], arg1: TrainingMode[B2]): TrainingMode[TabularResidual[M2, B2]]", "member" : "lamp.tabular.TabularResidual.trainingMode", "link" : "lamp\/tabular\/TabularResidual$.html#trainingMode[M2<:lamp.nn.Module,B2<:lamp.nn.Module](implicitevidence$2:lamp.nn.TrainingMode[M2],implicitevidence$3:lamp.nn.TrainingMode[B2]):lamp.nn.TrainingMode[lamp.tabular.TabularResidual[M2,B2]]", "kind" : "implicit def"}, {"label" : "make", "tail" : "(inChannels: Int, hiddenChannels: Int, outChannels: Int, tOpt: TensorOptions, dropout: Double)(scope: Scope): TabularResidual[Seq3[Variable, Variable, Variable, Variable, Seq4[Variable, Variable, Variable, Variable, Variable, BatchNorm with GenericModule[Variable, Variable], Dropout with GenericModule[Variable, Variable], Linear with GenericModule[Variable, Variable], Fun with GenericModule[Variable, Variable]] with GenericModule[Variable, Variable], Seq4[Variable, Variable, Variable, Variable, Variable, BatchNorm with GenericModule[Variable, Variable], Dropout with GenericModule[Variable, Variable], Linear with GenericModule[Variable, Variable], Fun with GenericModule[Variable, Variable]] with GenericModule[Variable, Variable], Seq3[Variable, Variable, Variable, Variable, BatchNorm with GenericModule[Variable, Variable], Dropout with GenericModule[Variable, Variable], Linear with GenericModule[Variable, Variable]] with GenericModule[Variable, Variable]], Seq2[Variable, Variable, Variable, BatchNorm with GenericModule[Variable, Variable], Linear with GenericModule[Variable, Variable]]]", "member" : "lamp.tabular.TabularResidual.make", "link" : "lamp\/tabular\/TabularResidual$.html#make(inChannels:Int,hiddenChannels:Int,outChannels:Int,tOpt:aten.TensorOptions,dropout:Double)(implicitscope:lamp.Scope):lamp.tabular.TabularResidual[lamp.nn.Seq3[lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.nn.Seq4[lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.nn.BatchNormwithlamp.nn.GenericModule[lamp.autograd.Variable,lamp.autograd.Variable],lamp.nn.Dropoutwithlamp.nn.GenericModule[lamp.autograd.Variable,lamp.autograd.Variable],lamp.nn.Linearwithlamp.nn.GenericModule[lamp.autograd.Variable,lamp.autograd.Variable],lamp.nn.Funwithlamp.nn.GenericModule[lamp.autograd.Variable,lamp.autograd.Variable]]withlamp.nn.GenericModule[lamp.autograd.Variable,lamp.autograd.Variable],lamp.nn.Seq4[lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.nn.BatchNormwithlamp.nn.GenericModule[lamp.autograd.Variable,lamp.autograd.Variable],lamp.nn.Dropoutwithlamp.nn.GenericModule[lamp.autograd.Variable,lamp.autograd.Variable],lamp.nn.Linearwithlamp.nn.GenericModule[lamp.autograd.Variable,lamp.autograd.Variable],lamp.nn.Funwithlamp.nn.GenericModule[lamp.autograd.Variable,lamp.autograd.Variable]]withlamp.nn.GenericModule[lamp.autograd.Variable,lamp.autograd.Variable],lamp.nn.Seq3[lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.nn.BatchNormwithlamp.nn.GenericModule[lamp.autograd.Variable,lamp.autograd.Variable],lamp.nn.Dropoutwithlamp.nn.GenericModule[lamp.autograd.Variable,lamp.autograd.Variable],lamp.nn.Linearwithlamp.nn.GenericModule[lamp.autograd.Variable,lamp.autograd.Variable]]withlamp.nn.GenericModule[lamp.autograd.Variable,lamp.autograd.Variable]],lamp.nn.Seq2[lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.nn.BatchNormwithlamp.nn.GenericModule[lamp.autograd.Variable,lamp.autograd.Variable],lamp.nn.Linearwithlamp.nn.GenericModule[lamp.autograd.Variable,lamp.autograd.Variable]]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/tabular\/TabularResidual$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/tabular\/TabularResidual$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/tabular\/TabularResidual$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/tabular\/TabularResidual$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/tabular\/TabularResidual$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/tabular\/TabularResidual$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/tabular\/TabularResidual$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/TabularResidual$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/TabularResidual$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/TabularResidual$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/tabular\/TabularResidual$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/tabular\/TabularResidual$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/tabular\/TabularResidual$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/tabular\/TabularResidual$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/tabular\/TabularResidual$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/tabular\/TabularResidual$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/tabular\/TabularResidual$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/tabular\/TabularResidual$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/tabular\/TabularResidual$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "forward", "tail" : "(x: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.tabular.TabularResidual.forward", "link" : "lamp\/tabular\/TabularResidual.html#forward[S](x:lamp.autograd.Variable)(implicitevidence$1:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "state", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.tabular.TabularResidual.state", "link" : "lamp\/tabular\/TabularResidual.html#state:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "def"}, {"member" : "lamp.tabular.TabularResidual#<init>", "error" : "unsupported entity"}, {"label" : "block", "tail" : ": Block with Module", "member" : "lamp.tabular.TabularResidual.block", "link" : "lamp\/tabular\/TabularResidual.html#block:Blockwithlamp.nn.Module", "kind" : "val"}, {"label" : "straight", "tail" : ": B2 with Module", "member" : "lamp.tabular.TabularResidual.straight", "link" : "lamp\/tabular\/TabularResidual.html#straight:B2withlamp.nn.Module", "kind" : "val"}, {"label" : "learnableParameters", "tail" : "(): Long", "member" : "lamp.nn.GenericModule.learnableParameters", "link" : "lamp\/tabular\/TabularResidual.html#learnableParameters:Long", "kind" : "final def"}, {"label" : "gradients", "tail" : "(loss: Variable, zeroGrad: Boolean): Seq[Option[STen]]", "member" : "lamp.nn.GenericModule.gradients", "link" : "lamp\/tabular\/TabularResidual.html#gradients(loss:lamp.autograd.Variable,zeroGrad:Boolean):Seq[Option[lamp.STen]]", "kind" : "final def"}, {"label" : "parameters", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.GenericModule.parameters", "link" : "lamp\/tabular\/TabularResidual.html#parameters:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "final def"}, {"label" : "apply", "tail" : "(a: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.nn.GenericModule.apply", "link" : "lamp\/tabular\/TabularResidual.html#apply[S](a:A)(implicitevidence$17:lamp.Sc[S]):B", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/tabular\/TabularResidual.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/tabular\/TabularResidual.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/tabular\/TabularResidual.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/tabular\/TabularResidual.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/tabular\/TabularResidual.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/tabular\/TabularResidual.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/tabular\/TabularResidual.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/TabularResidual.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/TabularResidual.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/TabularResidual.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/tabular\/TabularResidual.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/tabular\/TabularResidual.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/tabular\/TabularResidual.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/tabular\/TabularResidual.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/tabular\/TabularResidual.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/tabular\/TabularResidual.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/tabular\/TabularResidual.html", "kind" : "case class"}, {"name" : "lamp.tabular.TargetType", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/tabular\/TargetType.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/tabular\/TargetType.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/tabular\/TargetType.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/tabular\/TargetType.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/tabular\/TargetType.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/tabular\/TargetType.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/tabular\/TargetType.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/TargetType.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/TargetType.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/TargetType.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/tabular\/TargetType.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/tabular\/TargetType.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/tabular\/TargetType.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/tabular\/TargetType.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/tabular\/TargetType.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/tabular\/TargetType.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/tabular\/TargetType.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/tabular\/TargetType.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/tabular\/TargetType.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "object" : "lamp\/tabular\/TargetType$.html", "members_object" : [{"label" : "rw", "tail" : ": upickle.default.ReadWriter[TargetType]", "member" : "lamp.tabular.TargetType.rw", "link" : "lamp\/tabular\/TargetType$.html#rw:upickle.default.ReadWriter[lamp.tabular.TargetType]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/tabular\/TargetType$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/tabular\/TargetType$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/tabular\/TargetType$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/tabular\/TargetType$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/tabular\/TargetType$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/tabular\/TargetType$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/tabular\/TargetType$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/TargetType$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/TargetType$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/tabular\/TargetType$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/tabular\/TargetType$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/tabular\/TargetType$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/tabular\/TargetType$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/tabular\/TargetType$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/tabular\/TargetType$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/tabular\/TargetType$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/tabular\/TargetType$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/tabular\/TargetType$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/tabular\/TargetType$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "lamp\/tabular\/TargetType.html", "kind" : "trait"}], "lamp.util" : [{"name" : "lamp.util.NDArray", "shortDescription" : "INTERNAL API", "object" : "lamp\/util\/NDArray$.html", "members_object" : [{"label" : "tensorToFloatNDArray", "tail" : "(t: Tensor): NDArray[Float]", "member" : "lamp.util.NDArray.tensorToFloatNDArray", "link" : "lamp\/util\/NDArray$.html#tensorToFloatNDArray(t:aten.Tensor):lamp.util.NDArray[Float]", "kind" : "def"}, {"label" : "tensorToLongNDArray", "tail" : "(t: Tensor): NDArray[Long]", "member" : "lamp.util.NDArray.tensorToLongNDArray", "link" : "lamp\/util\/NDArray$.html#tensorToLongNDArray(t:aten.Tensor):lamp.util.NDArray[Long]", "kind" : "def"}, {"label" : "tensorToNDArray", "tail" : "(t: Tensor): NDArray[Double]", "member" : "lamp.util.NDArray.tensorToNDArray", "link" : "lamp\/util\/NDArray$.html#tensorToNDArray(t:aten.Tensor):lamp.util.NDArray[Double]", "kind" : "def"}, {"label" : "tensorFromLongNDArray", "tail" : "(m: NDArray[Long], cuda: Boolean): Tensor", "member" : "lamp.util.NDArray.tensorFromLongNDArray", "link" : "lamp\/util\/NDArray$.html#tensorFromLongNDArray(m:lamp.util.NDArray[Long],cuda:Boolean):aten.Tensor", "kind" : "def"}, {"label" : "tensorFromNDArray", "tail" : "(m: NDArray[Double], cuda: Boolean): Tensor", "member" : "lamp.util.NDArray.tensorFromNDArray", "link" : "lamp\/util\/NDArray$.html#tensorFromNDArray(m:lamp.util.NDArray[Double],cuda:Boolean):aten.Tensor", "kind" : "def"}, {"label" : "zeros", "tail" : "(shape: List[Int]): NDArray[Double]", "member" : "lamp.util.NDArray.zeros", "link" : "lamp\/util\/NDArray$.html#zeros(shape:List[Int]):lamp.util.NDArray[Double]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/util\/NDArray$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/util\/NDArray$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/util\/NDArray$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/util\/NDArray$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/util\/NDArray$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/util\/NDArray$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/util\/NDArray$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/util\/NDArray$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/util\/NDArray$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/util\/NDArray$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/util\/NDArray$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/util\/NDArray$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/util\/NDArray$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/util\/NDArray$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/util\/NDArray$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/util\/NDArray$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/util\/NDArray$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/util\/NDArray$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/util\/NDArray$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "-", "tail" : "(other: NDArray[T])(num: NUM[T], ct: ClassTag[T]): NDArray[T]", "member" : "lamp.util.NDArray.-", "link" : "lamp\/util\/NDArray.html#-(other:lamp.util.NDArray[T])(implicitnum:org.saddle.NUM[T],implicitct:scala.reflect.ClassTag[T]):lamp.util.NDArray[T]", "kind" : "def"}, {"label" : "+", "tail" : "(other: NDArray[T])(num: NUM[T], ct: ClassTag[T]): NDArray[T]", "member" : "lamp.util.NDArray.+", "link" : "lamp\/util\/NDArray.html#+(other:lamp.util.NDArray[T])(implicitnum:org.saddle.NUM[T],implicitct:scala.reflect.ClassTag[T]):lamp.util.NDArray[T]", "kind" : "def"}, {"label" : "set", "tail" : "(idx: List[Int], v: T): Unit", "member" : "lamp.util.NDArray.set", "link" : "lamp\/util\/NDArray.html#set(idx:List[Int],v:T):Unit", "kind" : "def"}, {"label" : "mapWithIndex", "tail" : "(f: (T, List[Int]) ⇒ B)(arg0: ClassTag[B]): NDArray[B]", "member" : "lamp.util.NDArray.mapWithIndex", "link" : "lamp\/util\/NDArray.html#mapWithIndex[B](f:(T,List[Int])=>B)(implicitevidence$1:scala.reflect.ClassTag[B]):lamp.util.NDArray[B]", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "lamp.util.NDArray.toString", "link" : "lamp\/util\/NDArray.html#toString():String", "kind" : "def"}, {"label" : "toVec", "tail" : "(st: ST[T]): Vec[T]", "member" : "lamp.util.NDArray.toVec", "link" : "lamp\/util\/NDArray.html#toVec(implicitst:org.saddle.ST[T]):org.saddle.Vec[T]", "kind" : "def"}, {"label" : "toArray", "tail" : "(): Array[T]", "member" : "lamp.util.NDArray.toArray", "link" : "lamp\/util\/NDArray.html#toArray:Array[T]", "kind" : "def"}, {"label" : "shapeOffsets", "tail" : "(): List[Int]", "member" : "lamp.util.NDArray.shapeOffsets", "link" : "lamp\/util\/NDArray.html#shapeOffsets:List[Int]", "kind" : "def"}, {"label" : "reshape", "tail" : "(ns: List[Int]): NDArray[T]", "member" : "lamp.util.NDArray.reshape", "link" : "lamp\/util\/NDArray.html#reshape(ns:List[Int]):lamp.util.NDArray[T]", "kind" : "def"}, {"member" : "lamp.util.NDArray#<init>", "error" : "unsupported entity"}, {"label" : "shape", "tail" : ": List[Int]", "member" : "lamp.util.NDArray.shape", "link" : "lamp\/util\/NDArray.html#shape:List[Int]", "kind" : "val"}, {"label" : "data", "tail" : ": Array[T]", "member" : "lamp.util.NDArray.data", "link" : "lamp\/util\/NDArray.html#data:Array[T]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/util\/NDArray.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/util\/NDArray.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/util\/NDArray.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/util\/NDArray.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/util\/NDArray.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/util\/NDArray.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/util\/NDArray.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/util\/NDArray.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/util\/NDArray.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/util\/NDArray.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/util\/NDArray.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/util\/NDArray.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/util\/NDArray.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/util\/NDArray.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/util\/NDArray.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/util\/NDArray.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/util\/NDArray.html", "kind" : "case class"}, {"name" : "lamp.util.syntax", "shortDescription" : "", "members_class" : [{"label" : "toLongVec", "tail" : "(): Vec[Long]", "member" : "lamp.util.syntax.toLongVec", "link" : "lamp\/util\/package$$syntax.html#toLongVec:org.saddle.Vec[Long]", "kind" : "def"}, {"label" : "toLongMat", "tail" : "(): Mat[Long]", "member" : "lamp.util.syntax.toLongMat", "link" : "lamp\/util\/package$$syntax.html#toLongMat:org.saddle.Mat[Long]", "kind" : "def"}, {"label" : "toMat", "tail" : "(): Mat[Double]", "member" : "lamp.util.syntax.toMat", "link" : "lamp\/util\/package$$syntax.html#toMat:org.saddle.Mat[Double]", "kind" : "def"}, {"label" : "toDoubleArray", "tail" : "(): Array[Double]", "member" : "lamp.util.syntax.toDoubleArray", "link" : "lamp\/util\/package$$syntax.html#toDoubleArray:Array[Double]", "kind" : "def"}, {"label" : "size", "tail" : "(): Long", "member" : "lamp.util.syntax.size", "link" : "lamp\/util\/package$$syntax.html#size:Long", "kind" : "def"}, {"label" : "options", "tail" : "(): TensorOptions", "member" : "lamp.util.syntax.options", "link" : "lamp\/util\/package$$syntax.html#options:aten.TensorOptions", "kind" : "def"}, {"label" : "shape", "tail" : "(): List[Long]", "member" : "lamp.util.syntax.shape", "link" : "lamp\/util\/package$$syntax.html#shape:List[Long]", "kind" : "def"}, {"label" : "copy", "tail" : "(): Tensor", "member" : "lamp.util.syntax.copy", "link" : "lamp\/util\/package$$syntax.html#copy:aten.Tensor", "kind" : "def"}, {"label" : "scalar", "tail" : "(d: Double): Resource[IO, Tensor]", "member" : "lamp.util.syntax.scalar", "link" : "lamp\/util\/package$$syntax.html#scalar(d:Double):cats.effect.Resource[cats.effect.IO,aten.Tensor]", "kind" : "def"}, {"member" : "lamp.util.syntax#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/util\/package$$syntax.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/util\/package$$syntax.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/util\/package$$syntax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/util\/package$$syntax.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/util\/package$$syntax.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/util\/package$$syntax.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/util\/package$$syntax.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/util\/package$$syntax.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/util\/package$$syntax.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/util\/package$$syntax.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/util\/package$$syntax.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/util\/package$$syntax.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/util\/package$$syntax.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/util\/package$$syntax.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/util\/package$$syntax.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/util\/package$$syntax.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/util\/package$$syntax.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/util\/package$$syntax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/util\/package$$syntax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "lamp\/util\/package$$syntax.html", "kind" : "class"}], "lamp.example.timemachine" : [{"name" : "lamp.example.timemachine.CliConfig", "shortDescription" : "", "members_case class" : [{"member" : "lamp.example.timemachine.CliConfig#<init>", "error" : "unsupported entity"}, {"label" : "predictionPrefix", "tail" : ": Option[String]", "member" : "lamp.example.timemachine.CliConfig.predictionPrefix", "link" : "lamp\/example\/timemachine\/CliConfig.html#predictionPrefix:Option[String]", "kind" : "val"}, {"label" : "checkpointLoad", "tail" : ": Option[String]", "member" : "lamp.example.timemachine.CliConfig.checkpointLoad", "link" : "lamp\/example\/timemachine\/CliConfig.html#checkpointLoad:Option[String]", "kind" : "val"}, {"label" : "checkpointSave", "tail" : ": Option[String]", "member" : "lamp.example.timemachine.CliConfig.checkpointSave", "link" : "lamp\/example\/timemachine\/CliConfig.html#checkpointSave:Option[String]", "kind" : "val"}, {"label" : "dropout", "tail" : ": Double", "member" : "lamp.example.timemachine.CliConfig.dropout", "link" : "lamp\/example\/timemachine\/CliConfig.html#dropout:Double", "kind" : "val"}, {"label" : "learningRate", "tail" : ": Double", "member" : "lamp.example.timemachine.CliConfig.learningRate", "link" : "lamp\/example\/timemachine\/CliConfig.html#learningRate:Double", "kind" : "val"}, {"label" : "epochs", "tail" : ": Int", "member" : "lamp.example.timemachine.CliConfig.epochs", "link" : "lamp\/example\/timemachine\/CliConfig.html#epochs:Int", "kind" : "val"}, {"label" : "validationBatchSize", "tail" : ": Int", "member" : "lamp.example.timemachine.CliConfig.validationBatchSize", "link" : "lamp\/example\/timemachine\/CliConfig.html#validationBatchSize:Int", "kind" : "val"}, {"label" : "trainBatchSize", "tail" : ": Int", "member" : "lamp.example.timemachine.CliConfig.trainBatchSize", "link" : "lamp\/example\/timemachine\/CliConfig.html#trainBatchSize:Int", "kind" : "val"}, {"label" : "singlePrecision", "tail" : ": Boolean", "member" : "lamp.example.timemachine.CliConfig.singlePrecision", "link" : "lamp\/example\/timemachine\/CliConfig.html#singlePrecision:Boolean", "kind" : "val"}, {"label" : "cuda", "tail" : ": Boolean", "member" : "lamp.example.timemachine.CliConfig.cuda", "link" : "lamp\/example\/timemachine\/CliConfig.html#cuda:Boolean", "kind" : "val"}, {"label" : "testData", "tail" : ": String", "member" : "lamp.example.timemachine.CliConfig.testData", "link" : "lamp\/example\/timemachine\/CliConfig.html#testData:String", "kind" : "val"}, {"label" : "trainData", "tail" : ": String", "member" : "lamp.example.timemachine.CliConfig.trainData", "link" : "lamp\/example\/timemachine\/CliConfig.html#trainData:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/example\/timemachine\/CliConfig.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/example\/timemachine\/CliConfig.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/example\/timemachine\/CliConfig.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/example\/timemachine\/CliConfig.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/example\/timemachine\/CliConfig.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/example\/timemachine\/CliConfig.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/example\/timemachine\/CliConfig.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/example\/timemachine\/CliConfig.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/example\/timemachine\/CliConfig.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/example\/timemachine\/CliConfig.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/example\/timemachine\/CliConfig.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/example\/timemachine\/CliConfig.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/example\/timemachine\/CliConfig.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/example\/timemachine\/CliConfig.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/example\/timemachine\/CliConfig.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/example\/timemachine\/CliConfig.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/example\/timemachine\/CliConfig.html", "kind" : "case class"}, {"name" : "lamp.example.timemachine.Train", "shortDescription" : "", "object" : "lamp\/example\/timemachine\/Train$.html", "members_object" : [{"label" : "parser1", "tail" : ": OParser[String, CliConfig]", "member" : "lamp.example.timemachine.Train.parser1", "link" : "lamp\/example\/timemachine\/Train$.html#parser1:scopt.OParser[String,lamp.example.timemachine.CliConfig]", "kind" : "val"}, {"label" : "builder", "tail" : ": OParserBuilder[CliConfig]", "member" : "lamp.example.timemachine.Train.builder", "link" : "lamp\/example\/timemachine\/Train$.html#builder:scopt.OParserBuilder[lamp.example.timemachine.CliConfig]", "kind" : "val"}, {"label" : "main", "tail" : "(args: Array[String]): Unit", "member" : "scala.App.main", "link" : "lamp\/example\/timemachine\/Train$.html#main(args:Array[String]):Unit", "kind" : "def"}, {"label" : "delayedInit", "tail" : "(body: ⇒ Unit): Unit", "member" : "scala.App.delayedInit", "link" : "lamp\/example\/timemachine\/Train$.html#delayedInit(body:=>Unit):Unit", "kind" : "def"}, {"label" : "args", "tail" : "(): Array[String]", "member" : "scala.App.args", "link" : "lamp\/example\/timemachine\/Train$.html#args:Array[String]", "kind" : "def"}, {"label" : "executionStart", "tail" : ": Long", "member" : "scala.App.executionStart", "link" : "lamp\/example\/timemachine\/Train$.html#executionStart:Long", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/example\/timemachine\/Train$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/example\/timemachine\/Train$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/example\/timemachine\/Train$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/example\/timemachine\/Train$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/example\/timemachine\/Train$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/example\/timemachine\/Train$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/example\/timemachine\/Train$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/example\/timemachine\/Train$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/example\/timemachine\/Train$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/example\/timemachine\/Train$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/example\/timemachine\/Train$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/example\/timemachine\/Train$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/example\/timemachine\/Train$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/example\/timemachine\/Train$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/example\/timemachine\/Train$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/example\/timemachine\/Train$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/example\/timemachine\/Train$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/example\/timemachine\/Train$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/example\/timemachine\/Train$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "scala" : [], "lamp.example.arxiv" : [{"name" : "lamp.example.arxiv.CliConfig", "shortDescription" : "", "members_case class" : [{"member" : "lamp.example.arxiv.CliConfig#<init>", "error" : "unsupported entity"}, {"label" : "checkpointLoad", "tail" : ": Option[String]", "member" : "lamp.example.arxiv.CliConfig.checkpointLoad", "link" : "lamp\/example\/arxiv\/CliConfig.html#checkpointLoad:Option[String]", "kind" : "val"}, {"label" : "checkpointSave", "tail" : ": Option[String]", "member" : "lamp.example.arxiv.CliConfig.checkpointSave", "link" : "lamp\/example\/arxiv\/CliConfig.html#checkpointSave:Option[String]", "kind" : "val"}, {"label" : "cuda", "tail" : ": Boolean", "member" : "lamp.example.arxiv.CliConfig.cuda", "link" : "lamp\/example\/arxiv\/CliConfig.html#cuda:Boolean", "kind" : "val"}, {"label" : "folder", "tail" : ": String", "member" : "lamp.example.arxiv.CliConfig.folder", "link" : "lamp\/example\/arxiv\/CliConfig.html#folder:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/example\/arxiv\/CliConfig.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/example\/arxiv\/CliConfig.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/example\/arxiv\/CliConfig.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/example\/arxiv\/CliConfig.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/example\/arxiv\/CliConfig.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/example\/arxiv\/CliConfig.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/example\/arxiv\/CliConfig.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/example\/arxiv\/CliConfig.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/example\/arxiv\/CliConfig.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/example\/arxiv\/CliConfig.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/example\/arxiv\/CliConfig.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/example\/arxiv\/CliConfig.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/example\/arxiv\/CliConfig.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/example\/arxiv\/CliConfig.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/example\/arxiv\/CliConfig.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/example\/arxiv\/CliConfig.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/example\/arxiv\/CliConfig.html", "kind" : "case class"}, {"name" : "lamp.example.arxiv.OgbArxivDataset", "shortDescription" : "", "object" : "lamp\/example\/arxiv\/OgbArxivDataset$.html", "members_object" : [{"label" : "read", "tail" : "(file: Path)(arg0: ST[T]): Frame[Int, Int, T]", "member" : "lamp.example.arxiv.OgbArxivDataset.read", "link" : "lamp\/example\/arxiv\/OgbArxivDataset$.html#read[T](file:os.Path)(implicitevidence$2:org.saddle.ST[T]):org.saddle.Frame[Int,Int,T]", "kind" : "def"}, {"label" : "readAndConvert", "tail" : "(file: Path)(arg0: ST[T]): Frame[_ >: String with Int, _ >: String with Int, T]", "member" : "lamp.example.arxiv.OgbArxivDataset.readAndConvert", "link" : "lamp\/example\/arxiv\/OgbArxivDataset$.html#readAndConvert[T](file:os.Path)(implicitevidence$1:org.saddle.ST[T]):org.saddle.Frame[_>:StringwithInt,_>:StringwithInt,T]", "kind" : "def"}, {"label" : "readAll", "tail" : "(folder: File): (Frame[_1, _2, Int], Frame[_1, _2, Int], Frame[_1, _2, Float], Frame[_1, _2, Int]) forSome {type _1 >: String with Int, type _2 >: String with Int, type _1 >: String with Int, type _2 >: String with Int, type _1 >: String with Int, type _2 >: String with Int, type _1 >: String with Int, type _2 >: String with Int}", "member" : "lamp.example.arxiv.OgbArxivDataset.readAll", "link" : "lamp\/example\/arxiv\/OgbArxivDataset$.html#readAll(folder:java.io.File):(org.saddle.Frame[_1,_2,Int],org.saddle.Frame[_1,_2,Int],org.saddle.Frame[_1,_2,Float],org.saddle.Frame[_1,_2,Int])forSome{type_1>:StringwithInt;type_2>:StringwithInt;type_1>:StringwithInt;type_2>:StringwithInt;type_1>:StringwithInt;type_2>:StringwithInt;type_1>:StringwithInt;type_2>:StringwithInt}", "kind" : "def"}, {"label" : "download", "tail" : "(folder: File): (Path, Path, Path, Path)", "member" : "lamp.example.arxiv.OgbArxivDataset.download", "link" : "lamp\/example\/arxiv\/OgbArxivDataset$.html#download(folder:java.io.File):(os.Path,os.Path,os.Path,os.Path)", "kind" : "def"}, {"label" : "url", "tail" : ": String", "member" : "lamp.example.arxiv.OgbArxivDataset.url", "link" : "lamp\/example\/arxiv\/OgbArxivDataset$.html#url:String", "kind" : "val"}, {"label" : "unzip", "tail" : "(zipPath: Path, outputPath: Path): Unit", "member" : "lamp.example.arxiv.OgbArxivDataset.unzip", "link" : "lamp\/example\/arxiv\/OgbArxivDataset$.html#unzip(zipPath:os.Path,outputPath:os.Path):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/example\/arxiv\/OgbArxivDataset$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/example\/arxiv\/OgbArxivDataset$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/example\/arxiv\/OgbArxivDataset$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/example\/arxiv\/OgbArxivDataset$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/example\/arxiv\/OgbArxivDataset$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/example\/arxiv\/OgbArxivDataset$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/example\/arxiv\/OgbArxivDataset$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/example\/arxiv\/OgbArxivDataset$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/example\/arxiv\/OgbArxivDataset$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/example\/arxiv\/OgbArxivDataset$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/example\/arxiv\/OgbArxivDataset$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/example\/arxiv\/OgbArxivDataset$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/example\/arxiv\/OgbArxivDataset$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/example\/arxiv\/OgbArxivDataset$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/example\/arxiv\/OgbArxivDataset$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/example\/arxiv\/OgbArxivDataset$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/example\/arxiv\/OgbArxivDataset$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/example\/arxiv\/OgbArxivDataset$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/example\/arxiv\/OgbArxivDataset$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "lamp.example.arxiv.Train", "shortDescription" : "", "object" : "lamp\/example\/arxiv\/Train$.html", "members_object" : [{"label" : "parser1", "tail" : ": OParser[String, CliConfig]", "member" : "lamp.example.arxiv.Train.parser1", "link" : "lamp\/example\/arxiv\/Train$.html#parser1:scopt.OParser[String,lamp.example.arxiv.CliConfig]", "kind" : "val"}, {"label" : "builder", "tail" : ": OParserBuilder[CliConfig]", "member" : "lamp.example.arxiv.Train.builder", "link" : "lamp\/example\/arxiv\/Train$.html#builder:scopt.OParserBuilder[lamp.example.arxiv.CliConfig]", "kind" : "val"}, {"label" : "main", "tail" : "(args: Array[String]): Unit", "member" : "scala.App.main", "link" : "lamp\/example\/arxiv\/Train$.html#main(args:Array[String]):Unit", "kind" : "def"}, {"label" : "delayedInit", "tail" : "(body: ⇒ Unit): Unit", "member" : "scala.App.delayedInit", "link" : "lamp\/example\/arxiv\/Train$.html#delayedInit(body:=>Unit):Unit", "kind" : "def"}, {"label" : "args", "tail" : "(): Array[String]", "member" : "scala.App.args", "link" : "lamp\/example\/arxiv\/Train$.html#args:Array[String]", "kind" : "def"}, {"label" : "executionStart", "tail" : ": Long", "member" : "scala.App.executionStart", "link" : "lamp\/example\/arxiv\/Train$.html#executionStart:Long", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/example\/arxiv\/Train$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/example\/arxiv\/Train$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/example\/arxiv\/Train$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/example\/arxiv\/Train$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/example\/arxiv\/Train$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/example\/arxiv\/Train$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/example\/arxiv\/Train$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/example\/arxiv\/Train$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/example\/arxiv\/Train$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/example\/arxiv\/Train$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/example\/arxiv\/Train$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/example\/arxiv\/Train$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/example\/arxiv\/Train$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/example\/arxiv\/Train$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/example\/arxiv\/Train$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/example\/arxiv\/Train$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/example\/arxiv\/Train$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/example\/arxiv\/Train$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/example\/arxiv\/Train$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "lamp" : [{"name" : "lamp.ClassificationLeaf", "shortDescription" : "", "object" : "lamp\/ClassificationLeaf$.html", "members_object" : [{"label" : "rw", "tail" : ": upickle.default.ReadWriter[ClassificationLeaf]", "member" : "lamp.ClassificationLeaf.rw", "link" : "lamp\/ClassificationLeaf$.html#rw:upickle.default.ReadWriter[lamp.ClassificationLeaf]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/ClassificationLeaf$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/ClassificationLeaf$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/ClassificationLeaf$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/ClassificationLeaf$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/ClassificationLeaf$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/ClassificationLeaf$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/ClassificationLeaf$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/ClassificationLeaf$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/ClassificationLeaf$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/ClassificationLeaf$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/ClassificationLeaf$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/ClassificationLeaf$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/ClassificationLeaf$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/ClassificationLeaf$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/ClassificationLeaf$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/ClassificationLeaf$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/ClassificationLeaf$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/ClassificationLeaf$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/ClassificationLeaf$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"member" : "lamp.ClassificationLeaf#<init>", "error" : "unsupported entity"}, {"label" : "targetDistribution", "tail" : ": Seq[Double]", "member" : "lamp.ClassificationLeaf.targetDistribution", "link" : "lamp\/ClassificationLeaf.html#targetDistribution:Seq[Double]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/ClassificationLeaf.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/ClassificationLeaf.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/ClassificationLeaf.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/ClassificationLeaf.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/ClassificationLeaf.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/ClassificationLeaf.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/ClassificationLeaf.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/ClassificationLeaf.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/ClassificationLeaf.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/ClassificationLeaf.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/ClassificationLeaf.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/ClassificationLeaf.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/ClassificationLeaf.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/ClassificationLeaf.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/ClassificationLeaf.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/ClassificationLeaf.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/ClassificationLeaf.html", "kind" : "case class"}, {"name" : "lamp.ClassificationNonLeaf", "shortDescription" : "", "object" : "lamp\/ClassificationNonLeaf$.html", "members_object" : [{"label" : "rw", "tail" : ": upickle.default.ReadWriter[ClassificationNonLeaf]", "member" : "lamp.ClassificationNonLeaf.rw", "link" : "lamp\/ClassificationNonLeaf$.html#rw:upickle.default.ReadWriter[lamp.ClassificationNonLeaf]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/ClassificationNonLeaf$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/ClassificationNonLeaf$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/ClassificationNonLeaf$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/ClassificationNonLeaf$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/ClassificationNonLeaf$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/ClassificationNonLeaf$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/ClassificationNonLeaf$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/ClassificationNonLeaf$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/ClassificationNonLeaf$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/ClassificationNonLeaf$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/ClassificationNonLeaf$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/ClassificationNonLeaf$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/ClassificationNonLeaf$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/ClassificationNonLeaf$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/ClassificationNonLeaf$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/ClassificationNonLeaf$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/ClassificationNonLeaf$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/ClassificationNonLeaf$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/ClassificationNonLeaf$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"member" : "lamp.ClassificationNonLeaf#<init>", "error" : "unsupported entity"}, {"label" : "cutpoint", "tail" : ": Double", "member" : "lamp.ClassificationNonLeaf.cutpoint", "link" : "lamp\/ClassificationNonLeaf.html#cutpoint:Double", "kind" : "val"}, {"label" : "splitFeature", "tail" : ": Int", "member" : "lamp.ClassificationNonLeaf.splitFeature", "link" : "lamp\/ClassificationNonLeaf.html#splitFeature:Int", "kind" : "val"}, {"label" : "right", "tail" : ": ClassificationTree", "member" : "lamp.ClassificationNonLeaf.right", "link" : "lamp\/ClassificationNonLeaf.html#right:lamp.ClassificationTree", "kind" : "val"}, {"label" : "left", "tail" : ": ClassificationTree", "member" : "lamp.ClassificationNonLeaf.left", "link" : "lamp\/ClassificationNonLeaf.html#left:lamp.ClassificationTree", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/ClassificationNonLeaf.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/ClassificationNonLeaf.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/ClassificationNonLeaf.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/ClassificationNonLeaf.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/ClassificationNonLeaf.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/ClassificationNonLeaf.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/ClassificationNonLeaf.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/ClassificationNonLeaf.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/ClassificationNonLeaf.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/ClassificationNonLeaf.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/ClassificationNonLeaf.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/ClassificationNonLeaf.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/ClassificationNonLeaf.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/ClassificationNonLeaf.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/ClassificationNonLeaf.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/ClassificationNonLeaf.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/ClassificationNonLeaf.html", "kind" : "case class"}, {"name" : "lamp.ClassificationTree", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/ClassificationTree.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/ClassificationTree.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/ClassificationTree.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/ClassificationTree.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/ClassificationTree.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/ClassificationTree.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/ClassificationTree.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/ClassificationTree.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/ClassificationTree.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/ClassificationTree.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/ClassificationTree.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/ClassificationTree.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/ClassificationTree.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/ClassificationTree.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/ClassificationTree.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/ClassificationTree.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/ClassificationTree.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/ClassificationTree.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/ClassificationTree.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "object" : "lamp\/ClassificationTree$.html", "members_object" : [{"label" : "rw", "tail" : ": upickle.default.ReadWriter[ClassificationTree]", "member" : "lamp.ClassificationTree.rw", "link" : "lamp\/ClassificationTree$.html#rw:upickle.default.ReadWriter[lamp.ClassificationTree]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/ClassificationTree$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/ClassificationTree$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/ClassificationTree$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/ClassificationTree$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/ClassificationTree$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/ClassificationTree$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/ClassificationTree$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/ClassificationTree$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/ClassificationTree$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/ClassificationTree$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/ClassificationTree$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/ClassificationTree$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/ClassificationTree$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/ClassificationTree$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/ClassificationTree$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/ClassificationTree$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/ClassificationTree$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/ClassificationTree$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/ClassificationTree$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "lamp\/ClassificationTree.html", "kind" : "trait"}, {"name" : "lamp.CPU", "shortDescription" : "", "object" : "lamp\/CPU$.html", "members_object" : [{"label" : "options", "tail" : "(precision: FloatingPointPrecision): TensorOptions", "member" : "lamp.CPU.options", "link" : "lamp\/CPU$.html#options(precision:lamp.FloatingPointPrecision):aten.TensorOptions", "kind" : "def"}, {"label" : "to", "tail" : "(t: Tensor): Tensor", "member" : "lamp.CPU.to", "link" : "lamp\/CPU$.html#to(t:aten.Tensor):aten.Tensor", "kind" : "def"}, {"label" : "to", "tail" : "(t: STen)(arg0: Sc[S]): STen", "member" : "lamp.Device.to", "link" : "lamp\/CPU$.html#to[S](t:lamp.STen)(implicitevidence$1:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/CPU$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/CPU$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/CPU$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/CPU$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/CPU$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/CPU$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/CPU$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/CPU$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/CPU$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/CPU$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/CPU$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/CPU$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/CPU$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/CPU$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/CPU$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/CPU$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/CPU$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "lamp.CudaDevice", "shortDescription" : "", "members_case class" : [{"label" : "options", "tail" : "(precision: FloatingPointPrecision): TensorOptions", "member" : "lamp.CudaDevice.options", "link" : "lamp\/CudaDevice.html#options(precision:lamp.FloatingPointPrecision):aten.TensorOptions", "kind" : "def"}, {"label" : "to", "tail" : "(t: Tensor): Tensor", "member" : "lamp.CudaDevice.to", "link" : "lamp\/CudaDevice.html#to(t:aten.Tensor):aten.Tensor", "kind" : "def"}, {"member" : "lamp.CudaDevice#<init>", "error" : "unsupported entity"}, {"label" : "i", "tail" : ": Int", "member" : "lamp.CudaDevice.i", "link" : "lamp\/CudaDevice.html#i:Int", "kind" : "val"}, {"label" : "to", "tail" : "(t: STen)(arg0: Sc[S]): STen", "member" : "lamp.Device.to", "link" : "lamp\/CudaDevice.html#to[S](t:lamp.STen)(implicitevidence$1:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/CudaDevice.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/CudaDevice.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/CudaDevice.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/CudaDevice.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/CudaDevice.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/CudaDevice.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/CudaDevice.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/CudaDevice.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/CudaDevice.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/CudaDevice.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/CudaDevice.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/CudaDevice.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/CudaDevice.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/CudaDevice.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/CudaDevice.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/CudaDevice.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/CudaDevice.html", "kind" : "case class"}, {"name" : "lamp.Device", "members_trait" : [{"label" : "to", "tail" : "(t: STen)(arg0: Sc[S]): STen", "member" : "lamp.Device.to", "link" : "lamp\/Device.html#to[S](t:lamp.STen)(implicitevidence$1:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/Device.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/Device.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/Device.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/Device.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/Device.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/Device.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/Device.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/Device.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/Device.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/Device.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/Device.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/Device.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/Device.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/Device.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/Device.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/Device.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/Device.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/Device.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/Device.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "options", "tail" : "(precision: FloatingPointPrecision): TensorOptions", "member" : "lamp.Device.options", "link" : "lamp\/Device.html#options(precision:lamp.FloatingPointPrecision):aten.TensorOptions", "kind" : "abstract def"}, {"label" : "to", "tail" : "(t: Tensor): Tensor", "member" : "lamp.Device.to", "link" : "lamp\/Device.html#to(t:aten.Tensor):aten.Tensor", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "lamp\/Device.html", "kind" : "trait"}, {"name" : "lamp.DoublePrecision", "shortDescription" : "", "object" : "lamp\/DoublePrecision$.html", "members_object" : [{"label" : "convertOption", "tail" : "(t: TensorOptions): TensorOptions", "member" : "lamp.DoublePrecision.convertOption", "link" : "lamp\/DoublePrecision$.html#convertOption(t:aten.TensorOptions):aten.TensorOptions", "kind" : "def"}, {"label" : "convertTensor", "tail" : "(t: Tensor): Tensor", "member" : "lamp.DoublePrecision.convertTensor", "link" : "lamp\/DoublePrecision$.html#convertTensor(t:aten.Tensor):aten.Tensor", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/DoublePrecision$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/DoublePrecision$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/DoublePrecision$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/DoublePrecision$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/DoublePrecision$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/DoublePrecision$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/DoublePrecision$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/DoublePrecision$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/DoublePrecision$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/DoublePrecision$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/DoublePrecision$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/DoublePrecision$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/DoublePrecision$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/DoublePrecision$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/DoublePrecision$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/DoublePrecision$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/DoublePrecision$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "lamp.FloatingPointPrecision", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/FloatingPointPrecision.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/FloatingPointPrecision.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/FloatingPointPrecision.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/FloatingPointPrecision.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/FloatingPointPrecision.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/FloatingPointPrecision.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/FloatingPointPrecision.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/FloatingPointPrecision.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/FloatingPointPrecision.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/FloatingPointPrecision.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/FloatingPointPrecision.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/FloatingPointPrecision.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/FloatingPointPrecision.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/FloatingPointPrecision.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/FloatingPointPrecision.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/FloatingPointPrecision.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/FloatingPointPrecision.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/FloatingPointPrecision.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/FloatingPointPrecision.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "convertOption", "tail" : "(t: TensorOptions): TensorOptions", "member" : "lamp.FloatingPointPrecision.convertOption", "link" : "lamp\/FloatingPointPrecision.html#convertOption(t:aten.TensorOptions):aten.TensorOptions", "kind" : "abstract def"}, {"label" : "convertTensor", "tail" : "(t: Tensor): Tensor", "member" : "lamp.FloatingPointPrecision.convertTensor", "link" : "lamp\/FloatingPointPrecision.html#convertTensor(t:aten.Tensor):aten.Tensor", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "lamp\/FloatingPointPrecision.html", "kind" : "trait"}, {"name" : "lamp.Movable", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/Movable.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/Movable.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/Movable.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/Movable.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/Movable.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/Movable.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/Movable.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/Movable.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/Movable.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/Movable.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/Movable.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/Movable.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/Movable.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/Movable.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/Movable.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/Movable.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/Movable.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/Movable.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/Movable.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "list", "tail" : "(movable: R): List[Tensor]", "member" : "lamp.Movable.list", "link" : "lamp\/Movable.html#list(movable:R):List[aten.Tensor]", "kind" : "abstract def"}], "shortDescription" : "", "object" : "lamp\/Movable$.html", "members_object" : [{"label" : "t6", "tail" : "(arg0: Movable[T1], arg1: Movable[T2], arg2: Movable[T3], arg3: Movable[T4], arg4: Movable[T5], arg5: Movable[T6]): Movable[(T1, T2, T3, T4, T5, T6)]", "member" : "lamp.Movable.t6", "link" : "lamp\/Movable$.html#t6[T1,T2,T3,T4,T5,T6](implicitevidence$21:lamp.Movable[T1],implicitevidence$22:lamp.Movable[T2],implicitevidence$23:lamp.Movable[T3],implicitevidence$24:lamp.Movable[T4],implicitevidence$25:lamp.Movable[T5],implicitevidence$26:lamp.Movable[T6]):lamp.Movable[(T1,T2,T3,T4,T5,T6)]", "kind" : "implicit def"}, {"label" : "t5", "tail" : "(arg0: Movable[T1], arg1: Movable[T2], arg2: Movable[T3], arg3: Movable[T4], arg4: Movable[T5]): Movable[(T1, T2, T3, T4, T5)]", "member" : "lamp.Movable.t5", "link" : "lamp\/Movable$.html#t5[T1,T2,T3,T4,T5](implicitevidence$16:lamp.Movable[T1],implicitevidence$17:lamp.Movable[T2],implicitevidence$18:lamp.Movable[T3],implicitevidence$19:lamp.Movable[T4],implicitevidence$20:lamp.Movable[T5]):lamp.Movable[(T1,T2,T3,T4,T5)]", "kind" : "implicit def"}, {"label" : "t4", "tail" : "(arg0: Movable[T1], arg1: Movable[T2], arg2: Movable[T3], arg3: Movable[T4]): Movable[(T1, T2, T3, T4)]", "member" : "lamp.Movable.t4", "link" : "lamp\/Movable$.html#t4[T1,T2,T3,T4](implicitevidence$12:lamp.Movable[T1],implicitevidence$13:lamp.Movable[T2],implicitevidence$14:lamp.Movable[T3],implicitevidence$15:lamp.Movable[T4]):lamp.Movable[(T1,T2,T3,T4)]", "kind" : "implicit def"}, {"label" : "t3", "tail" : "(arg0: Movable[T1], arg1: Movable[T2], arg2: Movable[T3]): Movable[(T1, T2, T3)]", "member" : "lamp.Movable.t3", "link" : "lamp\/Movable$.html#t3[T1,T2,T3](implicitevidence$9:lamp.Movable[T1],implicitevidence$10:lamp.Movable[T2],implicitevidence$11:lamp.Movable[T3]):lamp.Movable[(T1,T2,T3)]", "kind" : "implicit def"}, {"label" : "t2", "tail" : "(arg0: Movable[T1], arg1: Movable[T2]): Movable[(T1, T2)]", "member" : "lamp.Movable.t2", "link" : "lamp\/Movable$.html#t2[T1,T2](implicitevidence$7:lamp.Movable[T1],implicitevidence$8:lamp.Movable[T2]):lamp.Movable[(T1,T2)]", "kind" : "implicit def"}, {"label" : "SeqIsMovable", "tail" : "(arg0: Movable[T]): Movable[Seq[T]]", "member" : "lamp.Movable.SeqIsMovable", "link" : "lamp\/Movable$.html#SeqIsMovable[T](implicitevidence$6:lamp.Movable[T]):lamp.Movable[Seq[T]]", "kind" : "implicit def"}, {"label" : "EitherIsMovable", "tail" : "(arg0: Movable[T1], arg1: Movable[T2]): Movable[Either[T1, T2]]", "member" : "lamp.Movable.EitherIsMovable", "link" : "lamp\/Movable$.html#EitherIsMovable[T1,T2](implicitevidence$4:lamp.Movable[T1],implicitevidence$5:lamp.Movable[T2]):lamp.Movable[Either[T1,T2]]", "kind" : "implicit def"}, {"label" : "OptionIsMovable", "tail" : "(arg0: Movable[T]): Movable[Option[T]]", "member" : "lamp.Movable.OptionIsMovable", "link" : "lamp\/Movable$.html#OptionIsMovable[T](implicitevidence$3:lamp.Movable[T]):lamp.Movable[Option[T]]", "kind" : "implicit def"}, {"label" : "VecIntIsMovable", "tail" : "(): Movable[Vec[Int]] { def list(t: org.saddle.Vec[Int]): scala.collection.immutable.Nil.type }", "member" : "lamp.Movable.VecIntIsMovable", "link" : "lamp\/Movable$.html#VecIntIsMovable:lamp.Movable[org.saddle.Vec[Int]]{deflist(t:org.saddle.Vec[Int]):scala.collection.immutable.Nil.type}", "kind" : "implicit def"}, {"label" : "MatIntIsMovable", "tail" : "(): Movable[Mat[Int]] { def list(t: org.saddle.Mat[Int]): scala.collection.immutable.Nil.type }", "member" : "lamp.Movable.MatIntIsMovable", "link" : "lamp\/Movable$.html#MatIntIsMovable:lamp.Movable[org.saddle.Mat[Int]]{deflist(t:org.saddle.Mat[Int]):scala.collection.immutable.Nil.type}", "kind" : "implicit def"}, {"label" : "VecDoubleIsMovable", "tail" : "(): Movable[Vec[Double]] { def list(t: org.saddle.Vec[Double]): scala.collection.immutable.Nil.type }", "member" : "lamp.Movable.VecDoubleIsMovable", "link" : "lamp\/Movable$.html#VecDoubleIsMovable:lamp.Movable[org.saddle.Vec[Double]]{deflist(t:org.saddle.Vec[Double]):scala.collection.immutable.Nil.type}", "kind" : "implicit def"}, {"label" : "MatDoubleIsMovable", "tail" : "(): Movable[Mat[Double]] { def list(t: org.saddle.Mat[Double]): scala.collection.immutable.Nil.type }", "member" : "lamp.Movable.MatDoubleIsMovable", "link" : "lamp\/Movable$.html#MatDoubleIsMovable:lamp.Movable[org.saddle.Mat[Double]]{deflist(t:org.saddle.Mat[Double]):scala.collection.immutable.Nil.type}", "kind" : "implicit def"}, {"label" : "ByteIsMovable", "tail" : "(): Movable[Byte] { def list(t: Byte): scala.collection.immutable.Nil.type }", "member" : "lamp.Movable.ByteIsMovable", "link" : "lamp\/Movable$.html#ByteIsMovable:lamp.Movable[Byte]{deflist(t:Byte):scala.collection.immutable.Nil.type}", "kind" : "implicit def"}, {"label" : "ShortIsMovable", "tail" : "(): Movable[Short] { def list(t: Short): scala.collection.immutable.Nil.type }", "member" : "lamp.Movable.ShortIsMovable", "link" : "lamp\/Movable$.html#ShortIsMovable:lamp.Movable[Short]{deflist(t:Short):scala.collection.immutable.Nil.type}", "kind" : "implicit def"}, {"label" : "LongIsMovable", "tail" : "(): Movable[Long] { def list(t: Long): scala.collection.immutable.Nil.type }", "member" : "lamp.Movable.LongIsMovable", "link" : "lamp\/Movable$.html#LongIsMovable:lamp.Movable[Long]{deflist(t:Long):scala.collection.immutable.Nil.type}", "kind" : "implicit def"}, {"label" : "IntIsMovable", "tail" : "(): Movable[Int] { def list(t: Int): scala.collection.immutable.Nil.type }", "member" : "lamp.Movable.IntIsMovable", "link" : "lamp\/Movable$.html#IntIsMovable:lamp.Movable[Int]{deflist(t:Int):scala.collection.immutable.Nil.type}", "kind" : "implicit def"}, {"label" : "BooleanIsMovable", "tail" : "(): Movable[Boolean] { def list(t: Boolean): scala.collection.immutable.Nil.type }", "member" : "lamp.Movable.BooleanIsMovable", "link" : "lamp\/Movable$.html#BooleanIsMovable:lamp.Movable[Boolean]{deflist(t:Boolean):scala.collection.immutable.Nil.type}", "kind" : "implicit def"}, {"label" : "FloatIsMovable", "tail" : "(): Movable[Float] { def list(t: Float): scala.collection.immutable.Nil.type }", "member" : "lamp.Movable.FloatIsMovable", "link" : "lamp\/Movable$.html#FloatIsMovable:lamp.Movable[Float]{deflist(t:Float):scala.collection.immutable.Nil.type}", "kind" : "implicit def"}, {"label" : "DoubleIsMovable", "tail" : "(): Movable[Double] { def list(t: Double): scala.collection.immutable.Nil.type }", "member" : "lamp.Movable.DoubleIsMovable", "link" : "lamp\/Movable$.html#DoubleIsMovable:lamp.Movable[Double]{deflist(t:Double):scala.collection.immutable.Nil.type}", "kind" : "implicit def"}, {"label" : "stringIsMovable", "tail" : "(): Movable[String] { def list(t: String): scala.collection.immutable.Nil.type }", "member" : "lamp.Movable.stringIsMovable", "link" : "lamp\/Movable$.html#stringIsMovable:lamp.Movable[String]{deflist(t:String):scala.collection.immutable.Nil.type}", "kind" : "implicit def"}, {"label" : "unitIsMovable", "tail" : "(): Movable[Unit] { def list(t: Unit): scala.collection.immutable.Nil.type }", "member" : "lamp.Movable.unitIsMovable", "link" : "lamp\/Movable$.html#unitIsMovable:lamp.Movable[Unit]{deflist(t:Unit):scala.collection.immutable.Nil.type}", "kind" : "implicit def"}, {"label" : "stensorIsMovable", "tail" : "(): Movable[STen]", "member" : "lamp.Movable.stensorIsMovable", "link" : "lamp\/Movable$.html#stensorIsMovable:lamp.Movable[lamp.STen]", "kind" : "implicit def"}, {"label" : "by", "tail" : "(convert: (T) ⇒ K)(arg0: Movable[K]): Movable[T]", "member" : "lamp.Movable.by", "link" : "lamp\/Movable$.html#by[T,K](convert:T=>K)(implicitevidence$2:lamp.Movable[K]):lamp.Movable[T]", "kind" : "def"}, {"label" : "nonEmpty", "tail" : "(extract: (T) ⇒ List[Tensor]): Movable[T]", "member" : "lamp.Movable.nonEmpty", "link" : "lamp\/Movable$.html#nonEmpty[T](extract:T=>List[aten.Tensor]):lamp.Movable[T]", "kind" : "def"}, {"label" : "empty", "tail" : "(): Movable[T] { def list(t: T): scala.collection.immutable.Nil.type }", "member" : "lamp.Movable.empty", "link" : "lamp\/Movable$.html#empty[T]:lamp.Movable[T]{deflist(t:T):scala.collection.immutable.Nil.type}", "kind" : "def"}, {"label" : "MovableSyntax", "tail" : "", "member" : "lamp.Movable.MovableSyntax", "link" : "lamp\/Movable$.html#MovableSyntax[T]extendsAnyRef", "kind" : "implicit class"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/Movable$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/Movable$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/Movable$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/Movable$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/Movable$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/Movable$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/Movable$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/Movable$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/Movable$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/Movable$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/Movable$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/Movable$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/Movable$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/Movable$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/Movable$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/Movable$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/Movable$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/Movable$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/Movable$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "lamp\/Movable.html", "kind" : "trait"}, {"name" : "lamp.RegressionLeaf", "shortDescription" : "", "object" : "lamp\/RegressionLeaf$.html", "members_object" : [{"label" : "rw", "tail" : ": upickle.default.ReadWriter[RegressionLeaf]", "member" : "lamp.RegressionLeaf.rw", "link" : "lamp\/RegressionLeaf$.html#rw:upickle.default.ReadWriter[lamp.RegressionLeaf]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/RegressionLeaf$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/RegressionLeaf$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/RegressionLeaf$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/RegressionLeaf$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/RegressionLeaf$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/RegressionLeaf$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/RegressionLeaf$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/RegressionLeaf$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/RegressionLeaf$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/RegressionLeaf$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/RegressionLeaf$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/RegressionLeaf$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/RegressionLeaf$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/RegressionLeaf$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/RegressionLeaf$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/RegressionLeaf$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/RegressionLeaf$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/RegressionLeaf$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/RegressionLeaf$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"member" : "lamp.RegressionLeaf#<init>", "error" : "unsupported entity"}, {"label" : "targetMean", "tail" : ": Double", "member" : "lamp.RegressionLeaf.targetMean", "link" : "lamp\/RegressionLeaf.html#targetMean:Double", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/RegressionLeaf.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/RegressionLeaf.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/RegressionLeaf.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/RegressionLeaf.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/RegressionLeaf.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/RegressionLeaf.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/RegressionLeaf.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/RegressionLeaf.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/RegressionLeaf.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/RegressionLeaf.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/RegressionLeaf.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/RegressionLeaf.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/RegressionLeaf.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/RegressionLeaf.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/RegressionLeaf.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/RegressionLeaf.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/RegressionLeaf.html", "kind" : "case class"}, {"name" : "lamp.RegressionNonLeaf", "shortDescription" : "", "object" : "lamp\/RegressionNonLeaf$.html", "members_object" : [{"label" : "rw", "tail" : ": upickle.default.ReadWriter[RegressionNonLeaf]", "member" : "lamp.RegressionNonLeaf.rw", "link" : "lamp\/RegressionNonLeaf$.html#rw:upickle.default.ReadWriter[lamp.RegressionNonLeaf]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/RegressionNonLeaf$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/RegressionNonLeaf$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/RegressionNonLeaf$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/RegressionNonLeaf$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/RegressionNonLeaf$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/RegressionNonLeaf$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/RegressionNonLeaf$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/RegressionNonLeaf$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/RegressionNonLeaf$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/RegressionNonLeaf$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/RegressionNonLeaf$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/RegressionNonLeaf$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/RegressionNonLeaf$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/RegressionNonLeaf$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/RegressionNonLeaf$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/RegressionNonLeaf$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/RegressionNonLeaf$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/RegressionNonLeaf$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/RegressionNonLeaf$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"member" : "lamp.RegressionNonLeaf#<init>", "error" : "unsupported entity"}, {"label" : "cutpoint", "tail" : ": Double", "member" : "lamp.RegressionNonLeaf.cutpoint", "link" : "lamp\/RegressionNonLeaf.html#cutpoint:Double", "kind" : "val"}, {"label" : "splitFeature", "tail" : ": Int", "member" : "lamp.RegressionNonLeaf.splitFeature", "link" : "lamp\/RegressionNonLeaf.html#splitFeature:Int", "kind" : "val"}, {"label" : "right", "tail" : ": RegressionTree", "member" : "lamp.RegressionNonLeaf.right", "link" : "lamp\/RegressionNonLeaf.html#right:lamp.RegressionTree", "kind" : "val"}, {"label" : "left", "tail" : ": RegressionTree", "member" : "lamp.RegressionNonLeaf.left", "link" : "lamp\/RegressionNonLeaf.html#left:lamp.RegressionTree", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/RegressionNonLeaf.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/RegressionNonLeaf.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/RegressionNonLeaf.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/RegressionNonLeaf.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/RegressionNonLeaf.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/RegressionNonLeaf.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/RegressionNonLeaf.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/RegressionNonLeaf.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/RegressionNonLeaf.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/RegressionNonLeaf.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/RegressionNonLeaf.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/RegressionNonLeaf.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/RegressionNonLeaf.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/RegressionNonLeaf.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/RegressionNonLeaf.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/RegressionNonLeaf.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/RegressionNonLeaf.html", "kind" : "case class"}, {"name" : "lamp.RegressionTree", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/RegressionTree.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/RegressionTree.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/RegressionTree.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/RegressionTree.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/RegressionTree.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/RegressionTree.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/RegressionTree.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/RegressionTree.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/RegressionTree.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/RegressionTree.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/RegressionTree.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/RegressionTree.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/RegressionTree.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/RegressionTree.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/RegressionTree.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/RegressionTree.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/RegressionTree.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/RegressionTree.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/RegressionTree.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "object" : "lamp\/RegressionTree$.html", "members_object" : [{"label" : "rw", "tail" : ": upickle.default.ReadWriter[RegressionTree]", "member" : "lamp.RegressionTree.rw", "link" : "lamp\/RegressionTree$.html#rw:upickle.default.ReadWriter[lamp.RegressionTree]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/RegressionTree$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/RegressionTree$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/RegressionTree$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/RegressionTree$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/RegressionTree$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/RegressionTree$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/RegressionTree$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/RegressionTree$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/RegressionTree$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/RegressionTree$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/RegressionTree$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/RegressionTree$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/RegressionTree$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/RegressionTree$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/RegressionTree$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/RegressionTree$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/RegressionTree$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/RegressionTree$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/RegressionTree$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "lamp\/RegressionTree.html", "kind" : "trait"}, {"name" : "lamp.Scope", "shortDescription" : "", "object" : "lamp\/Scope$.html", "members_class" : [{"label" : "release", "tail" : "(): Unit", "member" : "lamp.Scope.release", "link" : "lamp\/Scope.html#release():Unit", "kind" : "def"}, {"label" : "register", "tail" : "(resource: Tensor): Unit", "member" : "lamp.Scope.register", "link" : "lamp\/Scope.html#register(resource:aten.Tensor):Unit", "kind" : "def"}, {"label" : "apply", "tail" : "(resource: Tensor): Tensor", "member" : "lamp.Scope.apply", "link" : "lamp\/Scope.html#apply(resource:aten.Tensor):aten.Tensor", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/Scope.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/Scope.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/Scope.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/Scope.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/Scope.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/Scope.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/Scope.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/Scope.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/Scope.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/Scope.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/Scope.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/Scope.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/Scope.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/Scope.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/Scope.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/Scope.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/Scope.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/Scope.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/Scope.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "leak", "tail" : "(op: (Scope) ⇒ A): A", "member" : "lamp.Scope.leak", "link" : "lamp\/Scope$.html#leak[A](op:lamp.Scope=>A):A", "kind" : "def"}, {"label" : "root", "tail" : "(op: (Scope) ⇒ Unit): Unit", "member" : "lamp.Scope.root", "link" : "lamp\/Scope$.html#root[A](op:lamp.Scope=>Unit):Unit", "kind" : "def"}, {"label" : "apply", "tail" : "(op: (Scope) ⇒ A)(arg0: Movable[A], parent: Scope): A", "member" : "lamp.Scope.apply", "link" : "lamp\/Scope$.html#apply[A](op:lamp.Scope=>A)(implicitevidence$29:lamp.Movable[A],implicitparent:lamp.Scope):A", "kind" : "def"}, {"label" : "bracket", "tail" : "(parent: Scope)(use: (Scope) ⇒ IO[A])(arg0: Movable[A]): IO[A]", "member" : "lamp.Scope.bracket", "link" : "lamp\/Scope$.html#bracket[A](parent:lamp.Scope)(use:lamp.Scope=>cats.effect.IO[A])(implicitevidence$28:lamp.Movable[A]):cats.effect.IO[A]", "kind" : "def"}, {"label" : "bracket", "tail" : "(use: (Scope) ⇒ IO[A])(arg0: Movable[A], parent: Scope): IO[A]", "member" : "lamp.Scope.bracket", "link" : "lamp\/Scope$.html#bracket[A](use:lamp.Scope=>cats.effect.IO[A])(implicitevidence$27:lamp.Movable[A],implicitparent:lamp.Scope):cats.effect.IO[A]", "kind" : "def"}, {"label" : "inResource", "tail" : "(): Resource[IO, Scope]", "member" : "lamp.Scope.inResource", "link" : "lamp\/Scope$.html#inResource:cats.effect.Resource[cats.effect.IO,lamp.Scope]", "kind" : "def"}, {"label" : "free", "tail" : "(): Scope", "member" : "lamp.Scope.free", "link" : "lamp\/Scope$.html#free:lamp.Scope", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/Scope$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/Scope$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/Scope$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/Scope$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/Scope$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/Scope$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/Scope$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/Scope$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/Scope$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/Scope$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/Scope$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/Scope$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/Scope$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/Scope$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/Scope$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/Scope$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/Scope$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/Scope$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/Scope$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "lamp\/Scope.html", "kind" : "class"}, {"name" : "lamp.SinglePrecision", "shortDescription" : "", "object" : "lamp\/SinglePrecision$.html", "members_object" : [{"label" : "convertOption", "tail" : "(t: TensorOptions): TensorOptions", "member" : "lamp.SinglePrecision.convertOption", "link" : "lamp\/SinglePrecision$.html#convertOption(t:aten.TensorOptions):aten.TensorOptions", "kind" : "def"}, {"label" : "convertTensor", "tail" : "(t: Tensor): Tensor", "member" : "lamp.SinglePrecision.convertTensor", "link" : "lamp\/SinglePrecision$.html#convertTensor(t:aten.Tensor):aten.Tensor", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/SinglePrecision$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/SinglePrecision$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/SinglePrecision$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/SinglePrecision$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/SinglePrecision$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/SinglePrecision$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/SinglePrecision$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/SinglePrecision$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/SinglePrecision$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/SinglePrecision$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/SinglePrecision$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/SinglePrecision$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/SinglePrecision$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/SinglePrecision$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/SinglePrecision$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/SinglePrecision$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/SinglePrecision$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "lamp.STen", "shortDescription" : "", "object" : "lamp\/STen$.html", "members_object" : [{"label" : "where", "tail" : "(condition: Tensor, self: STen, other: STen)(arg0: Sc[S]): STen", "member" : "lamp.STen.where", "link" : "lamp\/STen$.html#where[S](condition:aten.Tensor,self:lamp.STen,other:lamp.STen)(implicitevidence$32:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "where", "tail" : "(condition: STen, self: STen, other: STen)(arg0: Sc[S]): STen", "member" : "lamp.STen.where", "link" : "lamp\/STen$.html#where[S](condition:lamp.STen,self:lamp.STen,other:lamp.STen)(implicitevidence$31:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "mse_loss", "tail" : "(self: STen, target: STen, reduction: Long)(arg0: Sc[S]): STen", "member" : "lamp.STen.mse_loss", "link" : "lamp\/STen$.html#mse_loss[S](self:lamp.STen,target:lamp.STen,reduction:Long)(implicitevidence$30:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "mse_loss_backward", "tail" : "(gradOutput: STen, self: STen, target: STen, reduction: Long)(arg0: Sc[S]): STen", "member" : "lamp.STen.mse_loss_backward", "link" : "lamp\/STen$.html#mse_loss_backward[S](gradOutput:lamp.STen,self:lamp.STen,target:lamp.STen,reduction:Long)(implicitevidence$29:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "l1_loss_backward", "tail" : "(gradOutput: STen, self: STen, target: STen, reduction: Long)(arg0: Sc[S]): STen", "member" : "lamp.STen.l1_loss_backward", "link" : "lamp\/STen$.html#l1_loss_backward[S](gradOutput:lamp.STen,self:lamp.STen,target:lamp.STen,reduction:Long)(implicitevidence$28:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "tanh_backward", "tail" : "(gradOutput: STen, output: STen)(arg0: Sc[S]): STen", "member" : "lamp.STen.tanh_backward", "link" : "lamp\/STen$.html#tanh_backward[S](gradOutput:lamp.STen,output:lamp.STen)(implicitevidence$27:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "addcmulOut", "tail" : "(out: STen, self: STen, tensor1: STen, tensor2: STen, alpha: Double): Unit", "member" : "lamp.STen.addcmulOut", "link" : "lamp\/STen$.html#addcmulOut(out:lamp.STen,self:lamp.STen,tensor1:lamp.STen,tensor2:lamp.STen,alpha:Double):Unit", "kind" : "def"}, {"label" : "addmmOut", "tail" : "(out: STen, self: STen, mat1: STen, mat2: STen, beta: Double, alpha: Double): Unit", "member" : "lamp.STen.addmmOut", "link" : "lamp\/STen$.html#addmmOut(out:lamp.STen,self:lamp.STen,mat1:lamp.STen,mat2:lamp.STen,beta:Double,alpha:Double):Unit", "kind" : "def"}, {"label" : "meanOut", "tail" : "(out: STen, self: STen, dim: Seq[Int], keepDim: Boolean): Unit", "member" : "lamp.STen.meanOut", "link" : "lamp\/STen$.html#meanOut(out:lamp.STen,self:lamp.STen,dim:Seq[Int],keepDim:Boolean):Unit", "kind" : "def"}, {"label" : "sumOut", "tail" : "(out: STen, self: STen, dim: Seq[Int], keepDim: Boolean): Unit", "member" : "lamp.STen.sumOut", "link" : "lamp\/STen$.html#sumOut(out:lamp.STen,self:lamp.STen,dim:Seq[Int],keepDim:Boolean):Unit", "kind" : "def"}, {"label" : "powOut", "tail" : "(out: STen, self: STen, other: STen): Unit", "member" : "lamp.STen.powOut", "link" : "lamp\/STen$.html#powOut(out:lamp.STen,self:lamp.STen,other:lamp.STen):Unit", "kind" : "def"}, {"label" : "powOut", "tail" : "(out: STen, self: STen, other: Double): Unit", "member" : "lamp.STen.powOut", "link" : "lamp\/STen$.html#powOut(out:lamp.STen,self:lamp.STen,other:Double):Unit", "kind" : "def"}, {"label" : "remainderOut", "tail" : "(out: STen, self: STen, other: Double): Unit", "member" : "lamp.STen.remainderOut", "link" : "lamp\/STen$.html#remainderOut(out:lamp.STen,self:lamp.STen,other:Double):Unit", "kind" : "def"}, {"label" : "remainderOut", "tail" : "(out: STen, self: STen, other: STen): Unit", "member" : "lamp.STen.remainderOut", "link" : "lamp\/STen$.html#remainderOut(out:lamp.STen,self:lamp.STen,other:lamp.STen):Unit", "kind" : "def"}, {"label" : "bmmOut", "tail" : "(out: STen, self: STen, other: STen): Unit", "member" : "lamp.STen.bmmOut", "link" : "lamp\/STen$.html#bmmOut(out:lamp.STen,self:lamp.STen,other:lamp.STen):Unit", "kind" : "def"}, {"label" : "mmOut", "tail" : "(out: STen, self: STen, other: STen): Unit", "member" : "lamp.STen.mmOut", "link" : "lamp\/STen$.html#mmOut(out:lamp.STen,self:lamp.STen,other:lamp.STen):Unit", "kind" : "def"}, {"label" : "divOut", "tail" : "(out: STen, self: STen, other: STen): Unit", "member" : "lamp.STen.divOut", "link" : "lamp\/STen$.html#divOut(out:lamp.STen,self:lamp.STen,other:lamp.STen):Unit", "kind" : "def"}, {"label" : "mulOut", "tail" : "(out: STen, self: STen, other: STen): Unit", "member" : "lamp.STen.mulOut", "link" : "lamp\/STen$.html#mulOut(out:lamp.STen,self:lamp.STen,other:lamp.STen):Unit", "kind" : "def"}, {"label" : "subOut", "tail" : "(out: STen, self: STen, other: STen, alpha: Double): Unit", "member" : "lamp.STen.subOut", "link" : "lamp\/STen$.html#subOut(out:lamp.STen,self:lamp.STen,other:lamp.STen,alpha:Double):Unit", "kind" : "def"}, {"label" : "addOut", "tail" : "(out: STen, self: STen, other: STen, alpha: Double): Unit", "member" : "lamp.STen.addOut", "link" : "lamp\/STen$.html#addOut(out:lamp.STen,self:lamp.STen,other:lamp.STen,alpha:Double):Unit", "kind" : "def"}, {"label" : "catOut", "tail" : "(out: STen, tensors: Seq[STen], dim: Int): Unit", "member" : "lamp.STen.catOut", "link" : "lamp\/STen$.html#catOut(out:lamp.STen,tensors:Seq[lamp.STen],dim:Int):Unit", "kind" : "def"}, {"label" : "indexSelectOut", "tail" : "(out: STen, self: STen, dim: Int, index: STen): Unit", "member" : "lamp.STen.indexSelectOut", "link" : "lamp\/STen$.html#indexSelectOut(out:lamp.STen,self:lamp.STen,dim:Int,index:lamp.STen):Unit", "kind" : "def"}, {"label" : "sparse_coo", "tail" : "(indices: STen, values: STen, dim: Seq[Long], tensorOptions: TensorOptions)(arg0: Sc[S]): STen", "member" : "lamp.STen.sparse_coo", "link" : "lamp\/STen$.html#sparse_coo[S](indices:lamp.STen,values:lamp.STen,dim:Seq[Long],tensorOptions:aten.TensorOptions)(implicitevidence$26:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "linspace", "tail" : "(start: Double, end: Double, steps: Long, tensorOptions: TensorOptions)(arg0: Sc[S]): STen", "member" : "lamp.STen.linspace", "link" : "lamp\/STen$.html#linspace[S](start:Double,end:Double,steps:Long,tensorOptions:aten.TensorOptions)(implicitevidence$25:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "arange", "tail" : "(start: Double, end: Double, step: Double, tensorOptions: TensorOptions)(arg0: Sc[S]): STen", "member" : "lamp.STen.arange", "link" : "lamp\/STen$.html#arange[S](start:Double,end:Double,step:Double,tensorOptions:aten.TensorOptions)(implicitevidence$24:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "eye", "tail" : "(n: Int, m: Int, tensorOptions: TensorOptions)(arg0: Sc[S]): STen", "member" : "lamp.STen.eye", "link" : "lamp\/STen$.html#eye[S](n:Int,m:Int,tensorOptions:aten.TensorOptions)(implicitevidence$23:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "eye", "tail" : "(n: Int, tensorOptions: TensorOptions)(arg0: Sc[S]): STen", "member" : "lamp.STen.eye", "link" : "lamp\/STen$.html#eye[S](n:Int,tensorOptions:aten.TensorOptions)(implicitevidence$22:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "randint", "tail" : "(low: Long, high: Long, size: Seq[Long], tensorOptions: TensorOptions)(arg0: Sc[S]): STen", "member" : "lamp.STen.randint", "link" : "lamp\/STen$.html#randint[S](low:Long,high:Long,size:Seq[Long],tensorOptions:aten.TensorOptions)(implicitevidence$21:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "randint", "tail" : "(high: Long, size: Seq[Long], tensorOptions: TensorOptions)(arg0: Sc[S]): STen", "member" : "lamp.STen.randint", "link" : "lamp\/STen$.html#randint[S](high:Long,size:Seq[Long],tensorOptions:aten.TensorOptions)(implicitevidence$20:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "normal", "tail" : "(mean: Double, std: Double, size: Seq[Long], options: TensorOptions)(arg0: Sc[S]): STen", "member" : "lamp.STen.normal", "link" : "lamp\/STen$.html#normal[S](mean:Double,std:Double,size:Seq[Long],options:aten.TensorOptions)(implicitevidence$19:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "randn", "tail" : "(size: Seq[Long], tensorOptions: TensorOptions)(arg0: Sc[S]): STen", "member" : "lamp.STen.randn", "link" : "lamp\/STen$.html#randn[S](size:Seq[Long],tensorOptions:aten.TensorOptions)(implicitevidence$18:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "rand", "tail" : "(size: Seq[Long], tensorOptions: TensorOptions)(arg0: Sc[S]): STen", "member" : "lamp.STen.rand", "link" : "lamp\/STen$.html#rand[S](size:Seq[Long],tensorOptions:aten.TensorOptions)(implicitevidence$17:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "zeros", "tail" : "(size: Seq[Long], tensorOptions: TensorOptions)(arg0: Sc[S]): STen", "member" : "lamp.STen.zeros", "link" : "lamp\/STen$.html#zeros[S](size:Seq[Long],tensorOptions:aten.TensorOptions)(implicitevidence$16:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "ones", "tail" : "(size: Seq[Long], tensorOptions: TensorOptions)(arg0: Sc[S]): STen", "member" : "lamp.STen.ones", "link" : "lamp\/STen$.html#ones[S](size:Seq[Long],tensorOptions:aten.TensorOptions)(implicitevidence$15:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "scalarDouble", "tail" : "(value: Double, options: TensorOptions)(arg0: Sc[S]): STen", "member" : "lamp.STen.scalarDouble", "link" : "lamp\/STen$.html#scalarDouble[S](value:Double,options:aten.TensorOptions)(implicitevidence$14:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "scalarLong", "tail" : "(value: Long, options: TensorOptions)(scope: Scope): STen", "member" : "lamp.STen.scalarLong", "link" : "lamp\/STen$.html#scalarLong(value:Long,options:aten.TensorOptions)(implicitscope:lamp.Scope):lamp.STen", "kind" : "def"}, {"label" : "stack", "tail" : "(tensors: Seq[STen], dim: Long)(arg0: Sc[S]): STen", "member" : "lamp.STen.stack", "link" : "lamp\/STen$.html#stack[S](tensors:Seq[lamp.STen],dim:Long)(implicitevidence$13:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "cat", "tail" : "(tensors: Seq[STen], dim: Long)(arg0: Sc[S]): STen", "member" : "lamp.STen.cat", "link" : "lamp\/STen$.html#cat[S](tensors:Seq[lamp.STen],dim:Long)(implicitevidence$12:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "owned", "tail" : "(value: Tensor)(scope: Scope): STen", "member" : "lamp.STen.owned", "link" : "lamp\/STen$.html#owned(value:aten.Tensor)(implicitscope:lamp.Scope):lamp.STen", "kind" : "def"}, {"label" : "apply", "tail" : "(vs: Double*)(arg0: Sc[S]): STen", "member" : "lamp.STen.apply", "link" : "lamp\/STen$.html#apply[S](vs:Double*)(implicitevidence$11:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "free", "tail" : "(value: Tensor): STen", "member" : "lamp.STen.free", "link" : "lamp\/STen$.html#free(value:aten.Tensor):lamp.STen", "kind" : "def"}, {"label" : "fromLongVec", "tail" : "(m: Vec[Long], cuda: Boolean)(arg0: Sc[S]): STen", "member" : "lamp.STen.fromLongVec", "link" : "lamp\/STen$.html#fromLongVec[S](m:org.saddle.Vec[Long],cuda:Boolean)(implicitevidence$10:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "fromLongVec", "tail" : "(m: Vec[Long], device: Device)(arg0: Sc[S]): STen", "member" : "lamp.STen.fromLongVec", "link" : "lamp\/STen$.html#fromLongVec[S](m:org.saddle.Vec[Long],device:lamp.Device)(implicitevidence$9:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "fromLongMat", "tail" : "(m: Mat[Long], cuda: Boolean)(arg0: Sc[S]): STen", "member" : "lamp.STen.fromLongMat", "link" : "lamp\/STen$.html#fromLongMat[S](m:org.saddle.Mat[Long],cuda:Boolean)(implicitevidence$8:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "fromLongMat", "tail" : "(m: Mat[Long], device: Device)(arg0: Sc[S]): STen", "member" : "lamp.STen.fromLongMat", "link" : "lamp\/STen$.html#fromLongMat[S](m:org.saddle.Mat[Long],device:lamp.Device)(implicitevidence$7:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "fromVec", "tail" : "(m: Vec[Double], device: Device, precision: FloatingPointPrecision)(arg0: Sc[S]): STen", "member" : "lamp.STen.fromVec", "link" : "lamp\/STen$.html#fromVec[S](m:org.saddle.Vec[Double],device:lamp.Device,precision:lamp.FloatingPointPrecision)(implicitevidence$6:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "fromVec", "tail" : "(m: Vec[Double], cuda: Boolean)(arg0: Sc[S]): STen", "member" : "lamp.STen.fromVec", "link" : "lamp\/STen$.html#fromVec[S](m:org.saddle.Vec[Double],cuda:Boolean)(implicitevidence$5:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "fromFloatMat", "tail" : "(m: Mat[Float], device: Device)(arg0: Sc[S]): STen", "member" : "lamp.STen.fromFloatMat", "link" : "lamp\/STen$.html#fromFloatMat[S](m:org.saddle.Mat[Float],device:lamp.Device)(implicitevidence$4:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "fromMat", "tail" : "(m: Mat[Double], device: Device, precision: FloatingPointPrecision)(arg0: Sc[S]): STen", "member" : "lamp.STen.fromMat", "link" : "lamp\/STen$.html#fromMat[S](m:org.saddle.Mat[Double],device:lamp.Device,precision:lamp.FloatingPointPrecision)(implicitevidence$3:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "fromMat", "tail" : "(m: Mat[Double], cuda: Boolean)(arg0: Sc[S]): STen", "member" : "lamp.STen.fromMat", "link" : "lamp\/STen$.html#fromMat[S](m:org.saddle.Mat[Double],cuda:Boolean)(implicitevidence$2:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "OwnedSyntax", "tail" : "", "member" : "lamp.STen.OwnedSyntax", "link" : "lamp\/STen$.html#OwnedSyntaxextendsAnyRef", "kind" : "implicit class"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/STen$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/STen$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/STen$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/STen$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/STen$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/STen$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/STen$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/STen$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/STen$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/STen$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/STen$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/STen$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/STen$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/STen$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/STen$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/STen$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/STen$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/STen$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/STen$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "frobeniusNorm", "tail" : "(arg0: Sc[S]): STen", "member" : "lamp.STen.frobeniusNorm", "link" : "lamp\/STen.html#frobeniusNorm[S](implicitevidence$182:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "dropout_", "tail" : "(p: Double, training: Boolean): Unit", "member" : "lamp.STen.dropout_", "link" : "lamp\/STen.html#dropout_(p:Double,training:Boolean):Unit", "kind" : "def"}, {"label" : "round", "tail" : "(arg0: Sc[S]): STen", "member" : "lamp.STen.round", "link" : "lamp\/STen.html#round[S](implicitevidence$181:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "where", "tail" : "(arg0: Sc[S]): List[STen]", "member" : "lamp.STen.where", "link" : "lamp\/STen.html#where[S](implicitevidence$180:lamp.Sc[S]):List[lamp.STen]", "kind" : "def"}, {"label" : "stdAndMean", "tail" : "(dim: Seq[Int], unbiased: Boolean, keepDim: Boolean)(arg0: Sc[S]): (STen, STen)", "member" : "lamp.STen.stdAndMean", "link" : "lamp\/STen.html#stdAndMean[S](dim:Seq[Int],unbiased:Boolean,keepDim:Boolean)(implicitevidence$179:lamp.Sc[S]):(lamp.STen,lamp.STen)", "kind" : "def"}, {"label" : "stdAndMean", "tail" : "(unbiased: Boolean)(arg0: Sc[S]): (STen, STen)", "member" : "lamp.STen.stdAndMean", "link" : "lamp\/STen.html#stdAndMean[S](unbiased:Boolean)(implicitevidence$178:lamp.Sc[S]):(lamp.STen,lamp.STen)", "kind" : "def"}, {"label" : "varAndMean", "tail" : "(dim: Seq[Int], unbiased: Boolean, keepDim: Boolean)(arg0: Sc[S]): (STen, STen)", "member" : "lamp.STen.varAndMean", "link" : "lamp\/STen.html#varAndMean[S](dim:Seq[Int],unbiased:Boolean,keepDim:Boolean)(implicitevidence$177:lamp.Sc[S]):(lamp.STen,lamp.STen)", "kind" : "def"}, {"label" : "varAndMean", "tail" : "(unbiased: Boolean)(arg0: Sc[S]): (STen, STen)", "member" : "lamp.STen.varAndMean", "link" : "lamp\/STen.html#varAndMean[S](unbiased:Boolean)(implicitevidence$176:lamp.Sc[S]):(lamp.STen,lamp.STen)", "kind" : "def"}, {"label" : "unsqueeze", "tail" : "(dim: Int)(arg0: Sc[S]): STen", "member" : "lamp.STen.unsqueeze", "link" : "lamp\/STen.html#unsqueeze[S](dim:Int)(implicitevidence$175:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "squeeze", "tail" : "(arg0: Sc[S]): STen", "member" : "lamp.STen.squeeze", "link" : "lamp\/STen.html#squeeze[S](implicitevidence$174:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "squeeze", "tail" : "(dim: Int)(arg0: Sc[S]): STen", "member" : "lamp.STen.squeeze", "link" : "lamp\/STen.html#squeeze[S](dim:Int)(implicitevidence$173:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "sort", "tail" : "(dim: Int, descending: Boolean)(arg0: Sc[S]): (STen, STen)", "member" : "lamp.STen.sort", "link" : "lamp\/STen.html#sort[S](dim:Int,descending:Boolean)(implicitevidence$172:lamp.Sc[S]):(lamp.STen,lamp.STen)", "kind" : "def"}, {"label" : "repeatInterleave", "tail" : "(arg0: Sc[S]): STen", "member" : "lamp.STen.repeatInterleave", "link" : "lamp\/STen.html#repeatInterleave[S](implicitevidence$171:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "repeatInterleave", "tail" : "(repeats: Long, dim: Int)(arg0: Sc[S]): STen", "member" : "lamp.STen.repeatInterleave", "link" : "lamp\/STen.html#repeatInterleave[S](repeats:Long,dim:Int)(implicitevidence$170:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "repeatInterleave", "tail" : "(repeats: STen, dim: Int)(arg0: Sc[S]): STen", "member" : "lamp.STen.repeatInterleave", "link" : "lamp\/STen.html#repeatInterleave[S](repeats:lamp.STen,dim:Int)(implicitevidence$169:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "pinverse", "tail" : "(rcond: Double)(arg0: Sc[S]): STen", "member" : "lamp.STen.pinverse", "link" : "lamp\/STen.html#pinverse[S](rcond:Double)(implicitevidence$168:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "oneHot", "tail" : "(numClasses: Int)(arg0: Sc[S]): STen", "member" : "lamp.STen.oneHot", "link" : "lamp\/STen.html#oneHot[S](numClasses:Int)(implicitevidence$167:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "narrow", "tail" : "(dim: Int, start: STen, length: Long)(arg0: Sc[S]): STen", "member" : "lamp.STen.narrow", "link" : "lamp\/STen.html#narrow[S](dim:Int,start:lamp.STen,length:Long)(implicitevidence$166:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "narrow", "tail" : "(dim: Int, start: Long, length: Long)(arg0: Sc[S]): STen", "member" : "lamp.STen.narrow", "link" : "lamp\/STen.html#narrow[S](dim:Int,start:Long,length:Long)(implicitevidence$165:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "matrixRank", "tail" : "(tol: Double, symmetric: Boolean)(arg0: Sc[S]): STen", "member" : "lamp.STen.matrixRank", "link" : "lamp\/STen.html#matrixRank[S](tol:Double,symmetric:Boolean)(implicitevidence$164:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "matrixPower", "tail" : "(n: Int)(arg0: Sc[S]): STen", "member" : "lamp.STen.matrixPower", "link" : "lamp\/STen.html#matrixPower[S](n:Int)(implicitevidence$163:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "index_copy_", "tail" : "(dim: Int, index: STen, source: STen): Unit", "member" : "lamp.STen.index_copy_", "link" : "lamp\/STen.html#index_copy_(dim:Int,index:lamp.STen,source:lamp.STen):Unit", "kind" : "def"}, {"label" : "indexCopy", "tail" : "(dim: Int, index: STen, source: STen)(arg0: Sc[S]): STen", "member" : "lamp.STen.indexCopy", "link" : "lamp\/STen.html#indexCopy[S](dim:Int,index:lamp.STen,source:lamp.STen)(implicitevidence$162:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "indexPut", "tail" : "(indices: List[STen], values: STen, accumulate: Boolean)(arg0: Sc[S]): STen", "member" : "lamp.STen.indexPut", "link" : "lamp\/STen.html#indexPut[S](indices:List[lamp.STen],values:lamp.STen,accumulate:Boolean)(implicitevidence$161:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "index", "tail" : "(indices: STen*)(arg0: Sc[S]): STen", "member" : "lamp.STen.index", "link" : "lamp\/STen.html#index[S](indices:lamp.STen*)(implicitevidence$160:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "expm1", "tail" : "(arg0: Sc[S]): STen", "member" : "lamp.STen.expm1", "link" : "lamp\/STen.html#expm1[S](implicitevidence$159:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "log10", "tail" : "(arg0: Sc[S]): STen", "member" : "lamp.STen.log10", "link" : "lamp\/STen.html#log10[S](implicitevidence$158:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "isfinite", "tail" : "(arg0: Sc[S]): STen", "member" : "lamp.STen.isfinite", "link" : "lamp\/STen.html#isfinite[S](implicitevidence$157:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "isnan", "tail" : "(arg0: Sc[S]): STen", "member" : "lamp.STen.isnan", "link" : "lamp\/STen.html#isnan[S](implicitevidence$156:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "neg", "tail" : "(arg0: Sc[S]): STen", "member" : "lamp.STen.neg", "link" : "lamp\/STen.html#neg[S](implicitevidence$155:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "ne", "tail" : "(other: Double)(arg0: Sc[S]): STen", "member" : "lamp.STen.ne", "link" : "lamp\/STen.html#ne[S](other:Double)(implicitevidence$154:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "ne", "tail" : "(other: STen)(arg0: Sc[S]): STen", "member" : "lamp.STen.ne", "link" : "lamp\/STen.html#ne[S](other:lamp.STen)(implicitevidence$153:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "le", "tail" : "(other: Double)(arg0: Sc[S]): STen", "member" : "lamp.STen.le", "link" : "lamp\/STen.html#le[S](other:Double)(implicitevidence$152:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "le", "tail" : "(other: STen)(arg0: Sc[S]): STen", "member" : "lamp.STen.le", "link" : "lamp\/STen.html#le[S](other:lamp.STen)(implicitevidence$151:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "ge", "tail" : "(other: Double)(arg0: Sc[S]): STen", "member" : "lamp.STen.ge", "link" : "lamp\/STen.html#ge[S](other:Double)(implicitevidence$150:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "ge", "tail" : "(other: STen)(arg0: Sc[S]): STen", "member" : "lamp.STen.ge", "link" : "lamp\/STen.html#ge[S](other:lamp.STen)(implicitevidence$149:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "lt", "tail" : "(other: Double)(arg0: Sc[S]): STen", "member" : "lamp.STen.lt", "link" : "lamp\/STen.html#lt[S](other:Double)(implicitevidence$148:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "lt", "tail" : "(other: STen)(arg0: Sc[S]): STen", "member" : "lamp.STen.lt", "link" : "lamp\/STen.html#lt[S](other:lamp.STen)(implicitevidence$147:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "gt", "tail" : "(other: Double)(arg0: Sc[S]): STen", "member" : "lamp.STen.gt", "link" : "lamp\/STen.html#gt[S](other:Double)(implicitevidence$146:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "gt", "tail" : "(other: STen)(arg0: Sc[S]): STen", "member" : "lamp.STen.gt", "link" : "lamp\/STen.html#gt[S](other:lamp.STen)(implicitevidence$145:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "equalDeep", "tail" : "(input2: STen): Boolean", "member" : "lamp.STen.equalDeep", "link" : "lamp\/STen.html#equalDeep(input2:lamp.STen):Boolean", "kind" : "def"}, {"label" : "choleskyInverse", "tail" : "(input2: STen, upper: Boolean)(arg0: Sc[S]): STen", "member" : "lamp.STen.choleskyInverse", "link" : "lamp\/STen.html#choleskyInverse[S](input2:lamp.STen,upper:Boolean)(implicitevidence$144:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "choleskyInverse", "tail" : "(upper: Boolean)(arg0: Sc[S]): STen", "member" : "lamp.STen.choleskyInverse", "link" : "lamp\/STen.html#choleskyInverse[S](upper:Boolean)(implicitevidence$143:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "cholesky", "tail" : "(upper: Boolean)(arg0: Sc[S]): STen", "member" : "lamp.STen.cholesky", "link" : "lamp\/STen.html#cholesky[S](upper:Boolean)(implicitevidence$142:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "argsort", "tail" : "(dim: Int, descending: Boolean)(arg0: Sc[S]): STen", "member" : "lamp.STen.argsort", "link" : "lamp\/STen.html#argsort[S](dim:Int,descending:Boolean)(implicitevidence$141:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "min", "tail" : "(dim: Int, keepDim: Boolean)(arg0: Sc[S]): (STen, STen)", "member" : "lamp.STen.min", "link" : "lamp\/STen.html#min[S](dim:Int,keepDim:Boolean)(implicitevidence$140:lamp.Sc[S]):(lamp.STen,lamp.STen)", "kind" : "def"}, {"label" : "min", "tail" : "(other: STen)(arg0: Sc[S]): STen", "member" : "lamp.STen.min", "link" : "lamp\/STen.html#min[S](other:lamp.STen)(implicitevidence$139:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "min", "tail" : "(arg0: Sc[S]): STen", "member" : "lamp.STen.min", "link" : "lamp\/STen.html#min[S](implicitevidence$138:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "max", "tail" : "(dim: Int, keepDim: Boolean)(arg0: Sc[S]): (STen, STen)", "member" : "lamp.STen.max", "link" : "lamp\/STen.html#max[S](dim:Int,keepDim:Boolean)(implicitevidence$137:lamp.Sc[S]):(lamp.STen,lamp.STen)", "kind" : "def"}, {"label" : "max", "tail" : "(other: STen)(arg0: Sc[S]): STen", "member" : "lamp.STen.max", "link" : "lamp\/STen.html#max[S](other:lamp.STen)(implicitevidence$136:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "max", "tail" : "(arg0: Sc[S]): STen", "member" : "lamp.STen.max", "link" : "lamp\/STen.html#max[S](implicitevidence$135:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "mode", "tail" : "(dim: Int, keepDim: Boolean)(arg0: Sc[S]): (STen, STen)", "member" : "lamp.STen.mode", "link" : "lamp\/STen.html#mode[S](dim:Int,keepDim:Boolean)(implicitevidence$134:lamp.Sc[S]):(lamp.STen,lamp.STen)", "kind" : "def"}, {"label" : "median", "tail" : "(dim: Int, keepDim: Boolean)(arg0: Sc[S]): (STen, STen)", "member" : "lamp.STen.median", "link" : "lamp\/STen.html#median[S](dim:Int,keepDim:Boolean)(implicitevidence$133:lamp.Sc[S]):(lamp.STen,lamp.STen)", "kind" : "def"}, {"label" : "median", "tail" : "(arg0: Sc[S]): STen", "member" : "lamp.STen.median", "link" : "lamp\/STen.html#median[S](implicitevidence$132:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "std", "tail" : "(dim: Int, unbiased: Boolean, keepDim: Boolean)(arg0: Sc[S]): STen", "member" : "lamp.STen.std", "link" : "lamp\/STen.html#std[S](dim:Int,unbiased:Boolean,keepDim:Boolean)(implicitevidence$131:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "std", "tail" : "(dim: Seq[Int], unbiased: Boolean, keepDim: Boolean)(arg0: Sc[S]): STen", "member" : "lamp.STen.std", "link" : "lamp\/STen.html#std[S](dim:Seq[Int],unbiased:Boolean,keepDim:Boolean)(implicitevidence$130:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "std", "tail" : "(unbiased: Boolean)(arg0: Sc[S]): STen", "member" : "lamp.STen.std", "link" : "lamp\/STen.html#std[S](unbiased:Boolean)(implicitevidence$129:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "variance", "tail" : "(dim: Int, unbiased: Boolean, keepDim: Boolean)(arg0: Sc[S]): STen", "member" : "lamp.STen.variance", "link" : "lamp\/STen.html#variance[S](dim:Int,unbiased:Boolean,keepDim:Boolean)(implicitevidence$128:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "variance", "tail" : "(dim: Seq[Int], unbiased: Boolean, keepDim: Boolean)(arg0: Sc[S]): STen", "member" : "lamp.STen.variance", "link" : "lamp\/STen.html#variance[S](dim:Seq[Int],unbiased:Boolean,keepDim:Boolean)(implicitevidence$127:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "variance", "tail" : "(unbiased: Boolean)(arg0: Sc[S]): STen", "member" : "lamp.STen.variance", "link" : "lamp\/STen.html#variance[S](unbiased:Boolean)(implicitevidence$126:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "mean", "tail" : "(dim: Int, keepDim: Boolean)(arg0: Sc[S]): STen", "member" : "lamp.STen.mean", "link" : "lamp\/STen.html#mean[S](dim:Int,keepDim:Boolean)(implicitevidence$125:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "mean", "tail" : "(dim: Seq[Int], keepDim: Boolean)(arg0: Sc[S]): STen", "member" : "lamp.STen.mean", "link" : "lamp\/STen.html#mean[S](dim:Seq[Int],keepDim:Boolean)(implicitevidence$124:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "mean", "tail" : "(arg0: Sc[S]): STen", "member" : "lamp.STen.mean", "link" : "lamp\/STen.html#mean[S](implicitevidence$123:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "logSoftMax", "tail" : "(dim: Int)(arg0: Sc[S]): STen", "member" : "lamp.STen.logSoftMax", "link" : "lamp\/STen.html#logSoftMax[S](dim:Int)(implicitevidence$122:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "norm2", "tail" : "(dim: Seq[Int], keepDim: Boolean)(arg0: Sc[S]): STen", "member" : "lamp.STen.norm2", "link" : "lamp\/STen.html#norm2[S](dim:Seq[Int],keepDim:Boolean)(implicitevidence$121:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "view", "tail" : "(dims: Long*)(arg0: Sc[S]): STen", "member" : "lamp.STen.view", "link" : "lamp\/STen.html#view[S](dims:Long*)(implicitevidence$120:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "expandAs", "tail" : "(other: STen)(arg0: Sc[S]): STen", "member" : "lamp.STen.expandAs", "link" : "lamp\/STen.html#expandAs[S](other:lamp.STen)(implicitevidence$119:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "gather", "tail" : "(dim: Long, index: STen)(arg0: Sc[S]): STen", "member" : "lamp.STen.gather", "link" : "lamp\/STen.html#gather[S](dim:Long,index:lamp.STen)(implicitevidence$118:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "gather", "tail" : "(dim: Long, index: Tensor)(arg0: Sc[S]): STen", "member" : "lamp.STen.gather", "link" : "lamp\/STen.html#gather[S](dim:Long,index:aten.Tensor)(implicitevidence$117:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "indexFill", "tail" : "(dim: Long, index: Tensor, source: Double)(arg0: Sc[S]): STen", "member" : "lamp.STen.indexFill", "link" : "lamp\/STen.html#indexFill[S](dim:Long,index:aten.Tensor,source:Double)(implicitevidence$116:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "indexFill", "tail" : "(dim: Long, index: STen, source: Double)(arg0: Sc[S]): STen", "member" : "lamp.STen.indexFill", "link" : "lamp\/STen.html#indexFill[S](dim:Long,index:lamp.STen,source:Double)(implicitevidence$115:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "indexFill", "tail" : "(dim: Long, index: STen, source: STen)(arg0: Sc[S]): STen", "member" : "lamp.STen.indexFill", "link" : "lamp\/STen.html#indexFill[S](dim:Long,index:lamp.STen,source:lamp.STen)(implicitevidence$114:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "indexAdd", "tail" : "(dim: Long, index: Tensor, source: STen)(arg0: Sc[S]): STen", "member" : "lamp.STen.indexAdd", "link" : "lamp\/STen.html#indexAdd[S](dim:Long,index:aten.Tensor,source:lamp.STen)(implicitevidence$113:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "indexAdd", "tail" : "(dim: Long, index: STen, source: STen)(arg0: Sc[S]): STen", "member" : "lamp.STen.indexAdd", "link" : "lamp\/STen.html#indexAdd[S](dim:Long,index:lamp.STen,source:lamp.STen)(implicitevidence$112:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "scatterAdd", "tail" : "(dim: Long, index: STen, source: STen)(arg0: Sc[S]): STen", "member" : "lamp.STen.scatterAdd", "link" : "lamp\/STen.html#scatterAdd[S](dim:Long,index:lamp.STen,source:lamp.STen)(implicitevidence$111:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "scatter", "tail" : "(dim: Long, index: STen, source: Double)(arg0: Sc[S]): STen", "member" : "lamp.STen.scatter", "link" : "lamp\/STen.html#scatter[S](dim:Long,index:lamp.STen,source:Double)(implicitevidence$110:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "scatter", "tail" : "(dim: Long, index: STen, source: STen)(arg0: Sc[S]): STen", "member" : "lamp.STen.scatter", "link" : "lamp\/STen.html#scatter[S](dim:Long,index:lamp.STen,source:lamp.STen)(implicitevidence$109:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "fill_", "tail" : "(v: STen): Unit", "member" : "lamp.STen.fill_", "link" : "lamp\/STen.html#fill_(v:lamp.STen):Unit", "kind" : "def"}, {"label" : "zero_", "tail" : "(): Unit", "member" : "lamp.STen.zero_", "link" : "lamp\/STen.html#zero_():Unit", "kind" : "def"}, {"label" : "maskedFill", "tail" : "(mask: Tensor, fill: Double)(arg0: Sc[S]): STen", "member" : "lamp.STen.maskedFill", "link" : "lamp\/STen.html#maskedFill[S](mask:aten.Tensor,fill:Double)(implicitevidence$108:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "maskedFill", "tail" : "(mask: STen, fill: Double)(arg0: Sc[S]): STen", "member" : "lamp.STen.maskedFill", "link" : "lamp\/STen.html#maskedFill[S](mask:lamp.STen,fill:Double)(implicitevidence$107:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "maskedSelect", "tail" : "(mask: Tensor)(arg0: Sc[S]): STen", "member" : "lamp.STen.maskedSelect", "link" : "lamp\/STen.html#maskedSelect[S](mask:aten.Tensor)(implicitevidence$106:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "maskedSelect", "tail" : "(mask: STen)(arg0: Sc[S]): STen", "member" : "lamp.STen.maskedSelect", "link" : "lamp\/STen.html#maskedSelect[S](mask:lamp.STen)(implicitevidence$105:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "fill_", "tail" : "(v: Double): Unit", "member" : "lamp.STen.fill_", "link" : "lamp\/STen.html#fill_(v:Double):Unit", "kind" : "def"}, {"label" : "slice", "tail" : "(dim: Long, start: Long, end: Long, step: Long)(arg0: Sc[S]): STen", "member" : "lamp.STen.slice", "link" : "lamp\/STen.html#slice[S](dim:Long,start:Long,end:Long,step:Long)(implicitevidence$104:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "slice", "tail" : "(dim: Int, start: Long, end: Long, step: Long)(arg0: Sc[S]): STen", "member" : "lamp.STen.slice", "link" : "lamp\/STen.html#slice[S](dim:Int,start:Long,end:Long,step:Long)(implicitevidence$103:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "topk", "tail" : "(k: Int, dim: Int, largest: Boolean, sorted: Boolean)(arg0: Sc[S]): (STen, STen)", "member" : "lamp.STen.topk", "link" : "lamp\/STen.html#topk[S](k:Int,dim:Int,largest:Boolean,sorted:Boolean)(implicitevidence$102:lamp.Sc[S]):(lamp.STen,lamp.STen)", "kind" : "def"}, {"label" : "colSum", "tail" : "(arg0: Sc[S]): STen", "member" : "lamp.STen.colSum", "link" : "lamp\/STen.html#colSum[S](implicitevidence$101:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "rowSum", "tail" : "(arg0: Sc[S]): STen", "member" : "lamp.STen.rowSum", "link" : "lamp\/STen.html#rowSum[S](implicitevidence$100:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "sum", "tail" : "(dim: Int, keepDim: Boolean)(arg0: Sc[S]): STen", "member" : "lamp.STen.sum", "link" : "lamp\/STen.html#sum[S](dim:Int,keepDim:Boolean)(implicitevidence$99:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "sum", "tail" : "(dim: Seq[Int], keepDim: Boolean)(arg0: Sc[S]): STen", "member" : "lamp.STen.sum", "link" : "lamp\/STen.html#sum[S](dim:Seq[Int],keepDim:Boolean)(implicitevidence$98:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "sum", "tail" : "(arg0: Sc[S]): STen", "member" : "lamp.STen.sum", "link" : "lamp\/STen.html#sum[S](implicitevidence$97:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "pow_", "tail" : "(exponent: Double): Unit", "member" : "lamp.STen.pow_", "link" : "lamp\/STen.html#pow_(exponent:Double):Unit", "kind" : "def"}, {"label" : "pow", "tail" : "(exponent: STen)(arg0: Sc[S]): STen", "member" : "lamp.STen.pow", "link" : "lamp\/STen.html#pow[S](exponent:lamp.STen)(implicitevidence$96:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "pow", "tail" : "(exponent: Double)(arg0: Sc[S]): STen", "member" : "lamp.STen.pow", "link" : "lamp\/STen.html#pow[S](exponent:Double)(implicitevidence$95:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "remainder", "tail" : "(other: Double)(arg0: Sc[S]): STen", "member" : "lamp.STen.remainder", "link" : "lamp\/STen.html#remainder[S](other:Double)(implicitevidence$94:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "remainder", "tail" : "(other: STen)(arg0: Sc[S]): STen", "member" : "lamp.STen.remainder", "link" : "lamp\/STen.html#remainder[S](other:lamp.STen)(implicitevidence$93:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "trace", "tail" : "(arg0: Sc[S]): STen", "member" : "lamp.STen.trace", "link" : "lamp\/STen.html#trace[S](implicitevidence$92:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "det", "tail" : "(arg0: Sc[S]): STen", "member" : "lamp.STen.det", "link" : "lamp\/STen.html#det[S](implicitevidence$91:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "reciprocal_", "tail" : "(): Unit", "member" : "lamp.STen.reciprocal_", "link" : "lamp\/STen.html#reciprocal_():Unit", "kind" : "def"}, {"label" : "reciprocal", "tail" : "(arg0: Sc[S]): STen", "member" : "lamp.STen.reciprocal", "link" : "lamp\/STen.html#reciprocal[S](implicitevidence$90:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "floor_", "tail" : "(): Unit", "member" : "lamp.STen.floor_", "link" : "lamp\/STen.html#floor_():Unit", "kind" : "def"}, {"label" : "floor", "tail" : "(arg0: Sc[S]): STen", "member" : "lamp.STen.floor", "link" : "lamp\/STen.html#floor[S](implicitevidence$89:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "ceil_", "tail" : "(): Unit", "member" : "lamp.STen.ceil_", "link" : "lamp\/STen.html#ceil_():Unit", "kind" : "def"}, {"label" : "ceil", "tail" : "(arg0: Sc[S]): STen", "member" : "lamp.STen.ceil", "link" : "lamp\/STen.html#ceil[S](implicitevidence$88:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "abs_", "tail" : "(): Unit", "member" : "lamp.STen.abs_", "link" : "lamp\/STen.html#abs_():Unit", "kind" : "def"}, {"label" : "abs", "tail" : "(arg0: Sc[S]): STen", "member" : "lamp.STen.abs", "link" : "lamp\/STen.html#abs[S](implicitevidence$87:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "square_", "tail" : "(): Unit", "member" : "lamp.STen.square_", "link" : "lamp\/STen.html#square_():Unit", "kind" : "def"}, {"label" : "square", "tail" : "(arg0: Sc[S]): STen", "member" : "lamp.STen.square", "link" : "lamp\/STen.html#square[S](implicitevidence$86:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "sqrt", "tail" : "(arg0: Sc[S]): STen", "member" : "lamp.STen.sqrt", "link" : "lamp\/STen.html#sqrt[S](implicitevidence$85:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "asin_", "tail" : "(): Unit", "member" : "lamp.STen.asin_", "link" : "lamp\/STen.html#asin_():Unit", "kind" : "def"}, {"label" : "asin", "tail" : "(arg0: Sc[S]): STen", "member" : "lamp.STen.asin", "link" : "lamp\/STen.html#asin[S](implicitevidence$84:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "acos_", "tail" : "(): Unit", "member" : "lamp.STen.acos_", "link" : "lamp\/STen.html#acos_():Unit", "kind" : "def"}, {"label" : "acos", "tail" : "(arg0: Sc[S]): STen", "member" : "lamp.STen.acos", "link" : "lamp\/STen.html#acos[S](implicitevidence$83:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "atan_", "tail" : "(): Unit", "member" : "lamp.STen.atan_", "link" : "lamp\/STen.html#atan_():Unit", "kind" : "def"}, {"label" : "atan", "tail" : "(arg0: Sc[S]): STen", "member" : "lamp.STen.atan", "link" : "lamp\/STen.html#atan[S](implicitevidence$82:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "tanh_", "tail" : "(): Unit", "member" : "lamp.STen.tanh_", "link" : "lamp\/STen.html#tanh_():Unit", "kind" : "def"}, {"label" : "tanh", "tail" : "(arg0: Sc[S]): STen", "member" : "lamp.STen.tanh", "link" : "lamp\/STen.html#tanh[S](implicitevidence$81:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "tan_", "tail" : "(): Unit", "member" : "lamp.STen.tan_", "link" : "lamp\/STen.html#tan_():Unit", "kind" : "def"}, {"label" : "tan", "tail" : "(arg0: Sc[S]): STen", "member" : "lamp.STen.tan", "link" : "lamp\/STen.html#tan[S](implicitevidence$80:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "cos_", "tail" : "(): Unit", "member" : "lamp.STen.cos_", "link" : "lamp\/STen.html#cos_():Unit", "kind" : "def"}, {"label" : "cos", "tail" : "(arg0: Sc[S]): STen", "member" : "lamp.STen.cos", "link" : "lamp\/STen.html#cos[S](implicitevidence$79:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "sin_", "tail" : "(): Unit", "member" : "lamp.STen.sin_", "link" : "lamp\/STen.html#sin_():Unit", "kind" : "def"}, {"label" : "sin", "tail" : "(arg0: Sc[S]): STen", "member" : "lamp.STen.sin", "link" : "lamp\/STen.html#sin[S](implicitevidence$78:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "log1p_", "tail" : "(): Unit", "member" : "lamp.STen.log1p_", "link" : "lamp\/STen.html#log1p_():Unit", "kind" : "def"}, {"label" : "log1p", "tail" : "(arg0: Sc[S]): STen", "member" : "lamp.STen.log1p", "link" : "lamp\/STen.html#log1p[S](implicitevidence$77:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "log_", "tail" : "(): Unit", "member" : "lamp.STen.log_", "link" : "lamp\/STen.html#log_():Unit", "kind" : "def"}, {"label" : "log", "tail" : "(arg0: Sc[S]): STen", "member" : "lamp.STen.log", "link" : "lamp\/STen.html#log[S](implicitevidence$76:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "exp_", "tail" : "(): Unit", "member" : "lamp.STen.exp_", "link" : "lamp\/STen.html#exp_():Unit", "kind" : "def"}, {"label" : "exp", "tail" : "(arg0: Sc[S]): STen", "member" : "lamp.STen.exp", "link" : "lamp\/STen.html#exp[S](implicitevidence$75:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "sigmoid_", "tail" : "(): Unit", "member" : "lamp.STen.sigmoid_", "link" : "lamp\/STen.html#sigmoid_():Unit", "kind" : "def"}, {"label" : "sigmoid", "tail" : "(arg0: Sc[S]): STen", "member" : "lamp.STen.sigmoid", "link" : "lamp\/STen.html#sigmoid[S](implicitevidence$74:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "gelu", "tail" : "(arg0: Sc[S]): STen", "member" : "lamp.STen.gelu", "link" : "lamp\/STen.html#gelu[S](implicitevidence$73:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "relu_", "tail" : "(): Unit", "member" : "lamp.STen.relu_", "link" : "lamp\/STen.html#relu_():Unit", "kind" : "def"}, {"label" : "relu", "tail" : "(arg0: Sc[S]): STen", "member" : "lamp.STen.relu", "link" : "lamp\/STen.html#relu[S](implicitevidence$72:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "addcmulSelf", "tail" : "(tensor1: STen, tensor2: Tensor, alpha: Double): Unit", "member" : "lamp.STen.addcmulSelf", "link" : "lamp\/STen.html#addcmulSelf(tensor1:lamp.STen,tensor2:aten.Tensor,alpha:Double):Unit", "kind" : "def"}, {"label" : "addcmulSelf", "tail" : "(tensor1: STen, tensor2: STen, alpha: Double): Unit", "member" : "lamp.STen.addcmulSelf", "link" : "lamp\/STen.html#addcmulSelf(tensor1:lamp.STen,tensor2:lamp.STen,alpha:Double):Unit", "kind" : "def"}, {"label" : "addcmul", "tail" : "(tensor1: STen, tensor2: STen, alpha: Double)(arg0: Sc[S]): STen", "member" : "lamp.STen.addcmul", "link" : "lamp\/STen.html#addcmul[S](tensor1:lamp.STen,tensor2:lamp.STen,alpha:Double)(implicitevidence$71:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "baddbmm", "tail" : "(batch1: STen, batch2: STen, beta: Double, alpha: Double)(arg0: Sc[S]): STen", "member" : "lamp.STen.baddbmm", "link" : "lamp\/STen.html#baddbmm[S](batch1:lamp.STen,batch2:lamp.STen,beta:Double,alpha:Double)(implicitevidence$70:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "bmm", "tail" : "(other: STen)(arg0: Sc[S]): STen", "member" : "lamp.STen.bmm", "link" : "lamp\/STen.html#bmm[S](other:lamp.STen)(implicitevidence$69:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "mm", "tail" : "(other: STen)(arg0: Sc[S]): STen", "member" : "lamp.STen.mm", "link" : "lamp\/STen.html#mm[S](other:lamp.STen)(implicitevidence$68:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "\/=", "tail" : "(other: STen)(arg0: Sc[S]): Unit", "member" : "lamp.STen.\/=", "link" : "lamp\/STen.html#\/=[S](other:lamp.STen)(implicitevidence$67:lamp.Sc[S]):Unit", "kind" : "def"}, {"label" : "\/", "tail" : "(other: Double)(arg0: Sc[S]): STen", "member" : "lamp.STen.\/", "link" : "lamp\/STen.html#\/[S](other:Double)(implicitevidence$66:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "\/", "tail" : "(other: Tensor)(arg0: Sc[S]): STen", "member" : "lamp.STen.\/", "link" : "lamp\/STen.html#\/[S](other:aten.Tensor)(implicitevidence$65:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "\/", "tail" : "(other: STen)(arg0: Sc[S]): STen", "member" : "lamp.STen.\/", "link" : "lamp\/STen.html#\/[S](other:lamp.STen)(implicitevidence$64:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "*=", "tail" : "(other: STen)(arg0: Sc[S]): Unit", "member" : "lamp.STen.*=", "link" : "lamp\/STen.html#*=[S](other:lamp.STen)(implicitevidence$63:lamp.Sc[S]):Unit", "kind" : "def"}, {"label" : "*", "tail" : "(other: Double)(arg0: Sc[S]): STen", "member" : "lamp.STen.*", "link" : "lamp\/STen.html#*[S](other:Double)(implicitevidence$62:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "*", "tail" : "(other: Tensor)(arg0: Sc[S]): STen", "member" : "lamp.STen.*", "link" : "lamp\/STen.html#*[S](other:aten.Tensor)(implicitevidence$61:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "*", "tail" : "(other: STen)(arg0: Sc[S]): STen", "member" : "lamp.STen.*", "link" : "lamp\/STen.html#*[S](other:lamp.STen)(implicitevidence$60:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "sub", "tail" : "(other: Double, alpha: Double)(arg0: Sc[S]): STen", "member" : "lamp.STen.sub", "link" : "lamp\/STen.html#sub[S](other:Double,alpha:Double)(implicitevidence$59:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "sub", "tail" : "(other: STen, alpha: Double)(arg0: Sc[S]): STen", "member" : "lamp.STen.sub", "link" : "lamp\/STen.html#sub[S](other:lamp.STen,alpha:Double)(implicitevidence$58:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "-=", "tail" : "(other: STen)(arg0: Sc[S]): Unit", "member" : "lamp.STen.-=", "link" : "lamp\/STen.html#-=[S](other:lamp.STen)(implicitevidence$57:lamp.Sc[S]):Unit", "kind" : "def"}, {"label" : "-", "tail" : "(other: STen)(arg0: Sc[S]): STen", "member" : "lamp.STen.-", "link" : "lamp\/STen.html#-[S](other:lamp.STen)(implicitevidence$56:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "addmm", "tail" : "(mat1: STen, mat2: STen, beta: Double, alpha: Double)(arg0: Sc[S]): STen", "member" : "lamp.STen.addmm", "link" : "lamp\/STen.html#addmm[S](mat1:lamp.STen,mat2:lamp.STen,beta:Double,alpha:Double)(implicitevidence$55:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "add", "tail" : "(other: Double, alpha: Double)(arg0: Sc[S]): STen", "member" : "lamp.STen.add", "link" : "lamp\/STen.html#add[S](other:Double,alpha:Double)(implicitevidence$54:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "add", "tail" : "(other: STen, alpha: Double)(arg0: Sc[S]): STen", "member" : "lamp.STen.add", "link" : "lamp\/STen.html#add[S](other:lamp.STen,alpha:Double)(implicitevidence$53:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "+", "tail" : "(other: Double)(arg0: Sc[S]): STen", "member" : "lamp.STen.+", "link" : "lamp\/STen.html#+[S](other:Double)(implicitevidence$52:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "+=", "tail" : "(other: STen): Unit", "member" : "lamp.STen.+=", "link" : "lamp\/STen.html#+=(other:lamp.STen):Unit", "kind" : "def"}, {"label" : "+", "tail" : "(other: STen)(arg0: Sc[S]): STen", "member" : "lamp.STen.+", "link" : "lamp\/STen.html#+[S](other:lamp.STen)(implicitevidence$51:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "castToLong", "tail" : "(arg0: Sc[S]): STen", "member" : "lamp.STen.castToLong", "link" : "lamp\/STen.html#castToLong[S](implicitevidence$50:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "castToDouble", "tail" : "(arg0: Sc[S]): STen", "member" : "lamp.STen.castToDouble", "link" : "lamp\/STen.html#castToDouble[S](implicitevidence$49:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "castToFloat", "tail" : "(arg0: Sc[S]): STen", "member" : "lamp.STen.castToFloat", "link" : "lamp\/STen.html#castToFloat[S](implicitevidence$48:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "cat", "tail" : "(other: STen, dim: Long)(arg0: Sc[S]): STen", "member" : "lamp.STen.cat", "link" : "lamp\/STen.html#cat[S](other:lamp.STen,dim:Long)(implicitevidence$47:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "equ", "tail" : "(other: Double)(arg0: Sc[S]): STen", "member" : "lamp.STen.equ", "link" : "lamp\/STen.html#equ[S](other:Double)(implicitevidence$46:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "equ", "tail" : "(other: STen)(arg0: Sc[S]): STen", "member" : "lamp.STen.equ", "link" : "lamp\/STen.html#equ[S](other:lamp.STen)(implicitevidence$45:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "maskFill", "tail" : "(mask: STen, fill: Double)(arg0: Sc[S]): STen", "member" : "lamp.STen.maskFill", "link" : "lamp\/STen.html#maskFill[S](mask:lamp.STen,fill:Double)(implicitevidence$44:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "argmin", "tail" : "(dim: Long, keepDim: Boolean)(arg0: Sc[S]): STen", "member" : "lamp.STen.argmin", "link" : "lamp\/STen.html#argmin[S](dim:Long,keepDim:Boolean)(implicitevidence$43:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "argmax", "tail" : "(dim: Long, keepDim: Boolean)(arg0: Sc[S]): STen", "member" : "lamp.STen.argmax", "link" : "lamp\/STen.html#argmax[S](dim:Long,keepDim:Boolean)(implicitevidence$42:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "indexSelect", "tail" : "(dim: Long, index: Tensor)(arg0: Sc[S]): STen", "member" : "lamp.STen.indexSelect", "link" : "lamp\/STen.html#indexSelect[S](dim:Long,index:aten.Tensor)(implicitevidence$41:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "indexSelect", "tail" : "(dim: Long, index: STen)(arg0: Sc[S]): STen", "member" : "lamp.STen.indexSelect", "link" : "lamp\/STen.html#indexSelect[S](dim:Long,index:lamp.STen)(implicitevidence$40:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "flatten", "tail" : "(startDim: Long, endDim: Long)(arg0: Sc[S]): STen", "member" : "lamp.STen.flatten", "link" : "lamp\/STen.html#flatten[S](startDim:Long,endDim:Long)(implicitevidence$39:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "select", "tail" : "(dim: Long, index: Long)(arg0: Sc[S]): STen", "member" : "lamp.STen.select", "link" : "lamp\/STen.html#select[S](dim:Long,index:Long)(implicitevidence$38:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "transpose", "tail" : "(dim1: Int, dim2: Int)(arg0: Sc[S]): STen", "member" : "lamp.STen.transpose", "link" : "lamp\/STen.html#transpose[S](dim1:Int,dim2:Int)(implicitevidence$37:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "t", "tail" : "(arg0: Sc[S]): STen", "member" : "lamp.STen.t", "link" : "lamp\/STen.html#t[S](implicitevidence$36:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "unbroadcast", "tail" : "(sizes: Seq[Long])(arg0: Sc[S]): STen", "member" : "lamp.STen.unbroadcast", "link" : "lamp\/STen.html#unbroadcast[S](sizes:Seq[Long])(implicitevidence$35:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "lamp.STen.toString", "link" : "lamp\/STen.html#toString():String", "kind" : "def"}, {"label" : "copyFrom", "tail" : "(source: STen): Unit", "member" : "lamp.STen.copyFrom", "link" : "lamp\/STen.html#copyFrom(source:lamp.STen):Unit", "kind" : "def"}, {"label" : "copyFrom", "tail" : "(source: Tensor): Unit", "member" : "lamp.STen.copyFrom", "link" : "lamp\/STen.html#copyFrom(source:aten.Tensor):Unit", "kind" : "def"}, {"label" : "copyTo", "tail" : "(options: TensorOptions)(arg0: Sc[S]): STen", "member" : "lamp.STen.copyTo", "link" : "lamp\/STen.html#copyTo[S](options:aten.TensorOptions)(implicitevidence$34:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "cloneTensor", "tail" : "(arg0: Sc[S]): STen", "member" : "lamp.STen.cloneTensor", "link" : "lamp\/STen.html#cloneTensor[S](implicitevidence$33:lamp.Sc[S]):lamp.STen", "kind" : "def"}, {"label" : "copyToDevice", "tail" : "(device: Device)(scope: Scope): STen", "member" : "lamp.STen.copyToDevice", "link" : "lamp\/STen.html#copyToDevice(device:lamp.Device)(implicitscope:lamp.Scope):lamp.STen", "kind" : "def"}, {"label" : "options", "tail" : ": TensorOptions", "member" : "lamp.STen.options", "link" : "lamp\/STen.html#options:aten.TensorOptions", "kind" : "val"}, {"label" : "sizes", "tail" : "(): List[Long]", "member" : "lamp.STen.sizes", "link" : "lamp\/STen.html#sizes:List[Long]", "kind" : "def"}, {"label" : "shape", "tail" : ": List[Long]", "member" : "lamp.STen.shape", "link" : "lamp\/STen.html#shape:List[Long]", "kind" : "val"}, {"label" : "toLongVec", "tail" : "(): Vec[Long]", "member" : "lamp.STen.toLongVec", "link" : "lamp\/STen.html#toLongVec:org.saddle.Vec[Long]", "kind" : "def"}, {"label" : "toVec", "tail" : "(): Vec[Double]", "member" : "lamp.STen.toVec", "link" : "lamp\/STen.html#toVec:org.saddle.Vec[Double]", "kind" : "def"}, {"label" : "toLongMat", "tail" : "(): Mat[Long]", "member" : "lamp.STen.toLongMat", "link" : "lamp\/STen.html#toLongMat:org.saddle.Mat[Long]", "kind" : "def"}, {"label" : "toMat", "tail" : "(): Mat[Double]", "member" : "lamp.STen.toMat", "link" : "lamp\/STen.html#toMat:org.saddle.Mat[Double]", "kind" : "def"}, {"label" : "numel", "tail" : "(): Long", "member" : "lamp.STen.numel", "link" : "lamp\/STen.html#numel:Long", "kind" : "def"}, {"label" : "value", "tail" : ": Tensor", "member" : "lamp.STen.value", "link" : "lamp\/STen.html#value:aten.Tensor", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/STen.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/STen.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/STen.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/STen.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/STen.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/STen.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/STen.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/STen.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/STen.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/STen.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/STen.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/STen.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/STen.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/STen.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/STen.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/STen.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/STen.html", "kind" : "case class"}, {"name" : "lamp.StringMetadata", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/StringMetadata.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/StringMetadata.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/StringMetadata.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/StringMetadata.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/StringMetadata.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/StringMetadata.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/StringMetadata.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/StringMetadata.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/StringMetadata.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/StringMetadata.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/StringMetadata.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/StringMetadata.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/StringMetadata.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/StringMetadata.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/StringMetadata.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/StringMetadata.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/StringMetadata.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/StringMetadata.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/StringMetadata.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "object" : "lamp\/StringMetadata$.html", "members_object" : [{"label" : "convertFrameToTensor", "tail" : "(frame: Frame[R, C, String], metadata: Seq[StringMetadata], device: Device, precision: FloatingPointPrecision, oneHotThreshold: Int)(scope: Scope): (STen, Seq[Metadata])", "member" : "lamp.StringMetadata.convertFrameToTensor", "link" : "lamp\/StringMetadata$.html#convertFrameToTensor[R,C](frame:org.saddle.Frame[R,C,String],metadata:Seq[lamp.StringMetadata],device:lamp.Device,precision:lamp.FloatingPointPrecision,oneHotThreshold:Int)(implicitscope:lamp.Scope):(lamp.STen,Seq[lamp.tabular.Metadata])", "kind" : "def"}, {"label" : "inferMetaFromFrame", "tail" : "(frame: Frame[R, C, String], numericNaN: Set[String], categoricalThreshold: Int, categoricalMissing: String): Seq[(C, StringMetadata)]", "member" : "lamp.StringMetadata.inferMetaFromFrame", "link" : "lamp\/StringMetadata$.html#inferMetaFromFrame[R,C](frame:org.saddle.Frame[R,C,String],numericNaN:Set[String],categoricalThreshold:Int,categoricalMissing:String):Seq[(C,lamp.StringMetadata)]", "kind" : "def"}, {"label" : "Unknown", "tail" : "", "member" : "lamp.StringMetadata.Unknown", "link" : "lamp\/StringMetadata$.html#UnknownextendsStringMetadatawithProductwithSerializable", "kind" : "case class"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/StringMetadata$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/StringMetadata$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/StringMetadata$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/StringMetadata$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/StringMetadata$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/StringMetadata$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/StringMetadata$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/StringMetadata$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/StringMetadata$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/StringMetadata$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/StringMetadata$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/StringMetadata$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/StringMetadata$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/StringMetadata$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/StringMetadata$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/StringMetadata$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/StringMetadata$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/StringMetadata$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/StringMetadata$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "lamp\/StringMetadata.html", "kind" : "trait"}, {"name" : "lamp.TensorHelpers", "shortDescription" : "", "object" : "lamp\/TensorHelpers$.html", "members_object" : [{"label" : "precision", "tail" : "(t: Tensor): Option[Product with Serializable with FloatingPointPrecision]", "member" : "lamp.TensorHelpers.precision", "link" : "lamp\/TensorHelpers$.html#precision(t:aten.Tensor):Option[ProductwithSerializablewithlamp.FloatingPointPrecision]", "kind" : "def"}, {"label" : "device", "tail" : "(t: Tensor): Product with Serializable with Device", "member" : "lamp.TensorHelpers.device", "link" : "lamp\/TensorHelpers$.html#device(t:aten.Tensor):ProductwithSerializablewithlamp.Device", "kind" : "def"}, {"label" : "fromVec", "tail" : "(m: Vec[Double], device: Device, precision: FloatingPointPrecision): Tensor", "member" : "lamp.TensorHelpers.fromVec", "link" : "lamp\/TensorHelpers$.html#fromVec(m:org.saddle.Vec[Double],device:lamp.Device,precision:lamp.FloatingPointPrecision):aten.Tensor", "kind" : "def"}, {"label" : "fromVec", "tail" : "(m: Vec[Double], cuda: Boolean): Tensor", "member" : "lamp.TensorHelpers.fromVec", "link" : "lamp\/TensorHelpers$.html#fromVec(m:org.saddle.Vec[Double],cuda:Boolean):aten.Tensor", "kind" : "def"}, {"label" : "fromLongVec", "tail" : "(m: Vec[Long], device: Device): Tensor", "member" : "lamp.TensorHelpers.fromLongVec", "link" : "lamp\/TensorHelpers$.html#fromLongVec(m:org.saddle.Vec[Long],device:lamp.Device):aten.Tensor", "kind" : "def"}, {"label" : "fromLongVec", "tail" : "(m: Vec[Long], cuda: Boolean): Tensor", "member" : "lamp.TensorHelpers.fromLongVec", "link" : "lamp\/TensorHelpers$.html#fromLongVec(m:org.saddle.Vec[Long],cuda:Boolean):aten.Tensor", "kind" : "def"}, {"label" : "fromLongMat", "tail" : "(m: Mat[Long], device: Device): Tensor", "member" : "lamp.TensorHelpers.fromLongMat", "link" : "lamp\/TensorHelpers$.html#fromLongMat(m:org.saddle.Mat[Long],device:lamp.Device):aten.Tensor", "kind" : "def"}, {"label" : "fromLongMat", "tail" : "(m: Mat[Long], cuda: Boolean): Tensor", "member" : "lamp.TensorHelpers.fromLongMat", "link" : "lamp\/TensorHelpers$.html#fromLongMat(m:org.saddle.Mat[Long],cuda:Boolean):aten.Tensor", "kind" : "def"}, {"label" : "fromMat", "tail" : "(m: Mat[Double], device: Device, precision: FloatingPointPrecision): Tensor", "member" : "lamp.TensorHelpers.fromMat", "link" : "lamp\/TensorHelpers$.html#fromMat(m:org.saddle.Mat[Double],device:lamp.Device,precision:lamp.FloatingPointPrecision):aten.Tensor", "kind" : "def"}, {"label" : "fromFloatMat", "tail" : "(m: Mat[Float], device: Device): Tensor", "member" : "lamp.TensorHelpers.fromFloatMat", "link" : "lamp\/TensorHelpers$.html#fromFloatMat(m:org.saddle.Mat[Float],device:lamp.Device):aten.Tensor", "kind" : "def"}, {"label" : "fromMat", "tail" : "(m: Mat[Double], cuda: Boolean): Tensor", "member" : "lamp.TensorHelpers.fromMat", "link" : "lamp\/TensorHelpers$.html#fromMat(m:org.saddle.Mat[Double],cuda:Boolean):aten.Tensor", "kind" : "def"}, {"label" : "fromMatList", "tail" : "(m: Seq[Mat[Double]], device: Device, precision: FloatingPointPrecision): Tensor", "member" : "lamp.TensorHelpers.fromMatList", "link" : "lamp\/TensorHelpers$.html#fromMatList(m:Seq[org.saddle.Mat[Double]],device:lamp.Device,precision:lamp.FloatingPointPrecision):aten.Tensor", "kind" : "def"}, {"label" : "fromMatList", "tail" : "(m: Seq[Mat[Double]], cuda: Boolean): Tensor", "member" : "lamp.TensorHelpers.fromMatList", "link" : "lamp\/TensorHelpers$.html#fromMatList(m:Seq[org.saddle.Mat[Double]],cuda:Boolean):aten.Tensor", "kind" : "def"}, {"label" : "toLongMat", "tail" : "(t: Tensor): Mat[Long]", "member" : "lamp.TensorHelpers.toLongMat", "link" : "lamp\/TensorHelpers$.html#toLongMat(t:aten.Tensor):org.saddle.Mat[Long]", "kind" : "def"}, {"label" : "toFloatMat", "tail" : "(t: Tensor): Mat[Float]", "member" : "lamp.TensorHelpers.toFloatMat", "link" : "lamp\/TensorHelpers$.html#toFloatMat(t:aten.Tensor):org.saddle.Mat[Float]", "kind" : "def"}, {"label" : "toLongVec", "tail" : "(t: Tensor): Vec[Long]", "member" : "lamp.TensorHelpers.toLongVec", "link" : "lamp\/TensorHelpers$.html#toLongVec(t:aten.Tensor):org.saddle.Vec[Long]", "kind" : "def"}, {"label" : "toVec", "tail" : "(t: Tensor): Vec[Double]", "member" : "lamp.TensorHelpers.toVec", "link" : "lamp\/TensorHelpers$.html#toVec(t:aten.Tensor):org.saddle.Vec[Double]", "kind" : "def"}, {"label" : "toMat", "tail" : "(t: Tensor): Mat[Double]", "member" : "lamp.TensorHelpers.toMat", "link" : "lamp\/TensorHelpers$.html#toMat(t:aten.Tensor):org.saddle.Mat[Double]", "kind" : "def"}, {"label" : "unbroadcast", "tail" : "(p: Tensor, desiredShape: List[Long]): Tensor", "member" : "lamp.TensorHelpers.unbroadcast", "link" : "lamp\/TensorHelpers$.html#unbroadcast(p:aten.Tensor,desiredShape:List[Long]):aten.Tensor", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/TensorHelpers$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/TensorHelpers$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/TensorHelpers$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/TensorHelpers$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/TensorHelpers$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/TensorHelpers$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/TensorHelpers$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/TensorHelpers$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/TensorHelpers$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/TensorHelpers$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/TensorHelpers$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/TensorHelpers$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/TensorHelpers$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/TensorHelpers$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/TensorHelpers$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/TensorHelpers$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/TensorHelpers$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/TensorHelpers$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/TensorHelpers$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "scala.collection.compat" : [], "lamp.umap" : [{"name" : "lamp.umap.Umap", "shortDescription" : "", "object" : "lamp\/umap\/Umap$.html", "members_object" : [{"label" : "umap", "tail" : "(data: Mat[Double], device: Device, precision: FloatingPointPrecision, k: Int, numDim: Int, knnMinibatchSize: Int, lr: Double, iterations: Int, minDist: Double, negativeSampleSize: Int, randomSeed: Long, balanceAttractionsAndRepulsions: Boolean, repulsionStrength: Double, logger: Option[Logger]): (Mat[Double], Mat[Double], Double)", "member" : "lamp.umap.Umap.umap", "link" : "lamp\/umap\/Umap$.html#umap(data:org.saddle.Mat[Double],device:lamp.Device,precision:lamp.FloatingPointPrecision,k:Int,numDim:Int,knnMinibatchSize:Int,lr:Double,iterations:Int,minDist:Double,negativeSampleSize:Int,randomSeed:Long,balanceAttractionsAndRepulsions:Boolean,repulsionStrength:Double,logger:Option[scribe.Logger]):(org.saddle.Mat[Double],org.saddle.Mat[Double],Double)", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/umap\/Umap$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/umap\/Umap$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/umap\/Umap$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/umap\/Umap$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/umap\/Umap$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/umap\/Umap$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/umap\/Umap$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/umap\/Umap$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/umap\/Umap$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/umap\/Umap$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/umap\/Umap$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/umap\/Umap$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/umap\/Umap$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/umap\/Umap$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/umap\/Umap$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/umap\/Umap$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/umap\/Umap$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/umap\/Umap$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/umap\/Umap$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "lamp.example.translation" : [{"name" : "lamp.example.translation.CliConfig", "shortDescription" : "", "members_case class" : [{"member" : "lamp.example.translation.CliConfig#<init>", "error" : "unsupported entity"}, {"label" : "query", "tail" : ": Option[String]", "member" : "lamp.example.translation.CliConfig.query", "link" : "lamp\/example\/translation\/CliConfig.html#query:Option[String]", "kind" : "val"}, {"label" : "checkpointLoad", "tail" : ": Option[String]", "member" : "lamp.example.translation.CliConfig.checkpointLoad", "link" : "lamp\/example\/translation\/CliConfig.html#checkpointLoad:Option[String]", "kind" : "val"}, {"label" : "checkpointSave", "tail" : ": Option[String]", "member" : "lamp.example.translation.CliConfig.checkpointSave", "link" : "lamp\/example\/translation\/CliConfig.html#checkpointSave:Option[String]", "kind" : "val"}, {"label" : "dropout", "tail" : ": Double", "member" : "lamp.example.translation.CliConfig.dropout", "link" : "lamp\/example\/translation\/CliConfig.html#dropout:Double", "kind" : "val"}, {"label" : "learningRate", "tail" : ": Double", "member" : "lamp.example.translation.CliConfig.learningRate", "link" : "lamp\/example\/translation\/CliConfig.html#learningRate:Double", "kind" : "val"}, {"label" : "epochs", "tail" : ": Int", "member" : "lamp.example.translation.CliConfig.epochs", "link" : "lamp\/example\/translation\/CliConfig.html#epochs:Int", "kind" : "val"}, {"label" : "validationBatchSize", "tail" : ": Int", "member" : "lamp.example.translation.CliConfig.validationBatchSize", "link" : "lamp\/example\/translation\/CliConfig.html#validationBatchSize:Int", "kind" : "val"}, {"label" : "trainBatchSize", "tail" : ": Int", "member" : "lamp.example.translation.CliConfig.trainBatchSize", "link" : "lamp\/example\/translation\/CliConfig.html#trainBatchSize:Int", "kind" : "val"}, {"label" : "singlePrecision", "tail" : ": Boolean", "member" : "lamp.example.translation.CliConfig.singlePrecision", "link" : "lamp\/example\/translation\/CliConfig.html#singlePrecision:Boolean", "kind" : "val"}, {"label" : "cuda", "tail" : ": Boolean", "member" : "lamp.example.translation.CliConfig.cuda", "link" : "lamp\/example\/translation\/CliConfig.html#cuda:Boolean", "kind" : "val"}, {"label" : "testData", "tail" : ": Option[String]", "member" : "lamp.example.translation.CliConfig.testData", "link" : "lamp\/example\/translation\/CliConfig.html#testData:Option[String]", "kind" : "val"}, {"label" : "trainData", "tail" : ": String", "member" : "lamp.example.translation.CliConfig.trainData", "link" : "lamp\/example\/translation\/CliConfig.html#trainData:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/example\/translation\/CliConfig.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/example\/translation\/CliConfig.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/example\/translation\/CliConfig.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/example\/translation\/CliConfig.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/example\/translation\/CliConfig.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/example\/translation\/CliConfig.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/example\/translation\/CliConfig.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/example\/translation\/CliConfig.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/example\/translation\/CliConfig.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/example\/translation\/CliConfig.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/example\/translation\/CliConfig.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/example\/translation\/CliConfig.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/example\/translation\/CliConfig.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/example\/translation\/CliConfig.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/example\/translation\/CliConfig.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/example\/translation\/CliConfig.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/example\/translation\/CliConfig.html", "kind" : "case class"}, {"name" : "lamp.example.translation.Train", "shortDescription" : "", "object" : "lamp\/example\/translation\/Train$.html", "members_object" : [{"label" : "parser1", "tail" : ": OParser[String, CliConfig]", "member" : "lamp.example.translation.Train.parser1", "link" : "lamp\/example\/translation\/Train$.html#parser1:scopt.OParser[String,lamp.example.translation.CliConfig]", "kind" : "val"}, {"label" : "builder", "tail" : ": OParserBuilder[CliConfig]", "member" : "lamp.example.translation.Train.builder", "link" : "lamp\/example\/translation\/Train$.html#builder:scopt.OParserBuilder[lamp.example.translation.CliConfig]", "kind" : "val"}, {"label" : "main", "tail" : "(args: Array[String]): Unit", "member" : "scala.App.main", "link" : "lamp\/example\/translation\/Train$.html#main(args:Array[String]):Unit", "kind" : "def"}, {"label" : "delayedInit", "tail" : "(body: ⇒ Unit): Unit", "member" : "scala.App.delayedInit", "link" : "lamp\/example\/translation\/Train$.html#delayedInit(body:=>Unit):Unit", "kind" : "def"}, {"label" : "args", "tail" : "(): Array[String]", "member" : "scala.App.args", "link" : "lamp\/example\/translation\/Train$.html#args:Array[String]", "kind" : "def"}, {"label" : "executionStart", "tail" : ": Long", "member" : "scala.App.executionStart", "link" : "lamp\/example\/translation\/Train$.html#executionStart:Long", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/example\/translation\/Train$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/example\/translation\/Train$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/example\/translation\/Train$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/example\/translation\/Train$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/example\/translation\/Train$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/example\/translation\/Train$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/example\/translation\/Train$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/example\/translation\/Train$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/example\/translation\/Train$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/example\/translation\/Train$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/example\/translation\/Train$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/example\/translation\/Train$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/example\/translation\/Train$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/example\/translation\/Train$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/example\/translation\/Train$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/example\/translation\/Train$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/example\/translation\/Train$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/example\/translation\/Train$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/example\/translation\/Train$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "lamp.example.translation.Translation", "shortDescription" : "", "object" : "lamp\/example\/translation\/Translation$.html", "members_object" : [{"label" : "prepare", "tail" : "(line: String, endOfSentence: Char, startOfSentence: Char): (String, String)", "member" : "lamp.example.translation.Translation.prepare", "link" : "lamp\/example\/translation\/Translation$.html#prepare(line:String,endOfSentence:Char,startOfSentence:Char):(String,String)", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/example\/translation\/Translation$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/example\/translation\/Translation$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/example\/translation\/Translation$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/example\/translation\/Translation$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/example\/translation\/Translation$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/example\/translation\/Translation$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/example\/translation\/Translation$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/example\/translation\/Translation$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/example\/translation\/Translation$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/example\/translation\/Translation$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/example\/translation\/Translation$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/example\/translation\/Translation$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/example\/translation\/Translation$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/example\/translation\/Translation$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/example\/translation\/Translation$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/example\/translation\/Translation$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/example\/translation\/Translation$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/example\/translation\/Translation$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/example\/translation\/Translation$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "lamp.example" : [], "lamp.nn" : [{"name" : "lamp.nn.AdamW", "shortDescription" : "", "object" : "lamp\/nn\/AdamW$.html", "members_object" : [{"label" : "factory", "tail" : "(weightDecay: OptimizerHyperparameter, learningRate: OptimizerHyperparameter, beta1: OptimizerHyperparameter, beta2: OptimizerHyperparameter, eps: Double, scheduler: (Long) ⇒ Double, clip: Option[Double]): (Seq[(STen, PTag)]) ⇒ AdamW", "member" : "lamp.nn.AdamW.factory", "link" : "lamp\/nn\/AdamW$.html#factory(weightDecay:lamp.nn.OptimizerHyperparameter,learningRate:lamp.nn.OptimizerHyperparameter,beta1:lamp.nn.OptimizerHyperparameter,beta2:lamp.nn.OptimizerHyperparameter,eps:Double,scheduler:Long=>Double,clip:Option[Double]):Seq[(lamp.STen,lamp.nn.PTag)]=>lamp.nn.AdamW", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/AdamW$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/AdamW$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/AdamW$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/AdamW$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/AdamW$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/AdamW$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/AdamW$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/AdamW$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/AdamW$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/AdamW$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/AdamW$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/AdamW$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/AdamW$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/AdamW$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/AdamW$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/AdamW$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/AdamW$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/AdamW$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/AdamW$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "step", "tail" : "(gradients: Seq[Option[STen]], scheduleFactor: Double): Unit", "member" : "lamp.nn.AdamW.step", "link" : "lamp\/nn\/AdamW.html#step(gradients:Seq[Option[lamp.STen]],scheduleFactor:Double):Unit", "kind" : "def"}, {"label" : "release", "tail" : "(): Unit", "member" : "lamp.nn.AdamW.release", "link" : "lamp\/nn\/AdamW.html#release():Unit", "kind" : "def"}, {"label" : "stepCount", "tail" : ": Long", "member" : "lamp.nn.AdamW.stepCount", "link" : "lamp\/nn\/AdamW.html#stepCount:Long", "kind" : "var"}, {"label" : "vt", "tail" : ": List[Tensor]", "member" : "lamp.nn.AdamW.vt", "link" : "lamp\/nn\/AdamW.html#vt:List[aten.Tensor]", "kind" : "val"}, {"label" : "mt", "tail" : ": List[Tensor]", "member" : "lamp.nn.AdamW.mt", "link" : "lamp\/nn\/AdamW.html#mt:List[aten.Tensor]", "kind" : "val"}, {"member" : "lamp.nn.AdamW#<init>", "error" : "unsupported entity"}, {"label" : "clip", "tail" : ": Option[Double]", "member" : "lamp.nn.AdamW.clip", "link" : "lamp\/nn\/AdamW.html#clip:Option[Double]", "kind" : "val"}, {"label" : "scheduler", "tail" : ": (Long) ⇒ Double", "member" : "lamp.nn.AdamW.scheduler", "link" : "lamp\/nn\/AdamW.html#scheduler:Long=>Double", "kind" : "val"}, {"label" : "eps", "tail" : ": Double", "member" : "lamp.nn.AdamW.eps", "link" : "lamp\/nn\/AdamW.html#eps:Double", "kind" : "val"}, {"label" : "beta2", "tail" : ": OptimizerHyperparameter", "member" : "lamp.nn.AdamW.beta2", "link" : "lamp\/nn\/AdamW.html#beta2:lamp.nn.OptimizerHyperparameter", "kind" : "val"}, {"label" : "beta1", "tail" : ": OptimizerHyperparameter", "member" : "lamp.nn.AdamW.beta1", "link" : "lamp\/nn\/AdamW.html#beta1:lamp.nn.OptimizerHyperparameter", "kind" : "val"}, {"label" : "learningRate", "tail" : ": OptimizerHyperparameter", "member" : "lamp.nn.AdamW.learningRate", "link" : "lamp\/nn\/AdamW.html#learningRate:lamp.nn.OptimizerHyperparameter", "kind" : "val"}, {"label" : "weightDecay", "tail" : ": OptimizerHyperparameter", "member" : "lamp.nn.AdamW.weightDecay", "link" : "lamp\/nn\/AdamW.html#weightDecay:lamp.nn.OptimizerHyperparameter", "kind" : "val"}, {"label" : "parameters", "tail" : ": Seq[(STen, PTag)]", "member" : "lamp.nn.AdamW.parameters", "link" : "lamp\/nn\/AdamW.html#parameters:Seq[(lamp.STen,lamp.nn.PTag)]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/AdamW.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/AdamW.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/AdamW.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/AdamW.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/AdamW.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/AdamW.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/AdamW.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/AdamW.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/AdamW.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/AdamW.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/AdamW.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/AdamW.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/AdamW.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/AdamW.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/AdamW.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/AdamW.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/nn\/AdamW.html", "kind" : "case class"}, {"name" : "lamp.nn.Attention", "shortDescription" : "", "object" : "lamp\/nn\/Attention$.html", "members_object" : [{"label" : "forward", "tail" : "(decoder: M with StatefulModule[Variable, Variable, T], x: Variable, keyValue: Variable, state: T, tokens: Variable, padToken: Long)(stateToKey: (T) ⇒ Variable)(arg0: Sc[S]): (Variable, T)", "member" : "lamp.nn.Attention.forward", "link" : "lamp\/nn\/Attention$.html#forward[T,M<:lamp.nn.StatefulModule[lamp.autograd.Variable,lamp.autograd.Variable,T],S](decoder:Mwithlamp.nn.StatefulModule[lamp.autograd.Variable,lamp.autograd.Variable,T],x:lamp.autograd.Variable,keyValue:lamp.autograd.Variable,state:T,tokens:lamp.autograd.Variable,padToken:Long)(stateToKey:T=>lamp.autograd.Variable)(implicitevidence$3:lamp.Sc[S]):(lamp.autograd.Variable,T)", "kind" : "def"}, {"label" : "dotProductAttention", "tail" : "(query: Variable, keyvalue: Variable, tokens: Variable, padToken: Long)(arg0: Sc[S]): Variable", "member" : "lamp.nn.Attention.dotProductAttention", "link" : "lamp\/nn\/Attention$.html#dotProductAttention[S](query:lamp.autograd.Variable,keyvalue:lamp.autograd.Variable,tokens:lamp.autograd.Variable,padToken:Long)(implicitevidence$2:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "sequenceMask", "tail" : "(tokens: Variable, maskable: Variable, maskedToken: Long, fill: Double)(arg0: Sc[S]): Variable", "member" : "lamp.nn.Attention.sequenceMask", "link" : "lamp\/nn\/Attention$.html#sequenceMask[S](tokens:lamp.autograd.Variable,maskable:lamp.autograd.Variable,maskedToken:Long,fill:Double)(implicitevidence$1:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/Attention$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/Attention$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/Attention$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/Attention$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/Attention$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/Attention$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/Attention$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Attention$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Attention$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Attention$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/Attention$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/Attention$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/Attention$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/Attention$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/Attention$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/Attention$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/Attention$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/Attention$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/Attention$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "lamp.nn.AttentionDecoder", "shortDescription" : "", "members_case class" : [{"label" : "forward1", "tail" : "(x: Variable, state: T)(arg0: Sc[S]): (Variable, T)", "member" : "lamp.nn.AttentionDecoder.forward1", "link" : "lamp\/nn\/AttentionDecoder.html#forward1[S](x:lamp.autograd.Variable,state:T)(implicitevidence$5:lamp.Sc[S]):(lamp.autograd.Variable,T)", "kind" : "def"}, {"label" : "forward", "tail" : "(x: (Variable, T))(arg0: Sc[S]): (Variable, T)", "member" : "lamp.nn.AttentionDecoder.forward", "link" : "lamp\/nn\/AttentionDecoder.html#forward[S](x:(lamp.autograd.Variable,T))(implicitevidence$4:lamp.Sc[S]):(lamp.autograd.Variable,T)", "kind" : "def"}, {"label" : "state", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.AttentionDecoder.state", "link" : "lamp\/nn\/AttentionDecoder.html#state:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "def"}, {"member" : "lamp.nn.AttentionDecoder#<init>", "error" : "unsupported entity"}, {"label" : "padToken", "tail" : ": Long", "member" : "lamp.nn.AttentionDecoder.padToken", "link" : "lamp\/nn\/AttentionDecoder.html#padToken:Long", "kind" : "val"}, {"label" : "tokens", "tail" : ": Variable", "member" : "lamp.nn.AttentionDecoder.tokens", "link" : "lamp\/nn\/AttentionDecoder.html#tokens:lamp.autograd.Variable", "kind" : "val"}, {"label" : "keyValue", "tail" : ": Variable", "member" : "lamp.nn.AttentionDecoder.keyValue", "link" : "lamp\/nn\/AttentionDecoder.html#keyValue:lamp.autograd.Variable", "kind" : "val"}, {"label" : "stateToKey", "tail" : ": (T) ⇒ Variable", "member" : "lamp.nn.AttentionDecoder.stateToKey", "link" : "lamp\/nn\/AttentionDecoder.html#stateToKey:T=>lamp.autograd.Variable", "kind" : "val"}, {"label" : "embedding", "tail" : ": M0 with Module", "member" : "lamp.nn.AttentionDecoder.embedding", "link" : "lamp\/nn\/AttentionDecoder.html#embedding:M0withlamp.nn.Module", "kind" : "val"}, {"label" : "decoder", "tail" : ": M with StatefulModule[Variable, Variable, T]", "member" : "lamp.nn.AttentionDecoder.decoder", "link" : "lamp\/nn\/AttentionDecoder.html#decoder:Mwithlamp.nn.StatefulModule[lamp.autograd.Variable,lamp.autograd.Variable,T]", "kind" : "val"}, {"label" : "learnableParameters", "tail" : "(): Long", "member" : "lamp.nn.GenericModule.learnableParameters", "link" : "lamp\/nn\/AttentionDecoder.html#learnableParameters:Long", "kind" : "final def"}, {"label" : "gradients", "tail" : "(loss: Variable, zeroGrad: Boolean): Seq[Option[STen]]", "member" : "lamp.nn.GenericModule.gradients", "link" : "lamp\/nn\/AttentionDecoder.html#gradients(loss:lamp.autograd.Variable,zeroGrad:Boolean):Seq[Option[lamp.STen]]", "kind" : "final def"}, {"label" : "parameters", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.GenericModule.parameters", "link" : "lamp\/nn\/AttentionDecoder.html#parameters:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "final def"}, {"label" : "apply", "tail" : "(a: (Variable, T))(arg0: Sc[S]): (Variable, T)", "member" : "lamp.nn.GenericModule.apply", "link" : "lamp\/nn\/AttentionDecoder.html#apply[S](a:A)(implicitevidence$17:lamp.Sc[S]):B", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/AttentionDecoder.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/AttentionDecoder.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/AttentionDecoder.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/AttentionDecoder.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/AttentionDecoder.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/AttentionDecoder.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/AttentionDecoder.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/AttentionDecoder.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/AttentionDecoder.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/AttentionDecoder.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/AttentionDecoder.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/AttentionDecoder.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/AttentionDecoder.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/AttentionDecoder.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/AttentionDecoder.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/AttentionDecoder.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/nn\/AttentionDecoder.html", "kind" : "case class"}, {"name" : "lamp.nn.BatchNorm", "shortDescription" : "", "object" : "lamp\/nn\/BatchNorm$.html", "members_object" : [{"label" : "apply", "tail" : "(features: Int, tOpt: TensorOptions, training: Boolean, momentum: Double, eps: Double)(arg0: Sc[S]): BatchNorm", "member" : "lamp.nn.BatchNorm.apply", "link" : "lamp\/nn\/BatchNorm$.html#apply[S](features:Int,tOpt:aten.TensorOptions,training:Boolean,momentum:Double,eps:Double)(implicitevidence$2:lamp.Sc[S]):lamp.nn.BatchNorm", "kind" : "def"}, {"label" : "RunningVar", "tail" : "", "member" : "lamp.nn.BatchNorm.RunningVar", "link" : "lamp\/nn\/BatchNorm$.html#RunningVar", "kind" : "object"}, {"label" : "RunningMean", "tail" : "", "member" : "lamp.nn.BatchNorm.RunningMean", "link" : "lamp\/nn\/BatchNorm$.html#RunningMean", "kind" : "object"}, {"label" : "Bias", "tail" : "", "member" : "lamp.nn.BatchNorm.Bias", "link" : "lamp\/nn\/BatchNorm$.html#Bias", "kind" : "object"}, {"label" : "Weights", "tail" : "", "member" : "lamp.nn.BatchNorm.Weights", "link" : "lamp\/nn\/BatchNorm$.html#Weights", "kind" : "object"}, {"label" : "load", "tail" : ": Load[BatchNorm]", "member" : "lamp.nn.BatchNorm.load", "link" : "lamp\/nn\/BatchNorm$.html#load:lamp.nn.Load[lamp.nn.BatchNorm]", "kind" : "implicit val"}, {"label" : "trainingMode", "tail" : ": TrainingMode[BatchNorm]", "member" : "lamp.nn.BatchNorm.trainingMode", "link" : "lamp\/nn\/BatchNorm$.html#trainingMode:lamp.nn.TrainingMode[lamp.nn.BatchNorm]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/BatchNorm$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/BatchNorm$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/BatchNorm$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/BatchNorm$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/BatchNorm$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/BatchNorm$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/BatchNorm$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/BatchNorm$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/BatchNorm$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/BatchNorm$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/BatchNorm$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/BatchNorm$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/BatchNorm$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/BatchNorm$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/BatchNorm$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/BatchNorm$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/BatchNorm$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/BatchNorm$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/BatchNorm$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "forward", "tail" : "(x: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.nn.BatchNorm.forward", "link" : "lamp\/nn\/BatchNorm.html#forward[S](x:lamp.autograd.Variable)(implicitevidence$1:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "state", "tail" : ": List[(Constant, LeafTag with Product with Serializable)]", "member" : "lamp.nn.BatchNorm.state", "link" : "lamp\/nn\/BatchNorm.html#state:List[(lamp.autograd.Constant,lamp.nn.LeafTagwithProductwithSerializable)]", "kind" : "val"}, {"member" : "lamp.nn.BatchNorm#<init>", "error" : "unsupported entity"}, {"label" : "eps", "tail" : ": Double", "member" : "lamp.nn.BatchNorm.eps", "link" : "lamp\/nn\/BatchNorm.html#eps:Double", "kind" : "val"}, {"label" : "momentum", "tail" : ": Double", "member" : "lamp.nn.BatchNorm.momentum", "link" : "lamp\/nn\/BatchNorm.html#momentum:Double", "kind" : "val"}, {"label" : "training", "tail" : ": Boolean", "member" : "lamp.nn.BatchNorm.training", "link" : "lamp\/nn\/BatchNorm.html#training:Boolean", "kind" : "val"}, {"label" : "runningVar", "tail" : ": Constant", "member" : "lamp.nn.BatchNorm.runningVar", "link" : "lamp\/nn\/BatchNorm.html#runningVar:lamp.autograd.Constant", "kind" : "val"}, {"label" : "runningMean", "tail" : ": Constant", "member" : "lamp.nn.BatchNorm.runningMean", "link" : "lamp\/nn\/BatchNorm.html#runningMean:lamp.autograd.Constant", "kind" : "val"}, {"label" : "bias", "tail" : ": Constant", "member" : "lamp.nn.BatchNorm.bias", "link" : "lamp\/nn\/BatchNorm.html#bias:lamp.autograd.Constant", "kind" : "val"}, {"label" : "weight", "tail" : ": Constant", "member" : "lamp.nn.BatchNorm.weight", "link" : "lamp\/nn\/BatchNorm.html#weight:lamp.autograd.Constant", "kind" : "val"}, {"label" : "learnableParameters", "tail" : "(): Long", "member" : "lamp.nn.GenericModule.learnableParameters", "link" : "lamp\/nn\/BatchNorm.html#learnableParameters:Long", "kind" : "final def"}, {"label" : "gradients", "tail" : "(loss: Variable, zeroGrad: Boolean): Seq[Option[STen]]", "member" : "lamp.nn.GenericModule.gradients", "link" : "lamp\/nn\/BatchNorm.html#gradients(loss:lamp.autograd.Variable,zeroGrad:Boolean):Seq[Option[lamp.STen]]", "kind" : "final def"}, {"label" : "parameters", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.GenericModule.parameters", "link" : "lamp\/nn\/BatchNorm.html#parameters:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "final def"}, {"label" : "apply", "tail" : "(a: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.nn.GenericModule.apply", "link" : "lamp\/nn\/BatchNorm.html#apply[S](a:A)(implicitevidence$17:lamp.Sc[S]):B", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/BatchNorm.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/BatchNorm.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/BatchNorm.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/BatchNorm.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/BatchNorm.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/BatchNorm.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/BatchNorm.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/BatchNorm.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/BatchNorm.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/BatchNorm.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/BatchNorm.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/BatchNorm.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/BatchNorm.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/BatchNorm.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/BatchNorm.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/BatchNorm.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/nn\/BatchNorm.html", "kind" : "case class"}, {"name" : "lamp.nn.BatchNorm2D", "shortDescription" : "", "object" : "lamp\/nn\/BatchNorm2D$.html", "members_object" : [{"label" : "apply", "tail" : "(features: Int, tOpt: TensorOptions, training: Boolean, momentum: Double, eps: Double)(arg0: Sc[S]): BatchNorm2D", "member" : "lamp.nn.BatchNorm2D.apply", "link" : "lamp\/nn\/BatchNorm2D$.html#apply[S](features:Int,tOpt:aten.TensorOptions,training:Boolean,momentum:Double,eps:Double)(implicitevidence$2:lamp.Sc[S]):lamp.nn.BatchNorm2D", "kind" : "def"}, {"label" : "Bias", "tail" : "", "member" : "lamp.nn.BatchNorm2D.Bias", "link" : "lamp\/nn\/BatchNorm2D$.html#Bias", "kind" : "object"}, {"label" : "Weights", "tail" : "", "member" : "lamp.nn.BatchNorm2D.Weights", "link" : "lamp\/nn\/BatchNorm2D$.html#Weights", "kind" : "object"}, {"label" : "load", "tail" : ": Load[BatchNorm2D]", "member" : "lamp.nn.BatchNorm2D.load", "link" : "lamp\/nn\/BatchNorm2D$.html#load:lamp.nn.Load[lamp.nn.BatchNorm2D]", "kind" : "implicit val"}, {"label" : "trainingMode", "tail" : ": TrainingMode[BatchNorm2D]", "member" : "lamp.nn.BatchNorm2D.trainingMode", "link" : "lamp\/nn\/BatchNorm2D$.html#trainingMode:lamp.nn.TrainingMode[lamp.nn.BatchNorm2D]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/BatchNorm2D$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/BatchNorm2D$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/BatchNorm2D$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/BatchNorm2D$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/BatchNorm2D$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/BatchNorm2D$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/BatchNorm2D$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/BatchNorm2D$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/BatchNorm2D$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/BatchNorm2D$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/BatchNorm2D$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/BatchNorm2D$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/BatchNorm2D$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/BatchNorm2D$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/BatchNorm2D$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/BatchNorm2D$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/BatchNorm2D$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/BatchNorm2D$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/BatchNorm2D$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "forward", "tail" : "(x: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.nn.BatchNorm2D.forward", "link" : "lamp\/nn\/BatchNorm2D.html#forward[S](x:lamp.autograd.Variable)(implicitevidence$1:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "state", "tail" : ": List[(Constant, LeafTag with Product with Serializable)]", "member" : "lamp.nn.BatchNorm2D.state", "link" : "lamp\/nn\/BatchNorm2D.html#state:List[(lamp.autograd.Constant,lamp.nn.LeafTagwithProductwithSerializable)]", "kind" : "val"}, {"member" : "lamp.nn.BatchNorm2D#<init>", "error" : "unsupported entity"}, {"label" : "eps", "tail" : ": Double", "member" : "lamp.nn.BatchNorm2D.eps", "link" : "lamp\/nn\/BatchNorm2D.html#eps:Double", "kind" : "val"}, {"label" : "momentum", "tail" : ": Double", "member" : "lamp.nn.BatchNorm2D.momentum", "link" : "lamp\/nn\/BatchNorm2D.html#momentum:Double", "kind" : "val"}, {"label" : "training", "tail" : ": Boolean", "member" : "lamp.nn.BatchNorm2D.training", "link" : "lamp\/nn\/BatchNorm2D.html#training:Boolean", "kind" : "val"}, {"label" : "runningVar", "tail" : ": Constant", "member" : "lamp.nn.BatchNorm2D.runningVar", "link" : "lamp\/nn\/BatchNorm2D.html#runningVar:lamp.autograd.Constant", "kind" : "val"}, {"label" : "runningMean", "tail" : ": Constant", "member" : "lamp.nn.BatchNorm2D.runningMean", "link" : "lamp\/nn\/BatchNorm2D.html#runningMean:lamp.autograd.Constant", "kind" : "val"}, {"label" : "bias", "tail" : ": Constant", "member" : "lamp.nn.BatchNorm2D.bias", "link" : "lamp\/nn\/BatchNorm2D.html#bias:lamp.autograd.Constant", "kind" : "val"}, {"label" : "weight", "tail" : ": Constant", "member" : "lamp.nn.BatchNorm2D.weight", "link" : "lamp\/nn\/BatchNorm2D.html#weight:lamp.autograd.Constant", "kind" : "val"}, {"label" : "learnableParameters", "tail" : "(): Long", "member" : "lamp.nn.GenericModule.learnableParameters", "link" : "lamp\/nn\/BatchNorm2D.html#learnableParameters:Long", "kind" : "final def"}, {"label" : "gradients", "tail" : "(loss: Variable, zeroGrad: Boolean): Seq[Option[STen]]", "member" : "lamp.nn.GenericModule.gradients", "link" : "lamp\/nn\/BatchNorm2D.html#gradients(loss:lamp.autograd.Variable,zeroGrad:Boolean):Seq[Option[lamp.STen]]", "kind" : "final def"}, {"label" : "parameters", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.GenericModule.parameters", "link" : "lamp\/nn\/BatchNorm2D.html#parameters:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "final def"}, {"label" : "apply", "tail" : "(a: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.nn.GenericModule.apply", "link" : "lamp\/nn\/BatchNorm2D.html#apply[S](a:A)(implicitevidence$17:lamp.Sc[S]):B", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/BatchNorm2D.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/BatchNorm2D.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/BatchNorm2D.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/BatchNorm2D.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/BatchNorm2D.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/BatchNorm2D.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/BatchNorm2D.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/BatchNorm2D.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/BatchNorm2D.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/BatchNorm2D.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/BatchNorm2D.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/BatchNorm2D.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/BatchNorm2D.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/BatchNorm2D.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/BatchNorm2D.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/BatchNorm2D.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/nn\/BatchNorm2D.html", "kind" : "case class"}, {"name" : "lamp.nn.Conv1D", "shortDescription" : "", "object" : "lamp\/nn\/Conv1D$.html", "members_object" : [{"label" : "apply", "tail" : "(inChannels: Long, outChannels: Long, kernelSize: Long, tOpt: TensorOptions, bias: Boolean, stride: Long, padding: Long, dilation: Long, groups: Long)(arg0: Sc[S]): Conv1D", "member" : "lamp.nn.Conv1D.apply", "link" : "lamp\/nn\/Conv1D$.html#apply[S](inChannels:Long,outChannels:Long,kernelSize:Long,tOpt:aten.TensorOptions,bias:Boolean,stride:Long,padding:Long,dilation:Long,groups:Long)(implicitevidence$2:lamp.Sc[S]):lamp.nn.Conv1D", "kind" : "def"}, {"label" : "Bias", "tail" : "", "member" : "lamp.nn.Conv1D.Bias", "link" : "lamp\/nn\/Conv1D$.html#Bias", "kind" : "object"}, {"label" : "Weights", "tail" : "", "member" : "lamp.nn.Conv1D.Weights", "link" : "lamp\/nn\/Conv1D$.html#Weights", "kind" : "object"}, {"label" : "load", "tail" : ": Load[Conv1D]", "member" : "lamp.nn.Conv1D.load", "link" : "lamp\/nn\/Conv1D$.html#load:lamp.nn.Load[lamp.nn.Conv1D]", "kind" : "implicit val"}, {"label" : "trainingMode", "tail" : ": TrainingMode[Conv1D]", "member" : "lamp.nn.Conv1D.trainingMode", "link" : "lamp\/nn\/Conv1D$.html#trainingMode:lamp.nn.TrainingMode[lamp.nn.Conv1D]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/Conv1D$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/Conv1D$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/Conv1D$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/Conv1D$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/Conv1D$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/Conv1D$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/Conv1D$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Conv1D$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Conv1D$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Conv1D$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/Conv1D$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/Conv1D$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/Conv1D$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/Conv1D$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/Conv1D$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/Conv1D$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/Conv1D$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/Conv1D$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/Conv1D$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "forward", "tail" : "(x: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.nn.Conv1D.forward", "link" : "lamp\/nn\/Conv1D.html#forward[S](x:lamp.autograd.Variable)(implicitevidence$1:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "state", "tail" : ": List[(Constant, LeafTag with Product with Serializable)]", "member" : "lamp.nn.Conv1D.state", "link" : "lamp\/nn\/Conv1D.html#state:List[(lamp.autograd.Constant,lamp.nn.LeafTagwithProductwithSerializable)]", "kind" : "val"}, {"member" : "lamp.nn.Conv1D#<init>", "error" : "unsupported entity"}, {"label" : "groups", "tail" : ": Long", "member" : "lamp.nn.Conv1D.groups", "link" : "lamp\/nn\/Conv1D.html#groups:Long", "kind" : "val"}, {"label" : "dilation", "tail" : ": Long", "member" : "lamp.nn.Conv1D.dilation", "link" : "lamp\/nn\/Conv1D.html#dilation:Long", "kind" : "val"}, {"label" : "padding", "tail" : ": Long", "member" : "lamp.nn.Conv1D.padding", "link" : "lamp\/nn\/Conv1D.html#padding:Long", "kind" : "val"}, {"label" : "stride", "tail" : ": Long", "member" : "lamp.nn.Conv1D.stride", "link" : "lamp\/nn\/Conv1D.html#stride:Long", "kind" : "val"}, {"label" : "bias", "tail" : ": Constant", "member" : "lamp.nn.Conv1D.bias", "link" : "lamp\/nn\/Conv1D.html#bias:lamp.autograd.Constant", "kind" : "val"}, {"label" : "weights", "tail" : ": Constant", "member" : "lamp.nn.Conv1D.weights", "link" : "lamp\/nn\/Conv1D.html#weights:lamp.autograd.Constant", "kind" : "val"}, {"label" : "learnableParameters", "tail" : "(): Long", "member" : "lamp.nn.GenericModule.learnableParameters", "link" : "lamp\/nn\/Conv1D.html#learnableParameters:Long", "kind" : "final def"}, {"label" : "gradients", "tail" : "(loss: Variable, zeroGrad: Boolean): Seq[Option[STen]]", "member" : "lamp.nn.GenericModule.gradients", "link" : "lamp\/nn\/Conv1D.html#gradients(loss:lamp.autograd.Variable,zeroGrad:Boolean):Seq[Option[lamp.STen]]", "kind" : "final def"}, {"label" : "parameters", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.GenericModule.parameters", "link" : "lamp\/nn\/Conv1D.html#parameters:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "final def"}, {"label" : "apply", "tail" : "(a: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.nn.GenericModule.apply", "link" : "lamp\/nn\/Conv1D.html#apply[S](a:A)(implicitevidence$17:lamp.Sc[S]):B", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/Conv1D.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/Conv1D.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/Conv1D.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/Conv1D.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/Conv1D.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/Conv1D.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/Conv1D.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Conv1D.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Conv1D.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Conv1D.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/Conv1D.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/Conv1D.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/Conv1D.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/Conv1D.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/Conv1D.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/Conv1D.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/nn\/Conv1D.html", "kind" : "case class"}, {"name" : "lamp.nn.Conv2D", "shortDescription" : "", "object" : "lamp\/nn\/Conv2D$.html", "members_object" : [{"label" : "apply", "tail" : "(inChannels: Long, outChannels: Long, kernelSize: Long, tOpt: TensorOptions, bias: Boolean, stride: Long, padding: Long, dilation: Long, groups: Long)(arg0: Sc[S]): Conv2D", "member" : "lamp.nn.Conv2D.apply", "link" : "lamp\/nn\/Conv2D$.html#apply[S](inChannels:Long,outChannels:Long,kernelSize:Long,tOpt:aten.TensorOptions,bias:Boolean,stride:Long,padding:Long,dilation:Long,groups:Long)(implicitevidence$2:lamp.Sc[S]):lamp.nn.Conv2D", "kind" : "def"}, {"label" : "Bias", "tail" : "", "member" : "lamp.nn.Conv2D.Bias", "link" : "lamp\/nn\/Conv2D$.html#Bias", "kind" : "object"}, {"label" : "Weights", "tail" : "", "member" : "lamp.nn.Conv2D.Weights", "link" : "lamp\/nn\/Conv2D$.html#Weights", "kind" : "object"}, {"label" : "load", "tail" : ": Load[Conv2D]", "member" : "lamp.nn.Conv2D.load", "link" : "lamp\/nn\/Conv2D$.html#load:lamp.nn.Load[lamp.nn.Conv2D]", "kind" : "implicit val"}, {"label" : "trainingMode", "tail" : ": TrainingMode[Conv2D]", "member" : "lamp.nn.Conv2D.trainingMode", "link" : "lamp\/nn\/Conv2D$.html#trainingMode:lamp.nn.TrainingMode[lamp.nn.Conv2D]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/Conv2D$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/Conv2D$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/Conv2D$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/Conv2D$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/Conv2D$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/Conv2D$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/Conv2D$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Conv2D$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Conv2D$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Conv2D$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/Conv2D$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/Conv2D$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/Conv2D$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/Conv2D$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/Conv2D$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/Conv2D$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/Conv2D$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/Conv2D$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/Conv2D$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "forward", "tail" : "(x: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.nn.Conv2D.forward", "link" : "lamp\/nn\/Conv2D.html#forward[S](x:lamp.autograd.Variable)(implicitevidence$1:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "state", "tail" : ": List[(Constant, LeafTag with Product with Serializable)]", "member" : "lamp.nn.Conv2D.state", "link" : "lamp\/nn\/Conv2D.html#state:List[(lamp.autograd.Constant,lamp.nn.LeafTagwithProductwithSerializable)]", "kind" : "val"}, {"member" : "lamp.nn.Conv2D#<init>", "error" : "unsupported entity"}, {"label" : "groups", "tail" : ": Long", "member" : "lamp.nn.Conv2D.groups", "link" : "lamp\/nn\/Conv2D.html#groups:Long", "kind" : "val"}, {"label" : "dilation", "tail" : ": Long", "member" : "lamp.nn.Conv2D.dilation", "link" : "lamp\/nn\/Conv2D.html#dilation:Long", "kind" : "val"}, {"label" : "padding", "tail" : ": Long", "member" : "lamp.nn.Conv2D.padding", "link" : "lamp\/nn\/Conv2D.html#padding:Long", "kind" : "val"}, {"label" : "stride", "tail" : ": Long", "member" : "lamp.nn.Conv2D.stride", "link" : "lamp\/nn\/Conv2D.html#stride:Long", "kind" : "val"}, {"label" : "bias", "tail" : ": Constant", "member" : "lamp.nn.Conv2D.bias", "link" : "lamp\/nn\/Conv2D.html#bias:lamp.autograd.Constant", "kind" : "val"}, {"label" : "weights", "tail" : ": Constant", "member" : "lamp.nn.Conv2D.weights", "link" : "lamp\/nn\/Conv2D.html#weights:lamp.autograd.Constant", "kind" : "val"}, {"label" : "learnableParameters", "tail" : "(): Long", "member" : "lamp.nn.GenericModule.learnableParameters", "link" : "lamp\/nn\/Conv2D.html#learnableParameters:Long", "kind" : "final def"}, {"label" : "gradients", "tail" : "(loss: Variable, zeroGrad: Boolean): Seq[Option[STen]]", "member" : "lamp.nn.GenericModule.gradients", "link" : "lamp\/nn\/Conv2D.html#gradients(loss:lamp.autograd.Variable,zeroGrad:Boolean):Seq[Option[lamp.STen]]", "kind" : "final def"}, {"label" : "parameters", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.GenericModule.parameters", "link" : "lamp\/nn\/Conv2D.html#parameters:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "final def"}, {"label" : "apply", "tail" : "(a: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.nn.GenericModule.apply", "link" : "lamp\/nn\/Conv2D.html#apply[S](a:A)(implicitevidence$17:lamp.Sc[S]):B", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/Conv2D.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/Conv2D.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/Conv2D.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/Conv2D.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/Conv2D.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/Conv2D.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/Conv2D.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Conv2D.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Conv2D.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Conv2D.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/Conv2D.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/Conv2D.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/Conv2D.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/Conv2D.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/Conv2D.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/Conv2D.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/nn\/Conv2D.html", "kind" : "case class"}, {"name" : "lamp.nn.DependentHyperparameter", "shortDescription" : "", "members_case class" : [{"label" : "apply", "tail" : "(p: PTag): Double", "member" : "lamp.nn.DependentHyperparameter.apply", "link" : "lamp\/nn\/DependentHyperparameter.html#apply(p:lamp.nn.PTag):Double", "kind" : "def"}, {"member" : "lamp.nn.DependentHyperparameter#<init>", "error" : "unsupported entity"}, {"label" : "default", "tail" : ": Double", "member" : "lamp.nn.DependentHyperparameter.default", "link" : "lamp\/nn\/DependentHyperparameter.html#default:Double", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/DependentHyperparameter.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/DependentHyperparameter.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/DependentHyperparameter.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/DependentHyperparameter.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/DependentHyperparameter.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/DependentHyperparameter.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/DependentHyperparameter.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/DependentHyperparameter.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/DependentHyperparameter.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/DependentHyperparameter.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/DependentHyperparameter.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/DependentHyperparameter.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/DependentHyperparameter.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/DependentHyperparameter.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/DependentHyperparameter.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/DependentHyperparameter.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/nn\/DependentHyperparameter.html", "kind" : "case class"}, {"name" : "lamp.nn.Dropout", "shortDescription" : "", "object" : "lamp\/nn\/Dropout$.html", "members_object" : [{"label" : "tr", "tail" : ": TrainingMode[Dropout]", "member" : "lamp.nn.Dropout.tr", "link" : "lamp\/nn\/Dropout$.html#tr:lamp.nn.TrainingMode[lamp.nn.Dropout]", "kind" : "implicit val"}, {"label" : "load", "tail" : ": Load[Dropout]", "member" : "lamp.nn.Dropout.load", "link" : "lamp\/nn\/Dropout$.html#load:lamp.nn.Load[lamp.nn.Dropout]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/Dropout$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/Dropout$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/Dropout$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/Dropout$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/Dropout$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/Dropout$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/Dropout$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Dropout$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Dropout$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Dropout$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/Dropout$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/Dropout$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/Dropout$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/Dropout$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/Dropout$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/Dropout$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/Dropout$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/Dropout$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/Dropout$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "forward", "tail" : "(x: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.nn.Dropout.forward", "link" : "lamp\/nn\/Dropout.html#forward[S](x:lamp.autograd.Variable)(implicitevidence$1:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "state", "tail" : "(): Nil.type", "member" : "lamp.nn.Dropout.state", "link" : "lamp\/nn\/Dropout.html#state:scala.collection.immutable.Nil.type", "kind" : "def"}, {"member" : "lamp.nn.Dropout#<init>", "error" : "unsupported entity"}, {"label" : "training", "tail" : ": Boolean", "member" : "lamp.nn.Dropout.training", "link" : "lamp\/nn\/Dropout.html#training:Boolean", "kind" : "val"}, {"label" : "prob", "tail" : ": Double", "member" : "lamp.nn.Dropout.prob", "link" : "lamp\/nn\/Dropout.html#prob:Double", "kind" : "val"}, {"label" : "learnableParameters", "tail" : "(): Long", "member" : "lamp.nn.GenericModule.learnableParameters", "link" : "lamp\/nn\/Dropout.html#learnableParameters:Long", "kind" : "final def"}, {"label" : "gradients", "tail" : "(loss: Variable, zeroGrad: Boolean): Seq[Option[STen]]", "member" : "lamp.nn.GenericModule.gradients", "link" : "lamp\/nn\/Dropout.html#gradients(loss:lamp.autograd.Variable,zeroGrad:Boolean):Seq[Option[lamp.STen]]", "kind" : "final def"}, {"label" : "parameters", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.GenericModule.parameters", "link" : "lamp\/nn\/Dropout.html#parameters:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "final def"}, {"label" : "apply", "tail" : "(a: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.nn.GenericModule.apply", "link" : "lamp\/nn\/Dropout.html#apply[S](a:A)(implicitevidence$17:lamp.Sc[S]):B", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/Dropout.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/Dropout.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/Dropout.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/Dropout.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/Dropout.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/Dropout.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/Dropout.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Dropout.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Dropout.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Dropout.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/Dropout.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/Dropout.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/Dropout.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/Dropout.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/Dropout.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/Dropout.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/nn\/Dropout.html", "kind" : "case class"}, {"name" : "lamp.nn.EitherModule", "shortDescription" : "", "object" : "lamp\/nn\/EitherModule$.html", "members_object" : [{"label" : "Tag", "tail" : "", "member" : "lamp.nn.EitherModule.Tag", "link" : "lamp\/nn\/EitherModule$.html#Tag[T<:lamp.nn.PTag]extendsPTagwithProductwithSerializable", "kind" : "case class"}, {"label" : "load", "tail" : "(arg0: Load[M1], arg1: Load[M2]): Load[EitherModule[A, B, M1, M2]]", "member" : "lamp.nn.EitherModule.load", "link" : "lamp\/nn\/EitherModule$.html#load[A,B,M1<:lamp.nn.GenericModule[A,B],M2<:lamp.nn.GenericModule[A,B]](implicitevidence$4:lamp.nn.Load[M1],implicitevidence$5:lamp.nn.Load[M2]):lamp.nn.Load[lamp.nn.EitherModule[A,B,M1,M2]]", "kind" : "implicit def"}, {"label" : "trainingMode", "tail" : "(arg0: TrainingMode[M1], arg1: TrainingMode[M2]): TrainingMode[EitherModule[A, B, M1, M2]]", "member" : "lamp.nn.EitherModule.trainingMode", "link" : "lamp\/nn\/EitherModule$.html#trainingMode[A,B,M1<:lamp.nn.GenericModule[A,B],M2<:lamp.nn.GenericModule[A,B]](implicitevidence$2:lamp.nn.TrainingMode[M1],implicitevidence$3:lamp.nn.TrainingMode[M2]):lamp.nn.TrainingMode[lamp.nn.EitherModule[A,B,M1,M2]]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/EitherModule$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/EitherModule$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/EitherModule$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/EitherModule$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/EitherModule$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/EitherModule$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/EitherModule$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/EitherModule$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/EitherModule$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/EitherModule$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/EitherModule$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/EitherModule$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/EitherModule$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/EitherModule$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/EitherModule$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/EitherModule$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/EitherModule$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/EitherModule$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/EitherModule$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "forward", "tail" : "(x: A)(arg0: Sc[S]): B", "member" : "lamp.nn.EitherModule.forward", "link" : "lamp\/nn\/EitherModule.html#forward[S](x:A)(implicitevidence$1:lamp.Sc[S]):B", "kind" : "def"}, {"label" : "state", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.EitherModule.state", "link" : "lamp\/nn\/EitherModule.html#state:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "def"}, {"member" : "lamp.nn.EitherModule#<init>", "error" : "unsupported entity"}, {"label" : "members", "tail" : ": Either[M1 with GenericModule[A, B], M2 with GenericModule[A, B]]", "member" : "lamp.nn.EitherModule.members", "link" : "lamp\/nn\/EitherModule.html#members:Either[M1withlamp.nn.GenericModule[A,B],M2withlamp.nn.GenericModule[A,B]]", "kind" : "val"}, {"label" : "learnableParameters", "tail" : "(): Long", "member" : "lamp.nn.GenericModule.learnableParameters", "link" : "lamp\/nn\/EitherModule.html#learnableParameters:Long", "kind" : "final def"}, {"label" : "gradients", "tail" : "(loss: Variable, zeroGrad: Boolean): Seq[Option[STen]]", "member" : "lamp.nn.GenericModule.gradients", "link" : "lamp\/nn\/EitherModule.html#gradients(loss:lamp.autograd.Variable,zeroGrad:Boolean):Seq[Option[lamp.STen]]", "kind" : "final def"}, {"label" : "parameters", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.GenericModule.parameters", "link" : "lamp\/nn\/EitherModule.html#parameters:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "final def"}, {"label" : "apply", "tail" : "(a: A)(arg0: Sc[S]): B", "member" : "lamp.nn.GenericModule.apply", "link" : "lamp\/nn\/EitherModule.html#apply[S](a:A)(implicitevidence$17:lamp.Sc[S]):B", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/EitherModule.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/EitherModule.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/EitherModule.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/EitherModule.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/EitherModule.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/EitherModule.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/EitherModule.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/EitherModule.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/EitherModule.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/EitherModule.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/EitherModule.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/EitherModule.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/EitherModule.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/EitherModule.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/EitherModule.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/EitherModule.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/nn\/EitherModule.html", "kind" : "case class"}, {"name" : "lamp.nn.Embedding", "shortDescription" : "Learnable mapping from classes to dense vectors.", "object" : "lamp\/nn\/Embedding$.html", "members_object" : [{"label" : "apply", "tail" : "(classes: Int, dimensions: Int, tOpt: TensorOptions)(arg0: Sc[S]): Embedding", "member" : "lamp.nn.Embedding.apply", "link" : "lamp\/nn\/Embedding$.html#apply[S](classes:Int,dimensions:Int,tOpt:aten.TensorOptions)(implicitevidence$2:lamp.Sc[S]):lamp.nn.Embedding", "kind" : "def"}, {"label" : "Weights", "tail" : "", "member" : "lamp.nn.Embedding.Weights", "link" : "lamp\/nn\/Embedding$.html#Weights", "kind" : "object"}, {"label" : "load", "tail" : ": Load[Embedding]", "member" : "lamp.nn.Embedding.load", "link" : "lamp\/nn\/Embedding$.html#load:lamp.nn.Load[lamp.nn.Embedding]", "kind" : "implicit val"}, {"label" : "trainingMode", "tail" : ": TrainingMode[Embedding]", "member" : "lamp.nn.Embedding.trainingMode", "link" : "lamp\/nn\/Embedding$.html#trainingMode:lamp.nn.TrainingMode[lamp.nn.Embedding]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/Embedding$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/Embedding$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/Embedding$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/Embedding$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/Embedding$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/Embedding$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/Embedding$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Embedding$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Embedding$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Embedding$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/Embedding$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/Embedding$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/Embedding$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/Embedding$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/Embedding$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/Embedding$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/Embedding$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/Embedding$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/Embedding$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "forward", "tail" : "(x: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.nn.Embedding.forward", "link" : "lamp\/nn\/Embedding.html#forward[S](x:lamp.autograd.Variable)(implicitevidence$1:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "state", "tail" : ": List[(Constant, Weights.type)]", "member" : "lamp.nn.Embedding.state", "link" : "lamp\/nn\/Embedding.html#state:List[(lamp.autograd.Constant,lamp.nn.Embedding.Weights.type)]", "kind" : "val"}, {"member" : "lamp.nn.Embedding#<init>", "error" : "unsupported entity"}, {"label" : "weights", "tail" : ": Constant", "member" : "lamp.nn.Embedding.weights", "link" : "lamp\/nn\/Embedding.html#weights:lamp.autograd.Constant", "kind" : "val"}, {"label" : "learnableParameters", "tail" : "(): Long", "member" : "lamp.nn.GenericModule.learnableParameters", "link" : "lamp\/nn\/Embedding.html#learnableParameters:Long", "kind" : "final def"}, {"label" : "gradients", "tail" : "(loss: Variable, zeroGrad: Boolean): Seq[Option[STen]]", "member" : "lamp.nn.GenericModule.gradients", "link" : "lamp\/nn\/Embedding.html#gradients(loss:lamp.autograd.Variable,zeroGrad:Boolean):Seq[Option[lamp.STen]]", "kind" : "final def"}, {"label" : "parameters", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.GenericModule.parameters", "link" : "lamp\/nn\/Embedding.html#parameters:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "final def"}, {"label" : "apply", "tail" : "(a: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.nn.GenericModule.apply", "link" : "lamp\/nn\/Embedding.html#apply[S](a:A)(implicitevidence$17:lamp.Sc[S]):B", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/Embedding.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/Embedding.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/Embedding.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/Embedding.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/Embedding.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/Embedding.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/Embedding.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Embedding.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Embedding.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Embedding.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/Embedding.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/Embedding.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/Embedding.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/Embedding.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/Embedding.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/Embedding.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/nn\/Embedding.html", "kind" : "case class"}, {"name" : "lamp.nn.FreeRunningRNN", "shortDescription" : "Wraps a (sequence x batch) long -> (sequence x batch x dim) double stateful moduleand runs in it greedy (argmax) generation mode over timeSteps steps.", "object" : "lamp\/nn\/FreeRunningRNN$.html", "members_object" : [{"label" : "load", "tail" : "(arg0: Load[M]): Load[FreeRunningRNN[T, M]]", "member" : "lamp.nn.FreeRunningRNN.load", "link" : "lamp\/nn\/FreeRunningRNN$.html#load[T,M<:lamp.nn.StatefulModule[lamp.autograd.Variable,lamp.autograd.Variable,T]](implicitevidence$4:lamp.nn.Load[M]):lamp.nn.Load[lamp.nn.FreeRunningRNN[T,M]]", "kind" : "implicit def"}, {"label" : "is", "tail" : "(st: InitState[M, T]): InitState[FreeRunningRNN[T, M], T]", "member" : "lamp.nn.FreeRunningRNN.is", "link" : "lamp\/nn\/FreeRunningRNN$.html#is[T,M<:lamp.nn.StatefulModule[lamp.autograd.Variable,lamp.autograd.Variable,T]](implicitst:lamp.nn.InitState[M,T]):lamp.nn.InitState[lamp.nn.FreeRunningRNN[T,M],T]", "kind" : "implicit def"}, {"label" : "trainingMode", "tail" : "(arg0: TrainingMode[M]): TrainingMode[FreeRunningRNN[T, M]]", "member" : "lamp.nn.FreeRunningRNN.trainingMode", "link" : "lamp\/nn\/FreeRunningRNN$.html#trainingMode[T,M<:lamp.nn.StatefulModule[lamp.autograd.Variable,lamp.autograd.Variable,T]](implicitevidence$3:lamp.nn.TrainingMode[M]):lamp.nn.TrainingMode[lamp.nn.FreeRunningRNN[T,M]]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/FreeRunningRNN$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/FreeRunningRNN$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/FreeRunningRNN$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/FreeRunningRNN$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/FreeRunningRNN$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/FreeRunningRNN$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/FreeRunningRNN$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/FreeRunningRNN$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/FreeRunningRNN$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/FreeRunningRNN$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/FreeRunningRNN$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/FreeRunningRNN$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/FreeRunningRNN$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/FreeRunningRNN$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/FreeRunningRNN$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/FreeRunningRNN$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/FreeRunningRNN$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/FreeRunningRNN$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/FreeRunningRNN$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "loop", "tail" : "(lastOutput: Variable, lastState: T, n: Int, buffer: Seq[Variable])(arg0: Sc[S]): (Seq[Variable], T)", "member" : "lamp.nn.FreeRunningRNN.loop", "link" : "lamp\/nn\/FreeRunningRNN.html#loop[S](lastOutput:lamp.autograd.Variable,lastState:T,n:Int,buffer:Seq[lamp.autograd.Variable])(implicitevidence$2:lamp.Sc[S]):(Seq[lamp.autograd.Variable],T)", "kind" : "def"}, {"label" : "forward", "tail" : "(x: (Variable, T))(arg0: Sc[S]): (Variable, T)", "member" : "lamp.nn.FreeRunningRNN.forward", "link" : "lamp\/nn\/FreeRunningRNN.html#forward[S](x:(lamp.autograd.Variable,T))(implicitevidence$1:lamp.Sc[S]):(lamp.autograd.Variable,T)", "kind" : "def"}, {"label" : "state", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.FreeRunningRNN.state", "link" : "lamp\/nn\/FreeRunningRNN.html#state:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "def"}, {"member" : "lamp.nn.FreeRunningRNN#<init>", "error" : "unsupported entity"}, {"label" : "timeSteps", "tail" : ": Int", "member" : "lamp.nn.FreeRunningRNN.timeSteps", "link" : "lamp\/nn\/FreeRunningRNN.html#timeSteps:Int", "kind" : "val"}, {"label" : "module", "tail" : ": M with StatefulModule[Variable, Variable, T]", "member" : "lamp.nn.FreeRunningRNN.module", "link" : "lamp\/nn\/FreeRunningRNN.html#module:Mwithlamp.nn.StatefulModule[lamp.autograd.Variable,lamp.autograd.Variable,T]", "kind" : "val"}, {"label" : "learnableParameters", "tail" : "(): Long", "member" : "lamp.nn.GenericModule.learnableParameters", "link" : "lamp\/nn\/FreeRunningRNN.html#learnableParameters:Long", "kind" : "final def"}, {"label" : "gradients", "tail" : "(loss: Variable, zeroGrad: Boolean): Seq[Option[STen]]", "member" : "lamp.nn.GenericModule.gradients", "link" : "lamp\/nn\/FreeRunningRNN.html#gradients(loss:lamp.autograd.Variable,zeroGrad:Boolean):Seq[Option[lamp.STen]]", "kind" : "final def"}, {"label" : "parameters", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.GenericModule.parameters", "link" : "lamp\/nn\/FreeRunningRNN.html#parameters:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "final def"}, {"label" : "apply", "tail" : "(a: (Variable, T))(arg0: Sc[S]): (Variable, T)", "member" : "lamp.nn.GenericModule.apply", "link" : "lamp\/nn\/FreeRunningRNN.html#apply[S](a:A)(implicitevidence$17:lamp.Sc[S]):B", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/FreeRunningRNN.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/FreeRunningRNN.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/FreeRunningRNN.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/FreeRunningRNN.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/FreeRunningRNN.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/FreeRunningRNN.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/FreeRunningRNN.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/FreeRunningRNN.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/FreeRunningRNN.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/FreeRunningRNN.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/FreeRunningRNN.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/FreeRunningRNN.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/FreeRunningRNN.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/FreeRunningRNN.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/FreeRunningRNN.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/FreeRunningRNN.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/nn\/FreeRunningRNN.html", "kind" : "case class"}, {"name" : "lamp.nn.Fun", "shortDescription" : "", "object" : "lamp\/nn\/Fun$.html", "members_object" : [{"label" : "load", "tail" : ": Load[Fun]", "member" : "lamp.nn.Fun.load", "link" : "lamp\/nn\/Fun$.html#load:lamp.nn.Load[lamp.nn.Fun]", "kind" : "implicit val"}, {"label" : "trainingMode", "tail" : ": TrainingMode[Fun]", "member" : "lamp.nn.Fun.trainingMode", "link" : "lamp\/nn\/Fun$.html#trainingMode:lamp.nn.TrainingMode[lamp.nn.Fun]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/Fun$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/Fun$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/Fun$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/Fun$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/Fun$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/Fun$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/Fun$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Fun$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Fun$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Fun$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/Fun$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/Fun$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/Fun$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/Fun$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/Fun$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/Fun$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/Fun$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/Fun$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/Fun$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "forward", "tail" : "(x: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.nn.Fun.forward", "link" : "lamp\/nn\/Fun.html#forward[S](x:lamp.autograd.Variable)(implicitevidence$9:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "state", "tail" : "(): Nil.type", "member" : "lamp.nn.Fun.state", "link" : "lamp\/nn\/Fun.html#state:scala.collection.immutable.Nil.type", "kind" : "def"}, {"member" : "lamp.nn.Fun#<init>", "error" : "unsupported entity"}, {"label" : "fun", "tail" : ": (Scope) ⇒ (Variable) ⇒ Variable", "member" : "lamp.nn.Fun.fun", "link" : "lamp\/nn\/Fun.html#fun:lamp.Scope=>(lamp.autograd.Variable=>lamp.autograd.Variable)", "kind" : "val"}, {"label" : "learnableParameters", "tail" : "(): Long", "member" : "lamp.nn.GenericModule.learnableParameters", "link" : "lamp\/nn\/Fun.html#learnableParameters:Long", "kind" : "final def"}, {"label" : "gradients", "tail" : "(loss: Variable, zeroGrad: Boolean): Seq[Option[STen]]", "member" : "lamp.nn.GenericModule.gradients", "link" : "lamp\/nn\/Fun.html#gradients(loss:lamp.autograd.Variable,zeroGrad:Boolean):Seq[Option[lamp.STen]]", "kind" : "final def"}, {"label" : "parameters", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.GenericModule.parameters", "link" : "lamp\/nn\/Fun.html#parameters:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "final def"}, {"label" : "apply", "tail" : "(a: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.nn.GenericModule.apply", "link" : "lamp\/nn\/Fun.html#apply[S](a:A)(implicitevidence$17:lamp.Sc[S]):B", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/Fun.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/Fun.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/Fun.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/Fun.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/Fun.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/Fun.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/Fun.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Fun.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Fun.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Fun.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/Fun.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/Fun.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/Fun.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/Fun.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/Fun.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/Fun.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/nn\/Fun.html", "kind" : "case class"}, {"name" : "lamp.nn.GCN", "shortDescription" : "", "object" : "lamp\/nn\/GCN$.html", "members_object" : [{"label" : "gcn", "tail" : "(in: Int, out: Int, tOpt: TensorOptions, dropout: Double, nonLinearity: Boolean)(arg0: Sc[S]): GCN[ResidualModule[EitherModule[Variable, Variable, Seq4[Variable, Variable, Variable, Variable, Variable, Linear with GenericModule[Variable, Variable], BatchNorm with GenericModule[Variable, Variable], Fun with GenericModule[Variable, Variable], Dropout with GenericModule[Variable, Variable]], Seq2[Variable, Variable, Variable, Linear with GenericModule[Variable, Variable], BatchNorm with GenericModule[Variable, Variable]]]]]", "member" : "lamp.nn.GCN.gcn", "link" : "lamp\/nn\/GCN$.html#gcn[S](in:Int,out:Int,tOpt:aten.TensorOptions,dropout:Double,nonLinearity:Boolean)(implicitevidence$14:lamp.Sc[S]):lamp.nn.GCN[lamp.nn.ResidualModule[lamp.nn.EitherModule[lamp.autograd.Variable,lamp.autograd.Variable,lamp.nn.Seq4[lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.nn.Linearwithlamp.nn.GenericModule[lamp.autograd.Variable,lamp.autograd.Variable],lamp.nn.BatchNormwithlamp.nn.GenericModule[lamp.autograd.Variable,lamp.autograd.Variable],lamp.nn.Funwithlamp.nn.GenericModule[lamp.autograd.Variable,lamp.autograd.Variable],lamp.nn.Dropoutwithlamp.nn.GenericModule[lamp.autograd.Variable,lamp.autograd.Variable]],lamp.nn.Seq2[lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.nn.Linearwithlamp.nn.GenericModule[lamp.autograd.Variable,lamp.autograd.Variable],lamp.nn.BatchNormwithlamp.nn.GenericModule[lamp.autograd.Variable,lamp.autograd.Variable]]]]]", "kind" : "def"}, {"label" : "load", "tail" : "(arg0: Load[M]): Load[GCN[M]]", "member" : "lamp.nn.GCN.load", "link" : "lamp\/nn\/GCN$.html#load[M<:lamp.nn.Module](implicitevidence$13:lamp.nn.Load[M]):lamp.nn.Load[lamp.nn.GCN[M]]", "kind" : "implicit def"}, {"label" : "trainingMode", "tail" : "(arg0: TrainingMode[M]): TrainingMode[GCN[M]]", "member" : "lamp.nn.GCN.trainingMode", "link" : "lamp\/nn\/GCN$.html#trainingMode[M<:lamp.nn.Module](implicitevidence$12:lamp.nn.TrainingMode[M]):lamp.nn.TrainingMode[lamp.nn.GCN[M]]", "kind" : "implicit def"}, {"label" : "gcnAggregation", "tail" : "(nodeFeatures: Variable, degrees: Variable, a: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.nn.GCN.gcnAggregation", "link" : "lamp\/nn\/GCN$.html#gcnAggregation[S](nodeFeatures:lamp.autograd.Variable,degrees:lamp.autograd.Variable,a:lamp.autograd.Variable)(implicitevidence$11:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "gcnAggregation", "tail" : "(nodeFeatures: Variable, edgeList: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.nn.GCN.gcnAggregation", "link" : "lamp\/nn\/GCN$.html#gcnAggregation[S](nodeFeatures:lamp.autograd.Variable,edgeList:lamp.autograd.Variable)(implicitevidence$10:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "precomputeSparseAdjacency", "tail" : "(valueOpt: TensorOptions, edgeList: Variable, numNodes: Long)(arg0: Sc[S]): (Variable, Constant)", "member" : "lamp.nn.GCN.precomputeSparseAdjacency", "link" : "lamp\/nn\/GCN$.html#precomputeSparseAdjacency[S](valueOpt:aten.TensorOptions,edgeList:lamp.autograd.Variable,numNodes:Long)(implicitevidence$9:lamp.Sc[S]):(lamp.autograd.Variable,lamp.autograd.Constant)", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/GCN$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/GCN$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/GCN$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/GCN$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/GCN$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/GCN$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/GCN$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/GCN$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/GCN$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/GCN$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/GCN$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/GCN$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/GCN$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/GCN$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/GCN$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/GCN$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/GCN$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/GCN$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/GCN$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "forward", "tail" : "(x: (Variable, Variable))(arg0: Sc[S]): (Variable, Variable)", "member" : "lamp.nn.GCN.forward", "link" : "lamp\/nn\/GCN.html#forward[S](x:(lamp.autograd.Variable,lamp.autograd.Variable))(implicitevidence$4:lamp.Sc[S]):(lamp.autograd.Variable,lamp.autograd.Variable)", "kind" : "def"}, {"label" : "state", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.GCN.state", "link" : "lamp\/nn\/GCN.html#state:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "def"}, {"member" : "lamp.nn.GCN#<init>", "error" : "unsupported entity"}, {"label" : "transform", "tail" : ": M with Module", "member" : "lamp.nn.GCN.transform", "link" : "lamp\/nn\/GCN.html#transform:Mwithlamp.nn.Module", "kind" : "val"}, {"label" : "learnableParameters", "tail" : "(): Long", "member" : "lamp.nn.GenericModule.learnableParameters", "link" : "lamp\/nn\/GCN.html#learnableParameters:Long", "kind" : "final def"}, {"label" : "gradients", "tail" : "(loss: Variable, zeroGrad: Boolean): Seq[Option[STen]]", "member" : "lamp.nn.GenericModule.gradients", "link" : "lamp\/nn\/GCN.html#gradients(loss:lamp.autograd.Variable,zeroGrad:Boolean):Seq[Option[lamp.STen]]", "kind" : "final def"}, {"label" : "parameters", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.GenericModule.parameters", "link" : "lamp\/nn\/GCN.html#parameters:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "final def"}, {"label" : "apply", "tail" : "(a: (Variable, Variable))(arg0: Sc[S]): (Variable, Variable)", "member" : "lamp.nn.GenericModule.apply", "link" : "lamp\/nn\/GCN.html#apply[S](a:A)(implicitevidence$17:lamp.Sc[S]):B", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/GCN.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/GCN.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/GCN.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/GCN.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/GCN.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/GCN.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/GCN.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/GCN.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/GCN.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/GCN.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/GCN.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/GCN.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/GCN.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/GCN.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/GCN.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/GCN.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/nn\/GCN.html", "kind" : "case class"}, {"name" : "lamp.nn.GenericFun", "shortDescription" : "", "object" : "lamp\/nn\/GenericFun$.html", "members_object" : [{"label" : "load", "tail" : "(): Load[GenericFun[A, B]]", "member" : "lamp.nn.GenericFun.load", "link" : "lamp\/nn\/GenericFun$.html#load[A,B]:lamp.nn.Load[lamp.nn.GenericFun[A,B]]", "kind" : "implicit def"}, {"label" : "trainingMode", "tail" : "(): TrainingMode[GenericFun[A, B]]", "member" : "lamp.nn.GenericFun.trainingMode", "link" : "lamp\/nn\/GenericFun$.html#trainingMode[A,B]:lamp.nn.TrainingMode[lamp.nn.GenericFun[A,B]]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/GenericFun$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/GenericFun$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/GenericFun$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/GenericFun$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/GenericFun$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/GenericFun$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/GenericFun$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/GenericFun$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/GenericFun$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/GenericFun$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/GenericFun$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/GenericFun$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/GenericFun$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/GenericFun$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/GenericFun$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/GenericFun$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/GenericFun$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/GenericFun$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/GenericFun$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "forward", "tail" : "(x: A)(arg0: Sc[S]): B", "member" : "lamp.nn.GenericFun.forward", "link" : "lamp\/nn\/GenericFun.html#forward[S](x:A)(implicitevidence$10:lamp.Sc[S]):B", "kind" : "def"}, {"label" : "state", "tail" : "(): Nil.type", "member" : "lamp.nn.GenericFun.state", "link" : "lamp\/nn\/GenericFun.html#state:scala.collection.immutable.Nil.type", "kind" : "def"}, {"member" : "lamp.nn.GenericFun#<init>", "error" : "unsupported entity"}, {"label" : "fun", "tail" : ": (A) ⇒ B", "member" : "lamp.nn.GenericFun.fun", "link" : "lamp\/nn\/GenericFun.html#fun:A=>B", "kind" : "val"}, {"label" : "learnableParameters", "tail" : "(): Long", "member" : "lamp.nn.GenericModule.learnableParameters", "link" : "lamp\/nn\/GenericFun.html#learnableParameters:Long", "kind" : "final def"}, {"label" : "gradients", "tail" : "(loss: Variable, zeroGrad: Boolean): Seq[Option[STen]]", "member" : "lamp.nn.GenericModule.gradients", "link" : "lamp\/nn\/GenericFun.html#gradients(loss:lamp.autograd.Variable,zeroGrad:Boolean):Seq[Option[lamp.STen]]", "kind" : "final def"}, {"label" : "parameters", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.GenericModule.parameters", "link" : "lamp\/nn\/GenericFun.html#parameters:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "final def"}, {"label" : "apply", "tail" : "(a: A)(arg0: Sc[S]): B", "member" : "lamp.nn.GenericModule.apply", "link" : "lamp\/nn\/GenericFun.html#apply[S](a:A)(implicitevidence$17:lamp.Sc[S]):B", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/GenericFun.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/GenericFun.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/GenericFun.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/GenericFun.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/GenericFun.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/GenericFun.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/GenericFun.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/GenericFun.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/GenericFun.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/GenericFun.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/GenericFun.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/GenericFun.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/GenericFun.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/GenericFun.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/GenericFun.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/GenericFun.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/nn\/GenericFun.html", "kind" : "case class"}, {"name" : "lamp.nn.GenericModule", "members_trait" : [{"label" : "learnableParameters", "tail" : "(): Long", "member" : "lamp.nn.GenericModule.learnableParameters", "link" : "lamp\/nn\/GenericModule.html#learnableParameters:Long", "kind" : "final def"}, {"label" : "gradients", "tail" : "(loss: Variable, zeroGrad: Boolean): Seq[Option[STen]]", "member" : "lamp.nn.GenericModule.gradients", "link" : "lamp\/nn\/GenericModule.html#gradients(loss:lamp.autograd.Variable,zeroGrad:Boolean):Seq[Option[lamp.STen]]", "kind" : "final def"}, {"label" : "parameters", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.GenericModule.parameters", "link" : "lamp\/nn\/GenericModule.html#parameters:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "final def"}, {"label" : "apply", "tail" : "(a: A)(arg0: Sc[S]): B", "member" : "lamp.nn.GenericModule.apply", "link" : "lamp\/nn\/GenericModule.html#apply[S](a:A)(implicitevidence$17:lamp.Sc[S]):B", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/GenericModule.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/GenericModule.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/GenericModule.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/GenericModule.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/GenericModule.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/GenericModule.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/GenericModule.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/GenericModule.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/GenericModule.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/GenericModule.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/GenericModule.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/GenericModule.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/GenericModule.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/GenericModule.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/GenericModule.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/GenericModule.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/GenericModule.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/GenericModule.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/GenericModule.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "state", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.GenericModule.state", "link" : "lamp\/nn\/GenericModule.html#state:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "abstract def"}, {"label" : "forward", "tail" : "(x: A)(arg0: Sc[S]): B", "member" : "lamp.nn.GenericModule.forward", "link" : "lamp\/nn\/GenericModule.html#forward[S](x:A)(implicitevidence$16:lamp.Sc[S]):B", "kind" : "abstract def"}], "shortDescription" : "", "object" : "lamp\/nn\/GenericModule$.html", "members_object" : [{"label" : "movable", "tail" : "(): Movable[GenericModule[A, B]]", "member" : "lamp.nn.GenericModule.movable", "link" : "lamp\/nn\/GenericModule$.html#movable[A,B]:lamp.Movable[lamp.nn.GenericModule[A,B]]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/GenericModule$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/GenericModule$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/GenericModule$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/GenericModule$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/GenericModule$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/GenericModule$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/GenericModule$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/GenericModule$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/GenericModule$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/GenericModule$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/GenericModule$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/GenericModule$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/GenericModule$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/GenericModule$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/GenericModule$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/GenericModule$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/GenericModule$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/GenericModule$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/GenericModule$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "lamp\/nn\/GenericModule.html", "kind" : "trait"}, {"name" : "lamp.nn.GraphReadout", "shortDescription" : "", "object" : "lamp\/nn\/GraphReadout$.html", "members_object" : [{"label" : "load", "tail" : "(arg0: Load[M1]): Load[GraphReadout[M1]]", "member" : "lamp.nn.GraphReadout.load", "link" : "lamp\/nn\/GraphReadout$.html#load[M1<:lamp.nn.GraphModule](implicitevidence$3:lamp.nn.Load[M1]):lamp.nn.Load[lamp.nn.GraphReadout[M1]]", "kind" : "implicit def"}, {"label" : "trainingMode", "tail" : "(arg0: TrainingMode[M1]): TrainingMode[GraphReadout[M1]]", "member" : "lamp.nn.GraphReadout.trainingMode", "link" : "lamp\/nn\/GraphReadout$.html#trainingMode[M1<:lamp.nn.GraphModule](implicitevidence$2:lamp.nn.TrainingMode[M1]):lamp.nn.TrainingMode[lamp.nn.GraphReadout[M1]]", "kind" : "implicit def"}, {"label" : "Mean", "tail" : "", "member" : "lamp.nn.GraphReadout.Mean", "link" : "lamp\/nn\/GraphReadout$.html#Mean", "kind" : "object"}, {"label" : "Sum", "tail" : "", "member" : "lamp.nn.GraphReadout.Sum", "link" : "lamp\/nn\/GraphReadout$.html#Sum", "kind" : "object"}, {"label" : "PoolType", "tail" : "", "member" : "lamp.nn.GraphReadout.PoolType", "link" : "lamp\/nn\/GraphReadout$.html#PoolTypeextendsAnyRef", "kind" : "sealed trait"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/GraphReadout$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/GraphReadout$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/GraphReadout$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/GraphReadout$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/GraphReadout$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/GraphReadout$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/GraphReadout$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/GraphReadout$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/GraphReadout$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/GraphReadout$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/GraphReadout$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/GraphReadout$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/GraphReadout$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/GraphReadout$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/GraphReadout$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/GraphReadout$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/GraphReadout$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/GraphReadout$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/GraphReadout$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "forward", "tail" : "(x: (Variable, Variable, Variable))(arg0: Sc[S]): Variable", "member" : "lamp.nn.GraphReadout.forward", "link" : "lamp\/nn\/GraphReadout.html#forward[S](x:(lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable))(implicitevidence$1:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "state", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.GraphReadout.state", "link" : "lamp\/nn\/GraphReadout.html#state:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "def"}, {"member" : "lamp.nn.GraphReadout#<init>", "error" : "unsupported entity"}, {"label" : "pooling", "tail" : ": PoolType", "member" : "lamp.nn.GraphReadout.pooling", "link" : "lamp\/nn\/GraphReadout.html#pooling:lamp.nn.GraphReadout.PoolType", "kind" : "val"}, {"label" : "m", "tail" : ": M with GraphModule", "member" : "lamp.nn.GraphReadout.m", "link" : "lamp\/nn\/GraphReadout.html#m:Mwithlamp.nn.GraphModule", "kind" : "val"}, {"label" : "learnableParameters", "tail" : "(): Long", "member" : "lamp.nn.GenericModule.learnableParameters", "link" : "lamp\/nn\/GraphReadout.html#learnableParameters:Long", "kind" : "final def"}, {"label" : "gradients", "tail" : "(loss: Variable, zeroGrad: Boolean): Seq[Option[STen]]", "member" : "lamp.nn.GenericModule.gradients", "link" : "lamp\/nn\/GraphReadout.html#gradients(loss:lamp.autograd.Variable,zeroGrad:Boolean):Seq[Option[lamp.STen]]", "kind" : "final def"}, {"label" : "parameters", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.GenericModule.parameters", "link" : "lamp\/nn\/GraphReadout.html#parameters:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "final def"}, {"label" : "apply", "tail" : "(a: (Variable, Variable, Variable))(arg0: Sc[S]): Variable", "member" : "lamp.nn.GenericModule.apply", "link" : "lamp\/nn\/GraphReadout.html#apply[S](a:A)(implicitevidence$17:lamp.Sc[S]):B", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/GraphReadout.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/GraphReadout.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/GraphReadout.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/GraphReadout.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/GraphReadout.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/GraphReadout.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/GraphReadout.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/GraphReadout.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/GraphReadout.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/GraphReadout.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/GraphReadout.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/GraphReadout.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/GraphReadout.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/GraphReadout.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/GraphReadout.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/GraphReadout.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/nn\/GraphReadout.html", "kind" : "case class"}, {"name" : "lamp.nn.GRU", "shortDescription" : "Inputs of size (sequence length * batch * in dim)Outputs of size (sequence length * batch * hidden dim)", "object" : "lamp\/nn\/GRU$.html", "members_object" : [{"label" : "apply", "tail" : "(in: Int, hiddenSize: Int, tOpt: TensorOptions)(arg0: Sc[S]): GRU", "member" : "lamp.nn.GRU.apply", "link" : "lamp\/nn\/GRU$.html#apply[S](in:Int,hiddenSize:Int,tOpt:aten.TensorOptions)(implicitevidence$4:lamp.Sc[S]):lamp.nn.GRU", "kind" : "def"}, {"label" : "BiasH", "tail" : "", "member" : "lamp.nn.GRU.BiasH", "link" : "lamp\/nn\/GRU$.html#BiasH", "kind" : "object"}, {"label" : "BiasZ", "tail" : "", "member" : "lamp.nn.GRU.BiasZ", "link" : "lamp\/nn\/GRU$.html#BiasZ", "kind" : "object"}, {"label" : "BiasR", "tail" : "", "member" : "lamp.nn.GRU.BiasR", "link" : "lamp\/nn\/GRU$.html#BiasR", "kind" : "object"}, {"label" : "WeightXz", "tail" : "", "member" : "lamp.nn.GRU.WeightXz", "link" : "lamp\/nn\/GRU$.html#WeightXz", "kind" : "object"}, {"label" : "WeightXr", "tail" : "", "member" : "lamp.nn.GRU.WeightXr", "link" : "lamp\/nn\/GRU$.html#WeightXr", "kind" : "object"}, {"label" : "WeightHz", "tail" : "", "member" : "lamp.nn.GRU.WeightHz", "link" : "lamp\/nn\/GRU$.html#WeightHz", "kind" : "object"}, {"label" : "WeightHr", "tail" : "", "member" : "lamp.nn.GRU.WeightHr", "link" : "lamp\/nn\/GRU$.html#WeightHr", "kind" : "object"}, {"label" : "WeightHh", "tail" : "", "member" : "lamp.nn.GRU.WeightHh", "link" : "lamp\/nn\/GRU$.html#WeightHh", "kind" : "object"}, {"label" : "WeightXh", "tail" : "", "member" : "lamp.nn.GRU.WeightXh", "link" : "lamp\/nn\/GRU$.html#WeightXh", "kind" : "object"}, {"label" : "load", "tail" : ": Load[GRU]", "member" : "lamp.nn.GRU.load", "link" : "lamp\/nn\/GRU$.html#load:lamp.nn.Load[lamp.nn.GRU]", "kind" : "implicit val"}, {"label" : "is", "tail" : ": InitState[GRU, Option[Variable]]", "member" : "lamp.nn.GRU.is", "link" : "lamp\/nn\/GRU$.html#is:lamp.nn.InitState[lamp.nn.GRU,Option[lamp.autograd.Variable]]", "kind" : "implicit val"}, {"label" : "trainingMode", "tail" : ": TrainingMode[GRU]", "member" : "lamp.nn.GRU.trainingMode", "link" : "lamp\/nn\/GRU$.html#trainingMode:lamp.nn.TrainingMode[lamp.nn.GRU]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/GRU$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/GRU$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/GRU$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/GRU$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/GRU$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/GRU$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/GRU$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/GRU$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/GRU$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/GRU$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/GRU$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/GRU$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/GRU$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/GRU$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/GRU$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/GRU$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/GRU$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/GRU$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/GRU$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "forward", "tail" : "(a: (Variable, Option[Variable]))(arg0: Sc[S]): (Variable, Some[Variable])", "member" : "lamp.nn.GRU.forward", "link" : "lamp\/nn\/GRU.html#forward[S](a:(lamp.autograd.Variable,Option[lamp.autograd.Variable]))(implicitevidence$2:lamp.Sc[S]):(lamp.autograd.Variable,Some[lamp.autograd.Variable])", "kind" : "def"}, {"label" : "initState", "tail" : "(): None.type", "member" : "lamp.nn.GRU.initState", "link" : "lamp\/nn\/GRU.html#initState:None.type", "kind" : "def"}, {"label" : "state", "tail" : "(): List[(Constant, LeafTag with Product with Serializable)]", "member" : "lamp.nn.GRU.state", "link" : "lamp\/nn\/GRU.html#state:List[(lamp.autograd.Constant,lamp.nn.LeafTagwithProductwithSerializable)]", "kind" : "def"}, {"label" : "hiddenSize", "tail" : ": Long", "member" : "lamp.nn.GRU.hiddenSize", "link" : "lamp\/nn\/GRU.html#hiddenSize:Long", "kind" : "val"}, {"label" : "inputSize", "tail" : ": Long", "member" : "lamp.nn.GRU.inputSize", "link" : "lamp\/nn\/GRU.html#inputSize:Long", "kind" : "val"}, {"member" : "lamp.nn.GRU#<init>", "error" : "unsupported entity"}, {"label" : "biasH", "tail" : ": Constant", "member" : "lamp.nn.GRU.biasH", "link" : "lamp\/nn\/GRU.html#biasH:lamp.autograd.Constant", "kind" : "val"}, {"label" : "biasZ", "tail" : ": Constant", "member" : "lamp.nn.GRU.biasZ", "link" : "lamp\/nn\/GRU.html#biasZ:lamp.autograd.Constant", "kind" : "val"}, {"label" : "biasR", "tail" : ": Constant", "member" : "lamp.nn.GRU.biasR", "link" : "lamp\/nn\/GRU.html#biasR:lamp.autograd.Constant", "kind" : "val"}, {"label" : "weightHz", "tail" : ": Constant", "member" : "lamp.nn.GRU.weightHz", "link" : "lamp\/nn\/GRU.html#weightHz:lamp.autograd.Constant", "kind" : "val"}, {"label" : "weightHr", "tail" : ": Constant", "member" : "lamp.nn.GRU.weightHr", "link" : "lamp\/nn\/GRU.html#weightHr:lamp.autograd.Constant", "kind" : "val"}, {"label" : "weightXz", "tail" : ": Constant", "member" : "lamp.nn.GRU.weightXz", "link" : "lamp\/nn\/GRU.html#weightXz:lamp.autograd.Constant", "kind" : "val"}, {"label" : "weightXr", "tail" : ": Constant", "member" : "lamp.nn.GRU.weightXr", "link" : "lamp\/nn\/GRU.html#weightXr:lamp.autograd.Constant", "kind" : "val"}, {"label" : "weightHh", "tail" : ": Constant", "member" : "lamp.nn.GRU.weightHh", "link" : "lamp\/nn\/GRU.html#weightHh:lamp.autograd.Constant", "kind" : "val"}, {"label" : "weightXh", "tail" : ": Constant", "member" : "lamp.nn.GRU.weightXh", "link" : "lamp\/nn\/GRU.html#weightXh:lamp.autograd.Constant", "kind" : "val"}, {"label" : "learnableParameters", "tail" : "(): Long", "member" : "lamp.nn.GenericModule.learnableParameters", "link" : "lamp\/nn\/GRU.html#learnableParameters:Long", "kind" : "final def"}, {"label" : "gradients", "tail" : "(loss: Variable, zeroGrad: Boolean): Seq[Option[STen]]", "member" : "lamp.nn.GenericModule.gradients", "link" : "lamp\/nn\/GRU.html#gradients(loss:lamp.autograd.Variable,zeroGrad:Boolean):Seq[Option[lamp.STen]]", "kind" : "final def"}, {"label" : "parameters", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.GenericModule.parameters", "link" : "lamp\/nn\/GRU.html#parameters:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "final def"}, {"label" : "apply", "tail" : "(a: (Variable, Option[Variable]))(arg0: Sc[S]): (Variable, Option[Variable])", "member" : "lamp.nn.GenericModule.apply", "link" : "lamp\/nn\/GRU.html#apply[S](a:A)(implicitevidence$17:lamp.Sc[S]):B", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/GRU.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/GRU.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/GRU.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/GRU.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/GRU.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/GRU.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/GRU.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/GRU.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/GRU.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/GRU.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/GRU.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/GRU.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/GRU.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/GRU.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/GRU.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/GRU.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/nn\/GRU.html", "kind" : "case class"}, {"name" : "lamp.nn.InitState", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/InitState.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/InitState.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/InitState.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/InitState.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/InitState.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/InitState.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/InitState.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/InitState.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/InitState.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/InitState.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/InitState.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/InitState.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/InitState.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/InitState.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/InitState.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/InitState.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/InitState.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/InitState.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/InitState.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "initState", "tail" : "(m: M): C", "member" : "lamp.nn.InitState.initState", "link" : "lamp\/nn\/InitState.html#initState(m:M):C", "kind" : "abstract def"}], "shortDescription" : "", "object" : "lamp\/nn\/InitState$.html", "members_object" : [{"label" : "make", "tail" : "(f: (M) ⇒ C): InitState[M, C]", "member" : "lamp.nn.InitState.make", "link" : "lamp\/nn\/InitState$.html#make[M,C](f:M=>C):lamp.nn.InitState[M,C]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/InitState$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/InitState$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/InitState$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/InitState$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/InitState$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/InitState$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/InitState$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/InitState$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/InitState$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/InitState$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/InitState$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/InitState$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/InitState$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/InitState$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/InitState$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/InitState$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/InitState$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/InitState$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/InitState$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "lamp\/nn\/InitState.html", "kind" : "trait"}, {"name" : "lamp.nn.InitStateSyntax", "shortDescription" : "", "members_class" : [{"label" : "initState", "tail" : "(): C", "member" : "lamp.nn.InitStateSyntax.initState", "link" : "lamp\/nn\/package$$InitStateSyntax.html#initState:C", "kind" : "def"}, {"member" : "lamp.nn.InitStateSyntax#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/package$$InitStateSyntax.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/package$$InitStateSyntax.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/package$$InitStateSyntax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/package$$InitStateSyntax.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/package$$InitStateSyntax.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/package$$InitStateSyntax.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/package$$InitStateSyntax.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/package$$InitStateSyntax.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/package$$InitStateSyntax.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/package$$InitStateSyntax.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/package$$InitStateSyntax.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/package$$InitStateSyntax.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/package$$InitStateSyntax.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/package$$InitStateSyntax.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/package$$InitStateSyntax.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/package$$InitStateSyntax.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/package$$InitStateSyntax.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/package$$InitStateSyntax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/package$$InitStateSyntax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "lamp\/nn\/package$$InitStateSyntax.html", "kind" : "class"}, {"name" : "lamp.nn.LeafTag", "members_trait" : [{"label" : "leaf", "tail" : "(): PTag", "member" : "lamp.nn.LeafTag.leaf", "link" : "lamp\/nn\/LeafTag.html#leaf:lamp.nn.PTag", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/LeafTag.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/LeafTag.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/LeafTag.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/LeafTag.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/LeafTag.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/LeafTag.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/LeafTag.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/LeafTag.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/LeafTag.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/LeafTag.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/LeafTag.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/LeafTag.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/LeafTag.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/LeafTag.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/LeafTag.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/LeafTag.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/LeafTag.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/LeafTag.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/LeafTag.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "lamp\/nn\/LeafTag.html", "kind" : "trait"}, {"name" : "lamp.nn.LearningRateSchedule", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/LearningRateSchedule.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/LearningRateSchedule.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/LearningRateSchedule.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/LearningRateSchedule.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/LearningRateSchedule.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/LearningRateSchedule.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/LearningRateSchedule.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/LearningRateSchedule.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/LearningRateSchedule.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/LearningRateSchedule.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/LearningRateSchedule.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/LearningRateSchedule.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/LearningRateSchedule.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/LearningRateSchedule.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/LearningRateSchedule.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/LearningRateSchedule.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/LearningRateSchedule.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/LearningRateSchedule.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/LearningRateSchedule.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "factor", "tail" : "(epoch: Long, lastValidationLoss: Option[Double]): Double", "member" : "lamp.nn.LearningRateSchedule.factor", "link" : "lamp\/nn\/LearningRateSchedule.html#factor(epoch:Long,lastValidationLoss:Option[Double]):Double", "kind" : "abstract def"}], "shortDescription" : "", "object" : "lamp\/nn\/LearningRateSchedule$.html", "members_object" : [{"label" : "cyclicSchedule", "tail" : "(maxFactor: Double, periodLength: Long): LearningRateSchedule", "member" : "lamp.nn.LearningRateSchedule.cyclicSchedule", "link" : "lamp\/nn\/LearningRateSchedule$.html#cyclicSchedule(maxFactor:Double,periodLength:Long):lamp.nn.LearningRateSchedule", "kind" : "def"}, {"label" : "stepAfter", "tail" : "(steps: Long, factor: Double): LearningRateSchedule", "member" : "lamp.nn.LearningRateSchedule.stepAfter", "link" : "lamp\/nn\/LearningRateSchedule$.html#stepAfter(steps:Long,factor:Double):lamp.nn.LearningRateSchedule", "kind" : "def"}, {"label" : "linear", "tail" : "(start: Double, end: Double, maxSteps: Long): LearningRateSchedule", "member" : "lamp.nn.LearningRateSchedule.linear", "link" : "lamp\/nn\/LearningRateSchedule$.html#linear(start:Double,end:Double,maxSteps:Long):lamp.nn.LearningRateSchedule", "kind" : "def"}, {"label" : "decrement", "tail" : "(every: Int, decrementFraction: Double): LearningRateSchedule", "member" : "lamp.nn.LearningRateSchedule.decrement", "link" : "lamp\/nn\/LearningRateSchedule$.html#decrement(every:Int,decrementFraction:Double):lamp.nn.LearningRateSchedule", "kind" : "def"}, {"label" : "noop", "tail" : "(): LearningRateSchedule", "member" : "lamp.nn.LearningRateSchedule.noop", "link" : "lamp\/nn\/LearningRateSchedule$.html#noop:lamp.nn.LearningRateSchedule", "kind" : "def"}, {"label" : "interpolate", "tail" : "(startY: Double, endY: Double, endX: Double, x: Double): Double", "member" : "lamp.nn.LearningRateSchedule.interpolate", "link" : "lamp\/nn\/LearningRateSchedule$.html#interpolate(startY:Double,endY:Double,endX:Double,x:Double):Double", "kind" : "def"}, {"label" : "fromEpochCount", "tail" : "(f: (Long) ⇒ Double): LearningRateSchedule", "member" : "lamp.nn.LearningRateSchedule.fromEpochCount", "link" : "lamp\/nn\/LearningRateSchedule$.html#fromEpochCount(f:Long=>Double):lamp.nn.LearningRateSchedule", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/LearningRateSchedule$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/LearningRateSchedule$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/LearningRateSchedule$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/LearningRateSchedule$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/LearningRateSchedule$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/LearningRateSchedule$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/LearningRateSchedule$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/LearningRateSchedule$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/LearningRateSchedule$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/LearningRateSchedule$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/LearningRateSchedule$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/LearningRateSchedule$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/LearningRateSchedule$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/LearningRateSchedule$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/LearningRateSchedule$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/LearningRateSchedule$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/LearningRateSchedule$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/LearningRateSchedule$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/LearningRateSchedule$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "lamp\/nn\/LearningRateSchedule.html", "kind" : "trait"}, {"name" : "lamp.nn.LiftedModule", "shortDescription" : "", "object" : "lamp\/nn\/LiftedModule$.html", "members_object" : [{"label" : "initState", "tail" : "(): InitState[LiftedModule[M], Unit]", "member" : "lamp.nn.LiftedModule.initState", "link" : "lamp\/nn\/LiftedModule$.html#initState[M<:lamp.nn.Module]:lamp.nn.InitState[lamp.nn.LiftedModule[M],Unit]", "kind" : "implicit def"}, {"label" : "load", "tail" : "(arg0: Load[M]): Load[LiftedModule[M]]", "member" : "lamp.nn.LiftedModule.load", "link" : "lamp\/nn\/LiftedModule$.html#load[M<:lamp.nn.Module](implicitevidence$13:lamp.nn.Load[M]):lamp.nn.Load[lamp.nn.LiftedModule[M]]", "kind" : "implicit def"}, {"label" : "trainingMode", "tail" : "(arg0: TrainingMode[M]): TrainingMode[LiftedModule[M]]", "member" : "lamp.nn.LiftedModule.trainingMode", "link" : "lamp\/nn\/LiftedModule$.html#trainingMode[M<:lamp.nn.Module](implicitevidence$12:lamp.nn.TrainingMode[M]):lamp.nn.TrainingMode[lamp.nn.LiftedModule[M]]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/LiftedModule$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/LiftedModule$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/LiftedModule$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/LiftedModule$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/LiftedModule$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/LiftedModule$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/LiftedModule$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/LiftedModule$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/LiftedModule$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/LiftedModule$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/LiftedModule$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/LiftedModule$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/LiftedModule$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/LiftedModule$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/LiftedModule$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/LiftedModule$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/LiftedModule$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/LiftedModule$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/LiftedModule$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "forward", "tail" : "(x: (Variable, Unit))(arg0: Sc[S]): (Variable, Unit)", "member" : "lamp.nn.LiftedModule.forward", "link" : "lamp\/nn\/LiftedModule.html#forward[S](x:(lamp.autograd.Variable,Unit))(implicitevidence$11:lamp.Sc[S]):(lamp.autograd.Variable,Unit)", "kind" : "def"}, {"label" : "state", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.LiftedModule.state", "link" : "lamp\/nn\/LiftedModule.html#state:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "def"}, {"member" : "lamp.nn.LiftedModule#<init>", "error" : "unsupported entity"}, {"label" : "mod", "tail" : ": M with Module", "member" : "lamp.nn.LiftedModule.mod", "link" : "lamp\/nn\/LiftedModule.html#mod:Mwithlamp.nn.Module", "kind" : "val"}, {"label" : "learnableParameters", "tail" : "(): Long", "member" : "lamp.nn.GenericModule.learnableParameters", "link" : "lamp\/nn\/LiftedModule.html#learnableParameters:Long", "kind" : "final def"}, {"label" : "gradients", "tail" : "(loss: Variable, zeroGrad: Boolean): Seq[Option[STen]]", "member" : "lamp.nn.GenericModule.gradients", "link" : "lamp\/nn\/LiftedModule.html#gradients(loss:lamp.autograd.Variable,zeroGrad:Boolean):Seq[Option[lamp.STen]]", "kind" : "final def"}, {"label" : "parameters", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.GenericModule.parameters", "link" : "lamp\/nn\/LiftedModule.html#parameters:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "final def"}, {"label" : "apply", "tail" : "(a: (Variable, Unit))(arg0: Sc[S]): (Variable, Unit)", "member" : "lamp.nn.GenericModule.apply", "link" : "lamp\/nn\/LiftedModule.html#apply[S](a:A)(implicitevidence$17:lamp.Sc[S]):B", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/LiftedModule.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/LiftedModule.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/LiftedModule.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/LiftedModule.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/LiftedModule.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/LiftedModule.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/LiftedModule.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/LiftedModule.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/LiftedModule.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/LiftedModule.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/LiftedModule.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/LiftedModule.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/LiftedModule.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/LiftedModule.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/LiftedModule.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/LiftedModule.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/nn\/LiftedModule.html", "kind" : "case class"}, {"name" : "lamp.nn.Linear", "shortDescription" : "", "object" : "lamp\/nn\/Linear$.html", "members_object" : [{"label" : "apply", "tail" : "(in: Int, out: Int, tOpt: TensorOptions, bias: Boolean)(arg0: Sc[S]): Linear", "member" : "lamp.nn.Linear.apply", "link" : "lamp\/nn\/Linear$.html#apply[S](in:Int,out:Int,tOpt:aten.TensorOptions,bias:Boolean)(implicitevidence$2:lamp.Sc[S]):lamp.nn.Linear", "kind" : "def"}, {"label" : "Bias", "tail" : "", "member" : "lamp.nn.Linear.Bias", "link" : "lamp\/nn\/Linear$.html#Bias", "kind" : "object"}, {"label" : "Weights", "tail" : "", "member" : "lamp.nn.Linear.Weights", "link" : "lamp\/nn\/Linear$.html#Weights", "kind" : "object"}, {"label" : "load", "tail" : ": Load[Linear]", "member" : "lamp.nn.Linear.load", "link" : "lamp\/nn\/Linear$.html#load:lamp.nn.Load[lamp.nn.Linear]", "kind" : "implicit val"}, {"label" : "trainingMode", "tail" : ": TrainingMode[Linear]", "member" : "lamp.nn.Linear.trainingMode", "link" : "lamp\/nn\/Linear$.html#trainingMode:lamp.nn.TrainingMode[lamp.nn.Linear]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/Linear$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/Linear$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/Linear$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/Linear$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/Linear$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/Linear$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/Linear$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Linear$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Linear$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Linear$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/Linear$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/Linear$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/Linear$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/Linear$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/Linear$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/Linear$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/Linear$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/Linear$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/Linear$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "forward", "tail" : "(x: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.nn.Linear.forward", "link" : "lamp\/nn\/Linear.html#forward[S](x:lamp.autograd.Variable)(implicitevidence$1:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "state", "tail" : ": Seq[(Constant, PTag)]", "member" : "lamp.nn.Linear.state", "link" : "lamp\/nn\/Linear.html#state:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "val"}, {"member" : "lamp.nn.Linear#<init>", "error" : "unsupported entity"}, {"label" : "bias", "tail" : ": Option[Constant]", "member" : "lamp.nn.Linear.bias", "link" : "lamp\/nn\/Linear.html#bias:Option[lamp.autograd.Constant]", "kind" : "val"}, {"label" : "weights", "tail" : ": Constant", "member" : "lamp.nn.Linear.weights", "link" : "lamp\/nn\/Linear.html#weights:lamp.autograd.Constant", "kind" : "val"}, {"label" : "learnableParameters", "tail" : "(): Long", "member" : "lamp.nn.GenericModule.learnableParameters", "link" : "lamp\/nn\/Linear.html#learnableParameters:Long", "kind" : "final def"}, {"label" : "gradients", "tail" : "(loss: Variable, zeroGrad: Boolean): Seq[Option[STen]]", "member" : "lamp.nn.GenericModule.gradients", "link" : "lamp\/nn\/Linear.html#gradients(loss:lamp.autograd.Variable,zeroGrad:Boolean):Seq[Option[lamp.STen]]", "kind" : "final def"}, {"label" : "parameters", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.GenericModule.parameters", "link" : "lamp\/nn\/Linear.html#parameters:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "final def"}, {"label" : "apply", "tail" : "(a: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.nn.GenericModule.apply", "link" : "lamp\/nn\/Linear.html#apply[S](a:A)(implicitevidence$17:lamp.Sc[S]):B", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/Linear.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/Linear.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/Linear.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/Linear.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/Linear.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/Linear.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/Linear.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Linear.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Linear.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Linear.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/Linear.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/Linear.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/Linear.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/Linear.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/Linear.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/Linear.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/nn\/Linear.html", "kind" : "case class"}, {"name" : "lamp.nn.Load", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/Load.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/Load.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/Load.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/Load.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/Load.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/Load.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/Load.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Load.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Load.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Load.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/Load.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/Load.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/Load.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/Load.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/Load.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/Load.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/Load.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/Load.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/Load.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "load", "tail" : "(m: M, tensors: Seq[STen]): Unit", "member" : "lamp.nn.Load.load", "link" : "lamp\/nn\/Load.html#load(m:M,tensors:Seq[lamp.STen]):Unit", "kind" : "abstract def"}], "shortDescription" : "", "object" : "lamp\/nn\/Load$.html", "members_object" : [{"label" : "make", "tail" : "(f: (M) ⇒ (Seq[STen]) ⇒ Unit): Load[M]", "member" : "lamp.nn.Load.make", "link" : "lamp\/nn\/Load$.html#make[M](f:M=>(Seq[lamp.STen]=>Unit)):lamp.nn.Load[M]", "kind" : "def"}, {"label" : "identity", "tail" : "(): Load[M]", "member" : "lamp.nn.Load.identity", "link" : "lamp\/nn\/Load$.html#identity[M]:lamp.nn.Load[M]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/Load$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/Load$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/Load$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/Load$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/Load$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/Load$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/Load$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Load$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Load$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Load$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/Load$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/Load$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/Load$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/Load$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/Load$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/Load$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/Load$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/Load$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/Load$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "lamp\/nn\/Load.html", "kind" : "trait"}, {"name" : "lamp.nn.LoadSyntax", "shortDescription" : "", "members_class" : [{"label" : "load", "tail" : "(tensors: Seq[STen]): Unit", "member" : "lamp.nn.LoadSyntax.load", "link" : "lamp\/nn\/package$$LoadSyntax.html#load(tensors:Seq[lamp.STen]):Unit", "kind" : "def"}, {"member" : "lamp.nn.LoadSyntax#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/package$$LoadSyntax.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/package$$LoadSyntax.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/package$$LoadSyntax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/package$$LoadSyntax.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/package$$LoadSyntax.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/package$$LoadSyntax.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/package$$LoadSyntax.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/package$$LoadSyntax.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/package$$LoadSyntax.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/package$$LoadSyntax.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/package$$LoadSyntax.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/package$$LoadSyntax.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/package$$LoadSyntax.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/package$$LoadSyntax.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/package$$LoadSyntax.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/package$$LoadSyntax.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/package$$LoadSyntax.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/package$$LoadSyntax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/package$$LoadSyntax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "lamp\/nn\/package$$LoadSyntax.html", "kind" : "class"}, {"name" : "lamp.nn.LossFunction", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/LossFunction.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/LossFunction.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/LossFunction.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/LossFunction.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/LossFunction.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/LossFunction.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/LossFunction.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/LossFunction.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/LossFunction.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/LossFunction.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/LossFunction.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/LossFunction.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/LossFunction.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/LossFunction.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/LossFunction.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/LossFunction.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/LossFunction.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/LossFunction.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/LossFunction.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "apply", "tail" : "(output: Variable, target: STen)(arg0: Sc[S]): (Variable, Long)", "member" : "lamp.nn.LossFunction.apply", "link" : "lamp\/nn\/LossFunction.html#apply[S](output:lamp.autograd.Variable,target:lamp.STen)(implicitevidence$1:lamp.Sc[S]):(lamp.autograd.Variable,Long)", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "lamp\/nn\/LossFunction.html", "kind" : "trait"}, {"name" : "lamp.nn.LossFunctions", "shortDescription" : "", "object" : "lamp\/nn\/LossFunctions$.html", "members_object" : [{"label" : "SequenceNLL", "tail" : "", "member" : "lamp.nn.LossFunctions.SequenceNLL", "link" : "lamp\/nn\/LossFunctions$.html#SequenceNLLextendsLossFunctionwithProductwithSerializable", "kind" : "case class"}, {"label" : "NLL", "tail" : "", "member" : "lamp.nn.LossFunctions.NLL", "link" : "lamp\/nn\/LossFunctions$.html#NLLextendsLossFunctionwithProductwithSerializable", "kind" : "case class"}, {"label" : "L1Loss", "tail" : "", "member" : "lamp.nn.LossFunctions.L1Loss", "link" : "lamp\/nn\/LossFunctions$.html#L1Loss", "kind" : "object"}, {"label" : "MSE", "tail" : "", "member" : "lamp.nn.LossFunctions.MSE", "link" : "lamp\/nn\/LossFunctions$.html#MSE", "kind" : "object"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/LossFunctions$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/LossFunctions$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/LossFunctions$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/LossFunctions$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/LossFunctions$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/LossFunctions$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/LossFunctions$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/LossFunctions$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/LossFunctions$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/LossFunctions$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/LossFunctions$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/LossFunctions$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/LossFunctions$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/LossFunctions$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/LossFunctions$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/LossFunctions$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/LossFunctions$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/LossFunctions$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/LossFunctions$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "lamp.nn.LSTM", "shortDescription" : "Inputs of size (sequence length * batch * vocab)Outputs of size (sequence length * batch * output dim)", "object" : "lamp\/nn\/LSTM$.html", "members_object" : [{"label" : "apply", "tail" : "(in: Int, hiddenSize: Int, tOpt: TensorOptions)(arg0: Sc[S]): LSTM", "member" : "lamp.nn.LSTM.apply", "link" : "lamp\/nn\/LSTM$.html#apply[S](in:Int,hiddenSize:Int,tOpt:aten.TensorOptions)(implicitevidence$4:lamp.Sc[S]):lamp.nn.LSTM", "kind" : "def"}, {"label" : "BiasC", "tail" : "", "member" : "lamp.nn.LSTM.BiasC", "link" : "lamp\/nn\/LSTM$.html#BiasC", "kind" : "object"}, {"label" : "BiasO", "tail" : "", "member" : "lamp.nn.LSTM.BiasO", "link" : "lamp\/nn\/LSTM$.html#BiasO", "kind" : "object"}, {"label" : "BiasF", "tail" : "", "member" : "lamp.nn.LSTM.BiasF", "link" : "lamp\/nn\/LSTM$.html#BiasF", "kind" : "object"}, {"label" : "BiasI", "tail" : "", "member" : "lamp.nn.LSTM.BiasI", "link" : "lamp\/nn\/LSTM$.html#BiasI", "kind" : "object"}, {"label" : "WeightHc", "tail" : "", "member" : "lamp.nn.LSTM.WeightHc", "link" : "lamp\/nn\/LSTM$.html#WeightHc", "kind" : "object"}, {"label" : "WeightXc", "tail" : "", "member" : "lamp.nn.LSTM.WeightXc", "link" : "lamp\/nn\/LSTM$.html#WeightXc", "kind" : "object"}, {"label" : "WeightHo", "tail" : "", "member" : "lamp.nn.LSTM.WeightHo", "link" : "lamp\/nn\/LSTM$.html#WeightHo", "kind" : "object"}, {"label" : "WeightHf", "tail" : "", "member" : "lamp.nn.LSTM.WeightHf", "link" : "lamp\/nn\/LSTM$.html#WeightHf", "kind" : "object"}, {"label" : "WeightHi", "tail" : "", "member" : "lamp.nn.LSTM.WeightHi", "link" : "lamp\/nn\/LSTM$.html#WeightHi", "kind" : "object"}, {"label" : "WeightXo", "tail" : "", "member" : "lamp.nn.LSTM.WeightXo", "link" : "lamp\/nn\/LSTM$.html#WeightXo", "kind" : "object"}, {"label" : "WeightXf", "tail" : "", "member" : "lamp.nn.LSTM.WeightXf", "link" : "lamp\/nn\/LSTM$.html#WeightXf", "kind" : "object"}, {"label" : "WeightXi", "tail" : "", "member" : "lamp.nn.LSTM.WeightXi", "link" : "lamp\/nn\/LSTM$.html#WeightXi", "kind" : "object"}, {"label" : "load", "tail" : ": Load[LSTM]", "member" : "lamp.nn.LSTM.load", "link" : "lamp\/nn\/LSTM$.html#load:lamp.nn.Load[lamp.nn.LSTM]", "kind" : "implicit val"}, {"label" : "is", "tail" : ": InitState[LSTM, Option[(Variable, Variable)]]", "member" : "lamp.nn.LSTM.is", "link" : "lamp\/nn\/LSTM$.html#is:lamp.nn.InitState[lamp.nn.LSTM,Option[(lamp.autograd.Variable,lamp.autograd.Variable)]]", "kind" : "implicit val"}, {"label" : "trainingMode", "tail" : ": TrainingMode[LSTM]", "member" : "lamp.nn.LSTM.trainingMode", "link" : "lamp\/nn\/LSTM$.html#trainingMode:lamp.nn.TrainingMode[lamp.nn.LSTM]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/LSTM$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/LSTM$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/LSTM$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/LSTM$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/LSTM$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/LSTM$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/LSTM$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/LSTM$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/LSTM$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/LSTM$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/LSTM$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/LSTM$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/LSTM$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/LSTM$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/LSTM$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/LSTM$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/LSTM$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/LSTM$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/LSTM$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "forward", "tail" : "(a: (Variable, Option[(Variable, Variable)]))(arg0: Sc[S]): (Variable, Some[(Variable, Variable)])", "member" : "lamp.nn.LSTM.forward", "link" : "lamp\/nn\/LSTM.html#forward[S](a:(lamp.autograd.Variable,Option[(lamp.autograd.Variable,lamp.autograd.Variable)]))(implicitevidence$2:lamp.Sc[S]):(lamp.autograd.Variable,Some[(lamp.autograd.Variable,lamp.autograd.Variable)])", "kind" : "def"}, {"label" : "state", "tail" : "(): List[(Constant, LeafTag with Product with Serializable)]", "member" : "lamp.nn.LSTM.state", "link" : "lamp\/nn\/LSTM.html#state:List[(lamp.autograd.Constant,lamp.nn.LeafTagwithProductwithSerializable)]", "kind" : "def"}, {"label" : "hiddenSize", "tail" : ": Long", "member" : "lamp.nn.LSTM.hiddenSize", "link" : "lamp\/nn\/LSTM.html#hiddenSize:Long", "kind" : "val"}, {"member" : "lamp.nn.LSTM#<init>", "error" : "unsupported entity"}, {"label" : "biasC", "tail" : ": Constant", "member" : "lamp.nn.LSTM.biasC", "link" : "lamp\/nn\/LSTM.html#biasC:lamp.autograd.Constant", "kind" : "val"}, {"label" : "biasO", "tail" : ": Constant", "member" : "lamp.nn.LSTM.biasO", "link" : "lamp\/nn\/LSTM.html#biasO:lamp.autograd.Constant", "kind" : "val"}, {"label" : "biasF", "tail" : ": Constant", "member" : "lamp.nn.LSTM.biasF", "link" : "lamp\/nn\/LSTM.html#biasF:lamp.autograd.Constant", "kind" : "val"}, {"label" : "biasI", "tail" : ": Constant", "member" : "lamp.nn.LSTM.biasI", "link" : "lamp\/nn\/LSTM.html#biasI:lamp.autograd.Constant", "kind" : "val"}, {"label" : "weightHc", "tail" : ": Constant", "member" : "lamp.nn.LSTM.weightHc", "link" : "lamp\/nn\/LSTM.html#weightHc:lamp.autograd.Constant", "kind" : "val"}, {"label" : "weightXc", "tail" : ": Constant", "member" : "lamp.nn.LSTM.weightXc", "link" : "lamp\/nn\/LSTM.html#weightXc:lamp.autograd.Constant", "kind" : "val"}, {"label" : "weightHo", "tail" : ": Constant", "member" : "lamp.nn.LSTM.weightHo", "link" : "lamp\/nn\/LSTM.html#weightHo:lamp.autograd.Constant", "kind" : "val"}, {"label" : "weightHf", "tail" : ": Constant", "member" : "lamp.nn.LSTM.weightHf", "link" : "lamp\/nn\/LSTM.html#weightHf:lamp.autograd.Constant", "kind" : "val"}, {"label" : "weightHi", "tail" : ": Constant", "member" : "lamp.nn.LSTM.weightHi", "link" : "lamp\/nn\/LSTM.html#weightHi:lamp.autograd.Constant", "kind" : "val"}, {"label" : "weightXo", "tail" : ": Constant", "member" : "lamp.nn.LSTM.weightXo", "link" : "lamp\/nn\/LSTM.html#weightXo:lamp.autograd.Constant", "kind" : "val"}, {"label" : "weightXf", "tail" : ": Constant", "member" : "lamp.nn.LSTM.weightXf", "link" : "lamp\/nn\/LSTM.html#weightXf:lamp.autograd.Constant", "kind" : "val"}, {"label" : "weightXi", "tail" : ": Constant", "member" : "lamp.nn.LSTM.weightXi", "link" : "lamp\/nn\/LSTM.html#weightXi:lamp.autograd.Constant", "kind" : "val"}, {"label" : "learnableParameters", "tail" : "(): Long", "member" : "lamp.nn.GenericModule.learnableParameters", "link" : "lamp\/nn\/LSTM.html#learnableParameters:Long", "kind" : "final def"}, {"label" : "gradients", "tail" : "(loss: Variable, zeroGrad: Boolean): Seq[Option[STen]]", "member" : "lamp.nn.GenericModule.gradients", "link" : "lamp\/nn\/LSTM.html#gradients(loss:lamp.autograd.Variable,zeroGrad:Boolean):Seq[Option[lamp.STen]]", "kind" : "final def"}, {"label" : "parameters", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.GenericModule.parameters", "link" : "lamp\/nn\/LSTM.html#parameters:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "final def"}, {"label" : "apply", "tail" : "(a: (Variable, Option[(Variable, Variable)]))(arg0: Sc[S]): (Variable, Option[(Variable, Variable)])", "member" : "lamp.nn.GenericModule.apply", "link" : "lamp\/nn\/LSTM.html#apply[S](a:A)(implicitevidence$17:lamp.Sc[S]):B", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/LSTM.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/LSTM.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/LSTM.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/LSTM.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/LSTM.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/LSTM.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/LSTM.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/LSTM.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/LSTM.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/LSTM.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/LSTM.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/LSTM.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/LSTM.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/LSTM.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/LSTM.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/LSTM.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/nn\/LSTM.html", "kind" : "case class"}, {"name" : "lamp.nn.MappedState", "shortDescription" : "", "object" : "lamp\/nn\/MappedState$.html", "members_object" : [{"label" : "initState", "tail" : "(is: InitState[M, C]): InitState[MappedState[A, B, C, D, M], C]", "member" : "lamp.nn.MappedState.initState", "link" : "lamp\/nn\/MappedState$.html#initState[A,B,C,D,M<:lamp.nn.StatefulModule[A,B,C]](implicitis:lamp.nn.InitState[M,C]):lamp.nn.InitState[lamp.nn.MappedState[A,B,C,D,M],C]", "kind" : "implicit def"}, {"label" : "load", "tail" : "(arg0: Load[M]): Load[MappedState[A, B, C, D, M]]", "member" : "lamp.nn.MappedState.load", "link" : "lamp\/nn\/MappedState$.html#load[A,B,C,D,M<:lamp.nn.StatefulModule[A,B,C]](implicitevidence$19:lamp.nn.Load[M]):lamp.nn.Load[lamp.nn.MappedState[A,B,C,D,M]]", "kind" : "implicit def"}, {"label" : "trainingMode", "tail" : "(t: TrainingMode[M]): TrainingMode[MappedState[A, B, C, D, M]]", "member" : "lamp.nn.MappedState.trainingMode", "link" : "lamp\/nn\/MappedState$.html#trainingMode[A,B,C,D,M<:lamp.nn.StatefulModule[A,B,C]](implicitt:lamp.nn.TrainingMode[M]):lamp.nn.TrainingMode[lamp.nn.MappedState[A,B,C,D,M]]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/MappedState$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/MappedState$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/MappedState$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/MappedState$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/MappedState$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/MappedState$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/MappedState$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/MappedState$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/MappedState$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/MappedState$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/MappedState$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/MappedState$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/MappedState$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/MappedState$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/MappedState$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/MappedState$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/MappedState$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/MappedState$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/MappedState$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "forward", "tail" : "(x: (A, C))(arg0: Sc[S]): (B, D)", "member" : "lamp.nn.MappedState.forward", "link" : "lamp\/nn\/MappedState.html#forward[S](x:(A,C))(implicitevidence$18:lamp.Sc[S]):(B,D)", "kind" : "def"}, {"label" : "state", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.MappedState.state", "link" : "lamp\/nn\/MappedState.html#state:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "def"}, {"member" : "lamp.nn.MappedState#<init>", "error" : "unsupported entity"}, {"label" : "map", "tail" : ": (C) ⇒ D", "member" : "lamp.nn.MappedState.map", "link" : "lamp\/nn\/MappedState.html#map:C=>D", "kind" : "val"}, {"label" : "statefulModule", "tail" : ": M with StatefulModule[A, B, C]", "member" : "lamp.nn.MappedState.statefulModule", "link" : "lamp\/nn\/MappedState.html#statefulModule:Mwithlamp.nn.StatefulModule[A,B,C]", "kind" : "val"}, {"label" : "learnableParameters", "tail" : "(): Long", "member" : "lamp.nn.GenericModule.learnableParameters", "link" : "lamp\/nn\/MappedState.html#learnableParameters:Long", "kind" : "final def"}, {"label" : "gradients", "tail" : "(loss: Variable, zeroGrad: Boolean): Seq[Option[STen]]", "member" : "lamp.nn.GenericModule.gradients", "link" : "lamp\/nn\/MappedState.html#gradients(loss:lamp.autograd.Variable,zeroGrad:Boolean):Seq[Option[lamp.STen]]", "kind" : "final def"}, {"label" : "parameters", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.GenericModule.parameters", "link" : "lamp\/nn\/MappedState.html#parameters:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "final def"}, {"label" : "apply", "tail" : "(a: (A, C))(arg0: Sc[S]): (B, D)", "member" : "lamp.nn.GenericModule.apply", "link" : "lamp\/nn\/MappedState.html#apply[S](a:A)(implicitevidence$17:lamp.Sc[S]):B", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/MappedState.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/MappedState.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/MappedState.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/MappedState.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/MappedState.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/MappedState.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/MappedState.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/MappedState.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/MappedState.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/MappedState.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/MappedState.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/MappedState.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/MappedState.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/MappedState.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/MappedState.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/MappedState.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/nn\/MappedState.html", "kind" : "case class"}, {"name" : "lamp.nn.MLP", "shortDescription" : "Factory for multilayer fully connected feed forward networks", "object" : "lamp\/nn\/MLP$.html", "members_object" : [{"label" : "apply", "tail" : "(in: Int, out: Int, hidden: Seq[Int], tOpt: TensorOptions, dropout: Double, lastNonLinearity: Boolean)(arg0: Sc[S]): Seq2[Variable, Variable, Variable, Sequential[Variable, Seq4[Variable, Variable, Variable, Variable, Variable, Linear with GenericModule[Variable, Variable], BatchNorm with GenericModule[Variable, Variable], Fun with GenericModule[Variable, Variable], Dropout with GenericModule[Variable, Variable]]] with GenericModule[Variable, Variable], EitherModule[Variable, Variable, Seq4[Variable, Variable, Variable, Variable, Variable, Linear with GenericModule[Variable, Variable], BatchNorm with GenericModule[Variable, Variable], Fun with GenericModule[Variable, Variable], Dropout with GenericModule[Variable, Variable]], Seq2[Variable, Variable, Variable, Linear with GenericModule[Variable, Variable], BatchNorm with GenericModule[Variable, Variable]]] with GenericModule[Variable, Variable]]", "member" : "lamp.nn.MLP.apply", "link" : "lamp\/nn\/MLP$.html#apply[S](in:Int,out:Int,hidden:Seq[Int],tOpt:aten.TensorOptions,dropout:Double,lastNonLinearity:Boolean)(implicitevidence$1:lamp.Sc[S]):lamp.nn.Seq2[lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.nn.Sequential[lamp.autograd.Variable,lamp.nn.Seq4[lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.nn.Linearwithlamp.nn.GenericModule[lamp.autograd.Variable,lamp.autograd.Variable],lamp.nn.BatchNormwithlamp.nn.GenericModule[lamp.autograd.Variable,lamp.autograd.Variable],lamp.nn.Funwithlamp.nn.GenericModule[lamp.autograd.Variable,lamp.autograd.Variable],lamp.nn.Dropoutwithlamp.nn.GenericModule[lamp.autograd.Variable,lamp.autograd.Variable]]]withlamp.nn.GenericModule[lamp.autograd.Variable,lamp.autograd.Variable],lamp.nn.EitherModule[lamp.autograd.Variable,lamp.autograd.Variable,lamp.nn.Seq4[lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.nn.Linearwithlamp.nn.GenericModule[lamp.autograd.Variable,lamp.autograd.Variable],lamp.nn.BatchNormwithlamp.nn.GenericModule[lamp.autograd.Variable,lamp.autograd.Variable],lamp.nn.Funwithlamp.nn.GenericModule[lamp.autograd.Variable,lamp.autograd.Variable],lamp.nn.Dropoutwithlamp.nn.GenericModule[lamp.autograd.Variable,lamp.autograd.Variable]],lamp.nn.Seq2[lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.nn.Linearwithlamp.nn.GenericModule[lamp.autograd.Variable,lamp.autograd.Variable],lamp.nn.BatchNormwithlamp.nn.GenericModule[lamp.autograd.Variable,lamp.autograd.Variable]]]withlamp.nn.GenericModule[lamp.autograd.Variable,lamp.autograd.Variable]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/MLP$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/MLP$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/MLP$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/MLP$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/MLP$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/MLP$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/MLP$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/MLP$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/MLP$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/MLP$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/MLP$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/MLP$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/MLP$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/MLP$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/MLP$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/MLP$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/MLP$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/MLP$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/MLP$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "lamp.nn.ModelWithOptimizer", "shortDescription" : "", "members_case class" : [{"label" : "release", "tail" : "(): Unit", "member" : "lamp.nn.ModelWithOptimizer.release", "link" : "lamp\/nn\/ModelWithOptimizer.html#release():Unit", "kind" : "def"}, {"member" : "lamp.nn.ModelWithOptimizer#<init>", "error" : "unsupported entity"}, {"label" : "optimizer", "tail" : ": Optimizer", "member" : "lamp.nn.ModelWithOptimizer.optimizer", "link" : "lamp\/nn\/ModelWithOptimizer.html#optimizer:lamp.nn.Optimizer", "kind" : "val"}, {"label" : "model", "tail" : ": SupervisedModel[I, M]", "member" : "lamp.nn.ModelWithOptimizer.model", "link" : "lamp\/nn\/ModelWithOptimizer.html#model:lamp.nn.SupervisedModel[I,M]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/ModelWithOptimizer.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/ModelWithOptimizer.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/ModelWithOptimizer.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/ModelWithOptimizer.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/ModelWithOptimizer.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/ModelWithOptimizer.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/ModelWithOptimizer.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/ModelWithOptimizer.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/ModelWithOptimizer.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/ModelWithOptimizer.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/ModelWithOptimizer.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/ModelWithOptimizer.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/ModelWithOptimizer.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/ModelWithOptimizer.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/ModelWithOptimizer.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/ModelWithOptimizer.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/nn\/ModelWithOptimizer.html", "kind" : "case class"}, {"name" : "lamp.nn.NGCN", "shortDescription" : "", "object" : "lamp\/nn\/NGCN$.html", "members_object" : [{"label" : "ngcn", "tail" : "(in: Int, middle: Int, out: Int, tOpt: TensorOptions, dropout: Double, nonLinearity: Boolean, K: Int, r: Int, includeZeroOrder: Boolean)(arg0: Sc[S]): NGCN[ResidualModule[EitherModule[Variable, Variable, Seq4[Variable, Variable, Variable, Variable, Variable, Linear with GenericModule[Variable, Variable], BatchNorm with GenericModule[Variable, Variable], Fun with GenericModule[Variable, Variable], Dropout with GenericModule[Variable, Variable]], Linear]]]", "member" : "lamp.nn.NGCN.ngcn", "link" : "lamp\/nn\/NGCN$.html#ngcn[S](in:Int,middle:Int,out:Int,tOpt:aten.TensorOptions,dropout:Double,nonLinearity:Boolean,K:Int,r:Int,includeZeroOrder:Boolean)(implicitevidence$8:lamp.Sc[S]):lamp.nn.NGCN[lamp.nn.ResidualModule[lamp.nn.EitherModule[lamp.autograd.Variable,lamp.autograd.Variable,lamp.nn.Seq4[lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.autograd.Variable,lamp.nn.Linearwithlamp.nn.GenericModule[lamp.autograd.Variable,lamp.autograd.Variable],lamp.nn.BatchNormwithlamp.nn.GenericModule[lamp.autograd.Variable,lamp.autograd.Variable],lamp.nn.Funwithlamp.nn.GenericModule[lamp.autograd.Variable,lamp.autograd.Variable],lamp.nn.Dropoutwithlamp.nn.GenericModule[lamp.autograd.Variable,lamp.autograd.Variable]],lamp.nn.Linear]]]", "kind" : "def"}, {"label" : "loadN", "tail" : "(arg0: Load[M]): Load[NGCN[M]]", "member" : "lamp.nn.NGCN.loadN", "link" : "lamp\/nn\/NGCN$.html#loadN[M<:lamp.nn.Module](implicitevidence$7:lamp.nn.Load[M]):lamp.nn.Load[lamp.nn.NGCN[M]]", "kind" : "implicit def"}, {"label" : "trainingModeN", "tail" : "(arg0: TrainingMode[M]): TrainingMode[NGCN[M]]", "member" : "lamp.nn.NGCN.trainingModeN", "link" : "lamp\/nn\/NGCN$.html#trainingModeN[M<:lamp.nn.Module](implicitevidence$6:lamp.nn.TrainingMode[M]):lamp.nn.TrainingMode[lamp.nn.NGCN[M]]", "kind" : "implicit def"}, {"label" : "Weights", "tail" : "", "member" : "lamp.nn.NGCN.Weights", "link" : "lamp\/nn\/NGCN$.html#Weights", "kind" : "object"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/NGCN$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/NGCN$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/NGCN$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/NGCN$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/NGCN$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/NGCN$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/NGCN$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/NGCN$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/NGCN$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/NGCN$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/NGCN$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/NGCN$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/NGCN$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/NGCN$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/NGCN$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/NGCN$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/NGCN$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/NGCN$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/NGCN$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "forward", "tail" : "(x: (Variable, Variable))(arg0: Sc[S]): (Variable, Variable)", "member" : "lamp.nn.NGCN.forward", "link" : "lamp\/nn\/NGCN.html#forward[S](x:(lamp.autograd.Variable,lamp.autograd.Variable))(implicitevidence$5:lamp.Sc[S]):(lamp.autograd.Variable,lamp.autograd.Variable)", "kind" : "def"}, {"label" : "state", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.NGCN.state", "link" : "lamp\/nn\/NGCN.html#state:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "def"}, {"member" : "lamp.nn.NGCN#<init>", "error" : "unsupported entity"}, {"label" : "includeZeroOrder", "tail" : ": Boolean", "member" : "lamp.nn.NGCN.includeZeroOrder", "link" : "lamp\/nn\/NGCN.html#includeZeroOrder:Boolean", "kind" : "val"}, {"label" : "K", "tail" : ": Int", "member" : "lamp.nn.NGCN.K", "link" : "lamp\/nn\/NGCN.html#K:Int", "kind" : "val"}, {"label" : "weightFc", "tail" : ": Constant", "member" : "lamp.nn.NGCN.weightFc", "link" : "lamp\/nn\/NGCN.html#weightFc:lamp.autograd.Constant", "kind" : "val"}, {"label" : "transforms", "tail" : ": Seq[M with Module]", "member" : "lamp.nn.NGCN.transforms", "link" : "lamp\/nn\/NGCN.html#transforms:Seq[Mwithlamp.nn.Module]", "kind" : "val"}, {"label" : "learnableParameters", "tail" : "(): Long", "member" : "lamp.nn.GenericModule.learnableParameters", "link" : "lamp\/nn\/NGCN.html#learnableParameters:Long", "kind" : "final def"}, {"label" : "gradients", "tail" : "(loss: Variable, zeroGrad: Boolean): Seq[Option[STen]]", "member" : "lamp.nn.GenericModule.gradients", "link" : "lamp\/nn\/NGCN.html#gradients(loss:lamp.autograd.Variable,zeroGrad:Boolean):Seq[Option[lamp.STen]]", "kind" : "final def"}, {"label" : "parameters", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.GenericModule.parameters", "link" : "lamp\/nn\/NGCN.html#parameters:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "final def"}, {"label" : "apply", "tail" : "(a: (Variable, Variable))(arg0: Sc[S]): (Variable, Variable)", "member" : "lamp.nn.GenericModule.apply", "link" : "lamp\/nn\/NGCN.html#apply[S](a:A)(implicitevidence$17:lamp.Sc[S]):B", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/NGCN.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/NGCN.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/NGCN.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/NGCN.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/NGCN.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/NGCN.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/NGCN.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/NGCN.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/NGCN.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/NGCN.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/NGCN.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/NGCN.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/NGCN.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/NGCN.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/NGCN.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/NGCN.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/nn\/NGCN.html", "kind" : "case class"}, {"name" : "lamp.nn.NoTag", "shortDescription" : "", "object" : "lamp\/nn\/NoTag$.html", "members_object" : [{"label" : "leaf", "tail" : "(): PTag", "member" : "lamp.nn.LeafTag.leaf", "link" : "lamp\/nn\/NoTag$.html#leaf:lamp.nn.PTag", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/NoTag$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/NoTag$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/NoTag$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/NoTag$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/NoTag$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/NoTag$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/NoTag$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/NoTag$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/NoTag$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/NoTag$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/NoTag$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/NoTag$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/NoTag$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/NoTag$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/NoTag$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/NoTag$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/NoTag$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "lamp.nn.Optimizer", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/Optimizer.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/Optimizer.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/Optimizer.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/Optimizer.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/Optimizer.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/Optimizer.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/Optimizer.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Optimizer.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Optimizer.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Optimizer.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/Optimizer.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/Optimizer.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/Optimizer.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/Optimizer.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/Optimizer.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/Optimizer.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/Optimizer.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/Optimizer.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/Optimizer.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "release", "tail" : "(): Unit", "member" : "lamp.nn.Optimizer.release", "link" : "lamp\/nn\/Optimizer.html#release():Unit", "kind" : "abstract def"}, {"label" : "step", "tail" : "(gradients: Seq[Option[STen]], scheduleFactor: Double): Unit", "member" : "lamp.nn.Optimizer.step", "link" : "lamp\/nn\/Optimizer.html#step(gradients:Seq[Option[lamp.STen]],scheduleFactor:Double):Unit", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "lamp\/nn\/Optimizer.html", "kind" : "trait"}, {"name" : "lamp.nn.OptimizerHyperparameter", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/OptimizerHyperparameter.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/OptimizerHyperparameter.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/OptimizerHyperparameter.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/OptimizerHyperparameter.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/OptimizerHyperparameter.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/OptimizerHyperparameter.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/OptimizerHyperparameter.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/OptimizerHyperparameter.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/OptimizerHyperparameter.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/OptimizerHyperparameter.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/OptimizerHyperparameter.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/OptimizerHyperparameter.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/OptimizerHyperparameter.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/OptimizerHyperparameter.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/OptimizerHyperparameter.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/OptimizerHyperparameter.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/OptimizerHyperparameter.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/OptimizerHyperparameter.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/OptimizerHyperparameter.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "apply", "tail" : "(ptag: PTag): Double", "member" : "lamp.nn.OptimizerHyperparameter.apply", "link" : "lamp\/nn\/OptimizerHyperparameter.html#apply(ptag:lamp.nn.PTag):Double", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "lamp\/nn\/OptimizerHyperparameter.html", "kind" : "trait"}, {"name" : "lamp.nn.Passthrough", "shortDescription" : "", "object" : "lamp\/nn\/Passthrough$.html", "members_object" : [{"label" : "load", "tail" : "(arg0: Load[M]): Load[Passthrough[M]]", "member" : "lamp.nn.Passthrough.load", "link" : "lamp\/nn\/Passthrough$.html#load[M<:lamp.nn.Module](implicitevidence$3:lamp.nn.Load[M]):lamp.nn.Load[lamp.nn.Passthrough[M]]", "kind" : "implicit def"}, {"label" : "trainingMode", "tail" : "(arg0: TrainingMode[M]): TrainingMode[Passthrough[M]]", "member" : "lamp.nn.Passthrough.trainingMode", "link" : "lamp\/nn\/Passthrough$.html#trainingMode[M<:lamp.nn.Module](implicitevidence$2:lamp.nn.TrainingMode[M]):lamp.nn.TrainingMode[lamp.nn.Passthrough[M]]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/Passthrough$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/Passthrough$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/Passthrough$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/Passthrough$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/Passthrough$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/Passthrough$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/Passthrough$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Passthrough$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Passthrough$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Passthrough$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/Passthrough$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/Passthrough$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/Passthrough$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/Passthrough$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/Passthrough$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/Passthrough$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/Passthrough$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/Passthrough$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/Passthrough$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "forward", "tail" : "(x: (Variable, Variable))(arg0: Sc[S]): (Variable, Variable)", "member" : "lamp.nn.Passthrough.forward", "link" : "lamp\/nn\/Passthrough.html#forward[S](x:(lamp.autograd.Variable,lamp.autograd.Variable))(implicitevidence$1:lamp.Sc[S]):(lamp.autograd.Variable,lamp.autograd.Variable)", "kind" : "def"}, {"label" : "state", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.Passthrough.state", "link" : "lamp\/nn\/Passthrough.html#state:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "def"}, {"member" : "lamp.nn.Passthrough#<init>", "error" : "unsupported entity"}, {"label" : "m", "tail" : ": M with Module", "member" : "lamp.nn.Passthrough.m", "link" : "lamp\/nn\/Passthrough.html#m:Mwithlamp.nn.Module", "kind" : "val"}, {"label" : "learnableParameters", "tail" : "(): Long", "member" : "lamp.nn.GenericModule.learnableParameters", "link" : "lamp\/nn\/Passthrough.html#learnableParameters:Long", "kind" : "final def"}, {"label" : "gradients", "tail" : "(loss: Variable, zeroGrad: Boolean): Seq[Option[STen]]", "member" : "lamp.nn.GenericModule.gradients", "link" : "lamp\/nn\/Passthrough.html#gradients(loss:lamp.autograd.Variable,zeroGrad:Boolean):Seq[Option[lamp.STen]]", "kind" : "final def"}, {"label" : "parameters", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.GenericModule.parameters", "link" : "lamp\/nn\/Passthrough.html#parameters:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "final def"}, {"label" : "apply", "tail" : "(a: (Variable, Variable))(arg0: Sc[S]): (Variable, Variable)", "member" : "lamp.nn.GenericModule.apply", "link" : "lamp\/nn\/Passthrough.html#apply[S](a:A)(implicitevidence$17:lamp.Sc[S]):B", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/Passthrough.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/Passthrough.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/Passthrough.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/Passthrough.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/Passthrough.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/Passthrough.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/Passthrough.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Passthrough.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Passthrough.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Passthrough.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/Passthrough.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/Passthrough.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/Passthrough.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/Passthrough.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/Passthrough.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/Passthrough.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/nn\/Passthrough.html", "kind" : "case class"}, {"name" : "lamp.nn.PTag", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/PTag.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/PTag.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/PTag.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/PTag.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/PTag.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/PTag.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/PTag.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/PTag.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/PTag.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/PTag.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/PTag.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/PTag.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/PTag.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/PTag.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/PTag.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/PTag.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/PTag.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/PTag.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/PTag.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "leaf", "tail" : "(): PTag", "member" : "lamp.nn.PTag.leaf", "link" : "lamp\/nn\/PTag.html#leaf:lamp.nn.PTag", "kind" : "abstract def"}], "shortDescription" : "", "object" : "lamp\/nn\/PTag$.html", "members_object" : [{"label" : "isMovable", "tail" : "(): Movable[PTag] { def list(t: lamp.nn.PTag): scala.collection.immutable.Nil.type }", "member" : "lamp.nn.PTag.isMovable", "link" : "lamp\/nn\/PTag$.html#isMovable:lamp.Movable[lamp.nn.PTag]{deflist(t:lamp.nn.PTag):scala.collection.immutable.Nil.type}", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/PTag$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/PTag$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/PTag$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/PTag$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/PTag$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/PTag$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/PTag$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/PTag$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/PTag$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/PTag$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/PTag$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/PTag$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/PTag$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/PTag$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/PTag$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/PTag$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/PTag$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/PTag$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/PTag$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "lamp\/nn\/PTag.html", "kind" : "trait"}, {"name" : "lamp.nn.ResidualModule", "shortDescription" : "", "object" : "lamp\/nn\/ResidualModule$.html", "members_object" : [{"label" : "load", "tail" : "(arg0: Load[M]): Load[ResidualModule[M]]", "member" : "lamp.nn.ResidualModule.load", "link" : "lamp\/nn\/ResidualModule$.html#load[M<:lamp.nn.Module](implicitevidence$3:lamp.nn.Load[M]):lamp.nn.Load[lamp.nn.ResidualModule[M]]", "kind" : "implicit def"}, {"label" : "trainingMode", "tail" : "(arg0: TrainingMode[M]): TrainingMode[ResidualModule[M]]", "member" : "lamp.nn.ResidualModule.trainingMode", "link" : "lamp\/nn\/ResidualModule$.html#trainingMode[M<:lamp.nn.Module](implicitevidence$2:lamp.nn.TrainingMode[M]):lamp.nn.TrainingMode[lamp.nn.ResidualModule[M]]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/ResidualModule$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/ResidualModule$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/ResidualModule$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/ResidualModule$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/ResidualModule$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/ResidualModule$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/ResidualModule$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/ResidualModule$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/ResidualModule$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/ResidualModule$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/ResidualModule$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/ResidualModule$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/ResidualModule$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/ResidualModule$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/ResidualModule$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/ResidualModule$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/ResidualModule$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/ResidualModule$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/ResidualModule$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "forward", "tail" : "(x: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.nn.ResidualModule.forward", "link" : "lamp\/nn\/ResidualModule.html#forward[S](x:lamp.autograd.Variable)(implicitevidence$1:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "state", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.ResidualModule.state", "link" : "lamp\/nn\/ResidualModule.html#state:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "def"}, {"member" : "lamp.nn.ResidualModule#<init>", "error" : "unsupported entity"}, {"label" : "transform", "tail" : ": M with Module", "member" : "lamp.nn.ResidualModule.transform", "link" : "lamp\/nn\/ResidualModule.html#transform:Mwithlamp.nn.Module", "kind" : "val"}, {"label" : "learnableParameters", "tail" : "(): Long", "member" : "lamp.nn.GenericModule.learnableParameters", "link" : "lamp\/nn\/ResidualModule.html#learnableParameters:Long", "kind" : "final def"}, {"label" : "gradients", "tail" : "(loss: Variable, zeroGrad: Boolean): Seq[Option[STen]]", "member" : "lamp.nn.GenericModule.gradients", "link" : "lamp\/nn\/ResidualModule.html#gradients(loss:lamp.autograd.Variable,zeroGrad:Boolean):Seq[Option[lamp.STen]]", "kind" : "final def"}, {"label" : "parameters", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.GenericModule.parameters", "link" : "lamp\/nn\/ResidualModule.html#parameters:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "final def"}, {"label" : "apply", "tail" : "(a: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.nn.GenericModule.apply", "link" : "lamp\/nn\/ResidualModule.html#apply[S](a:A)(implicitevidence$17:lamp.Sc[S]):B", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/ResidualModule.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/ResidualModule.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/ResidualModule.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/ResidualModule.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/ResidualModule.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/ResidualModule.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/ResidualModule.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/ResidualModule.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/ResidualModule.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/ResidualModule.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/ResidualModule.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/ResidualModule.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/ResidualModule.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/ResidualModule.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/ResidualModule.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/ResidualModule.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/nn\/ResidualModule.html", "kind" : "case class"}, {"name" : "lamp.nn.RNN", "shortDescription" : "Inputs of size (sequence length * batch * in dim)Outputs of size (sequence length * batch * hidden dim)", "object" : "lamp\/nn\/RNN$.html", "members_object" : [{"label" : "apply", "tail" : "(in: Int, hiddenSize: Int, tOpt: TensorOptions)(arg0: Sc[S]): RNN", "member" : "lamp.nn.RNN.apply", "link" : "lamp\/nn\/RNN$.html#apply[S](in:Int,hiddenSize:Int,tOpt:aten.TensorOptions)(implicitevidence$4:lamp.Sc[S]):lamp.nn.RNN", "kind" : "def"}, {"label" : "BiasH", "tail" : "", "member" : "lamp.nn.RNN.BiasH", "link" : "lamp\/nn\/RNN$.html#BiasH", "kind" : "object"}, {"label" : "WeightHh", "tail" : "", "member" : "lamp.nn.RNN.WeightHh", "link" : "lamp\/nn\/RNN$.html#WeightHh", "kind" : "object"}, {"label" : "WeightXh", "tail" : "", "member" : "lamp.nn.RNN.WeightXh", "link" : "lamp\/nn\/RNN$.html#WeightXh", "kind" : "object"}, {"label" : "load", "tail" : ": Load[RNN]", "member" : "lamp.nn.RNN.load", "link" : "lamp\/nn\/RNN$.html#load:lamp.nn.Load[lamp.nn.RNN]", "kind" : "implicit val"}, {"label" : "is", "tail" : ": InitState[RNN, Option[Variable]]", "member" : "lamp.nn.RNN.is", "link" : "lamp\/nn\/RNN$.html#is:lamp.nn.InitState[lamp.nn.RNN,Option[lamp.autograd.Variable]]", "kind" : "implicit val"}, {"label" : "trainingMode", "tail" : ": TrainingMode[RNN]", "member" : "lamp.nn.RNN.trainingMode", "link" : "lamp\/nn\/RNN$.html#trainingMode:lamp.nn.TrainingMode[lamp.nn.RNN]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/RNN$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/RNN$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/RNN$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/RNN$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/RNN$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/RNN$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/RNN$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/RNN$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/RNN$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/RNN$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/RNN$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/RNN$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/RNN$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/RNN$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/RNN$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/RNN$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/RNN$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/RNN$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/RNN$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "forward1", "tail" : "(x: Variable, state: Option[Variable])(arg0: Sc[S]): (Variable, Some[Variable])", "member" : "lamp.nn.RNN.forward1", "link" : "lamp\/nn\/RNN.html#forward1[S](x:lamp.autograd.Variable,state:Option[lamp.autograd.Variable])(implicitevidence$3:lamp.Sc[S]):(lamp.autograd.Variable,Some[lamp.autograd.Variable])", "kind" : "def"}, {"label" : "forward", "tail" : "(a: (Variable, Option[Variable]))(arg0: Sc[S]): (Variable, Some[Variable])", "member" : "lamp.nn.RNN.forward", "link" : "lamp\/nn\/RNN.html#forward[S](a:(lamp.autograd.Variable,Option[lamp.autograd.Variable]))(implicitevidence$2:lamp.Sc[S]):(lamp.autograd.Variable,Some[lamp.autograd.Variable])", "kind" : "def"}, {"label" : "state", "tail" : "(): List[(Constant, LeafTag with Product with Serializable)]", "member" : "lamp.nn.RNN.state", "link" : "lamp\/nn\/RNN.html#state:List[(lamp.autograd.Constant,lamp.nn.LeafTagwithProductwithSerializable)]", "kind" : "def"}, {"label" : "hiddenSize", "tail" : ": Long", "member" : "lamp.nn.RNN.hiddenSize", "link" : "lamp\/nn\/RNN.html#hiddenSize:Long", "kind" : "val"}, {"label" : "inputSize", "tail" : ": Long", "member" : "lamp.nn.RNN.inputSize", "link" : "lamp\/nn\/RNN.html#inputSize:Long", "kind" : "val"}, {"member" : "lamp.nn.RNN#<init>", "error" : "unsupported entity"}, {"label" : "biasH", "tail" : ": Constant", "member" : "lamp.nn.RNN.biasH", "link" : "lamp\/nn\/RNN.html#biasH:lamp.autograd.Constant", "kind" : "val"}, {"label" : "weightHh", "tail" : ": Constant", "member" : "lamp.nn.RNN.weightHh", "link" : "lamp\/nn\/RNN.html#weightHh:lamp.autograd.Constant", "kind" : "val"}, {"label" : "weightXh", "tail" : ": Constant", "member" : "lamp.nn.RNN.weightXh", "link" : "lamp\/nn\/RNN.html#weightXh:lamp.autograd.Constant", "kind" : "val"}, {"label" : "learnableParameters", "tail" : "(): Long", "member" : "lamp.nn.GenericModule.learnableParameters", "link" : "lamp\/nn\/RNN.html#learnableParameters:Long", "kind" : "final def"}, {"label" : "gradients", "tail" : "(loss: Variable, zeroGrad: Boolean): Seq[Option[STen]]", "member" : "lamp.nn.GenericModule.gradients", "link" : "lamp\/nn\/RNN.html#gradients(loss:lamp.autograd.Variable,zeroGrad:Boolean):Seq[Option[lamp.STen]]", "kind" : "final def"}, {"label" : "parameters", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.GenericModule.parameters", "link" : "lamp\/nn\/RNN.html#parameters:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "final def"}, {"label" : "apply", "tail" : "(a: (Variable, Option[Variable]))(arg0: Sc[S]): (Variable, Option[Variable])", "member" : "lamp.nn.GenericModule.apply", "link" : "lamp\/nn\/RNN.html#apply[S](a:A)(implicitevidence$17:lamp.Sc[S]):B", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/RNN.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/RNN.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/RNN.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/RNN.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/RNN.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/RNN.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/RNN.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/RNN.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/RNN.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/RNN.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/RNN.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/RNN.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/RNN.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/RNN.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/RNN.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/RNN.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/nn\/RNN.html", "kind" : "case class"}, {"name" : "lamp.nn.Seq2", "shortDescription" : "", "object" : "lamp\/nn\/Seq2$.html", "members_object" : [{"label" : "load", "tail" : "(arg0: Load[M1], arg1: Load[M2]): Load[Seq2[T1, T2, T3, M1, M2]]", "member" : "lamp.nn.Seq2.load", "link" : "lamp\/nn\/Seq2$.html#load[T1,T2,T3,S1,S2,M1<:lamp.nn.GenericModule[T1,T2],M2<:lamp.nn.GenericModule[T2,T3]](implicitevidence$4:lamp.nn.Load[M1],implicitevidence$5:lamp.nn.Load[M2]):lamp.nn.Load[lamp.nn.Seq2[T1,T2,T3,M1,M2]]", "kind" : "implicit def"}, {"label" : "trainingMode", "tail" : "(arg0: TrainingMode[M1], arg1: TrainingMode[M2]): TrainingMode[Seq2[T1, T2, T3, M1, M2]]", "member" : "lamp.nn.Seq2.trainingMode", "link" : "lamp\/nn\/Seq2$.html#trainingMode[T1,T2,T3,S1,S2,M1<:lamp.nn.GenericModule[T1,T2],M2<:lamp.nn.GenericModule[T2,T3]](implicitevidence$2:lamp.nn.TrainingMode[M1],implicitevidence$3:lamp.nn.TrainingMode[M2]):lamp.nn.TrainingMode[lamp.nn.Seq2[T1,T2,T3,M1,M2]]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/Seq2$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/Seq2$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/Seq2$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/Seq2$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/Seq2$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/Seq2$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/Seq2$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Seq2$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Seq2$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Seq2$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/Seq2$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/Seq2$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/Seq2$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/Seq2$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/Seq2$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/Seq2$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/Seq2$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/Seq2$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/Seq2$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "forward", "tail" : "(x: T1)(arg0: Sc[S]): T3", "member" : "lamp.nn.Seq2.forward", "link" : "lamp\/nn\/Seq2.html#forward[S](x:T1)(implicitevidence$1:lamp.Sc[S]):T3", "kind" : "def"}, {"label" : "state", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.Seq2.state", "link" : "lamp\/nn\/Seq2.html#state:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "def"}, {"member" : "lamp.nn.Seq2#<init>", "error" : "unsupported entity"}, {"label" : "m2", "tail" : ": M2 with GenericModule[T2, T3]", "member" : "lamp.nn.Seq2.m2", "link" : "lamp\/nn\/Seq2.html#m2:M2withlamp.nn.GenericModule[T2,T3]", "kind" : "val"}, {"label" : "m1", "tail" : ": M1 with GenericModule[T1, T2]", "member" : "lamp.nn.Seq2.m1", "link" : "lamp\/nn\/Seq2.html#m1:M1withlamp.nn.GenericModule[T1,T2]", "kind" : "val"}, {"label" : "learnableParameters", "tail" : "(): Long", "member" : "lamp.nn.GenericModule.learnableParameters", "link" : "lamp\/nn\/Seq2.html#learnableParameters:Long", "kind" : "final def"}, {"label" : "gradients", "tail" : "(loss: Variable, zeroGrad: Boolean): Seq[Option[STen]]", "member" : "lamp.nn.GenericModule.gradients", "link" : "lamp\/nn\/Seq2.html#gradients(loss:lamp.autograd.Variable,zeroGrad:Boolean):Seq[Option[lamp.STen]]", "kind" : "final def"}, {"label" : "parameters", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.GenericModule.parameters", "link" : "lamp\/nn\/Seq2.html#parameters:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "final def"}, {"label" : "apply", "tail" : "(a: T1)(arg0: Sc[S]): T3", "member" : "lamp.nn.GenericModule.apply", "link" : "lamp\/nn\/Seq2.html#apply[S](a:A)(implicitevidence$17:lamp.Sc[S]):B", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/Seq2.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/Seq2.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/Seq2.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/Seq2.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/Seq2.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/Seq2.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/Seq2.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Seq2.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Seq2.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Seq2.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/Seq2.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/Seq2.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/Seq2.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/Seq2.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/Seq2.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/Seq2.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/nn\/Seq2.html", "kind" : "case class"}, {"name" : "lamp.nn.Seq2Seq", "shortDescription" : "", "object" : "lamp\/nn\/Seq2Seq$.html", "members_object" : [{"label" : "initState", "tail" : "(is: InitState[M1, S0]): InitState[Seq2Seq[S0, S1, M1, M2], S0]", "member" : "lamp.nn.Seq2Seq.initState", "link" : "lamp\/nn\/Seq2Seq$.html#initState[S0,S1,M1<:lamp.nn.StatefulModule2[lamp.autograd.Variable,lamp.autograd.Variable,S0,S1],M2<:lamp.nn.StatefulModule[lamp.autograd.Variable,lamp.autograd.Variable,S1]](implicitis:lamp.nn.InitState[M1,S0]):lamp.nn.InitState[lamp.nn.Seq2Seq[S0,S1,M1,M2],S0]", "kind" : "implicit def"}, {"label" : "load", "tail" : "(arg0: Load[M1], arg1: Load[M2]): Load[Seq2Seq[S0, S1, M1, M2]]", "member" : "lamp.nn.Seq2Seq.load", "link" : "lamp\/nn\/Seq2Seq$.html#load[S0,S1,M1<:lamp.nn.StatefulModule2[lamp.autograd.Variable,lamp.autograd.Variable,S0,S1],M2<:lamp.nn.StatefulModule[lamp.autograd.Variable,lamp.autograd.Variable,S1]](implicitevidence$4:lamp.nn.Load[M1],implicitevidence$5:lamp.nn.Load[M2]):lamp.nn.Load[lamp.nn.Seq2Seq[S0,S1,M1,M2]]", "kind" : "implicit def"}, {"label" : "trainingMode", "tail" : "(arg0: TrainingMode[M1], arg1: TrainingMode[M2]): TrainingMode[Seq2Seq[S0, S1, M1, M2]]", "member" : "lamp.nn.Seq2Seq.trainingMode", "link" : "lamp\/nn\/Seq2Seq$.html#trainingMode[S0,S1,M1<:lamp.nn.StatefulModule2[lamp.autograd.Variable,lamp.autograd.Variable,S0,S1],M2<:lamp.nn.StatefulModule[lamp.autograd.Variable,lamp.autograd.Variable,S1]](implicitevidence$2:lamp.nn.TrainingMode[M1],implicitevidence$3:lamp.nn.TrainingMode[M2]):lamp.nn.TrainingMode[lamp.nn.Seq2Seq[S0,S1,M1,M2]]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/Seq2Seq$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/Seq2Seq$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/Seq2Seq$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/Seq2Seq$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/Seq2Seq$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/Seq2Seq$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/Seq2Seq$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Seq2Seq$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Seq2Seq$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Seq2Seq$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/Seq2Seq$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/Seq2Seq$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/Seq2Seq$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/Seq2Seq$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/Seq2Seq$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/Seq2Seq$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/Seq2Seq$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/Seq2Seq$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/Seq2Seq$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "state", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.Seq2Seq.state", "link" : "lamp\/nn\/Seq2Seq.html#state:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "def"}, {"label" : "forward", "tail" : "(x: ((Variable, Variable), S0))(arg0: Sc[S]): (Variable, S1)", "member" : "lamp.nn.Seq2Seq.forward", "link" : "lamp\/nn\/Seq2Seq.html#forward[S](x:((lamp.autograd.Variable,lamp.autograd.Variable),S0))(implicitevidence$1:lamp.Sc[S]):(lamp.autograd.Variable,S1)", "kind" : "def"}, {"member" : "lamp.nn.Seq2Seq#<init>", "error" : "unsupported entity"}, {"label" : "decoder", "tail" : ": M2 with StatefulModule[Variable, Variable, S1]", "member" : "lamp.nn.Seq2Seq.decoder", "link" : "lamp\/nn\/Seq2Seq.html#decoder:M2withlamp.nn.StatefulModule[lamp.autograd.Variable,lamp.autograd.Variable,S1]", "kind" : "val"}, {"label" : "encoder", "tail" : ": M1 with StatefulModule2[Variable, Variable, S0, S1]", "member" : "lamp.nn.Seq2Seq.encoder", "link" : "lamp\/nn\/Seq2Seq.html#encoder:M1withlamp.nn.StatefulModule2[lamp.autograd.Variable,lamp.autograd.Variable,S0,S1]", "kind" : "val"}, {"label" : "learnableParameters", "tail" : "(): Long", "member" : "lamp.nn.GenericModule.learnableParameters", "link" : "lamp\/nn\/Seq2Seq.html#learnableParameters:Long", "kind" : "final def"}, {"label" : "gradients", "tail" : "(loss: Variable, zeroGrad: Boolean): Seq[Option[STen]]", "member" : "lamp.nn.GenericModule.gradients", "link" : "lamp\/nn\/Seq2Seq.html#gradients(loss:lamp.autograd.Variable,zeroGrad:Boolean):Seq[Option[lamp.STen]]", "kind" : "final def"}, {"label" : "parameters", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.GenericModule.parameters", "link" : "lamp\/nn\/Seq2Seq.html#parameters:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "final def"}, {"label" : "apply", "tail" : "(a: ((Variable, Variable), S0))(arg0: Sc[S]): (Variable, S1)", "member" : "lamp.nn.GenericModule.apply", "link" : "lamp\/nn\/Seq2Seq.html#apply[S](a:A)(implicitevidence$17:lamp.Sc[S]):B", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/Seq2Seq.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/Seq2Seq.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/Seq2Seq.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/Seq2Seq.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/Seq2Seq.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/Seq2Seq.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/Seq2Seq.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Seq2Seq.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Seq2Seq.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Seq2Seq.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/Seq2Seq.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/Seq2Seq.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/Seq2Seq.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/Seq2Seq.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/Seq2Seq.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/Seq2Seq.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/nn\/Seq2Seq.html", "kind" : "case class"}, {"name" : "lamp.nn.Seq2SeqWithAttention", "shortDescription" : "", "object" : "lamp\/nn\/Seq2SeqWithAttention$.html", "members_object" : [{"label" : "initState", "tail" : "(arg0: TrainingMode[M0], is: InitState[M1, S0]): InitState[Seq2SeqWithAttention[S0, S1, M0, M1, M2], S0]", "member" : "lamp.nn.Seq2SeqWithAttention.initState", "link" : "lamp\/nn\/Seq2SeqWithAttention$.html#initState[S0,S1,M0<:lamp.nn.Module,M1<:lamp.nn.StatefulModule2[lamp.autograd.Variable,lamp.autograd.Variable,S0,S1],M2<:lamp.nn.StatefulModule[lamp.autograd.Variable,lamp.autograd.Variable,S1]](implicitevidence$9:lamp.nn.TrainingMode[M0],implicitis:lamp.nn.InitState[M1,S0]):lamp.nn.InitState[lamp.nn.Seq2SeqWithAttention[S0,S1,M0,M1,M2],S0]", "kind" : "implicit def"}, {"label" : "load", "tail" : "(arg0: TrainingMode[M0], arg1: Load[M0], arg2: Load[M1], arg3: Load[M2]): Load[Seq2SeqWithAttention[S0, S1, M0, M1, M2]]", "member" : "lamp.nn.Seq2SeqWithAttention.load", "link" : "lamp\/nn\/Seq2SeqWithAttention$.html#load[S0,S1,M0<:lamp.nn.Module,M1<:lamp.nn.StatefulModule2[lamp.autograd.Variable,lamp.autograd.Variable,S0,S1],M2<:lamp.nn.StatefulModule[lamp.autograd.Variable,lamp.autograd.Variable,S1]](implicitevidence$5:lamp.nn.TrainingMode[M0],implicitevidence$6:lamp.nn.Load[M0],implicitevidence$7:lamp.nn.Load[M1],implicitevidence$8:lamp.nn.Load[M2]):lamp.nn.Load[lamp.nn.Seq2SeqWithAttention[S0,S1,M0,M1,M2]]", "kind" : "implicit def"}, {"label" : "trainingMode", "tail" : "(arg0: TrainingMode[M0], arg1: TrainingMode[M1], arg2: TrainingMode[M2]): TrainingMode[Seq2SeqWithAttention[S0, S1, M0, M1, M2]]", "member" : "lamp.nn.Seq2SeqWithAttention.trainingMode", "link" : "lamp\/nn\/Seq2SeqWithAttention$.html#trainingMode[S0,S1,M0<:lamp.nn.Module,M1<:lamp.nn.StatefulModule2[lamp.autograd.Variable,lamp.autograd.Variable,S0,S1],M2<:lamp.nn.StatefulModule[lamp.autograd.Variable,lamp.autograd.Variable,S1]](implicitevidence$2:lamp.nn.TrainingMode[M0],implicitevidence$3:lamp.nn.TrainingMode[M1],implicitevidence$4:lamp.nn.TrainingMode[M2]):lamp.nn.TrainingMode[lamp.nn.Seq2SeqWithAttention[S0,S1,M0,M1,M2]]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/Seq2SeqWithAttention$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/Seq2SeqWithAttention$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/Seq2SeqWithAttention$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/Seq2SeqWithAttention$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/Seq2SeqWithAttention$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/Seq2SeqWithAttention$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/Seq2SeqWithAttention$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Seq2SeqWithAttention$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Seq2SeqWithAttention$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Seq2SeqWithAttention$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/Seq2SeqWithAttention$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/Seq2SeqWithAttention$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/Seq2SeqWithAttention$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/Seq2SeqWithAttention$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/Seq2SeqWithAttention$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/Seq2SeqWithAttention$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/Seq2SeqWithAttention$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/Seq2SeqWithAttention$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/Seq2SeqWithAttention$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "state", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.Seq2SeqWithAttention.state", "link" : "lamp\/nn\/Seq2SeqWithAttention.html#state:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "def"}, {"label" : "forward", "tail" : "(x: ((Variable, Variable), S0))(arg0: Sc[S]): (Variable, S1)", "member" : "lamp.nn.Seq2SeqWithAttention.forward", "link" : "lamp\/nn\/Seq2SeqWithAttention.html#forward[S](x:((lamp.autograd.Variable,lamp.autograd.Variable),S0))(implicitevidence$1:lamp.Sc[S]):(lamp.autograd.Variable,S1)", "kind" : "def"}, {"label" : "attentionDecoder", "tail" : "(keyValue: Variable, source: Variable): AttentionDecoder[S1, M2 with StatefulModule[Variable, Variable, S1], M0 with Module]", "member" : "lamp.nn.Seq2SeqWithAttention.attentionDecoder", "link" : "lamp\/nn\/Seq2SeqWithAttention.html#attentionDecoder(keyValue:lamp.autograd.Variable,source:lamp.autograd.Variable):lamp.nn.AttentionDecoder[S1,M2withlamp.nn.StatefulModule[lamp.autograd.Variable,lamp.autograd.Variable,S1],M0withlamp.nn.Module]", "kind" : "def"}, {"member" : "lamp.nn.Seq2SeqWithAttention#<init>", "error" : "unsupported entity"}, {"label" : "stateToKey", "tail" : ": (S1) ⇒ Variable", "member" : "lamp.nn.Seq2SeqWithAttention.stateToKey", "link" : "lamp\/nn\/Seq2SeqWithAttention.html#stateToKey:S1=>lamp.autograd.Variable", "kind" : "val"}, {"label" : "padToken", "tail" : ": Long", "member" : "lamp.nn.Seq2SeqWithAttention.padToken", "link" : "lamp\/nn\/Seq2SeqWithAttention.html#padToken:Long", "kind" : "val"}, {"label" : "decoder", "tail" : ": M2 with StatefulModule[Variable, Variable, S1]", "member" : "lamp.nn.Seq2SeqWithAttention.decoder", "link" : "lamp\/nn\/Seq2SeqWithAttention.html#decoder:M2withlamp.nn.StatefulModule[lamp.autograd.Variable,lamp.autograd.Variable,S1]", "kind" : "val"}, {"label" : "encoder", "tail" : ": M1 with StatefulModule2[Variable, Variable, S0, S1]", "member" : "lamp.nn.Seq2SeqWithAttention.encoder", "link" : "lamp\/nn\/Seq2SeqWithAttention.html#encoder:M1withlamp.nn.StatefulModule2[lamp.autograd.Variable,lamp.autograd.Variable,S0,S1]", "kind" : "val"}, {"label" : "destinationEmbedding", "tail" : ": M0 with Module", "member" : "lamp.nn.Seq2SeqWithAttention.destinationEmbedding", "link" : "lamp\/nn\/Seq2SeqWithAttention.html#destinationEmbedding:M0withlamp.nn.Module", "kind" : "val"}, {"label" : "learnableParameters", "tail" : "(): Long", "member" : "lamp.nn.GenericModule.learnableParameters", "link" : "lamp\/nn\/Seq2SeqWithAttention.html#learnableParameters:Long", "kind" : "final def"}, {"label" : "gradients", "tail" : "(loss: Variable, zeroGrad: Boolean): Seq[Option[STen]]", "member" : "lamp.nn.GenericModule.gradients", "link" : "lamp\/nn\/Seq2SeqWithAttention.html#gradients(loss:lamp.autograd.Variable,zeroGrad:Boolean):Seq[Option[lamp.STen]]", "kind" : "final def"}, {"label" : "parameters", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.GenericModule.parameters", "link" : "lamp\/nn\/Seq2SeqWithAttention.html#parameters:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "final def"}, {"label" : "apply", "tail" : "(a: ((Variable, Variable), S0))(arg0: Sc[S]): (Variable, S1)", "member" : "lamp.nn.GenericModule.apply", "link" : "lamp\/nn\/Seq2SeqWithAttention.html#apply[S](a:A)(implicitevidence$17:lamp.Sc[S]):B", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/Seq2SeqWithAttention.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/Seq2SeqWithAttention.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/Seq2SeqWithAttention.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/Seq2SeqWithAttention.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/Seq2SeqWithAttention.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/Seq2SeqWithAttention.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/Seq2SeqWithAttention.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Seq2SeqWithAttention.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Seq2SeqWithAttention.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Seq2SeqWithAttention.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/Seq2SeqWithAttention.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/Seq2SeqWithAttention.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/Seq2SeqWithAttention.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/Seq2SeqWithAttention.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/Seq2SeqWithAttention.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/Seq2SeqWithAttention.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/nn\/Seq2SeqWithAttention.html", "kind" : "case class"}, {"name" : "lamp.nn.Seq3", "shortDescription" : "", "object" : "lamp\/nn\/Seq3$.html", "members_object" : [{"label" : "load", "tail" : "(arg0: Load[M1], arg1: Load[M2], arg2: Load[M3]): Load[Seq3[T1, T2, T3, T4, M1, M2, M3]]", "member" : "lamp.nn.Seq3.load", "link" : "lamp\/nn\/Seq3$.html#load[T1,T2,T3,T4,M1<:lamp.nn.GenericModule[T1,T2],M2<:lamp.nn.GenericModule[T2,T3],M3<:lamp.nn.GenericModule[T3,T4]](implicitevidence$10:lamp.nn.Load[M1],implicitevidence$11:lamp.nn.Load[M2],implicitevidence$12:lamp.nn.Load[M3]):lamp.nn.Load[lamp.nn.Seq3[T1,T2,T3,T4,M1,M2,M3]]", "kind" : "implicit def"}, {"label" : "trainingMode", "tail" : "(arg0: TrainingMode[M1], arg1: TrainingMode[M2], arg2: TrainingMode[M3]): TrainingMode[Seq3[T1, T2, T3, T4, M1, M2, M3]]", "member" : "lamp.nn.Seq3.trainingMode", "link" : "lamp\/nn\/Seq3$.html#trainingMode[T1,T2,T3,T4,M1<:lamp.nn.GenericModule[T1,T2],M2<:lamp.nn.GenericModule[T2,T3],M3<:lamp.nn.GenericModule[T3,T4]](implicitevidence$7:lamp.nn.TrainingMode[M1],implicitevidence$8:lamp.nn.TrainingMode[M2],implicitevidence$9:lamp.nn.TrainingMode[M3]):lamp.nn.TrainingMode[lamp.nn.Seq3[T1,T2,T3,T4,M1,M2,M3]]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/Seq3$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/Seq3$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/Seq3$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/Seq3$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/Seq3$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/Seq3$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/Seq3$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Seq3$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Seq3$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Seq3$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/Seq3$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/Seq3$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/Seq3$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/Seq3$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/Seq3$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/Seq3$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/Seq3$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/Seq3$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/Seq3$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "forward", "tail" : "(x: T1)(arg0: Sc[S]): T4", "member" : "lamp.nn.Seq3.forward", "link" : "lamp\/nn\/Seq3.html#forward[S](x:T1)(implicitevidence$6:lamp.Sc[S]):T4", "kind" : "def"}, {"label" : "state", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.Seq3.state", "link" : "lamp\/nn\/Seq3.html#state:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "def"}, {"member" : "lamp.nn.Seq3#<init>", "error" : "unsupported entity"}, {"label" : "m3", "tail" : ": M3 with GenericModule[T3, T4]", "member" : "lamp.nn.Seq3.m3", "link" : "lamp\/nn\/Seq3.html#m3:M3withlamp.nn.GenericModule[T3,T4]", "kind" : "val"}, {"label" : "m2", "tail" : ": M2 with GenericModule[T2, T3]", "member" : "lamp.nn.Seq3.m2", "link" : "lamp\/nn\/Seq3.html#m2:M2withlamp.nn.GenericModule[T2,T3]", "kind" : "val"}, {"label" : "m1", "tail" : ": M1 with GenericModule[T1, T2]", "member" : "lamp.nn.Seq3.m1", "link" : "lamp\/nn\/Seq3.html#m1:M1withlamp.nn.GenericModule[T1,T2]", "kind" : "val"}, {"label" : "learnableParameters", "tail" : "(): Long", "member" : "lamp.nn.GenericModule.learnableParameters", "link" : "lamp\/nn\/Seq3.html#learnableParameters:Long", "kind" : "final def"}, {"label" : "gradients", "tail" : "(loss: Variable, zeroGrad: Boolean): Seq[Option[STen]]", "member" : "lamp.nn.GenericModule.gradients", "link" : "lamp\/nn\/Seq3.html#gradients(loss:lamp.autograd.Variable,zeroGrad:Boolean):Seq[Option[lamp.STen]]", "kind" : "final def"}, {"label" : "parameters", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.GenericModule.parameters", "link" : "lamp\/nn\/Seq3.html#parameters:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "final def"}, {"label" : "apply", "tail" : "(a: T1)(arg0: Sc[S]): T4", "member" : "lamp.nn.GenericModule.apply", "link" : "lamp\/nn\/Seq3.html#apply[S](a:A)(implicitevidence$17:lamp.Sc[S]):B", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/Seq3.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/Seq3.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/Seq3.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/Seq3.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/Seq3.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/Seq3.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/Seq3.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Seq3.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Seq3.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Seq3.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/Seq3.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/Seq3.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/Seq3.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/Seq3.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/Seq3.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/Seq3.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/nn\/Seq3.html", "kind" : "case class"}, {"name" : "lamp.nn.Seq4", "shortDescription" : "", "object" : "lamp\/nn\/Seq4$.html", "members_object" : [{"label" : "load", "tail" : "(arg0: Load[M1], arg1: Load[M2], arg2: Load[M3], arg3: Load[M4]): Load[Seq4[T1, T2, T3, T4, T5, M1, M2, M3, M4]]", "member" : "lamp.nn.Seq4.load", "link" : "lamp\/nn\/Seq4$.html#load[T1,T2,T3,T4,T5,M1<:lamp.nn.GenericModule[T1,T2],M2<:lamp.nn.GenericModule[T2,T3],M3<:lamp.nn.GenericModule[T3,T4],M4<:lamp.nn.GenericModule[T4,T5]](implicitevidence$18:lamp.nn.Load[M1],implicitevidence$19:lamp.nn.Load[M2],implicitevidence$20:lamp.nn.Load[M3],implicitevidence$21:lamp.nn.Load[M4]):lamp.nn.Load[lamp.nn.Seq4[T1,T2,T3,T4,T5,M1,M2,M3,M4]]", "kind" : "implicit def"}, {"label" : "trainingMode", "tail" : "(arg0: TrainingMode[M1], arg1: TrainingMode[M2], arg2: TrainingMode[M3], arg3: TrainingMode[M4]): TrainingMode[Seq4[T1, T2, T3, T4, T5, M1, M2, M3, M4]]", "member" : "lamp.nn.Seq4.trainingMode", "link" : "lamp\/nn\/Seq4$.html#trainingMode[T1,T2,T3,T4,T5,M1<:lamp.nn.GenericModule[T1,T2],M2<:lamp.nn.GenericModule[T2,T3],M3<:lamp.nn.GenericModule[T3,T4],M4<:lamp.nn.GenericModule[T4,T5]](implicitevidence$14:lamp.nn.TrainingMode[M1],implicitevidence$15:lamp.nn.TrainingMode[M2],implicitevidence$16:lamp.nn.TrainingMode[M3],implicitevidence$17:lamp.nn.TrainingMode[M4]):lamp.nn.TrainingMode[lamp.nn.Seq4[T1,T2,T3,T4,T5,M1,M2,M3,M4]]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/Seq4$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/Seq4$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/Seq4$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/Seq4$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/Seq4$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/Seq4$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/Seq4$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Seq4$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Seq4$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Seq4$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/Seq4$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/Seq4$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/Seq4$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/Seq4$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/Seq4$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/Seq4$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/Seq4$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/Seq4$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/Seq4$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "forward", "tail" : "(x: T1)(arg0: Sc[S]): T5", "member" : "lamp.nn.Seq4.forward", "link" : "lamp\/nn\/Seq4.html#forward[S](x:T1)(implicitevidence$13:lamp.Sc[S]):T5", "kind" : "def"}, {"label" : "state", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.Seq4.state", "link" : "lamp\/nn\/Seq4.html#state:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "def"}, {"member" : "lamp.nn.Seq4#<init>", "error" : "unsupported entity"}, {"label" : "m4", "tail" : ": M4 with GenericModule[T4, T5]", "member" : "lamp.nn.Seq4.m4", "link" : "lamp\/nn\/Seq4.html#m4:M4withlamp.nn.GenericModule[T4,T5]", "kind" : "val"}, {"label" : "m3", "tail" : ": M3 with GenericModule[T3, T4]", "member" : "lamp.nn.Seq4.m3", "link" : "lamp\/nn\/Seq4.html#m3:M3withlamp.nn.GenericModule[T3,T4]", "kind" : "val"}, {"label" : "m2", "tail" : ": M2 with GenericModule[T2, T3]", "member" : "lamp.nn.Seq4.m2", "link" : "lamp\/nn\/Seq4.html#m2:M2withlamp.nn.GenericModule[T2,T3]", "kind" : "val"}, {"label" : "m1", "tail" : ": M1 with GenericModule[T1, T2]", "member" : "lamp.nn.Seq4.m1", "link" : "lamp\/nn\/Seq4.html#m1:M1withlamp.nn.GenericModule[T1,T2]", "kind" : "val"}, {"label" : "learnableParameters", "tail" : "(): Long", "member" : "lamp.nn.GenericModule.learnableParameters", "link" : "lamp\/nn\/Seq4.html#learnableParameters:Long", "kind" : "final def"}, {"label" : "gradients", "tail" : "(loss: Variable, zeroGrad: Boolean): Seq[Option[STen]]", "member" : "lamp.nn.GenericModule.gradients", "link" : "lamp\/nn\/Seq4.html#gradients(loss:lamp.autograd.Variable,zeroGrad:Boolean):Seq[Option[lamp.STen]]", "kind" : "final def"}, {"label" : "parameters", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.GenericModule.parameters", "link" : "lamp\/nn\/Seq4.html#parameters:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "final def"}, {"label" : "apply", "tail" : "(a: T1)(arg0: Sc[S]): T5", "member" : "lamp.nn.GenericModule.apply", "link" : "lamp\/nn\/Seq4.html#apply[S](a:A)(implicitevidence$17:lamp.Sc[S]):B", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/Seq4.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/Seq4.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/Seq4.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/Seq4.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/Seq4.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/Seq4.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/Seq4.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Seq4.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Seq4.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Seq4.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/Seq4.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/Seq4.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/Seq4.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/Seq4.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/Seq4.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/Seq4.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/nn\/Seq4.html", "kind" : "case class"}, {"name" : "lamp.nn.Seq5", "shortDescription" : "", "object" : "lamp\/nn\/Seq5$.html", "members_object" : [{"label" : "load", "tail" : "(arg0: Load[M1], arg1: Load[M2], arg2: Load[M3], arg3: Load[M4], arg4: Load[M5]): Load[Seq5[T1, T2, T3, T4, T5, T6, M1, M2, M3, M4, M5]]", "member" : "lamp.nn.Seq5.load", "link" : "lamp\/nn\/Seq5$.html#load[T1,T2,T3,T4,T5,T6,M1<:lamp.nn.GenericModule[T1,T2],M2<:lamp.nn.GenericModule[T2,T3],M3<:lamp.nn.GenericModule[T3,T4],M4<:lamp.nn.GenericModule[T4,T5],M5<:lamp.nn.GenericModule[T5,T6]](implicitevidence$28:lamp.nn.Load[M1],implicitevidence$29:lamp.nn.Load[M2],implicitevidence$30:lamp.nn.Load[M3],implicitevidence$31:lamp.nn.Load[M4],implicitevidence$32:lamp.nn.Load[M5]):lamp.nn.Load[lamp.nn.Seq5[T1,T2,T3,T4,T5,T6,M1,M2,M3,M4,M5]]", "kind" : "implicit def"}, {"label" : "trainingMode", "tail" : "(arg0: TrainingMode[M1], arg1: TrainingMode[M2], arg2: TrainingMode[M3], arg3: TrainingMode[M4], arg4: TrainingMode[M5]): TrainingMode[Seq5[T1, T2, T3, T4, T5, T6, M1, M2, M3, M4, M5]]", "member" : "lamp.nn.Seq5.trainingMode", "link" : "lamp\/nn\/Seq5$.html#trainingMode[T1,T2,T3,T4,T5,T6,M1<:lamp.nn.GenericModule[T1,T2],M2<:lamp.nn.GenericModule[T2,T3],M3<:lamp.nn.GenericModule[T3,T4],M4<:lamp.nn.GenericModule[T4,T5],M5<:lamp.nn.GenericModule[T5,T6]](implicitevidence$23:lamp.nn.TrainingMode[M1],implicitevidence$24:lamp.nn.TrainingMode[M2],implicitevidence$25:lamp.nn.TrainingMode[M3],implicitevidence$26:lamp.nn.TrainingMode[M4],implicitevidence$27:lamp.nn.TrainingMode[M5]):lamp.nn.TrainingMode[lamp.nn.Seq5[T1,T2,T3,T4,T5,T6,M1,M2,M3,M4,M5]]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/Seq5$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/Seq5$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/Seq5$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/Seq5$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/Seq5$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/Seq5$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/Seq5$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Seq5$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Seq5$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Seq5$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/Seq5$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/Seq5$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/Seq5$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/Seq5$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/Seq5$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/Seq5$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/Seq5$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/Seq5$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/Seq5$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "forward", "tail" : "(x: T1)(arg0: Sc[S]): T6", "member" : "lamp.nn.Seq5.forward", "link" : "lamp\/nn\/Seq5.html#forward[S](x:T1)(implicitevidence$22:lamp.Sc[S]):T6", "kind" : "def"}, {"label" : "state", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.Seq5.state", "link" : "lamp\/nn\/Seq5.html#state:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "def"}, {"member" : "lamp.nn.Seq5#<init>", "error" : "unsupported entity"}, {"label" : "m5", "tail" : ": M5 with GenericModule[T5, T6]", "member" : "lamp.nn.Seq5.m5", "link" : "lamp\/nn\/Seq5.html#m5:M5withlamp.nn.GenericModule[T5,T6]", "kind" : "val"}, {"label" : "m4", "tail" : ": M4 with GenericModule[T4, T5]", "member" : "lamp.nn.Seq5.m4", "link" : "lamp\/nn\/Seq5.html#m4:M4withlamp.nn.GenericModule[T4,T5]", "kind" : "val"}, {"label" : "m3", "tail" : ": M3 with GenericModule[T3, T4]", "member" : "lamp.nn.Seq5.m3", "link" : "lamp\/nn\/Seq5.html#m3:M3withlamp.nn.GenericModule[T3,T4]", "kind" : "val"}, {"label" : "m2", "tail" : ": M2 with GenericModule[T2, T3]", "member" : "lamp.nn.Seq5.m2", "link" : "lamp\/nn\/Seq5.html#m2:M2withlamp.nn.GenericModule[T2,T3]", "kind" : "val"}, {"label" : "m1", "tail" : ": M1 with GenericModule[T1, T2]", "member" : "lamp.nn.Seq5.m1", "link" : "lamp\/nn\/Seq5.html#m1:M1withlamp.nn.GenericModule[T1,T2]", "kind" : "val"}, {"label" : "learnableParameters", "tail" : "(): Long", "member" : "lamp.nn.GenericModule.learnableParameters", "link" : "lamp\/nn\/Seq5.html#learnableParameters:Long", "kind" : "final def"}, {"label" : "gradients", "tail" : "(loss: Variable, zeroGrad: Boolean): Seq[Option[STen]]", "member" : "lamp.nn.GenericModule.gradients", "link" : "lamp\/nn\/Seq5.html#gradients(loss:lamp.autograd.Variable,zeroGrad:Boolean):Seq[Option[lamp.STen]]", "kind" : "final def"}, {"label" : "parameters", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.GenericModule.parameters", "link" : "lamp\/nn\/Seq5.html#parameters:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "final def"}, {"label" : "apply", "tail" : "(a: T1)(arg0: Sc[S]): T6", "member" : "lamp.nn.GenericModule.apply", "link" : "lamp\/nn\/Seq5.html#apply[S](a:A)(implicitevidence$17:lamp.Sc[S]):B", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/Seq5.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/Seq5.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/Seq5.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/Seq5.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/Seq5.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/Seq5.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/Seq5.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Seq5.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Seq5.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Seq5.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/Seq5.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/Seq5.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/Seq5.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/Seq5.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/Seq5.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/Seq5.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/nn\/Seq5.html", "kind" : "case class"}, {"name" : "lamp.nn.Seq6", "shortDescription" : "", "object" : "lamp\/nn\/Seq6$.html", "members_object" : [{"label" : "load", "tail" : "(arg0: Load[M1], arg1: Load[M2], arg2: Load[M3], arg3: Load[M4], arg4: Load[M5], arg5: Load[M6]): Load[Seq6[T1, T2, T3, T4, T5, T6, T7, M1, M2, M3, M4, M5, M6]]", "member" : "lamp.nn.Seq6.load", "link" : "lamp\/nn\/Seq6$.html#load[T1,T2,T3,T4,T5,T6,T7,M1<:lamp.nn.GenericModule[T1,T2],M2<:lamp.nn.GenericModule[T2,T3],M3<:lamp.nn.GenericModule[T3,T4],M4<:lamp.nn.GenericModule[T4,T5],M5<:lamp.nn.GenericModule[T5,T6],M6<:lamp.nn.GenericModule[T6,T7]](implicitevidence$40:lamp.nn.Load[M1],implicitevidence$41:lamp.nn.Load[M2],implicitevidence$42:lamp.nn.Load[M3],implicitevidence$43:lamp.nn.Load[M4],implicitevidence$44:lamp.nn.Load[M5],implicitevidence$45:lamp.nn.Load[M6]):lamp.nn.Load[lamp.nn.Seq6[T1,T2,T3,T4,T5,T6,T7,M1,M2,M3,M4,M5,M6]]", "kind" : "implicit def"}, {"label" : "trainingMode", "tail" : "(arg0: TrainingMode[M1], arg1: TrainingMode[M2], arg2: TrainingMode[M3], arg3: TrainingMode[M4], arg4: TrainingMode[M5], arg5: TrainingMode[M6]): TrainingMode[Seq6[T1, T2, T3, T4, T5, T6, T7, M1, M2, M3, M4, M5, M6]]", "member" : "lamp.nn.Seq6.trainingMode", "link" : "lamp\/nn\/Seq6$.html#trainingMode[T1,T2,T3,T4,T5,T6,T7,M1<:lamp.nn.GenericModule[T1,T2],M2<:lamp.nn.GenericModule[T2,T3],M3<:lamp.nn.GenericModule[T3,T4],M4<:lamp.nn.GenericModule[T4,T5],M5<:lamp.nn.GenericModule[T5,T6],M6<:lamp.nn.GenericModule[T6,T7]](implicitevidence$34:lamp.nn.TrainingMode[M1],implicitevidence$35:lamp.nn.TrainingMode[M2],implicitevidence$36:lamp.nn.TrainingMode[M3],implicitevidence$37:lamp.nn.TrainingMode[M4],implicitevidence$38:lamp.nn.TrainingMode[M5],implicitevidence$39:lamp.nn.TrainingMode[M6]):lamp.nn.TrainingMode[lamp.nn.Seq6[T1,T2,T3,T4,T5,T6,T7,M1,M2,M3,M4,M5,M6]]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/Seq6$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/Seq6$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/Seq6$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/Seq6$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/Seq6$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/Seq6$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/Seq6$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Seq6$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Seq6$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Seq6$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/Seq6$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/Seq6$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/Seq6$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/Seq6$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/Seq6$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/Seq6$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/Seq6$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/Seq6$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/Seq6$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "forward", "tail" : "(x: T1)(arg0: Sc[S]): T7", "member" : "lamp.nn.Seq6.forward", "link" : "lamp\/nn\/Seq6.html#forward[S](x:T1)(implicitevidence$33:lamp.Sc[S]):T7", "kind" : "def"}, {"label" : "state", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.Seq6.state", "link" : "lamp\/nn\/Seq6.html#state:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "def"}, {"member" : "lamp.nn.Seq6#<init>", "error" : "unsupported entity"}, {"label" : "m6", "tail" : ": M6 with GenericModule[T6, T7]", "member" : "lamp.nn.Seq6.m6", "link" : "lamp\/nn\/Seq6.html#m6:M6withlamp.nn.GenericModule[T6,T7]", "kind" : "val"}, {"label" : "m5", "tail" : ": M5 with GenericModule[T5, T6]", "member" : "lamp.nn.Seq6.m5", "link" : "lamp\/nn\/Seq6.html#m5:M5withlamp.nn.GenericModule[T5,T6]", "kind" : "val"}, {"label" : "m4", "tail" : ": M4 with GenericModule[T4, T5]", "member" : "lamp.nn.Seq6.m4", "link" : "lamp\/nn\/Seq6.html#m4:M4withlamp.nn.GenericModule[T4,T5]", "kind" : "val"}, {"label" : "m3", "tail" : ": M3 with GenericModule[T3, T4]", "member" : "lamp.nn.Seq6.m3", "link" : "lamp\/nn\/Seq6.html#m3:M3withlamp.nn.GenericModule[T3,T4]", "kind" : "val"}, {"label" : "m2", "tail" : ": M2 with GenericModule[T2, T3]", "member" : "lamp.nn.Seq6.m2", "link" : "lamp\/nn\/Seq6.html#m2:M2withlamp.nn.GenericModule[T2,T3]", "kind" : "val"}, {"label" : "m1", "tail" : ": M1 with GenericModule[T1, T2]", "member" : "lamp.nn.Seq6.m1", "link" : "lamp\/nn\/Seq6.html#m1:M1withlamp.nn.GenericModule[T1,T2]", "kind" : "val"}, {"label" : "learnableParameters", "tail" : "(): Long", "member" : "lamp.nn.GenericModule.learnableParameters", "link" : "lamp\/nn\/Seq6.html#learnableParameters:Long", "kind" : "final def"}, {"label" : "gradients", "tail" : "(loss: Variable, zeroGrad: Boolean): Seq[Option[STen]]", "member" : "lamp.nn.GenericModule.gradients", "link" : "lamp\/nn\/Seq6.html#gradients(loss:lamp.autograd.Variable,zeroGrad:Boolean):Seq[Option[lamp.STen]]", "kind" : "final def"}, {"label" : "parameters", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.GenericModule.parameters", "link" : "lamp\/nn\/Seq6.html#parameters:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "final def"}, {"label" : "apply", "tail" : "(a: T1)(arg0: Sc[S]): T7", "member" : "lamp.nn.GenericModule.apply", "link" : "lamp\/nn\/Seq6.html#apply[S](a:A)(implicitevidence$17:lamp.Sc[S]):B", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/Seq6.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/Seq6.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/Seq6.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/Seq6.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/Seq6.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/Seq6.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/Seq6.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Seq6.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Seq6.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Seq6.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/Seq6.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/Seq6.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/Seq6.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/Seq6.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/Seq6.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/Seq6.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/nn\/Seq6.html", "kind" : "case class"}, {"name" : "lamp.nn.SeqLinear", "shortDescription" : "Inputs of size (sequence length * batch * in dim)Outputs of size (sequence length * batch * output dim)Applies a linear function to each time step", "object" : "lamp\/nn\/SeqLinear$.html", "members_object" : [{"label" : "apply", "tail" : "(in: Int, out: Int, tOpt: TensorOptions)(arg0: Sc[S]): SeqLinear", "member" : "lamp.nn.SeqLinear.apply", "link" : "lamp\/nn\/SeqLinear$.html#apply[S](in:Int,out:Int,tOpt:aten.TensorOptions)(implicitevidence$2:lamp.Sc[S]):lamp.nn.SeqLinear", "kind" : "def"}, {"label" : "Bias", "tail" : "", "member" : "lamp.nn.SeqLinear.Bias", "link" : "lamp\/nn\/SeqLinear$.html#Bias", "kind" : "object"}, {"label" : "Weight", "tail" : "", "member" : "lamp.nn.SeqLinear.Weight", "link" : "lamp\/nn\/SeqLinear$.html#Weight", "kind" : "object"}, {"label" : "load", "tail" : ": Load[SeqLinear]", "member" : "lamp.nn.SeqLinear.load", "link" : "lamp\/nn\/SeqLinear$.html#load:lamp.nn.Load[lamp.nn.SeqLinear]", "kind" : "implicit val"}, {"label" : "trainingMode", "tail" : ": TrainingMode[SeqLinear]", "member" : "lamp.nn.SeqLinear.trainingMode", "link" : "lamp\/nn\/SeqLinear$.html#trainingMode:lamp.nn.TrainingMode[lamp.nn.SeqLinear]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/SeqLinear$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/SeqLinear$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/SeqLinear$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/SeqLinear$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/SeqLinear$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/SeqLinear$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/SeqLinear$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/SeqLinear$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/SeqLinear$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/SeqLinear$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/SeqLinear$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/SeqLinear$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/SeqLinear$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/SeqLinear$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/SeqLinear$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/SeqLinear$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/SeqLinear$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/SeqLinear$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/SeqLinear$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "forward", "tail" : "(x: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.nn.SeqLinear.forward", "link" : "lamp\/nn\/SeqLinear.html#forward[S](x:lamp.autograd.Variable)(implicitevidence$1:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "state", "tail" : "(): List[(Constant, LeafTag with Product with Serializable)]", "member" : "lamp.nn.SeqLinear.state", "link" : "lamp\/nn\/SeqLinear.html#state:List[(lamp.autograd.Constant,lamp.nn.LeafTagwithProductwithSerializable)]", "kind" : "def"}, {"member" : "lamp.nn.SeqLinear#<init>", "error" : "unsupported entity"}, {"label" : "bias", "tail" : ": Constant", "member" : "lamp.nn.SeqLinear.bias", "link" : "lamp\/nn\/SeqLinear.html#bias:lamp.autograd.Constant", "kind" : "val"}, {"label" : "weight", "tail" : ": Constant", "member" : "lamp.nn.SeqLinear.weight", "link" : "lamp\/nn\/SeqLinear.html#weight:lamp.autograd.Constant", "kind" : "val"}, {"label" : "learnableParameters", "tail" : "(): Long", "member" : "lamp.nn.GenericModule.learnableParameters", "link" : "lamp\/nn\/SeqLinear.html#learnableParameters:Long", "kind" : "final def"}, {"label" : "gradients", "tail" : "(loss: Variable, zeroGrad: Boolean): Seq[Option[STen]]", "member" : "lamp.nn.GenericModule.gradients", "link" : "lamp\/nn\/SeqLinear.html#gradients(loss:lamp.autograd.Variable,zeroGrad:Boolean):Seq[Option[lamp.STen]]", "kind" : "final def"}, {"label" : "parameters", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.GenericModule.parameters", "link" : "lamp\/nn\/SeqLinear.html#parameters:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "final def"}, {"label" : "apply", "tail" : "(a: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.nn.GenericModule.apply", "link" : "lamp\/nn\/SeqLinear.html#apply[S](a:A)(implicitevidence$17:lamp.Sc[S]):B", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/SeqLinear.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/SeqLinear.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/SeqLinear.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/SeqLinear.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/SeqLinear.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/SeqLinear.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/SeqLinear.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/SeqLinear.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/SeqLinear.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/SeqLinear.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/SeqLinear.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/SeqLinear.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/SeqLinear.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/SeqLinear.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/SeqLinear.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/SeqLinear.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/nn\/SeqLinear.html", "kind" : "case class"}, {"name" : "lamp.nn.sequence", "shortDescription" : "", "object" : "lamp\/nn\/sequence$.html", "members_object" : [{"label" : "apply", "tail" : "(m1: M1 with GenericModule[T1, T2], m2: M2 with GenericModule[T2, T3], m3: M3 with GenericModule[T3, T4], m4: M4 with GenericModule[T4, T5], m5: M5 with GenericModule[T5, T6], m6: M6 with GenericModule[T6, T7]): Seq6[T1, T2, T3, T4, T5, T6, T7, M1 with GenericModule[T1, T2], M2 with GenericModule[T2, T3], M3 with GenericModule[T3, T4], M4 with GenericModule[T4, T5], M5 with GenericModule[T5, T6], M6 with GenericModule[T6, T7]]", "member" : "lamp.nn.sequence.apply", "link" : "lamp\/nn\/sequence$.html#apply[T1,T2,T3,T4,T5,T6,T7,M1<:lamp.nn.GenericModule[T1,T2],M2<:lamp.nn.GenericModule[T2,T3],M3<:lamp.nn.GenericModule[T3,T4],M4<:lamp.nn.GenericModule[T4,T5],M5<:lamp.nn.GenericModule[T5,T6],M6<:lamp.nn.GenericModule[T6,T7]](m1:M1withlamp.nn.GenericModule[T1,T2],m2:M2withlamp.nn.GenericModule[T2,T3],m3:M3withlamp.nn.GenericModule[T3,T4],m4:M4withlamp.nn.GenericModule[T4,T5],m5:M5withlamp.nn.GenericModule[T5,T6],m6:M6withlamp.nn.GenericModule[T6,T7]):lamp.nn.Seq6[T1,T2,T3,T4,T5,T6,T7,M1withlamp.nn.GenericModule[T1,T2],M2withlamp.nn.GenericModule[T2,T3],M3withlamp.nn.GenericModule[T3,T4],M4withlamp.nn.GenericModule[T4,T5],M5withlamp.nn.GenericModule[T5,T6],M6withlamp.nn.GenericModule[T6,T7]]", "kind" : "def"}, {"label" : "apply", "tail" : "(m1: M1 with GenericModule[T1, T2], m2: M2 with GenericModule[T2, T3], m3: M3 with GenericModule[T3, T4], m4: M4 with GenericModule[T4, T5], m5: M5 with GenericModule[T5, T6]): Seq5[T1, T2, T3, T4, T5, T6, M1 with GenericModule[T1, T2], M2 with GenericModule[T2, T3], M3 with GenericModule[T3, T4], M4 with GenericModule[T4, T5], M5 with GenericModule[T5, T6]]", "member" : "lamp.nn.sequence.apply", "link" : "lamp\/nn\/sequence$.html#apply[T1,T2,T3,T4,T5,T6,M1<:lamp.nn.GenericModule[T1,T2],M2<:lamp.nn.GenericModule[T2,T3],M3<:lamp.nn.GenericModule[T3,T4],M4<:lamp.nn.GenericModule[T4,T5],M5<:lamp.nn.GenericModule[T5,T6]](m1:M1withlamp.nn.GenericModule[T1,T2],m2:M2withlamp.nn.GenericModule[T2,T3],m3:M3withlamp.nn.GenericModule[T3,T4],m4:M4withlamp.nn.GenericModule[T4,T5],m5:M5withlamp.nn.GenericModule[T5,T6]):lamp.nn.Seq5[T1,T2,T3,T4,T5,T6,M1withlamp.nn.GenericModule[T1,T2],M2withlamp.nn.GenericModule[T2,T3],M3withlamp.nn.GenericModule[T3,T4],M4withlamp.nn.GenericModule[T4,T5],M5withlamp.nn.GenericModule[T5,T6]]", "kind" : "def"}, {"label" : "apply", "tail" : "(m1: M1 with GenericModule[T1, T2], m2: M2 with GenericModule[T2, T3], m3: M3 with GenericModule[T3, T4], m4: M4 with GenericModule[T4, T5]): Seq4[T1, T2, T3, T4, T5, M1 with GenericModule[T1, T2], M2 with GenericModule[T2, T3], M3 with GenericModule[T3, T4], M4 with GenericModule[T4, T5]]", "member" : "lamp.nn.sequence.apply", "link" : "lamp\/nn\/sequence$.html#apply[T1,T2,T3,T4,T5,M1<:lamp.nn.GenericModule[T1,T2],M2<:lamp.nn.GenericModule[T2,T3],M3<:lamp.nn.GenericModule[T3,T4],M4<:lamp.nn.GenericModule[T4,T5]](m1:M1withlamp.nn.GenericModule[T1,T2],m2:M2withlamp.nn.GenericModule[T2,T3],m3:M3withlamp.nn.GenericModule[T3,T4],m4:M4withlamp.nn.GenericModule[T4,T5]):lamp.nn.Seq4[T1,T2,T3,T4,T5,M1withlamp.nn.GenericModule[T1,T2],M2withlamp.nn.GenericModule[T2,T3],M3withlamp.nn.GenericModule[T3,T4],M4withlamp.nn.GenericModule[T4,T5]]", "kind" : "def"}, {"label" : "apply", "tail" : "(m1: M1 with GenericModule[T1, T2], m2: M2 with GenericModule[T2, T3], m3: M3 with GenericModule[T3, T4]): Seq3[T1, T2, T3, T4, M1 with GenericModule[T1, T2], M2 with GenericModule[T2, T3], M3 with GenericModule[T3, T4]]", "member" : "lamp.nn.sequence.apply", "link" : "lamp\/nn\/sequence$.html#apply[T1,T2,T3,T4,M1<:lamp.nn.GenericModule[T1,T2],M2<:lamp.nn.GenericModule[T2,T3],M3<:lamp.nn.GenericModule[T3,T4]](m1:M1withlamp.nn.GenericModule[T1,T2],m2:M2withlamp.nn.GenericModule[T2,T3],m3:M3withlamp.nn.GenericModule[T3,T4]):lamp.nn.Seq3[T1,T2,T3,T4,M1withlamp.nn.GenericModule[T1,T2],M2withlamp.nn.GenericModule[T2,T3],M3withlamp.nn.GenericModule[T3,T4]]", "kind" : "def"}, {"label" : "apply", "tail" : "(m1: M1 with GenericModule[T1, T2], m2: M2 with GenericModule[T2, T3]): Seq2[T1, T2, T3, M1 with GenericModule[T1, T2], M2 with GenericModule[T2, T3]]", "member" : "lamp.nn.sequence.apply", "link" : "lamp\/nn\/sequence$.html#apply[T1,T2,T3,M1<:lamp.nn.GenericModule[T1,T2],M2<:lamp.nn.GenericModule[T2,T3]](m1:M1withlamp.nn.GenericModule[T1,T2],m2:M2withlamp.nn.GenericModule[T2,T3]):lamp.nn.Seq2[T1,T2,T3,M1withlamp.nn.GenericModule[T1,T2],M2withlamp.nn.GenericModule[T2,T3]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/sequence$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/sequence$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/sequence$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/sequence$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/sequence$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/sequence$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/sequence$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/sequence$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/sequence$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/sequence$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/sequence$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/sequence$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/sequence$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/sequence$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/sequence$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/sequence$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/sequence$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/sequence$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/sequence$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "lamp.nn.Sequential", "shortDescription" : "", "object" : "lamp\/nn\/Sequential$.html", "members_object" : [{"label" : "Tag", "tail" : "", "member" : "lamp.nn.Sequential.Tag", "link" : "lamp\/nn\/Sequential$.html#Tag[T<:lamp.nn.PTag]extendsPTagwithProductwithSerializable", "kind" : "case class"}, {"label" : "load", "tail" : "(arg0: Load[M]): Load[Sequential[A, M]]", "member" : "lamp.nn.Sequential.load", "link" : "lamp\/nn\/Sequential$.html#load[A,M<:lamp.nn.GenericModule[A,A]](implicitevidence$8:lamp.nn.Load[M]):lamp.nn.Load[lamp.nn.Sequential[A,M]]", "kind" : "implicit def"}, {"label" : "trainingMode", "tail" : "(arg0: TrainingMode[M]): TrainingMode[Sequential[A, M]]", "member" : "lamp.nn.Sequential.trainingMode", "link" : "lamp\/nn\/Sequential$.html#trainingMode[A,M<:lamp.nn.GenericModule[A,A]](implicitevidence$7:lamp.nn.TrainingMode[M]):lamp.nn.TrainingMode[lamp.nn.Sequential[A,M]]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/Sequential$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/Sequential$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/Sequential$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/Sequential$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/Sequential$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/Sequential$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/Sequential$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Sequential$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Sequential$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Sequential$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/Sequential$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/Sequential$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/Sequential$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/Sequential$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/Sequential$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/Sequential$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/Sequential$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/Sequential$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/Sequential$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "forward", "tail" : "(x: A)(arg0: Sc[S]): A", "member" : "lamp.nn.Sequential.forward", "link" : "lamp\/nn\/Sequential.html#forward[S](x:A)(implicitevidence$6:lamp.Sc[S]):A", "kind" : "def"}, {"label" : "state", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.Sequential.state", "link" : "lamp\/nn\/Sequential.html#state:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "def"}, {"member" : "lamp.nn.Sequential#<init>", "error" : "unsupported entity"}, {"label" : "members", "tail" : ": M with GenericModule[A, A]*", "member" : "lamp.nn.Sequential.members", "link" : "lamp\/nn\/Sequential.html#members:Mwithlamp.nn.GenericModule[A,A]*", "kind" : "val"}, {"label" : "learnableParameters", "tail" : "(): Long", "member" : "lamp.nn.GenericModule.learnableParameters", "link" : "lamp\/nn\/Sequential.html#learnableParameters:Long", "kind" : "final def"}, {"label" : "gradients", "tail" : "(loss: Variable, zeroGrad: Boolean): Seq[Option[STen]]", "member" : "lamp.nn.GenericModule.gradients", "link" : "lamp\/nn\/Sequential.html#gradients(loss:lamp.autograd.Variable,zeroGrad:Boolean):Seq[Option[lamp.STen]]", "kind" : "final def"}, {"label" : "parameters", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.GenericModule.parameters", "link" : "lamp\/nn\/Sequential.html#parameters:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "final def"}, {"label" : "apply", "tail" : "(a: A)(arg0: Sc[S]): A", "member" : "lamp.nn.GenericModule.apply", "link" : "lamp\/nn\/Sequential.html#apply[S](a:A)(implicitevidence$17:lamp.Sc[S]):B", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/Sequential.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/Sequential.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/Sequential.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/Sequential.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/Sequential.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/Sequential.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/Sequential.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Sequential.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Sequential.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/Sequential.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/Sequential.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/Sequential.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/Sequential.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/Sequential.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/Sequential.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/Sequential.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/nn\/Sequential.html", "kind" : "case class"}, {"name" : "lamp.nn.SGDW", "shortDescription" : "", "object" : "lamp\/nn\/SGDW$.html", "members_object" : [{"label" : "factory", "tail" : "(learningRate: OptimizerHyperparameter, weightDecay: OptimizerHyperparameter, momentum: Option[OptimizerHyperparameter], scheduler: (Long) ⇒ Double, clip: Option[Double]): (Seq[(STen, PTag)]) ⇒ SGDW", "member" : "lamp.nn.SGDW.factory", "link" : "lamp\/nn\/SGDW$.html#factory(learningRate:lamp.nn.OptimizerHyperparameter,weightDecay:lamp.nn.OptimizerHyperparameter,momentum:Option[lamp.nn.OptimizerHyperparameter],scheduler:Long=>Double,clip:Option[Double]):Seq[(lamp.STen,lamp.nn.PTag)]=>lamp.nn.SGDW", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/SGDW$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/SGDW$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/SGDW$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/SGDW$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/SGDW$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/SGDW$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/SGDW$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/SGDW$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/SGDW$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/SGDW$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/SGDW$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/SGDW$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/SGDW$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/SGDW$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/SGDW$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/SGDW$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/SGDW$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/SGDW$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/SGDW$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "step", "tail" : "(gradients: Seq[Option[STen]], scheduleFactor: Double): Unit", "member" : "lamp.nn.SGDW.step", "link" : "lamp\/nn\/SGDW.html#step(gradients:Seq[Option[lamp.STen]],scheduleFactor:Double):Unit", "kind" : "def"}, {"label" : "release", "tail" : "(): Unit", "member" : "lamp.nn.SGDW.release", "link" : "lamp\/nn\/SGDW.html#release():Unit", "kind" : "def"}, {"label" : "stepCount", "tail" : ": Long", "member" : "lamp.nn.SGDW.stepCount", "link" : "lamp\/nn\/SGDW.html#stepCount:Long", "kind" : "var"}, {"label" : "velocity", "tail" : ": Seq[Option[(Tensor, OptimizerHyperparameter)]]", "member" : "lamp.nn.SGDW.velocity", "link" : "lamp\/nn\/SGDW.html#velocity:Seq[Option[(aten.Tensor,lamp.nn.OptimizerHyperparameter)]]", "kind" : "val"}, {"member" : "lamp.nn.SGDW#<init>", "error" : "unsupported entity"}, {"label" : "clip", "tail" : ": Option[Double]", "member" : "lamp.nn.SGDW.clip", "link" : "lamp\/nn\/SGDW.html#clip:Option[Double]", "kind" : "val"}, {"label" : "scheduler", "tail" : ": (Long) ⇒ Double", "member" : "lamp.nn.SGDW.scheduler", "link" : "lamp\/nn\/SGDW.html#scheduler:Long=>Double", "kind" : "val"}, {"label" : "momentum", "tail" : ": Option[OptimizerHyperparameter]", "member" : "lamp.nn.SGDW.momentum", "link" : "lamp\/nn\/SGDW.html#momentum:Option[lamp.nn.OptimizerHyperparameter]", "kind" : "val"}, {"label" : "weightDecay", "tail" : ": OptimizerHyperparameter", "member" : "lamp.nn.SGDW.weightDecay", "link" : "lamp\/nn\/SGDW.html#weightDecay:lamp.nn.OptimizerHyperparameter", "kind" : "val"}, {"label" : "learningRate", "tail" : ": OptimizerHyperparameter", "member" : "lamp.nn.SGDW.learningRate", "link" : "lamp\/nn\/SGDW.html#learningRate:lamp.nn.OptimizerHyperparameter", "kind" : "val"}, {"label" : "parameters", "tail" : ": Seq[(STen, PTag)]", "member" : "lamp.nn.SGDW.parameters", "link" : "lamp\/nn\/SGDW.html#parameters:Seq[(lamp.STen,lamp.nn.PTag)]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/SGDW.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/SGDW.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/SGDW.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/SGDW.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/SGDW.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/SGDW.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/SGDW.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/SGDW.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/SGDW.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/SGDW.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/SGDW.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/SGDW.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/SGDW.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/SGDW.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/SGDW.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/SGDW.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/nn\/SGDW.html", "kind" : "case class"}, {"name" : "lamp.nn.simple", "shortDescription" : "", "members_case class" : [{"label" : "apply", "tail" : "(p: PTag): Double", "member" : "lamp.nn.simple.apply", "link" : "lamp\/nn\/simple.html#apply(p:lamp.nn.PTag):Double", "kind" : "def"}, {"member" : "lamp.nn.simple#<init>", "error" : "unsupported entity"}, {"label" : "v", "tail" : ": Double", "member" : "lamp.nn.simple.v", "link" : "lamp\/nn\/simple.html#v:Double", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/simple.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/simple.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/simple.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/simple.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/simple.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/simple.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/simple.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/simple.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/simple.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/simple.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/simple.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/simple.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/simple.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/simple.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/simple.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/simple.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/nn\/simple.html", "kind" : "case class"}, {"name" : "lamp.nn.StatefulSeq2", "shortDescription" : "", "object" : "lamp\/nn\/StatefulSeq2$.html", "members_object" : [{"label" : "initState", "tail" : "(is1: InitState[M1, S1], is2: InitState[M2, S2]): InitState[StatefulSeq2[T1, T2, T3, S1, S2, M1, M2], (S1, S2)]", "member" : "lamp.nn.StatefulSeq2.initState", "link" : "lamp\/nn\/StatefulSeq2$.html#initState[T1,T2,T3,S1,S2,M1<:lamp.nn.StatefulModule[T1,T2,S1],M2<:lamp.nn.StatefulModule[T2,T3,S2]](implicitis1:lamp.nn.InitState[M1,S1],implicitis2:lamp.nn.InitState[M2,S2]):lamp.nn.InitState[lamp.nn.StatefulSeq2[T1,T2,T3,S1,S2,M1,M2],(S1,S2)]", "kind" : "implicit def"}, {"label" : "load", "tail" : "(arg0: Load[M1], arg1: Load[M2]): Load[StatefulSeq2[T1, T2, T3, S1, S2, M1, M2]]", "member" : "lamp.nn.StatefulSeq2.load", "link" : "lamp\/nn\/StatefulSeq2$.html#load[T1,T2,T3,S1,S2,M1<:lamp.nn.StatefulModule[T1,T2,S1],M2<:lamp.nn.StatefulModule[T2,T3,S2]](implicitevidence$5:lamp.nn.Load[M1],implicitevidence$6:lamp.nn.Load[M2]):lamp.nn.Load[lamp.nn.StatefulSeq2[T1,T2,T3,S1,S2,M1,M2]]", "kind" : "implicit def"}, {"label" : "trainingMode", "tail" : "(arg0: TrainingMode[M1], arg1: TrainingMode[M2]): TrainingMode[StatefulSeq2[T1, T2, T3, S1, S2, M1, M2]]", "member" : "lamp.nn.StatefulSeq2.trainingMode", "link" : "lamp\/nn\/StatefulSeq2$.html#trainingMode[T1,T2,T3,S1,S2,M1<:lamp.nn.StatefulModule[T1,T2,S1],M2<:lamp.nn.StatefulModule[T2,T3,S2]](implicitevidence$3:lamp.nn.TrainingMode[M1],implicitevidence$4:lamp.nn.TrainingMode[M2]):lamp.nn.TrainingMode[lamp.nn.StatefulSeq2[T1,T2,T3,S1,S2,M1,M2]]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/StatefulSeq2$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/StatefulSeq2$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/StatefulSeq2$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/StatefulSeq2$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/StatefulSeq2$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/StatefulSeq2$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/StatefulSeq2$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/StatefulSeq2$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/StatefulSeq2$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/StatefulSeq2$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/StatefulSeq2$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/StatefulSeq2$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/StatefulSeq2$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/StatefulSeq2$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/StatefulSeq2$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/StatefulSeq2$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/StatefulSeq2$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/StatefulSeq2$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/StatefulSeq2$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "forward1", "tail" : "(x: T1, st: (S1, S2))(arg0: Sc[S]): (T3, (S1, S2))", "member" : "lamp.nn.StatefulSeq2.forward1", "link" : "lamp\/nn\/StatefulSeq2.html#forward1[S](x:T1,st:(S1,S2))(implicitevidence$2:lamp.Sc[S]):(T3,(S1,S2))", "kind" : "def"}, {"label" : "forward", "tail" : "(x: (T1, (S1, S2)))(arg0: Sc[S]): (T3, (S1, S2))", "member" : "lamp.nn.StatefulSeq2.forward", "link" : "lamp\/nn\/StatefulSeq2.html#forward[S](x:(T1,(S1,S2)))(implicitevidence$1:lamp.Sc[S]):(T3,(S1,S2))", "kind" : "def"}, {"label" : "state", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.StatefulSeq2.state", "link" : "lamp\/nn\/StatefulSeq2.html#state:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "def"}, {"member" : "lamp.nn.StatefulSeq2#<init>", "error" : "unsupported entity"}, {"label" : "m2", "tail" : ": M2 with StatefulModule[T2, T3, S2]", "member" : "lamp.nn.StatefulSeq2.m2", "link" : "lamp\/nn\/StatefulSeq2.html#m2:M2withlamp.nn.StatefulModule[T2,T3,S2]", "kind" : "val"}, {"label" : "m1", "tail" : ": M1 with StatefulModule[T1, T2, S1]", "member" : "lamp.nn.StatefulSeq2.m1", "link" : "lamp\/nn\/StatefulSeq2.html#m1:M1withlamp.nn.StatefulModule[T1,T2,S1]", "kind" : "val"}, {"label" : "learnableParameters", "tail" : "(): Long", "member" : "lamp.nn.GenericModule.learnableParameters", "link" : "lamp\/nn\/StatefulSeq2.html#learnableParameters:Long", "kind" : "final def"}, {"label" : "gradients", "tail" : "(loss: Variable, zeroGrad: Boolean): Seq[Option[STen]]", "member" : "lamp.nn.GenericModule.gradients", "link" : "lamp\/nn\/StatefulSeq2.html#gradients(loss:lamp.autograd.Variable,zeroGrad:Boolean):Seq[Option[lamp.STen]]", "kind" : "final def"}, {"label" : "parameters", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.GenericModule.parameters", "link" : "lamp\/nn\/StatefulSeq2.html#parameters:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "final def"}, {"label" : "apply", "tail" : "(a: (T1, (S1, S2)))(arg0: Sc[S]): (T3, (S1, S2))", "member" : "lamp.nn.GenericModule.apply", "link" : "lamp\/nn\/StatefulSeq2.html#apply[S](a:A)(implicitevidence$17:lamp.Sc[S]):B", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/StatefulSeq2.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/StatefulSeq2.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/StatefulSeq2.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/StatefulSeq2.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/StatefulSeq2.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/StatefulSeq2.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/StatefulSeq2.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/StatefulSeq2.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/StatefulSeq2.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/StatefulSeq2.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/StatefulSeq2.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/StatefulSeq2.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/StatefulSeq2.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/StatefulSeq2.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/StatefulSeq2.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/StatefulSeq2.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/nn\/StatefulSeq2.html", "kind" : "case class"}, {"name" : "lamp.nn.StatefulSeq3", "shortDescription" : "", "object" : "lamp\/nn\/StatefulSeq3$.html", "members_object" : [{"label" : "initState", "tail" : "(is1: InitState[M1, S1], is2: InitState[M2, S2], is3: InitState[M3, S3]): InitState[StatefulSeq3[T1, T2, T3, T4, S1, S2, S3, M1, M2, M3], (S1, S2, S3)]", "member" : "lamp.nn.StatefulSeq3.initState", "link" : "lamp\/nn\/StatefulSeq3$.html#initState[T1,T2,T3,T4,S1,S2,S3,M1<:lamp.nn.StatefulModule[T1,T2,S1],M2<:lamp.nn.StatefulModule[T2,T3,S2],M3<:lamp.nn.StatefulModule[T3,T4,S3]](implicitis1:lamp.nn.InitState[M1,S1],implicitis2:lamp.nn.InitState[M2,S2],implicitis3:lamp.nn.InitState[M3,S3]):lamp.nn.InitState[lamp.nn.StatefulSeq3[T1,T2,T3,T4,S1,S2,S3,M1,M2,M3],(S1,S2,S3)]", "kind" : "implicit def"}, {"label" : "load", "tail" : "(arg0: Load[M1], arg1: Load[M2], arg2: Load[M3]): Load[StatefulSeq3[T1, T2, T3, T4, S1, S2, S3, M1, M2, M3]]", "member" : "lamp.nn.StatefulSeq3.load", "link" : "lamp\/nn\/StatefulSeq3$.html#load[T1,T2,T3,T4,S1,S2,S3,M1<:lamp.nn.StatefulModule[T1,T2,S1],M2<:lamp.nn.StatefulModule[T2,T3,S2],M3<:lamp.nn.StatefulModule[T3,T4,S3]](implicitevidence$12:lamp.nn.Load[M1],implicitevidence$13:lamp.nn.Load[M2],implicitevidence$14:lamp.nn.Load[M3]):lamp.nn.Load[lamp.nn.StatefulSeq3[T1,T2,T3,T4,S1,S2,S3,M1,M2,M3]]", "kind" : "implicit def"}, {"label" : "trainingMode", "tail" : "(arg0: TrainingMode[M1], arg1: TrainingMode[M2], arg2: TrainingMode[M3]): TrainingMode[StatefulSeq3[T1, T2, T3, T4, S1, S2, S3, M1, M2, M3]]", "member" : "lamp.nn.StatefulSeq3.trainingMode", "link" : "lamp\/nn\/StatefulSeq3$.html#trainingMode[T1,T2,T3,T4,S1,S2,S3,M1<:lamp.nn.StatefulModule[T1,T2,S1],M2<:lamp.nn.StatefulModule[T2,T3,S2],M3<:lamp.nn.StatefulModule[T3,T4,S3]](implicitevidence$9:lamp.nn.TrainingMode[M1],implicitevidence$10:lamp.nn.TrainingMode[M2],implicitevidence$11:lamp.nn.TrainingMode[M3]):lamp.nn.TrainingMode[lamp.nn.StatefulSeq3[T1,T2,T3,T4,S1,S2,S3,M1,M2,M3]]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/StatefulSeq3$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/StatefulSeq3$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/StatefulSeq3$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/StatefulSeq3$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/StatefulSeq3$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/StatefulSeq3$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/StatefulSeq3$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/StatefulSeq3$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/StatefulSeq3$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/StatefulSeq3$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/StatefulSeq3$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/StatefulSeq3$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/StatefulSeq3$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/StatefulSeq3$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/StatefulSeq3$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/StatefulSeq3$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/StatefulSeq3$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/StatefulSeq3$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/StatefulSeq3$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "forward1", "tail" : "(x: T1, st: (S1, S2, S3))(arg0: Sc[S]): (T4, (S1, S2, S3))", "member" : "lamp.nn.StatefulSeq3.forward1", "link" : "lamp\/nn\/StatefulSeq3.html#forward1[S](x:T1,st:(S1,S2,S3))(implicitevidence$8:lamp.Sc[S]):(T4,(S1,S2,S3))", "kind" : "def"}, {"label" : "forward", "tail" : "(x: (T1, (S1, S2, S3)))(arg0: Sc[S]): (T4, (S1, S2, S3))", "member" : "lamp.nn.StatefulSeq3.forward", "link" : "lamp\/nn\/StatefulSeq3.html#forward[S](x:(T1,(S1,S2,S3)))(implicitevidence$7:lamp.Sc[S]):(T4,(S1,S2,S3))", "kind" : "def"}, {"label" : "state", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.StatefulSeq3.state", "link" : "lamp\/nn\/StatefulSeq3.html#state:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "def"}, {"member" : "lamp.nn.StatefulSeq3#<init>", "error" : "unsupported entity"}, {"label" : "m3", "tail" : ": M3 with StatefulModule[T3, T4, S3]", "member" : "lamp.nn.StatefulSeq3.m3", "link" : "lamp\/nn\/StatefulSeq3.html#m3:M3withlamp.nn.StatefulModule[T3,T4,S3]", "kind" : "val"}, {"label" : "m2", "tail" : ": M2 with StatefulModule[T2, T3, S2]", "member" : "lamp.nn.StatefulSeq3.m2", "link" : "lamp\/nn\/StatefulSeq3.html#m2:M2withlamp.nn.StatefulModule[T2,T3,S2]", "kind" : "val"}, {"label" : "m1", "tail" : ": M1 with StatefulModule[T1, T2, S1]", "member" : "lamp.nn.StatefulSeq3.m1", "link" : "lamp\/nn\/StatefulSeq3.html#m1:M1withlamp.nn.StatefulModule[T1,T2,S1]", "kind" : "val"}, {"label" : "learnableParameters", "tail" : "(): Long", "member" : "lamp.nn.GenericModule.learnableParameters", "link" : "lamp\/nn\/StatefulSeq3.html#learnableParameters:Long", "kind" : "final def"}, {"label" : "gradients", "tail" : "(loss: Variable, zeroGrad: Boolean): Seq[Option[STen]]", "member" : "lamp.nn.GenericModule.gradients", "link" : "lamp\/nn\/StatefulSeq3.html#gradients(loss:lamp.autograd.Variable,zeroGrad:Boolean):Seq[Option[lamp.STen]]", "kind" : "final def"}, {"label" : "parameters", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.GenericModule.parameters", "link" : "lamp\/nn\/StatefulSeq3.html#parameters:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "final def"}, {"label" : "apply", "tail" : "(a: (T1, (S1, S2, S3)))(arg0: Sc[S]): (T4, (S1, S2, S3))", "member" : "lamp.nn.GenericModule.apply", "link" : "lamp\/nn\/StatefulSeq3.html#apply[S](a:A)(implicitevidence$17:lamp.Sc[S]):B", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/StatefulSeq3.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/StatefulSeq3.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/StatefulSeq3.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/StatefulSeq3.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/StatefulSeq3.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/StatefulSeq3.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/StatefulSeq3.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/StatefulSeq3.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/StatefulSeq3.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/StatefulSeq3.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/StatefulSeq3.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/StatefulSeq3.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/StatefulSeq3.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/StatefulSeq3.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/StatefulSeq3.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/StatefulSeq3.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/nn\/StatefulSeq3.html", "kind" : "case class"}, {"name" : "lamp.nn.StatefulSeq4", "shortDescription" : "", "object" : "lamp\/nn\/StatefulSeq4$.html", "members_object" : [{"label" : "initState", "tail" : "(is1: InitState[M1, S1], is2: InitState[M2, S2], is3: InitState[M3, S3], is4: InitState[M4, S4]): InitState[StatefulSeq4[T1, T2, T3, T4, T5, S1, S2, S3, S4, M1, M2, M3, M4], (S1, S2, S3, S4)]", "member" : "lamp.nn.StatefulSeq4.initState", "link" : "lamp\/nn\/StatefulSeq4$.html#initState[T1,T2,T3,T4,T5,S1,S2,S3,S4,M1<:lamp.nn.StatefulModule[T1,T2,S1],M2<:lamp.nn.StatefulModule[T2,T3,S2],M3<:lamp.nn.StatefulModule[T3,T4,S3],M4<:lamp.nn.StatefulModule[T4,T5,S4]](implicitis1:lamp.nn.InitState[M1,S1],implicitis2:lamp.nn.InitState[M2,S2],implicitis3:lamp.nn.InitState[M3,S3],implicitis4:lamp.nn.InitState[M4,S4]):lamp.nn.InitState[lamp.nn.StatefulSeq4[T1,T2,T3,T4,T5,S1,S2,S3,S4,M1,M2,M3,M4],(S1,S2,S3,S4)]", "kind" : "implicit def"}, {"label" : "load", "tail" : "(arg0: Load[M1], arg1: Load[M2], arg2: Load[M3], arg3: Load[M4]): Load[StatefulSeq4[T1, T2, T3, T4, T5, S1, S2, S3, S4, M1, M2, M3, M4]]", "member" : "lamp.nn.StatefulSeq4.load", "link" : "lamp\/nn\/StatefulSeq4$.html#load[T1,T2,T3,T4,T5,S1,S2,S3,S4,M1<:lamp.nn.StatefulModule[T1,T2,S1],M2<:lamp.nn.StatefulModule[T2,T3,S2],M3<:lamp.nn.StatefulModule[T3,T4,S3],M4<:lamp.nn.StatefulModule[T4,T5,S4]](implicitevidence$21:lamp.nn.Load[M1],implicitevidence$22:lamp.nn.Load[M2],implicitevidence$23:lamp.nn.Load[M3],implicitevidence$24:lamp.nn.Load[M4]):lamp.nn.Load[lamp.nn.StatefulSeq4[T1,T2,T3,T4,T5,S1,S2,S3,S4,M1,M2,M3,M4]]", "kind" : "implicit def"}, {"label" : "trainingMode", "tail" : "(arg0: TrainingMode[M1], arg1: TrainingMode[M2], arg2: TrainingMode[M3], arg3: TrainingMode[M4]): TrainingMode[StatefulSeq4[T1, T2, T3, T4, T5, S1, S2, S3, S4, M1, M2, M3, M4]]", "member" : "lamp.nn.StatefulSeq4.trainingMode", "link" : "lamp\/nn\/StatefulSeq4$.html#trainingMode[T1,T2,T3,T4,T5,S1,S2,S3,S4,M1<:lamp.nn.StatefulModule[T1,T2,S1],M2<:lamp.nn.StatefulModule[T2,T3,S2],M3<:lamp.nn.StatefulModule[T3,T4,S3],M4<:lamp.nn.StatefulModule[T4,T5,S4]](implicitevidence$17:lamp.nn.TrainingMode[M1],implicitevidence$18:lamp.nn.TrainingMode[M2],implicitevidence$19:lamp.nn.TrainingMode[M3],implicitevidence$20:lamp.nn.TrainingMode[M4]):lamp.nn.TrainingMode[lamp.nn.StatefulSeq4[T1,T2,T3,T4,T5,S1,S2,S3,S4,M1,M2,M3,M4]]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/StatefulSeq4$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/StatefulSeq4$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/StatefulSeq4$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/StatefulSeq4$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/StatefulSeq4$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/StatefulSeq4$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/StatefulSeq4$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/StatefulSeq4$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/StatefulSeq4$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/StatefulSeq4$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/StatefulSeq4$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/StatefulSeq4$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/StatefulSeq4$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/StatefulSeq4$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/StatefulSeq4$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/StatefulSeq4$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/StatefulSeq4$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/StatefulSeq4$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/StatefulSeq4$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "forward1", "tail" : "(x: T1, st: (S1, S2, S3, S4))(arg0: Sc[S]): (T5, (S1, S2, S3, S4))", "member" : "lamp.nn.StatefulSeq4.forward1", "link" : "lamp\/nn\/StatefulSeq4.html#forward1[S](x:T1,st:(S1,S2,S3,S4))(implicitevidence$16:lamp.Sc[S]):(T5,(S1,S2,S3,S4))", "kind" : "def"}, {"label" : "forward", "tail" : "(x: (T1, (S1, S2, S3, S4)))(arg0: Sc[S]): (T5, (S1, S2, S3, S4))", "member" : "lamp.nn.StatefulSeq4.forward", "link" : "lamp\/nn\/StatefulSeq4.html#forward[S](x:(T1,(S1,S2,S3,S4)))(implicitevidence$15:lamp.Sc[S]):(T5,(S1,S2,S3,S4))", "kind" : "def"}, {"label" : "state", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.StatefulSeq4.state", "link" : "lamp\/nn\/StatefulSeq4.html#state:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "def"}, {"member" : "lamp.nn.StatefulSeq4#<init>", "error" : "unsupported entity"}, {"label" : "m4", "tail" : ": M4 with StatefulModule[T4, T5, S4]", "member" : "lamp.nn.StatefulSeq4.m4", "link" : "lamp\/nn\/StatefulSeq4.html#m4:M4withlamp.nn.StatefulModule[T4,T5,S4]", "kind" : "val"}, {"label" : "m3", "tail" : ": M3 with StatefulModule[T3, T4, S3]", "member" : "lamp.nn.StatefulSeq4.m3", "link" : "lamp\/nn\/StatefulSeq4.html#m3:M3withlamp.nn.StatefulModule[T3,T4,S3]", "kind" : "val"}, {"label" : "m2", "tail" : ": M2 with StatefulModule[T2, T3, S2]", "member" : "lamp.nn.StatefulSeq4.m2", "link" : "lamp\/nn\/StatefulSeq4.html#m2:M2withlamp.nn.StatefulModule[T2,T3,S2]", "kind" : "val"}, {"label" : "m1", "tail" : ": M1 with StatefulModule[T1, T2, S1]", "member" : "lamp.nn.StatefulSeq4.m1", "link" : "lamp\/nn\/StatefulSeq4.html#m1:M1withlamp.nn.StatefulModule[T1,T2,S1]", "kind" : "val"}, {"label" : "learnableParameters", "tail" : "(): Long", "member" : "lamp.nn.GenericModule.learnableParameters", "link" : "lamp\/nn\/StatefulSeq4.html#learnableParameters:Long", "kind" : "final def"}, {"label" : "gradients", "tail" : "(loss: Variable, zeroGrad: Boolean): Seq[Option[STen]]", "member" : "lamp.nn.GenericModule.gradients", "link" : "lamp\/nn\/StatefulSeq4.html#gradients(loss:lamp.autograd.Variable,zeroGrad:Boolean):Seq[Option[lamp.STen]]", "kind" : "final def"}, {"label" : "parameters", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.GenericModule.parameters", "link" : "lamp\/nn\/StatefulSeq4.html#parameters:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "final def"}, {"label" : "apply", "tail" : "(a: (T1, (S1, S2, S3, S4)))(arg0: Sc[S]): (T5, (S1, S2, S3, S4))", "member" : "lamp.nn.GenericModule.apply", "link" : "lamp\/nn\/StatefulSeq4.html#apply[S](a:A)(implicitevidence$17:lamp.Sc[S]):B", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/StatefulSeq4.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/StatefulSeq4.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/StatefulSeq4.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/StatefulSeq4.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/StatefulSeq4.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/StatefulSeq4.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/StatefulSeq4.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/StatefulSeq4.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/StatefulSeq4.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/StatefulSeq4.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/StatefulSeq4.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/StatefulSeq4.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/StatefulSeq4.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/StatefulSeq4.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/StatefulSeq4.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/StatefulSeq4.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/nn\/StatefulSeq4.html", "kind" : "case class"}, {"name" : "lamp.nn.StatefulSeq5", "shortDescription" : "", "object" : "lamp\/nn\/StatefulSeq5$.html", "members_object" : [{"label" : "initState", "tail" : "(is1: InitState[M1, S1], is2: InitState[M2, S2], is3: InitState[M3, S3], is4: InitState[M4, S4], is5: InitState[M5, S5]): InitState[StatefulSeq5[T1, T2, T3, T4, T5, T6, S1, S2, S3, S4, S5, M1, M2, M3, M4, M5], (S1, S2, S3, S4, S5)]", "member" : "lamp.nn.StatefulSeq5.initState", "link" : "lamp\/nn\/StatefulSeq5$.html#initState[T1,T2,T3,T4,T5,T6,S1,S2,S3,S4,S5,M1<:lamp.nn.StatefulModule[T1,T2,S1],M2<:lamp.nn.StatefulModule[T2,T3,S2],M3<:lamp.nn.StatefulModule[T3,T4,S3],M4<:lamp.nn.StatefulModule[T4,T5,S4],M5<:lamp.nn.StatefulModule[T5,T6,S5]](implicitis1:lamp.nn.InitState[M1,S1],implicitis2:lamp.nn.InitState[M2,S2],implicitis3:lamp.nn.InitState[M3,S3],implicitis4:lamp.nn.InitState[M4,S4],implicitis5:lamp.nn.InitState[M5,S5]):lamp.nn.InitState[lamp.nn.StatefulSeq5[T1,T2,T3,T4,T5,T6,S1,S2,S3,S4,S5,M1,M2,M3,M4,M5],(S1,S2,S3,S4,S5)]", "kind" : "implicit def"}, {"label" : "load", "tail" : "(arg0: Load[M1], arg1: Load[M2], arg2: Load[M3], arg3: Load[M4], arg4: Load[M5]): Load[StatefulSeq5[T1, T2, T3, T4, T5, T6, S1, S2, S3, S4, S5, M1, M2, M3, M4, M5]]", "member" : "lamp.nn.StatefulSeq5.load", "link" : "lamp\/nn\/StatefulSeq5$.html#load[T1,T2,T3,T4,T5,T6,S1,S2,S3,S4,S5,M1<:lamp.nn.StatefulModule[T1,T2,S1],M2<:lamp.nn.StatefulModule[T2,T3,S2],M3<:lamp.nn.StatefulModule[T3,T4,S3],M4<:lamp.nn.StatefulModule[T4,T5,S4],M5<:lamp.nn.StatefulModule[T5,T6,S5]](implicitevidence$32:lamp.nn.Load[M1],implicitevidence$33:lamp.nn.Load[M2],implicitevidence$34:lamp.nn.Load[M3],implicitevidence$35:lamp.nn.Load[M4],implicitevidence$36:lamp.nn.Load[M5]):lamp.nn.Load[lamp.nn.StatefulSeq5[T1,T2,T3,T4,T5,T6,S1,S2,S3,S4,S5,M1,M2,M3,M4,M5]]", "kind" : "implicit def"}, {"label" : "trainingMode", "tail" : "(arg0: TrainingMode[M1], arg1: TrainingMode[M2], arg2: TrainingMode[M3], arg3: TrainingMode[M4], arg4: TrainingMode[M5]): TrainingMode[StatefulSeq5[T1, T2, T3, T4, T5, T6, S1, S2, S3, S4, S5, M1, M2, M3, M4, M5]]", "member" : "lamp.nn.StatefulSeq5.trainingMode", "link" : "lamp\/nn\/StatefulSeq5$.html#trainingMode[T1,T2,T3,T4,T5,T6,S1,S2,S3,S4,S5,M1<:lamp.nn.StatefulModule[T1,T2,S1],M2<:lamp.nn.StatefulModule[T2,T3,S2],M3<:lamp.nn.StatefulModule[T3,T4,S3],M4<:lamp.nn.StatefulModule[T4,T5,S4],M5<:lamp.nn.StatefulModule[T5,T6,S5]](implicitevidence$27:lamp.nn.TrainingMode[M1],implicitevidence$28:lamp.nn.TrainingMode[M2],implicitevidence$29:lamp.nn.TrainingMode[M3],implicitevidence$30:lamp.nn.TrainingMode[M4],implicitevidence$31:lamp.nn.TrainingMode[M5]):lamp.nn.TrainingMode[lamp.nn.StatefulSeq5[T1,T2,T3,T4,T5,T6,S1,S2,S3,S4,S5,M1,M2,M3,M4,M5]]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/StatefulSeq5$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/StatefulSeq5$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/StatefulSeq5$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/StatefulSeq5$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/StatefulSeq5$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/StatefulSeq5$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/StatefulSeq5$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/StatefulSeq5$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/StatefulSeq5$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/StatefulSeq5$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/StatefulSeq5$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/StatefulSeq5$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/StatefulSeq5$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/StatefulSeq5$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/StatefulSeq5$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/StatefulSeq5$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/StatefulSeq5$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/StatefulSeq5$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/StatefulSeq5$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "forward1", "tail" : "(x: T1, st: (S1, S2, S3, S4, S5))(arg0: Sc[S]): (T6, (S1, S2, S3, S4, S5))", "member" : "lamp.nn.StatefulSeq5.forward1", "link" : "lamp\/nn\/StatefulSeq5.html#forward1[S](x:T1,st:(S1,S2,S3,S4,S5))(implicitevidence$26:lamp.Sc[S]):(T6,(S1,S2,S3,S4,S5))", "kind" : "def"}, {"label" : "forward", "tail" : "(x: (T1, (S1, S2, S3, S4, S5)))(arg0: Sc[S]): (T6, (S1, S2, S3, S4, S5))", "member" : "lamp.nn.StatefulSeq5.forward", "link" : "lamp\/nn\/StatefulSeq5.html#forward[S](x:(T1,(S1,S2,S3,S4,S5)))(implicitevidence$25:lamp.Sc[S]):(T6,(S1,S2,S3,S4,S5))", "kind" : "def"}, {"label" : "state", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.StatefulSeq5.state", "link" : "lamp\/nn\/StatefulSeq5.html#state:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "def"}, {"member" : "lamp.nn.StatefulSeq5#<init>", "error" : "unsupported entity"}, {"label" : "m5", "tail" : ": M5 with StatefulModule[T5, T6, S5]", "member" : "lamp.nn.StatefulSeq5.m5", "link" : "lamp\/nn\/StatefulSeq5.html#m5:M5withlamp.nn.StatefulModule[T5,T6,S5]", "kind" : "val"}, {"label" : "m4", "tail" : ": M4 with StatefulModule[T4, T5, S4]", "member" : "lamp.nn.StatefulSeq5.m4", "link" : "lamp\/nn\/StatefulSeq5.html#m4:M4withlamp.nn.StatefulModule[T4,T5,S4]", "kind" : "val"}, {"label" : "m3", "tail" : ": M3 with StatefulModule[T3, T4, S3]", "member" : "lamp.nn.StatefulSeq5.m3", "link" : "lamp\/nn\/StatefulSeq5.html#m3:M3withlamp.nn.StatefulModule[T3,T4,S3]", "kind" : "val"}, {"label" : "m2", "tail" : ": M2 with StatefulModule[T2, T3, S2]", "member" : "lamp.nn.StatefulSeq5.m2", "link" : "lamp\/nn\/StatefulSeq5.html#m2:M2withlamp.nn.StatefulModule[T2,T3,S2]", "kind" : "val"}, {"label" : "m1", "tail" : ": M1 with StatefulModule[T1, T2, S1]", "member" : "lamp.nn.StatefulSeq5.m1", "link" : "lamp\/nn\/StatefulSeq5.html#m1:M1withlamp.nn.StatefulModule[T1,T2,S1]", "kind" : "val"}, {"label" : "learnableParameters", "tail" : "(): Long", "member" : "lamp.nn.GenericModule.learnableParameters", "link" : "lamp\/nn\/StatefulSeq5.html#learnableParameters:Long", "kind" : "final def"}, {"label" : "gradients", "tail" : "(loss: Variable, zeroGrad: Boolean): Seq[Option[STen]]", "member" : "lamp.nn.GenericModule.gradients", "link" : "lamp\/nn\/StatefulSeq5.html#gradients(loss:lamp.autograd.Variable,zeroGrad:Boolean):Seq[Option[lamp.STen]]", "kind" : "final def"}, {"label" : "parameters", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.GenericModule.parameters", "link" : "lamp\/nn\/StatefulSeq5.html#parameters:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "final def"}, {"label" : "apply", "tail" : "(a: (T1, (S1, S2, S3, S4, S5)))(arg0: Sc[S]): (T6, (S1, S2, S3, S4, S5))", "member" : "lamp.nn.GenericModule.apply", "link" : "lamp\/nn\/StatefulSeq5.html#apply[S](a:A)(implicitevidence$17:lamp.Sc[S]):B", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/StatefulSeq5.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/StatefulSeq5.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/StatefulSeq5.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/StatefulSeq5.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/StatefulSeq5.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/StatefulSeq5.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/StatefulSeq5.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/StatefulSeq5.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/StatefulSeq5.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/StatefulSeq5.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/StatefulSeq5.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/StatefulSeq5.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/StatefulSeq5.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/StatefulSeq5.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/StatefulSeq5.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/StatefulSeq5.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/nn\/StatefulSeq5.html", "kind" : "case class"}, {"name" : "lamp.nn.statefulSequence", "shortDescription" : "", "object" : "lamp\/nn\/statefulSequence$.html", "members_object" : [{"label" : "apply", "tail" : "(m1: M1 with StatefulModule[T1, T2, S1], m2: M2 with StatefulModule[T2, T3, S2], m3: M3 with StatefulModule[T3, T4, S3], m4: M4 with StatefulModule[T4, T5, S4], m5: M5 with StatefulModule[T5, T6, S5]): StatefulSeq5[T1, T2, T3, T4, T5, T6, S1, S2, S3, S4, S5, M1 with StatefulModule[T1, T2, S1], M2 with StatefulModule[T2, T3, S2], M3 with StatefulModule[T3, T4, S3], M4 with StatefulModule[T4, T5, S4], M5 with StatefulModule[T5, T6, S5]]", "member" : "lamp.nn.statefulSequence.apply", "link" : "lamp\/nn\/statefulSequence$.html#apply[T1,T2,T3,T4,T5,T6,S1,S2,S3,S4,S5,M1<:lamp.nn.StatefulModule[T1,T2,S1],M2<:lamp.nn.StatefulModule[T2,T3,S2],M3<:lamp.nn.StatefulModule[T3,T4,S3],M4<:lamp.nn.StatefulModule[T4,T5,S4],M5<:lamp.nn.StatefulModule[T5,T6,S5]](m1:M1withlamp.nn.StatefulModule[T1,T2,S1],m2:M2withlamp.nn.StatefulModule[T2,T3,S2],m3:M3withlamp.nn.StatefulModule[T3,T4,S3],m4:M4withlamp.nn.StatefulModule[T4,T5,S4],m5:M5withlamp.nn.StatefulModule[T5,T6,S5]):lamp.nn.StatefulSeq5[T1,T2,T3,T4,T5,T6,S1,S2,S3,S4,S5,M1withlamp.nn.StatefulModule[T1,T2,S1],M2withlamp.nn.StatefulModule[T2,T3,S2],M3withlamp.nn.StatefulModule[T3,T4,S3],M4withlamp.nn.StatefulModule[T4,T5,S4],M5withlamp.nn.StatefulModule[T5,T6,S5]]", "kind" : "def"}, {"label" : "apply", "tail" : "(m1: M1 with StatefulModule[T1, T2, S1], m2: M2 with StatefulModule[T2, T3, S2], m3: M3 with StatefulModule[T3, T4, S3], m4: M4 with StatefulModule[T4, T5, S4]): StatefulSeq4[T1, T2, T3, T4, T5, S1, S2, S3, S4, M1 with StatefulModule[T1, T2, S1], M2 with StatefulModule[T2, T3, S2], M3 with StatefulModule[T3, T4, S3], M4 with StatefulModule[T4, T5, S4]]", "member" : "lamp.nn.statefulSequence.apply", "link" : "lamp\/nn\/statefulSequence$.html#apply[T1,T2,T3,T4,T5,S1,S2,S3,S4,M1<:lamp.nn.StatefulModule[T1,T2,S1],M2<:lamp.nn.StatefulModule[T2,T3,S2],M3<:lamp.nn.StatefulModule[T3,T4,S3],M4<:lamp.nn.StatefulModule[T4,T5,S4]](m1:M1withlamp.nn.StatefulModule[T1,T2,S1],m2:M2withlamp.nn.StatefulModule[T2,T3,S2],m3:M3withlamp.nn.StatefulModule[T3,T4,S3],m4:M4withlamp.nn.StatefulModule[T4,T5,S4]):lamp.nn.StatefulSeq4[T1,T2,T3,T4,T5,S1,S2,S3,S4,M1withlamp.nn.StatefulModule[T1,T2,S1],M2withlamp.nn.StatefulModule[T2,T3,S2],M3withlamp.nn.StatefulModule[T3,T4,S3],M4withlamp.nn.StatefulModule[T4,T5,S4]]", "kind" : "def"}, {"label" : "apply", "tail" : "(m1: M1 with StatefulModule[T1, T2, S1], m2: M2 with StatefulModule[T2, T3, S2], m3: M3 with StatefulModule[T3, T4, S3]): StatefulSeq3[T1, T2, T3, T4, S1, S2, S3, M1 with StatefulModule[T1, T2, S1], M2 with StatefulModule[T2, T3, S2], M3 with StatefulModule[T3, T4, S3]]", "member" : "lamp.nn.statefulSequence.apply", "link" : "lamp\/nn\/statefulSequence$.html#apply[T1,T2,T3,T4,S1,S2,S3,M1<:lamp.nn.StatefulModule[T1,T2,S1],M2<:lamp.nn.StatefulModule[T2,T3,S2],M3<:lamp.nn.StatefulModule[T3,T4,S3]](m1:M1withlamp.nn.StatefulModule[T1,T2,S1],m2:M2withlamp.nn.StatefulModule[T2,T3,S2],m3:M3withlamp.nn.StatefulModule[T3,T4,S3]):lamp.nn.StatefulSeq3[T1,T2,T3,T4,S1,S2,S3,M1withlamp.nn.StatefulModule[T1,T2,S1],M2withlamp.nn.StatefulModule[T2,T3,S2],M3withlamp.nn.StatefulModule[T3,T4,S3]]", "kind" : "def"}, {"label" : "apply", "tail" : "(m1: M1 with StatefulModule[T1, T2, S1], m2: M2 with StatefulModule[T2, T3, S2]): StatefulSeq2[T1, T2, T3, S1, S2, M1 with StatefulModule[T1, T2, S1], M2 with StatefulModule[T2, T3, S2]]", "member" : "lamp.nn.statefulSequence.apply", "link" : "lamp\/nn\/statefulSequence$.html#apply[T1,T2,T3,S1,S2,M1<:lamp.nn.StatefulModule[T1,T2,S1],M2<:lamp.nn.StatefulModule[T2,T3,S2]](m1:M1withlamp.nn.StatefulModule[T1,T2,S1],m2:M2withlamp.nn.StatefulModule[T2,T3,S2]):lamp.nn.StatefulSeq2[T1,T2,T3,S1,S2,M1withlamp.nn.StatefulModule[T1,T2,S1],M2withlamp.nn.StatefulModule[T2,T3,S2]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/statefulSequence$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/statefulSequence$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/statefulSequence$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/statefulSequence$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/statefulSequence$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/statefulSequence$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/statefulSequence$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/statefulSequence$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/statefulSequence$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/statefulSequence$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/statefulSequence$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/statefulSequence$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/statefulSequence$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/statefulSequence$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/statefulSequence$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/statefulSequence$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/statefulSequence$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/statefulSequence$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/statefulSequence$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "lamp.nn.SupervisedModel", "shortDescription" : "", "members_case class" : [{"label" : "zipOptimizer", "tail" : "(optimizerFactory: (Seq[(STen, PTag)]) ⇒ Optimizer): ModelWithOptimizer[I, M]", "member" : "lamp.nn.SupervisedModel.zipOptimizer", "link" : "lamp\/nn\/SupervisedModel.html#zipOptimizer(optimizerFactory:Seq[(lamp.STen,lamp.nn.PTag)]=>lamp.nn.Optimizer):lamp.nn.ModelWithOptimizer[I,M]", "kind" : "def"}, {"label" : "lossAndGradients", "tail" : "(samples: I, target: STen): (Double, Seq[Option[STen]])", "member" : "lamp.nn.SupervisedModel.lossAndGradients", "link" : "lamp\/nn\/SupervisedModel.html#lossAndGradients(samples:I,target:lamp.STen):(Double,Seq[Option[lamp.STen]])", "kind" : "def"}, {"label" : "lossAndOutput", "tail" : "(samples: I, target: STen): Resource[IO, (Double, STen, Long)]", "member" : "lamp.nn.SupervisedModel.lossAndOutput", "link" : "lamp\/nn\/SupervisedModel.html#lossAndOutput(samples:I,target:lamp.STen):cats.effect.Resource[cats.effect.IO,(Double,lamp.STen,Long)]", "kind" : "def"}, {"label" : "asTraining", "tail" : "(): SupervisedModel[I, M with GenericModule[I, Variable]]", "member" : "lamp.nn.SupervisedModel.asTraining", "link" : "lamp\/nn\/SupervisedModel.html#asTraining:lamp.nn.SupervisedModel[I,Mwithlamp.nn.GenericModule[I,lamp.autograd.Variable]]", "kind" : "def"}, {"label" : "asEval", "tail" : "(): SupervisedModel[I, M with GenericModule[I, Variable]]", "member" : "lamp.nn.SupervisedModel.asEval", "link" : "lamp\/nn\/SupervisedModel.html#asEval:lamp.nn.SupervisedModel[I,Mwithlamp.nn.GenericModule[I,lamp.autograd.Variable]]", "kind" : "def"}, {"member" : "lamp.nn.SupervisedModel#<init>", "error" : "unsupported entity"}, {"label" : "lossFunction", "tail" : ": LossFunction", "member" : "lamp.nn.SupervisedModel.lossFunction", "link" : "lamp\/nn\/SupervisedModel.html#lossFunction:lamp.nn.LossFunction", "kind" : "val"}, {"label" : "module", "tail" : ": M with GenericModule[I, Variable]", "member" : "lamp.nn.SupervisedModel.module", "link" : "lamp\/nn\/SupervisedModel.html#module:Mwithlamp.nn.GenericModule[I,lamp.autograd.Variable]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/SupervisedModel.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/SupervisedModel.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/SupervisedModel.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/SupervisedModel.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/SupervisedModel.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/SupervisedModel.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/SupervisedModel.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/SupervisedModel.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/SupervisedModel.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/SupervisedModel.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/SupervisedModel.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/SupervisedModel.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/SupervisedModel.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/SupervisedModel.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/SupervisedModel.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/SupervisedModel.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/nn\/SupervisedModel.html", "kind" : "case class"}, {"name" : "lamp.nn.ToLift", "shortDescription" : "", "members_class" : [{"label" : "lift", "tail" : "(): LiftedModule[M with Module]", "member" : "lamp.nn.ToLift.lift", "link" : "lamp\/nn\/package$$ToLift.html#lift:lamp.nn.LiftedModule[Mwithlamp.nn.package.Module]", "kind" : "def"}, {"member" : "lamp.nn.ToLift#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/package$$ToLift.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/package$$ToLift.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/package$$ToLift.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/package$$ToLift.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/package$$ToLift.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/package$$ToLift.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/package$$ToLift.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/package$$ToLift.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/package$$ToLift.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/package$$ToLift.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/package$$ToLift.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/package$$ToLift.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/package$$ToLift.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/package$$ToLift.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/package$$ToLift.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/package$$ToLift.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/package$$ToLift.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/package$$ToLift.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/package$$ToLift.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "lamp\/nn\/package$$ToLift.html", "kind" : "class"}, {"name" : "lamp.nn.ToMappedState", "shortDescription" : "", "members_class" : [{"label" : "mapState", "tail" : "(f: (C) ⇒ D): MappedState[A, B, C, D, M]", "member" : "lamp.nn.ToMappedState.mapState", "link" : "lamp\/nn\/package$$ToMappedState.html#mapState[D](f:C=>D):lamp.nn.MappedState[A,B,C,D,M]", "kind" : "def"}, {"member" : "lamp.nn.ToMappedState#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/package$$ToMappedState.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/package$$ToMappedState.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/package$$ToMappedState.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/package$$ToMappedState.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/package$$ToMappedState.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/package$$ToMappedState.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/package$$ToMappedState.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/package$$ToMappedState.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/package$$ToMappedState.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/package$$ToMappedState.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/package$$ToMappedState.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/package$$ToMappedState.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/package$$ToMappedState.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/package$$ToMappedState.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/package$$ToMappedState.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/package$$ToMappedState.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/package$$ToMappedState.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/package$$ToMappedState.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/package$$ToMappedState.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "lamp\/nn\/package$$ToMappedState.html", "kind" : "class"}, {"name" : "lamp.nn.ToUnlift", "shortDescription" : "", "members_class" : [{"label" : "unlift", "tail" : "(): UnliftedModule[A, B, C, D, M with StatefulModule2[A, B, C, D]]", "member" : "lamp.nn.ToUnlift.unlift", "link" : "lamp\/nn\/package$$ToUnlift.html#unlift:lamp.nn.UnliftedModule[A,B,C,D,Mwithlamp.nn.package.StatefulModule2[A,B,C,D]]", "kind" : "def"}, {"member" : "lamp.nn.ToUnlift#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/package$$ToUnlift.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/package$$ToUnlift.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/package$$ToUnlift.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/package$$ToUnlift.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/package$$ToUnlift.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/package$$ToUnlift.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/package$$ToUnlift.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/package$$ToUnlift.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/package$$ToUnlift.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/package$$ToUnlift.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/package$$ToUnlift.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/package$$ToUnlift.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/package$$ToUnlift.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/package$$ToUnlift.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/package$$ToUnlift.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/package$$ToUnlift.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/package$$ToUnlift.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/package$$ToUnlift.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/package$$ToUnlift.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "lamp\/nn\/package$$ToUnlift.html", "kind" : "class"}, {"name" : "lamp.nn.ToWithInit", "shortDescription" : "", "members_class" : [{"label" : "withInit", "tail" : "(c: C): WithInit[A, B, C, M]", "member" : "lamp.nn.ToWithInit.withInit", "link" : "lamp\/nn\/package$$ToWithInit.html#withInit(c:C):lamp.nn.WithInit[A,B,C,M]", "kind" : "def"}, {"member" : "lamp.nn.ToWithInit#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/package$$ToWithInit.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/package$$ToWithInit.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/package$$ToWithInit.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/package$$ToWithInit.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/package$$ToWithInit.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/package$$ToWithInit.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/package$$ToWithInit.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/package$$ToWithInit.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/package$$ToWithInit.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/package$$ToWithInit.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/package$$ToWithInit.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/package$$ToWithInit.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/package$$ToWithInit.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/package$$ToWithInit.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/package$$ToWithInit.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/package$$ToWithInit.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/package$$ToWithInit.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/package$$ToWithInit.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/package$$ToWithInit.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "lamp\/nn\/package$$ToWithInit.html", "kind" : "class"}, {"name" : "lamp.nn.TrainingMode", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/TrainingMode.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/TrainingMode.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/TrainingMode.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/TrainingMode.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/TrainingMode.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/TrainingMode.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/TrainingMode.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/TrainingMode.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/TrainingMode.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/TrainingMode.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/TrainingMode.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/TrainingMode.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/TrainingMode.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/TrainingMode.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/TrainingMode.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/TrainingMode.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/TrainingMode.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/TrainingMode.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/TrainingMode.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "asTraining", "tail" : "(m: M): M", "member" : "lamp.nn.TrainingMode.asTraining", "link" : "lamp\/nn\/TrainingMode.html#asTraining(m:M):M", "kind" : "abstract def"}, {"label" : "asEval", "tail" : "(m: M): M", "member" : "lamp.nn.TrainingMode.asEval", "link" : "lamp\/nn\/TrainingMode.html#asEval(m:M):M", "kind" : "abstract def"}], "shortDescription" : "", "object" : "lamp\/nn\/TrainingMode$.html", "members_object" : [{"label" : "identity", "tail" : "(): TrainingMode[M]", "member" : "lamp.nn.TrainingMode.identity", "link" : "lamp\/nn\/TrainingMode$.html#identity[M]:lamp.nn.TrainingMode[M]", "kind" : "def"}, {"label" : "make", "tail" : "(asEval1: (M) ⇒ M, asTraining1: (M) ⇒ M): TrainingMode[M]", "member" : "lamp.nn.TrainingMode.make", "link" : "lamp\/nn\/TrainingMode$.html#make[M](asEval1:M=>M,asTraining1:M=>M):lamp.nn.TrainingMode[M]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/TrainingMode$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/TrainingMode$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/TrainingMode$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/TrainingMode$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/TrainingMode$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/TrainingMode$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/TrainingMode$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/TrainingMode$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/TrainingMode$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/TrainingMode$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/TrainingMode$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/TrainingMode$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/TrainingMode$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/TrainingMode$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/TrainingMode$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/TrainingMode$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/TrainingMode$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/TrainingMode$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/TrainingMode$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "lamp\/nn\/TrainingMode.html", "kind" : "trait"}, {"name" : "lamp.nn.TrainingModeSyntax", "shortDescription" : "", "members_class" : [{"label" : "asTraining", "tail" : "(): M", "member" : "lamp.nn.TrainingModeSyntax.asTraining", "link" : "lamp\/nn\/package$$TrainingModeSyntax.html#asTraining:M", "kind" : "def"}, {"label" : "asEval", "tail" : "(): M", "member" : "lamp.nn.TrainingModeSyntax.asEval", "link" : "lamp\/nn\/package$$TrainingModeSyntax.html#asEval:M", "kind" : "def"}, {"member" : "lamp.nn.TrainingModeSyntax#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/package$$TrainingModeSyntax.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/package$$TrainingModeSyntax.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/package$$TrainingModeSyntax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/package$$TrainingModeSyntax.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/package$$TrainingModeSyntax.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/package$$TrainingModeSyntax.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/package$$TrainingModeSyntax.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/package$$TrainingModeSyntax.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/package$$TrainingModeSyntax.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/package$$TrainingModeSyntax.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/package$$TrainingModeSyntax.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/package$$TrainingModeSyntax.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/package$$TrainingModeSyntax.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/package$$TrainingModeSyntax.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/package$$TrainingModeSyntax.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/package$$TrainingModeSyntax.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/package$$TrainingModeSyntax.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/package$$TrainingModeSyntax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/package$$TrainingModeSyntax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "lamp\/nn\/package$$TrainingModeSyntax.html", "kind" : "class"}, {"name" : "lamp.nn.UnliftedModule", "shortDescription" : "", "object" : "lamp\/nn\/UnliftedModule$.html", "members_object" : [{"label" : "initState", "tail" : "(is: InitState[M, C]): InitState[UnliftedModule[A, B, C, D, M], Unit]", "member" : "lamp.nn.UnliftedModule.initState", "link" : "lamp\/nn\/UnliftedModule$.html#initState[A,B,C,D,M<:lamp.nn.StatefulModule2[A,B,C,D]](implicitis:lamp.nn.InitState[M,C]):lamp.nn.InitState[lamp.nn.UnliftedModule[A,B,C,D,M],Unit]", "kind" : "implicit def"}, {"label" : "load", "tail" : "(arg0: Load[M]): Load[UnliftedModule[A, B, C, D, M]]", "member" : "lamp.nn.UnliftedModule.load", "link" : "lamp\/nn\/UnliftedModule$.html#load[A,B,C,D,M<:lamp.nn.StatefulModule2[A,B,C,D]](implicitevidence$15:lamp.nn.Load[M]):lamp.nn.Load[lamp.nn.UnliftedModule[A,B,C,D,M]]", "kind" : "implicit def"}, {"label" : "trainingMode", "tail" : "(t: TrainingMode[M], is: InitState[M, C]): TrainingMode[UnliftedModule[A, B, C, D, M]]", "member" : "lamp.nn.UnliftedModule.trainingMode", "link" : "lamp\/nn\/UnliftedModule$.html#trainingMode[A,B,C,D,M<:lamp.nn.StatefulModule2[A,B,C,D]](implicitt:lamp.nn.TrainingMode[M],implicitis:lamp.nn.InitState[M,C]):lamp.nn.TrainingMode[lamp.nn.UnliftedModule[A,B,C,D,M]]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/UnliftedModule$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/UnliftedModule$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/UnliftedModule$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/UnliftedModule$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/UnliftedModule$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/UnliftedModule$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/UnliftedModule$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/UnliftedModule$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/UnliftedModule$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/UnliftedModule$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/UnliftedModule$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/UnliftedModule$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/UnliftedModule$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/UnliftedModule$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/UnliftedModule$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/UnliftedModule$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/UnliftedModule$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/UnliftedModule$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/UnliftedModule$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "forward", "tail" : "(x: A)(arg0: Sc[S]): B", "member" : "lamp.nn.UnliftedModule.forward", "link" : "lamp\/nn\/UnliftedModule.html#forward[S](x:A)(implicitevidence$14:lamp.Sc[S]):B", "kind" : "def"}, {"label" : "state", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.UnliftedModule.state", "link" : "lamp\/nn\/UnliftedModule.html#state:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "def"}, {"member" : "lamp.nn.UnliftedModule#<init>", "error" : "unsupported entity"}, {"label" : "statefulModule", "tail" : ": M with StatefulModule2[A, B, C, D]", "member" : "lamp.nn.UnliftedModule.statefulModule", "link" : "lamp\/nn\/UnliftedModule.html#statefulModule:Mwithlamp.nn.StatefulModule2[A,B,C,D]", "kind" : "val"}, {"label" : "learnableParameters", "tail" : "(): Long", "member" : "lamp.nn.GenericModule.learnableParameters", "link" : "lamp\/nn\/UnliftedModule.html#learnableParameters:Long", "kind" : "final def"}, {"label" : "gradients", "tail" : "(loss: Variable, zeroGrad: Boolean): Seq[Option[STen]]", "member" : "lamp.nn.GenericModule.gradients", "link" : "lamp\/nn\/UnliftedModule.html#gradients(loss:lamp.autograd.Variable,zeroGrad:Boolean):Seq[Option[lamp.STen]]", "kind" : "final def"}, {"label" : "parameters", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.GenericModule.parameters", "link" : "lamp\/nn\/UnliftedModule.html#parameters:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "final def"}, {"label" : "apply", "tail" : "(a: A)(arg0: Sc[S]): B", "member" : "lamp.nn.GenericModule.apply", "link" : "lamp\/nn\/UnliftedModule.html#apply[S](a:A)(implicitevidence$17:lamp.Sc[S]):B", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/UnliftedModule.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/UnliftedModule.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/UnliftedModule.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/UnliftedModule.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/UnliftedModule.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/UnliftedModule.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/UnliftedModule.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/UnliftedModule.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/UnliftedModule.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/UnliftedModule.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/UnliftedModule.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/UnliftedModule.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/UnliftedModule.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/UnliftedModule.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/UnliftedModule.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/UnliftedModule.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/nn\/UnliftedModule.html", "kind" : "case class"}, {"name" : "lamp.nn.WeightNormLinear", "shortDescription" : "", "object" : "lamp\/nn\/WeightNormLinear$.html", "members_object" : [{"label" : "apply", "tail" : "(in: Int, out: Int, tOpt: TensorOptions, bias: Boolean)(arg0: Sc[S]): WeightNormLinear", "member" : "lamp.nn.WeightNormLinear.apply", "link" : "lamp\/nn\/WeightNormLinear$.html#apply[S](in:Int,out:Int,tOpt:aten.TensorOptions,bias:Boolean)(implicitevidence$2:lamp.Sc[S]):lamp.nn.WeightNormLinear", "kind" : "def"}, {"label" : "Bias", "tail" : "", "member" : "lamp.nn.WeightNormLinear.Bias", "link" : "lamp\/nn\/WeightNormLinear$.html#Bias", "kind" : "object"}, {"label" : "WeightsG", "tail" : "", "member" : "lamp.nn.WeightNormLinear.WeightsG", "link" : "lamp\/nn\/WeightNormLinear$.html#WeightsG", "kind" : "object"}, {"label" : "WeightsV", "tail" : "", "member" : "lamp.nn.WeightNormLinear.WeightsV", "link" : "lamp\/nn\/WeightNormLinear$.html#WeightsV", "kind" : "object"}, {"label" : "load", "tail" : ": Load[WeightNormLinear]", "member" : "lamp.nn.WeightNormLinear.load", "link" : "lamp\/nn\/WeightNormLinear$.html#load:lamp.nn.Load[lamp.nn.WeightNormLinear]", "kind" : "implicit val"}, {"label" : "trainingMode", "tail" : ": TrainingMode[WeightNormLinear]", "member" : "lamp.nn.WeightNormLinear.trainingMode", "link" : "lamp\/nn\/WeightNormLinear$.html#trainingMode:lamp.nn.TrainingMode[lamp.nn.WeightNormLinear]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/WeightNormLinear$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/WeightNormLinear$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/WeightNormLinear$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/WeightNormLinear$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/WeightNormLinear$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/WeightNormLinear$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/WeightNormLinear$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/WeightNormLinear$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/WeightNormLinear$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/WeightNormLinear$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/WeightNormLinear$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/WeightNormLinear$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/WeightNormLinear$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/WeightNormLinear$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/WeightNormLinear$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/WeightNormLinear$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/WeightNormLinear$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/WeightNormLinear$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/WeightNormLinear$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "forward", "tail" : "(x: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.nn.WeightNormLinear.forward", "link" : "lamp\/nn\/WeightNormLinear.html#forward[S](x:lamp.autograd.Variable)(implicitevidence$1:lamp.Sc[S]):lamp.autograd.Variable", "kind" : "def"}, {"label" : "state", "tail" : ": Seq[(Constant, PTag)]", "member" : "lamp.nn.WeightNormLinear.state", "link" : "lamp\/nn\/WeightNormLinear.html#state:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "val"}, {"member" : "lamp.nn.WeightNormLinear#<init>", "error" : "unsupported entity"}, {"label" : "bias", "tail" : ": Option[Constant]", "member" : "lamp.nn.WeightNormLinear.bias", "link" : "lamp\/nn\/WeightNormLinear.html#bias:Option[lamp.autograd.Constant]", "kind" : "val"}, {"label" : "weightsG", "tail" : ": Constant", "member" : "lamp.nn.WeightNormLinear.weightsG", "link" : "lamp\/nn\/WeightNormLinear.html#weightsG:lamp.autograd.Constant", "kind" : "val"}, {"label" : "weightsV", "tail" : ": Constant", "member" : "lamp.nn.WeightNormLinear.weightsV", "link" : "lamp\/nn\/WeightNormLinear.html#weightsV:lamp.autograd.Constant", "kind" : "val"}, {"label" : "learnableParameters", "tail" : "(): Long", "member" : "lamp.nn.GenericModule.learnableParameters", "link" : "lamp\/nn\/WeightNormLinear.html#learnableParameters:Long", "kind" : "final def"}, {"label" : "gradients", "tail" : "(loss: Variable, zeroGrad: Boolean): Seq[Option[STen]]", "member" : "lamp.nn.GenericModule.gradients", "link" : "lamp\/nn\/WeightNormLinear.html#gradients(loss:lamp.autograd.Variable,zeroGrad:Boolean):Seq[Option[lamp.STen]]", "kind" : "final def"}, {"label" : "parameters", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.GenericModule.parameters", "link" : "lamp\/nn\/WeightNormLinear.html#parameters:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "final def"}, {"label" : "apply", "tail" : "(a: Variable)(arg0: Sc[S]): Variable", "member" : "lamp.nn.GenericModule.apply", "link" : "lamp\/nn\/WeightNormLinear.html#apply[S](a:A)(implicitevidence$17:lamp.Sc[S]):B", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/WeightNormLinear.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/WeightNormLinear.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/WeightNormLinear.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/WeightNormLinear.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/WeightNormLinear.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/WeightNormLinear.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/WeightNormLinear.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/WeightNormLinear.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/WeightNormLinear.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/WeightNormLinear.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/WeightNormLinear.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/WeightNormLinear.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/WeightNormLinear.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/WeightNormLinear.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/WeightNormLinear.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/WeightNormLinear.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/nn\/WeightNormLinear.html", "kind" : "case class"}, {"name" : "lamp.nn.WithInit", "shortDescription" : "", "object" : "lamp\/nn\/WithInit$.html", "members_object" : [{"label" : "initState", "tail" : "(): InitState[WithInit[A, B, C, M], C]", "member" : "lamp.nn.WithInit.initState", "link" : "lamp\/nn\/WithInit$.html#initState[A,B,C,M<:lamp.nn.StatefulModule[A,B,C]]:lamp.nn.InitState[lamp.nn.WithInit[A,B,C,M],C]", "kind" : "implicit def"}, {"label" : "load", "tail" : "(arg0: Load[M]): Load[WithInit[A, B, C, M]]", "member" : "lamp.nn.WithInit.load", "link" : "lamp\/nn\/WithInit$.html#load[A,B,C,M<:lamp.nn.StatefulModule[A,B,C]](implicitevidence$8:lamp.nn.Load[M]):lamp.nn.Load[lamp.nn.WithInit[A,B,C,M]]", "kind" : "implicit def"}, {"label" : "trainingMode", "tail" : "(arg0: TrainingMode[M]): TrainingMode[WithInit[A, B, C, M]]", "member" : "lamp.nn.WithInit.trainingMode", "link" : "lamp\/nn\/WithInit$.html#trainingMode[A,B,C,M<:lamp.nn.StatefulModule[A,B,C]](implicitevidence$7:lamp.nn.TrainingMode[M]):lamp.nn.TrainingMode[lamp.nn.WithInit[A,B,C,M]]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/WithInit$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/WithInit$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/WithInit$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/WithInit$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/WithInit$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/WithInit$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/WithInit$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/WithInit$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/WithInit$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/WithInit$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/WithInit$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/WithInit$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lamp\/nn\/WithInit$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/WithInit$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "lamp\/nn\/WithInit$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lamp\/nn\/WithInit$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/WithInit$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/WithInit$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/WithInit$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "state", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.WithInit.state", "link" : "lamp\/nn\/WithInit.html#state:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "def"}, {"label" : "forward", "tail" : "(x: (A, C))(arg0: Sc[S]): (B, C)", "member" : "lamp.nn.WithInit.forward", "link" : "lamp\/nn\/WithInit.html#forward[S](x:(A,C))(implicitevidence$6:lamp.Sc[S]):(B,C)", "kind" : "def"}, {"member" : "lamp.nn.WithInit#<init>", "error" : "unsupported entity"}, {"label" : "init", "tail" : ": C", "member" : "lamp.nn.WithInit.init", "link" : "lamp\/nn\/WithInit.html#init:C", "kind" : "val"}, {"label" : "module", "tail" : ": M with StatefulModule[A, B, C]", "member" : "lamp.nn.WithInit.module", "link" : "lamp\/nn\/WithInit.html#module:Mwithlamp.nn.StatefulModule[A,B,C]", "kind" : "val"}, {"label" : "learnableParameters", "tail" : "(): Long", "member" : "lamp.nn.GenericModule.learnableParameters", "link" : "lamp\/nn\/WithInit.html#learnableParameters:Long", "kind" : "final def"}, {"label" : "gradients", "tail" : "(loss: Variable, zeroGrad: Boolean): Seq[Option[STen]]", "member" : "lamp.nn.GenericModule.gradients", "link" : "lamp\/nn\/WithInit.html#gradients(loss:lamp.autograd.Variable,zeroGrad:Boolean):Seq[Option[lamp.STen]]", "kind" : "final def"}, {"label" : "parameters", "tail" : "(): Seq[(Constant, PTag)]", "member" : "lamp.nn.GenericModule.parameters", "link" : "lamp\/nn\/WithInit.html#parameters:Seq[(lamp.autograd.Constant,lamp.nn.PTag)]", "kind" : "final def"}, {"label" : "apply", "tail" : "(a: (A, C))(arg0: Sc[S]): (B, C)", "member" : "lamp.nn.GenericModule.apply", "link" : "lamp\/nn\/WithInit.html#apply[S](a:A)(implicitevidence$17:lamp.Sc[S]):B", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lamp\/nn\/WithInit.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lamp\/nn\/WithInit.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lamp\/nn\/WithInit.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lamp\/nn\/WithInit.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lamp\/nn\/WithInit.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lamp\/nn\/WithInit.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lamp\/nn\/WithInit.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/WithInit.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/WithInit.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lamp\/nn\/WithInit.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lamp\/nn\/WithInit.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lamp\/nn\/WithInit.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lamp\/nn\/WithInit.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "lamp\/nn\/WithInit.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lamp\/nn\/WithInit.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lamp\/nn\/WithInit.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lamp\/nn\/WithInit.html", "kind" : "case class"}]};